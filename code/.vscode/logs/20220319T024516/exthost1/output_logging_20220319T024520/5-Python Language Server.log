INFO:pygls.server:Starting IO server
INFO:pygls.feature_manager:Registered "textDocument/didOpen" with options "None"
INFO:pygls.feature_manager:Registered "textDocument/didChange" with options "None"
INFO:pygls.feature_manager:Registered "textDocument/didSave" with options "None"
INFO:pygls.feature_manager:Registered "textDocument/didClose" with options "None"
INFO:pygls.feature_manager:Registered "textDocument/hover" with options "None"
INFO:pygls.protocol:Language server initialized work_done_token=None process_id=87 root_uri='file:///root/capsule' capabilities=ClientCapabilities(workspace=WorkspaceClientCapabilities(apply_edit=True, workspace_edit=WorkspaceEditClientCapabilities(document_changes=True, resource_operations=[<ResourceOperationKind.Create: 'create'>, <ResourceOperationKind.Rename: 'rename'>, <ResourceOperationKind.Delete: 'delete'>], failure_handling=<FailureHandlingKind.TextOnlyTransactional: 'textOnlyTransactional'>, normalizes_line_endings=True, change_annotation_support=ChangeAnnotationSupport(groups_on_label=True)), did_change_configuration=DidChangeConfigurationClientCapabilities(dynamic_registration=True), did_change_watched_files=DidChangeWatchedFilesClientCapabilities(dynamic_registration=True), symbol=WorkspaceSymbolClientCapabilities(dynamic_registration=True, symbol_kind=WorkspaceCapabilitiesSymbolKind(value_set=[<SymbolKind.File: 1>, <SymbolKind.Module: 2>, <SymbolKind.Namespace: 3>, <SymbolKind.Package: 4>, <SymbolKind.Class: 5>, <SymbolKind.Method: 6>, <SymbolKind.Property: 7>, <SymbolKind.Field: 8>, <SymbolKind.Constructor: 9>, <SymbolKind.Enum: 10>, <SymbolKind.Interface: 11>, <SymbolKind.Function: 12>, <SymbolKind.Variable: 13>, <SymbolKind.Constant: 14>, <SymbolKind.String: 15>, <SymbolKind.Number: 16>, <SymbolKind.Boolean: 17>, <SymbolKind.Array: 18>, <SymbolKind.Object: 19>, <SymbolKind.Key: 20>, <SymbolKind.Null: 21>, <SymbolKind.EnumMember: 22>, <SymbolKind.Struct: 23>, <SymbolKind.Event: 24>, <SymbolKind.Operator: 25>, <SymbolKind.TypeParameter: 26>]), tag_support=WorkspaceCapabilitiesTagSupport(value_set=[<SymbolKind.File: 1>])), execute_command=ExecuteCommandClientCapabilities(dynamic_registration=True), workspace_folders=True, configuration=True, semantic_tokens=SemanticTokensWorkspaceClientCapabilities(refresh_support=True), code_lens=CodeLensWorkspaceClientCapabilities(refresh_support=True), file_operations=FileOperationsClientCapabilities(dynamic_registration=True, did_create=True, will_create=True, did_rename=True, will_rename=True, did_delete=True, will_delete=True)), text_document=TextDocumentClientCapabilities(synchronization=TextDocumentSyncClientCapabilities(dynamic_registration=True, will_save=True, will_save_wait_until=True, did_save=True), completion=CompletionClientCapabilities(dynamic_registration=True, completion_item=CompletionItemClientCapabilities(snippet_support=True, commit_characters_support=True, documentation_format=[<MarkupKind.Markdown: 'markdown'>, <MarkupKind.PlainText: 'plaintext'>], deprecated_support=True, preselect_support=True, tag_support=CompletionTagSupportClientCapabilities(value_set=[<CompletionItemTag.Deprecated: 1>]), insert_replace_support=True, resolve_support=ResolveSupportClientCapabilities(properties=['documentation', 'detail', 'additionalTextEdits']), insert_text_mode_support=InsertTextModeSupportClientCapabilities(value_set=[<InsertTextMode.AsIs: 1>, <InsertTextMode.AdjustIndentation: 2>])), completion_item_kind=CompletionItemKindClientCapabilities(value_set=[<CompletionItemKind.Text: 1>, <CompletionItemKind.Method: 2>, <CompletionItemKind.Function: 3>, <CompletionItemKind.Constructor: 4>, <CompletionItemKind.Field: 5>, <CompletionItemKind.Variable: 6>, <CompletionItemKind.Class: 7>, <CompletionItemKind.Interface: 8>, <CompletionItemKind.Module: 9>, <CompletionItemKind.Property: 10>, <CompletionItemKind.Unit: 11>, <CompletionItemKind.Value: 12>, <CompletionItemKind.Enum: 13>, <CompletionItemKind.Keyword: 14>, <CompletionItemKind.Snippet: 15>, <CompletionItemKind.Color: 16>, <CompletionItemKind.File: 17>, <CompletionItemKind.Reference: 18>, <CompletionItemKind.Folder: 19>, <CompletionItemKind.EnumMember: 20>, <CompletionItemKind.Constant: 21>, <CompletionItemKind.Struct: 22>, <CompletionItemKind.Event: 23>, <CompletionItemKind.Operator: 24>, <CompletionItemKind.TypeParameter: 25>]), context_support=True), hover=HoverClientCapabilities(dynamic_registration=True, content_format=[<MarkupKind.Markdown: 'markdown'>, <MarkupKind.PlainText: 'plaintext'>]), signature_help=SignatureHelpClientCapabilities(dynamic_registration=True, signature_information=SignatureHelpInformationClientCapabilities(documentation_format=[<MarkupKind.Markdown: 'markdown'>, <MarkupKind.PlainText: 'plaintext'>], parameter_information=SignatureHelpInformationParameterInformationClientCapabilities(label_offset_support=True), active_parameter_support=True), context_support=True), declaration=DeclarationClientCapabilities(dynamic_registration=True, link_support=True), definition=DefinitionClientCapabilities(dynamic_registration=True, link_support=True), type_definition=TypeDefinitionClientCapabilities(dynamic_registration=True, link_support=True), implementation=ImplementationClientCapabilities(dynamic_registration=True, link_support=True), references=ReferenceClientCapabilities(dynamic_registration=True), document_highlight=DocumentHighlightClientCapabilities(dynamic_registration=True), document_symbol=DocumentSymbolClientCapabilities(dynamic_registration=True, symbol_kind=WorkspaceCapabilitiesSymbolKind(value_set=[<SymbolKind.File: 1>, <SymbolKind.Module: 2>, <SymbolKind.Namespace: 3>, <SymbolKind.Package: 4>, <SymbolKind.Class: 5>, <SymbolKind.Method: 6>, <SymbolKind.Property: 7>, <SymbolKind.Field: 8>, <SymbolKind.Constructor: 9>, <SymbolKind.Enum: 10>, <SymbolKind.Interface: 11>, <SymbolKind.Function: 12>, <SymbolKind.Variable: 13>, <SymbolKind.Constant: 14>, <SymbolKind.String: 15>, <SymbolKind.Number: 16>, <SymbolKind.Boolean: 17>, <SymbolKind.Array: 18>, <SymbolKind.Object: 19>, <SymbolKind.Key: 20>, <SymbolKind.Null: 21>, <SymbolKind.EnumMember: 22>, <SymbolKind.Struct: 23>, <SymbolKind.Event: 24>, <SymbolKind.Operator: 25>, <SymbolKind.TypeParameter: 26>]), hierarchical_document_symbol_support=True, tag_support=WorkspaceCapabilitiesTagSupport(value_set=[<SymbolKind.File: 1>]), label_support=True), code_action=CodeActionClientCapabilities(dynamic_registration=True, code_action_literal_support=CodeActionLiteralSupportClientCapabilities(code_action_kind=CodeActionLiteralSupportActionKindClientCapabilities(value_set=['', 'quickfix', 'refactor', 'refactor.extract', 'refactor.inline', 'refactor.rewrite', 'source', 'source.organizeImports'])), is_preferred_support=True, disabled_support=True, data_support=True, resolve_support=ResolveSupportClientCapabilities(properties=['edit']), honors_change_annotations=False), code_lens=CodeLensClientCapabilities(dynamic_registration=True), document_link=DocumentLinkClientCapabilities(dynamic_registration=True, tooltip_support=True), color_provider=DocumentColorClientCapabilities(dynamic_registration=True), formatting=DocumentFormattingClientCapabilities(dynamic_registration=True), range_formatting=DocumentRangeFormattingClientCapabilities(dynamic_registration=True), on_type_formatting=DocumentOnTypeFormattingClientCapabilities(dynamic_registration=True), rename=RenameClientCapabilities(dynamic_registration=True, prepare_support=True, prepare_support_default_behavior=<PrepareSupportDefaultBehavior.Identifier: 1>, honors_change_annotations=True), publish_diagnostics=PublishDiagnosticsClientCapabilities(related_information=True, tag_support=PublishDiagnosticsTagSupportClientCapabilities(value_set=[<DiagnosticTag.Unnecessary: 1>, <DiagnosticTag.Deprecated: 2>]), version_support=False, code_description_support=True, data_support=True), folding_range=FoldingRangeClientCapabilities(dynamic_registration=True, range_limit=5000, line_folding_only=True), selection_range=SelectionRangeClientCapabilities(dynamic_registration=True), linked_editing_range=LinkedEditingRangeClientCapabilities(dynamic_registration=True), call_hierarchy=CallHierarchyClientCapabilities(dynamic_registration=True), semantic_tokens=SemanticTokensClientCapabilities(requests=SemanticTokensRequests(range=True, full=SemanticTokensRequestsFull(delta=True)), token_types=['namespace', 'type', 'class', 'enum', 'interface', 'struct', 'typeParameter', 'parameter', 'variable', 'property', 'enumMember', 'event', 'function', 'method', 'macro', 'keyword', 'modifier', 'comment', 'string', 'number', 'regexp', 'operator'], token_modifiers=['declaration', 'definition', 'readonly', 'static', 'deprecated', 'abstract', 'async', 'modification', 'documentation', 'defaultLibrary'], formats=[<TokenFormat.Relative: 'relative'>], overlapping_token_support=False, multiline_token_support=False, dynamic_registration=True), moniker=None), window=WindowClientCapabilities(work_done_progress=True, show_message=ShowMessageRequestClientCapabilities(message_action_item=ShowMessageRequestActionItem(additional_properties_support=True)), show_document=ShowDocumentClientCapabilities(support=True)), general=GeneralClientCapabilities(regular_expressions=RegularExpressionsClientCapabilities(engine='ECMAScript', version='ES2020'), markdown=MarkdownClientCapabilities(parser='marked', version='1.1.0')), experimental=None) client_info=ClientInfo(name='code-server', version='1.63.0') locale='en' root_path='/root/capsule' initialization_options={'markupKindPreferred': 'markdown', 'completion': {'resolveEagerly': False, 'disableSnippets': False}, 'diagnostics': {'enable': True, 'didOpen': True, 'didSave': True, 'didChange': True}, 'workspace': {'extraPaths': ['/root/capsule'], 'symbols': {'maxSymbols': 0}}} trace=<Trace.Off: 'off'> workspace_folders=[WorkspaceFolder(uri='file:///root/capsule', name='capsule')]
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 0, "result": {"capabilities": {"textDocumentSync": {"openClose": true, "change": 2, "willSave": false, "willSaveWaitUntil": false, "save": true}, "completionProvider": {"triggerCharacters": [".", "'", "\""], "resolveProvider": true}, "hoverProvider": true, "signatureHelpProvider": {"triggerCharacters": ["(", ","]}, "definitionProvider": true, "referencesProvider": true, "documentHighlightProvider": true, "documentSymbolProvider": true, "codeActionProvider": {"codeActionKinds": ["refactor.inline", "refactor.extract"]}, "renameProvider": true, "executeCommandProvider": {"commands": []}, "workspaceSymbolProvider": true, "workspace": {"workspaceFolders": {"supported": true, "changeNotifications": true}, "fileOperations": {}}}}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///root/capsule/code/process_merged.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 1, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 2, "result": [{"name": "matplotlib", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 17}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 17}}, "detail": "module matplotlib", "children": []}, {"name": "os", "kind": 2, "range": {"start": {"line": 10, "character": 0}, "end": {"line": 10, "character": 9}}, "selectionRange": {"start": {"line": 10, "character": 7}, "end": {"line": 10, "character": 9}}, "detail": "module os", "children": []}, {"name": "pd", "kind": 2, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 11, "character": 19}}, "selectionRange": {"start": {"line": 11, "character": 17}, "end": {"line": 11, "character": 19}}, "detail": "module pd", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 12, "character": 0}, "end": {"line": 12, "character": 18}}, "selectionRange": {"start": {"line": 12, "character": 16}, "end": {"line": 12, "character": 18}}, "detail": "module np", "children": []}, {"name": "sys", "kind": 2, "range": {"start": {"line": 13, "character": 0}, "end": {"line": 13, "character": 10}}, "selectionRange": {"start": {"line": 13, "character": 7}, "end": {"line": 13, "character": 10}}, "detail": "module sys", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 14, "character": 0}, "end": {"line": 14, "character": 13}}, "selectionRange": {"start": {"line": 14, "character": 7}, "end": {"line": 14, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cdist", "kind": 12, "range": {"start": {"line": 15, "character": 0}, "end": {"line": 15, "character": 40}}, "selectionRange": {"start": {"line": 15, "character": 35}, "end": {"line": 15, "character": 40}}, "detail": "def cdist", "children": []}, {"name": "math", "kind": 2, "range": {"start": {"line": 16, "character": 0}, "end": {"line": 16, "character": 11}}, "selectionRange": {"start": {"line": 16, "character": 7}, "end": {"line": 16, "character": 11}}, "detail": "module math", "children": []}, {"name": "nx", "kind": 2, "range": {"start": {"line": 17, "character": 0}, "end": {"line": 17, "character": 21}}, "selectionRange": {"start": {"line": 17, "character": 19}, "end": {"line": 17, "character": 21}}, "detail": "module nx", "children": []}, {"name": "nxacc", "kind": 2, "range": {"start": {"line": 18, "character": 0}, "end": {"line": 18, "character": 56}}, "selectionRange": {"start": {"line": 18, "character": 51}, "end": {"line": 18, "character": 56}}, "detail": "module nxacc", "children": []}, {"name": "nxadag", "kind": 2, "range": {"start": {"line": 19, "character": 0}, "end": {"line": 19, "character": 40}}, "selectionRange": {"start": {"line": 19, "character": 34}, "end": {"line": 19, "character": 40}}, "detail": "module nxadag", "children": []}, {"name": "plt", "kind": 2, "range": {"start": {"line": 20, "character": 0}, "end": {"line": 20, "character": 31}}, "selectionRange": {"start": {"line": 20, "character": 28}, "end": {"line": 20, "character": 31}}, "detail": "module plt", "children": []}, {"name": "sns", "kind": 2, "range": {"start": {"line": 21, "character": 0}, "end": {"line": 21, "character": 21}}, "selectionRange": {"start": {"line": 21, "character": 18}, "end": {"line": 21, "character": 21}}, "detail": "module sns", "children": []}, {"name": "itertools", "kind": 2, "range": {"start": {"line": 22, "character": 0}, "end": {"line": 22, "character": 16}}, "selectionRange": {"start": {"line": 22, "character": 7}, "end": {"line": 22, "character": 16}}, "detail": "module itertools", "children": []}, {"name": "mygene", "kind": 2, "range": {"start": {"line": 23, "character": 0}, "end": {"line": 23, "character": 13}}, "selectionRange": {"start": {"line": 23, "character": 7}, "end": {"line": 23, "character": 13}}, "detail": "module mygene", "children": []}, {"name": "re", "kind": 2, "range": {"start": {"line": 24, "character": 0}, "end": {"line": 24, "character": 9}}, "selectionRange": {"start": {"line": 24, "character": 7}, "end": {"line": 24, "character": 9}}, "detail": "module re", "children": []}, {"name": "selected_exp_gene_list", "kind": 13, "range": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 95}}, "selectionRange": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 22}}, "detail": "selected_exp_gene_list = pd.read_csv(\"/data/common_exp_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "selected_mut_gene_list", "kind": 13, "range": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 95}}, "selectionRange": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 22}}, "detail": "selected_mut_gene_list = pd.read_csv(\"/data/common_mut_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "load_network", "kind": 12, "range": {"start": {"line": 37, "character": 0}, "end": {"line": 65, "character": 28}}, "selectionRange": {"start": {"line": 37, "character": 4}, "end": {"line": 37, "character": 16}}, "detail": "def load_network", "children": []}, {"name": "load_name_space", "kind": 12, "range": {"start": {"line": 67, "character": 0}, "end": {"line": 79, "character": 21}}, "selectionRange": {"start": {"line": 67, "character": 4}, "end": {"line": 67, "character": 19}}, "detail": "def load_name_space", "children": []}, {"name": "list2index", "kind": 12, "range": {"start": {"line": 81, "character": 0}, "end": {"line": 88, "character": 41}}, "selectionRange": {"start": {"line": 81, "character": 4}, "end": {"line": 81, "character": 14}}, "detail": "def list2index", "children": []}, {"name": "PDTC_data_file", "kind": 13, "range": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 30}}, "selectionRange": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 14}}, "detail": "PDTC_data_file = '/data/PTDC/'", "children": []}, {"name": "PDTC_exp_data_file", "kind": 13, "range": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 60}}, "selectionRange": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 18}}, "detail": "PDTC_exp_data_file = PDTC_data_file + 'ExpressionModels.tsv'", "children": []}, {"name": "PDTC_drug_cell_line_file", "kind": 13, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 72}}, "selectionRange": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 24}}, "detail": "PDTC_drug_cell_line_file = PDTC_data_file + 'DrugResponsesAUCModels.tsv'", "children": []}, {"name": "PDTC_mutation_data_file", "kind": 13, "range": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 59}}, "selectionRange": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 23}}, "detail": "PDTC_mutation_data_file = PDTC_data_file + 'SNVsModels.tsv'", "children": []}, {"name": "PDTC_drug_target_file", "kind": 13, "range": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 56}}, "selectionRange": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 21}}, "detail": "PDTC_drug_target_file ='/data/GDSC/drug_target_list.csv'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 37}}, "selectionRange": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 46}}, "selectionRange": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "data_file", "kind": 13, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 25}}, "selectionRange": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 9}}, "detail": "data_file = '/data/GDSC/'", "children": []}, {"name": "new_network_file", "kind": 13, "range": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 27}}, "selectionRange": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 16}}, "detail": "new_network_file = '/data/'", "children": []}, {"name": "exp_data_file", "kind": 13, "range": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 61}}, "selectionRange": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 13}}, "detail": "exp_data_file = data_file + 'Cell_line_RMA_proc_basalExp.txt'", "children": []}, {"name": "drug_cell_line_file", "kind": 13, "range": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 64}}, "selectionRange": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 19}}, "detail": "drug_cell_line_file = data_file + 'v17_fitted_dose_response.csv'", "children": []}, {"name": "cell_line_detail_file", "kind": 13, "range": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 60}}, "selectionRange": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 21}}, "detail": "cell_line_detail_file = data_file + 'Cell_Lines_Details.csv'", "children": []}, {"name": "mutation_data_file", "kind": 13, "range": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 51}}, "selectionRange": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 18}}, "detail": "mutation_data_file = data_file + 'WES_variants.csv'", "children": []}, {"name": "drug_target_file", "kind": 13, "range": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 51}}, "selectionRange": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 16}}, "detail": "drug_target_file ='/data/GDSC/drug_target_list.csv'", "children": []}, {"name": "feature_folder", "kind": 13, "range": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 27}}, "selectionRange": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 14}}, "detail": "feature_folder = 'feature/'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 37}}, "selectionRange": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 46}}, "selectionRange": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 58}}, "selectionRange": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 6}}, "detail": "exp_df = pd.read_csv(exp_data_file, sep='\\t', index_col=0)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 21}}, "selectionRange": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 6}}, "detail": "exp_df = exp_df.T[1:]", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 56}}, "selectionRange": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 6}}, "detail": "exp_df = exp_df.rename(columns={np.nan: 'NO_GENE_NAME'})", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 43}}, "selectionRange": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 6}}, "detail": "exp_df = exp_df.drop('NO_GENE_NAME',axis=1)", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 138, "character": 0}, "end": {"line": 140, "character": 26}}, "selectionRange": {"start": {"line": 138, "character": 4}, "end": {"line": 138, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 142, "character": 0}, "end": {"line": 142, "character": 44}}, "selectionRange": {"start": {"line": 142, "character": 7}, "end": {"line": 142, "character": 12}}, "detail": "exp_df.index = exp_df.index.map(stripNumber)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 40}}, "selectionRange": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 6}}, "detail": "exp_df = exp_df.groupby(level=0).first()", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 39}}, "selectionRange": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 6}}, "detail": "exp_df = exp_df[selected_exp_gene_list]", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 36}}, "selectionRange": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 48}}, "selectionRange": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 78}}, "selectionRange": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 11}}, "detail": "PDTC_exp_df = pd.read_csv(PDTC_exp_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 31}}, "selectionRange": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df.T[1:]", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 160, "character": 0}, "end": {"line": 162, "character": 26}}, "selectionRange": {"start": {"line": 160, "character": 4}, "end": {"line": 160, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 49}}, "selectionRange": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df[selected_exp_gene_list]", "children": []}, {"name": "PDTC_exp_gene_list", "kind": 13, "range": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 46}}, "selectionRange": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 18}}, "detail": "PDTC_exp_gene_list = list(PDTC_exp_df.columns)", "children": []}, {"name": "PDTC_exp_cell_line_list", "kind": 13, "range": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 58}}, "selectionRange": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 23}}, "detail": "PDTC_exp_cell_line_list = list(PDTC_exp_df.index.unique())", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 40}}, "selectionRange": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 6}}, "detail": "exp_df = pd.concat([exp_df,PDTC_exp_df])", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 36}}, "selectionRange": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 48}}, "selectionRange": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "maf", "kind": 13, "range": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 69}}, "selectionRange": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 3}}, "detail": "maf = pd.read_csv(mutation_data_file, sep=',', index_col=0).fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 75}}, "selectionRange": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 11}}, "detail": "mutation_df = maf.groupby(['COSMIC_ID', 'Gene']).size().unstack().fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 49}}, "selectionRange": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 11}}, "detail": "mutation_df = mutation_df[selected_mut_gene_list]", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 46}}, "selectionRange": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 58}}, "selectionRange": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "PDTC_maf", "kind": 13, "range": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 80}}, "selectionRange": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 8}}, "detail": "PDTC_maf = pd.read_csv(PDTC_mutation_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 61}}, "selectionRange": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_maf.replace(to_replace=\"NO\",value=0.0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 82}}, "selectionRange": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_mutation_df.replace(to_replace=\"chr*\",value=1.0,regex=True)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 47}}, "selectionRange": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df.transpose()", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 59}}, "selectionRange": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df[selected_mut_gene_list]", "children": []}, {"name": "PDTC_mutation_gene_list", "kind": 13, "range": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 56}}, "selectionRange": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 23}}, "detail": "PDTC_mutation_gene_list = list(PDTC_mutation_df.columns)", "children": []}, {"name": "PDTC_mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 68}}, "selectionRange": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 28}}, "detail": "PDTC_mutation_cell_line_list = list(PDTC_mutation_df.index.unique())", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 55}}, "selectionRange": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 11}}, "detail": "mutation_df = pd.concat([mutation_df,PDTC_mutation_df])", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 46}}, "selectionRange": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 58}}, "selectionRange": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 36}}, "selectionRange": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 11}}, "detail": "file_handle = open(drug_target_file)", "children": []}, {"name": "drug_target_map", "kind": 13, "range": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 20}}, "selectionRange": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 15}}, "detail": "drug_target_map = {}", "children": []}, {"name": "drug_target_list", "kind": 13, "range": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 21}}, "selectionRange": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 16}}, "detail": "drug_target_list = []", "children": []}, {"name": "line", "kind": 13, "range": {"start": {"line": 230, "character": 0}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 230, "character": 4}, "end": {"line": 230, "character": 8}}, "detail": "for line in file_handle: new_line = line.rstrip().split(\",\") drug = new_line[0] target_list=new_line[1].split(',') if drug != \"Drug\": target_list_str = \"\" for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\" drug = drug.strip() drug_target_map[drug] = [] if ',' not in target_list_str: drug_target_map[drug].append(target_list_str.strip()) drug_target_list.append(target_list_str.strip()) else: target_list = target_list_str.split(',') for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "new_line", "kind": 13, "range": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 39}}, "selectionRange": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 12}}, "detail": "new_line = line.rstrip().split(\",\")", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 22}}, "selectionRange": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 8}}, "detail": "drug = new_line[0]", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 38}}, "selectionRange": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 15}}, "detail": "target_list=new_line[1].split(',')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 28}}, "selectionRange": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 23}}, "detail": "target_list_str = \"\"", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 237, "character": 8}, "end": {"line": 242, "character": 0}}, "selectionRange": {"start": {"line": 237, "character": 12}, "end": {"line": 237, "character": 13}}, "detail": "for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 65}}, "selectionRange": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 71}}, "selectionRange": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 27}}, "selectionRange": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 12}}, "detail": "drug = drug.strip()", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 52}}, "selectionRange": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 23}}, "detail": "target_list = target_list_str.split(',')", "children": []}, {"name": "target", "kind": 13, "range": {"start": {"line": 250, "character": 12}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 250, "character": 16}, "end": {"line": 250, "character": 22}}, "detail": "for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "drugs_legend", "kind": 13, "range": {"start": {"line": 261, "character": 0}, "end": {"line": 261, "character": 85}}, "selectionRange": {"start": {"line": 261, "character": 0}, "end": {"line": 261, "character": 12}}, "detail": "drugs_legend = pd.read_csv('/data/GDSC/Screened_Compounds.csv', sep=',', index_col=0)", "children": []}, {"name": "drug2id_mapping", "kind": 13, "range": {"start": {"line": 263, "character": 0}, "end": {"line": 263, "character": 20}}, "selectionRange": {"start": {"line": 263, "character": 0}, "end": {"line": 263, "character": 15}}, "detail": "drug2id_mapping = {}", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 265, "character": 0}, "end": {"line": 268, "character": 0}}, "selectionRange": {"start": {"line": 265, "character": 4}, "end": {"line": 265, "character": 9}}, "detail": "for index in list(drugs_legend.index) : drug_name = drugs_legend.loc[index,'Drug Name'] drug2id_mapping[ drug_name ] = index", "children": []}, {"name": "drug_name", "kind": 13, "range": {"start": {"line": 266, "character": 4}, "end": {"line": 266, "character": 51}}, "selectionRange": {"start": {"line": 266, "character": 4}, "end": {"line": 266, "character": 13}}, "detail": "drug_name = drugs_legend.loc[index,'Drug Name']", "children": []}, {"name": "valid_gene_list", "kind": 13, "range": {"start": {"line": 273, "character": 0}, "end": {"line": 273, "character": 92}}, "selectionRange": {"start": {"line": 273, "character": 0}, "end": {"line": 273, "character": 15}}, "detail": "valid_gene_list = list(set(drug_target_list) | set(exp_gene_list) | set(mutation_gene_list))", "children": []}, {"name": "network_list", "kind": 13, "range": {"start": {"line": 279, "character": 0}, "end": {"line": 279, "character": 82}}, "selectionRange": {"start": {"line": 279, "character": 0}, "end": {"line": 279, "character": 12}}, "detail": "network_list = [new_network_file+inbiomap_file, new_network_file+pathwaycomm_file]", "children": []}, {"name": "gene_neighbor_map", "kind": 13, "range": {"start": {"line": 280, "character": 0}, "end": {"line": 280, "character": 64}}, "selectionRange": {"start": {"line": 280, "character": 0}, "end": {"line": 280, "character": 17}}, "detail": "gene_neighbor_map = load_network(network_list, valid_gene_list)", "children": []}, {"name": "gene_name_df", "kind": 13, "range": {"start": {"line": 286, "character": 0}, "end": {"line": 286, "character": 89}}, "selectionRange": {"start": {"line": 286, "character": 0}, "end": {"line": 286, "character": 12}}, "detail": "gene_name_df = pd.read_table('/data/HUGO_protein-coding_gene.tsv',index_col=25, sep='\\t')", "children": []}, {"name": "gene_name_map", "kind": 13, "range": {"start": {"line": 292, "character": 0}, "end": {"line": 292, "character": 18}}, "selectionRange": {"start": {"line": 292, "character": 0}, "end": {"line": 292, "character": 13}}, "detail": "gene_name_map = {}", "children": []}, {"name": "uniprot_gene", "kind": 13, "range": {"start": {"line": 294, "character": 0}, "end": {"line": 303, "character": 0}}, "selectionRange": {"start": {"line": 294, "character": 4}, "end": {"line": 294, "character": 16}}, "detail": "for uniprot_gene in gene_name_df.index: if isinstance(uniprot_gene, type('aaa')) == False: continue if isinstance(gene_name_df.loc[uniprot_gene, 'symbol'], type('aaa')) == False: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol'][0] else: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 308, "character": 0}, "end": {"line": 308, "character": 76}}, "selectionRange": {"start": {"line": 308, "character": 0}, "end": {"line": 308, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "uniprot_gene_set", "kind": 13, "range": {"start": {"line": 310, "character": 0}, "end": {"line": 310, "character": 24}}, "selectionRange": {"start": {"line": 310, "character": 0}, "end": {"line": 310, "character": 16}}, "detail": "uniprot_gene_set = set()", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 312, "character": 0}, "end": {"line": 321, "character": 0}}, "selectionRange": {"start": {"line": 312, "character": 4}, "end": {"line": 312, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 317, "character": 4}, "end": {"line": 317, "character": 74}}, "selectionRange": {"start": {"line": 317, "character": 4}, "end": {"line": 317, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 319, "character": 4}, "end": {"line": 321, "character": 0}}, "selectionRange": {"start": {"line": 319, "character": 8}, "end": {"line": 319, "character": 12}}, "detail": "for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "query_gene_set", "kind": 13, "range": {"start": {"line": 324, "character": 0}, "end": {"line": 324, "character": 19}}, "selectionRange": {"start": {"line": 324, "character": 0}, "end": {"line": 324, "character": 14}}, "detail": "query_gene_set = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 326, "character": 0}, "end": {"line": 329, "character": 0}}, "selectionRange": {"start": {"line": 326, "character": 4}, "end": {"line": 326, "character": 8}}, "detail": "for gene in uniprot_gene_set: if gene not in gene_name_map: query_gene_set.append(gene)", "children": []}, {"name": "query_gene_list", "kind": 13, "range": {"start": {"line": 332, "character": 0}, "end": {"line": 332, "character": 38}}, "selectionRange": {"start": {"line": 332, "character": 0}, "end": {"line": 332, "character": 15}}, "detail": "query_gene_list = list(query_gene_set)", "children": []}, {"name": "mg", "kind": 13, "range": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 24}}, "selectionRange": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 2}}, "detail": "mg = mygene.MyGeneInfo()", "children": []}, {"name": "out", "kind": 13, "range": {"start": {"line": 335, "character": 0}, "end": {"line": 335, "character": 87}}, "selectionRange": {"start": {"line": 335, "character": 0}, "end": {"line": 335, "character": 3}}, "detail": "out = mg.querymany(query_gene_list, scopes='uniprot', fields='symbol', species='human')", "children": []}, {"name": "not_found_gene_list", "kind": 13, "range": {"start": {"line": 337, "character": 0}, "end": {"line": 337, "character": 24}}, "selectionRange": {"start": {"line": 337, "character": 0}, "end": {"line": 337, "character": 19}}, "detail": "not_found_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 339, "character": 0}, "end": {"line": 344, "character": 0}}, "selectionRange": {"start": {"line": 339, "character": 4}, "end": {"line": 339, "character": 5}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 339, "character": 0}, "end": {"line": 344, "character": 0}}, "selectionRange": {"start": {"line": 339, "character": 7}, "end": {"line": 339, "character": 11}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 351, "character": 0}, "end": {"line": 351, "character": 76}}, "selectionRange": {"start": {"line": 351, "character": 0}, "end": {"line": 351, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 353, "character": 0}, "end": {"line": 375, "character": 0}}, "selectionRange": {"start": {"line": 353, "character": 4}, "end": {"line": 353, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') complex_symbol_list = [] for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] ) for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 358, "character": 4}, "end": {"line": 358, "character": 74}}, "selectionRange": {"start": {"line": 358, "character": 4}, "end": {"line": 358, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "complex_symbol_list", "kind": 13, "range": {"start": {"line": 360, "character": 4}, "end": {"line": 360, "character": 28}}, "selectionRange": {"start": {"line": 360, "character": 4}, "end": {"line": 360, "character": 23}}, "detail": "complex_symbol_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 362, "character": 4}, "end": {"line": 365, "character": 0}}, "selectionRange": {"start": {"line": 362, "character": 8}, "end": {"line": 362, "character": 12}}, "detail": "for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] )", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 366, "character": 4}, "end": {"line": 375, "character": 0}}, "selectionRange": {"start": {"line": 366, "character": 8}, "end": {"line": 366, "character": 13}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 366, "character": 4}, "end": {"line": 375, "character": 0}}, "selectionRange": {"start": {"line": 366, "character": 15}, "end": {"line": 366, "character": 20}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene_exp_neighbor_map", "kind": 13, "range": {"start": {"line": 380, "character": 0}, "end": {"line": 380, "character": 26}}, "selectionRange": {"start": {"line": 380, "character": 0}, "end": {"line": 380, "character": 21}}, "detail": "gene_exp_neighbor_map = {}", "children": []}, {"name": "exp_matrix", "kind": 13, "range": {"start": {"line": 381, "character": 0}, "end": {"line": 381, "character": 26}}, "selectionRange": {"start": {"line": 381, "character": 0}, "end": {"line": 381, "character": 10}}, "detail": "exp_matrix = exp_df.values", "children": []}, {"name": "P", "kind": 13, "range": {"start": {"line": 383, "character": 0}, "end": {"line": 383, "character": 79}}, "selectionRange": {"start": {"line": 383, "character": 0}, "end": {"line": 383, "character": 1}}, "detail": "P = 1 - cdist(np.transpose(exp_matrix), np.transpose(exp_matrix),'correlation')", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 385, "character": 0}, "end": {"line": 399, "character": 0}}, "selectionRange": {"start": {"line": 385, "character": 4}, "end": {"line": 385, "character": 5}}, "detail": "for i in range(len(exp_gene_list)): gene1 = exp_gene_list[i] gene_exp_neighbor_map[gene1] = set() for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2) if gene1 not in gene_exp_neighbor_map[gene1]: print (gene1, 'not in itself?', P[i,i])", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 387, "character": 4}, "end": {"line": 387, "character": 28}}, "selectionRange": {"start": {"line": 387, "character": 4}, "end": {"line": 387, "character": 9}}, "detail": "gene1 = exp_gene_list[i]", "children": []}, {"name": "j", "kind": 13, "range": {"start": {"line": 390, "character": 4}, "end": {"line": 396, "character": 0}}, "selectionRange": {"start": {"line": 390, "character": 8}, "end": {"line": 390, "character": 9}}, "detail": "for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 392, "character": 8}, "end": {"line": 392, "character": 32}}, "selectionRange": {"start": {"line": 392, "character": 8}, "end": {"line": 392, "character": 13}}, "detail": "gene2 = exp_gene_list[j]", "children": []}, {"name": "drug_feature_list", "kind": 13, "range": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 22}}, "selectionRange": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 17}}, "detail": "drug_feature_list = []", "children": []}, {"name": "drug_neighbor_map", "kind": 13, "range": {"start": {"line": 408, "character": 0}, "end": {"line": 408, "character": 22}}, "selectionRange": {"start": {"line": 408, "character": 0}, "end": {"line": 408, "character": 17}}, "detail": "drug_neighbor_map = {}", "children": []}, {"name": "selected_drug_list", "kind": 13, "range": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 23}}, "selectionRange": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 18}}, "detail": "selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 411, "character": 0}, "end": {"line": 428, "character": 0}}, "selectionRange": {"start": {"line": 411, "character": 4}, "end": {"line": 411, "character": 8}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 411, "character": 0}, "end": {"line": 428, "character": 0}}, "selectionRange": {"start": {"line": 411, "character": 10}, "end": {"line": 411, "character": 21}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 414, "character": 8}, "end": {"line": 424, "character": 0}}, "selectionRange": {"start": {"line": 414, "character": 12}, "end": {"line": 414, "character": 16}}, "detail": "for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene]", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 442, "character": 0}, "end": {"line": 442, "character": 52}}, "selectionRange": {"start": {"line": 442, "character": 0}, "end": {"line": 442, "character": 5}}, "detail": "drugs = pd.read_csv(drug_cell_line_file,index_col=2)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 443, "character": 0}, "end": {"line": 443, "character": 93}}, "selectionRange": {"start": {"line": 443, "character": 0}, "end": {"line": 443, "character": 5}}, "detail": "drugs = drugs.drop([\"DATASET_VERSION\",\"IC50_RESULTS_ID\",\"MAX_CONC_MICROMOLAR\",\"RMSE\"],axis=1)", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 444, "character": 0}, "end": {"line": 444, "character": 49}}, "selectionRange": {"start": {"line": 444, "character": 0}, "end": {"line": 444, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 446, "character": 0}, "end": {"line": 446, "character": 28}}, "selectionRange": {"start": {"line": 446, "character": 0}, "end": {"line": 446, "character": 9}}, "detail": "drug_list = drugs[\"DRUG_ID\"]", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 447, "character": 0}, "end": {"line": 447, "character": 16}}, "selectionRange": {"start": {"line": 447, "character": 0}, "end": {"line": 447, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 457, "character": 0}, "end": {"line": 457, "character": 71}}, "selectionRange": {"start": {"line": 457, "character": 0}, "end": {"line": 457, "character": 10}}, "detail": "PDTC_drugs = pd.read_csv(PDTC_drug_cell_line_file,sep='\\t',index_col=0)", "children": []}, {"name": "PDTC_drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 458, "character": 0}, "end": {"line": 458, "character": 59}}, "selectionRange": {"start": {"line": 458, "character": 0}, "end": {"line": 458, "character": 25}}, "detail": "PDTC_drugs_cell_line_list = list(PDTC_drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 460, "character": 0}, "end": {"line": 460, "character": 39}}, "selectionRange": {"start": {"line": 460, "character": 0}, "end": {"line": 460, "character": 9}}, "detail": "drug_list = PDTC_drugs[\"Drug\"].tolist()", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 461, "character": 0}, "end": {"line": 461, "character": 16}}, "selectionRange": {"start": {"line": 461, "character": 0}, "end": {"line": 461, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 462, "character": 0}, "end": {"line": 467, "character": 0}}, "selectionRange": {"start": {"line": 462, "character": 4}, "end": {"line": 462, "character": 5}}, "detail": "for i in drug_list: if i in drug2id_mapping.keys(): new_drug_id.append(drug2id_mapping[i]) else: new_drug_id.append(0)", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 84}}, "selectionRange": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 10}}, "detail": "PDTC_drugs = PDTC_drugs.drop([\"Drug\",\"iC50\",\"D1_CONC\",\"D5_CONC\",\"perc.iC50\"],axis=1)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 477, "character": 0}, "end": {"line": 477, "character": 37}}, "selectionRange": {"start": {"line": 477, "character": 0}, "end": {"line": 477, "character": 5}}, "detail": "drugs = pd.concat([drugs,PDTC_drugs])", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 49}}, "selectionRange": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "cell_line_list", "kind": 13, "range": {"start": {"line": 490, "character": 0}, "end": {"line": 490, "character": 102}}, "selectionRange": {"start": {"line": 490, "character": 0}, "end": {"line": 490, "character": 14}}, "detail": "cell_line_list = list(set(drugs_cell_line_list)&set(exp_cell_line_list)&set(mutation_cell_line_list) )", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 497, "character": 0}, "end": {"line": 497, "character": 66}}, "selectionRange": {"start": {"line": 497, "character": 0}, "end": {"line": 497, "character": 16}}, "detail": "cell_line_legend = pd.read_csv(cell_line_detail_file, index_col=1)", "children": []}, {"name": "PDTC_cell_line", "kind": 13, "range": {"start": {"line": 498, "character": 0}, "end": {"line": 498, "character": 206}}, "selectionRange": {"start": {"line": 498, "character": 0}, "end": {"line": 498, "character": 14}}, "detail": "PDTC_cell_line = pd.DataFrame({'Line': [\"BRCA\"]*len(PDTC_exp_cell_line_list), 'Site':[\"PDTC\"]*len(PDTC_exp_cell_line_list),\"Histology\":[\"breast\"]*len(PDTC_exp_cell_line_list)},index=PDTC_exp_cell_line_list)", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 499, "character": 0}, "end": {"line": 499, "character": 63}}, "selectionRange": {"start": {"line": 499, "character": 0}, "end": {"line": 499, "character": 16}}, "detail": "cell_line_legend = pd.concat([cell_line_legend,PDTC_cell_line])", "children": []}, {"name": "tissue_map", "kind": 13, "range": {"start": {"line": 502, "character": 0}, "end": {"line": 502, "character": 15}}, "selectionRange": {"start": {"line": 502, "character": 0}, "end": {"line": 502, "character": 10}}, "detail": "tissue_map = {}", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 504, "character": 0}, "end": {"line": 512, "character": 0}}, "selectionRange": {"start": {"line": 504, "character": 4}, "end": {"line": 504, "character": 13}}, "detail": "for cell_line in cell_line_list: tissue = cell_line_legend.loc[cell_line,'Site'] if tissue not in tissue_map: tissue_map[tissue] = [] tissue_map[tissue].append(cell_line)", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 506, "character": 4}, "end": {"line": 506, "character": 51}}, "selectionRange": {"start": {"line": 506, "character": 4}, "end": {"line": 506, "character": 10}}, "detail": "tissue = cell_line_legend.loc[cell_line,'Site']", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 513, "character": 0}, "end": {"line": 513, "character": 23}}, "selectionRange": {"start": {"line": 513, "character": 0}, "end": {"line": 513, "character": 19}}, "detail": "large_tissue_number = 0", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 514, "character": 0}, "end": {"line": 520, "character": 0}}, "selectionRange": {"start": {"line": 514, "character": 4}, "end": {"line": 514, "character": 10}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 514, "character": 0}, "end": {"line": 520, "character": 0}}, "selectionRange": {"start": {"line": 514, "character": 12}, "end": {"line": 514, "character": 21}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 517, "character": 8}, "end": {"line": 517, "character": 32}}, "selectionRange": {"start": {"line": 517, "character": 8}, "end": {"line": 517, "character": 27}}, "detail": "large_tissue_number += 1", "children": []}, {"name": "new_exp_gene_list", "kind": 13, "range": {"start": {"line": 540, "character": 0}, "end": {"line": 540, "character": 22}}, "selectionRange": {"start": {"line": 540, "character": 0}, "end": {"line": 540, "character": 17}}, "detail": "new_exp_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 541, "character": 0}, "end": {"line": 544, "character": 0}}, "selectionRange": {"start": {"line": 541, "character": 4}, "end": {"line": 541, "character": 5}}, "detail": "for i in exp_gene_list: if i in valid_gene_list: new_exp_gene_list.append(i)", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 549, "character": 0}, "end": {"line": 549, "character": 41}}, "selectionRange": {"start": {"line": 549, "character": 0}, "end": {"line": 549, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 550, "character": 0}, "end": {"line": 550, "character": 38}}, "selectionRange": {"start": {"line": 550, "character": 0}, "end": {"line": 550, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 551, "character": 0}, "end": {"line": 551, "character": 72}}, "selectionRange": {"start": {"line": 551, "character": 0}, "end": {"line": 551, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 553, "character": 0}, "end": {"line": 553, "character": 43}}, "selectionRange": {"start": {"line": 553, "character": 0}, "end": {"line": 553, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 554, "character": 0}, "end": {"line": 554, "character": 68}}, "selectionRange": {"start": {"line": 554, "character": 0}, "end": {"line": 554, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 561, "character": 0}, "end": {"line": 561, "character": 58}}, "selectionRange": {"start": {"line": 561, "character": 0}, "end": {"line": 561, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 562, "character": 0}, "end": {"line": 562, "character": 68}}, "selectionRange": {"start": {"line": 562, "character": 0}, "end": {"line": 562, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "new_data_file", "kind": 13, "range": {"start": {"line": 571, "character": 0}, "end": {"line": 571, "character": 18}}, "selectionRange": {"start": {"line": 571, "character": 0}, "end": {"line": 571, "character": 13}}, "detail": "new_data_file = ''", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 41}}, "selectionRange": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 38}}, "selectionRange": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 72}}, "selectionRange": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 43}}, "selectionRange": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 68}}, "selectionRange": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 58}}, "selectionRange": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 68}}, "selectionRange": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "rename_selected_drug_list", "kind": 13, "range": {"start": {"line": 592, "character": 0}, "end": {"line": 592, "character": 30}}, "selectionRange": {"start": {"line": 592, "character": 0}, "end": {"line": 592, "character": 25}}, "detail": "rename_selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 594, "character": 0}, "end": {"line": 664, "character": 0}}, "selectionRange": {"start": {"line": 594, "character": 4}, "end": {"line": 594, "character": 8}}, "detail": "for drug in selected_drug_list: print(drug) if drug not in drug2id_mapping: print('drug name wrong', drug) else: cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]] feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) ) feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) ) print(len(feature_exp_gene_list) + len(feature_mut_gene_list)) if len(feature_exp_gene_list) + len(feature_mut_gene_list) == 0: continue feature_description = [] drug_tissue_map = {} drug = drug.replace(' ','_') rename_selected_drug_list.append(drug) if drug == 'Nutlin-3a_(-)': drug = 'Nutlin-3a' drug_folder = '/data/merged/drug_feature/' + drug + '/' if not os.path.exists(drug_folder): os.makedirs(drug_folder) for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description)) file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\") pickle.dump(drug_tissue_map,file_handle) file_handle.close()", "children": []}, {"name": "cell_line_drug_matrix", "kind": 13, "range": {"start": {"line": 602, "character": 8}, "end": {"line": 602, "character": 84}}, "selectionRange": {"start": {"line": 602, "character": 8}, "end": {"line": 602, "character": 29}}, "detail": "cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]]", "children": []}, {"name": "feature_exp_gene_list", "kind": 13, "range": {"start": {"line": 607, "character": 8}, "end": {"line": 607, "character": 98}}, "selectionRange": {"start": {"line": 607, "character": 8}, "end": {"line": 607, "character": 29}}, "detail": "feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) )", "children": []}, {"name": "feature_mut_gene_list", "kind": 13, "range": {"start": {"line": 608, "character": 8}, "end": {"line": 608, "character": 98}}, "selectionRange": {"start": {"line": 608, "character": 8}, "end": {"line": 608, "character": 29}}, "detail": "feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) )", "children": []}, {"name": "feature_description", "kind": 13, "range": {"start": {"line": 612, "character": 8}, "end": {"line": 612, "character": 32}}, "selectionRange": {"start": {"line": 612, "character": 8}, "end": {"line": 612, "character": 27}}, "detail": "feature_description = []", "children": []}, {"name": "drug_tissue_map", "kind": 13, "range": {"start": {"line": 614, "character": 8}, "end": {"line": 614, "character": 28}}, "selectionRange": {"start": {"line": 614, "character": 8}, "end": {"line": 614, "character": 23}}, "detail": "drug_tissue_map = {}", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 616, "character": 8}, "end": {"line": 616, "character": 36}}, "selectionRange": {"start": {"line": 616, "character": 8}, "end": {"line": 616, "character": 12}}, "detail": "drug = drug.replace(' ','_')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 622, "character": 12}, "end": {"line": 622, "character": 30}}, "selectionRange": {"start": {"line": 622, "character": 12}, "end": {"line": 622, "character": 16}}, "detail": "drug = 'Nutlin-3a'", "children": []}, {"name": "drug_folder", "kind": 13, "range": {"start": {"line": 624, "character": 8}, "end": {"line": 624, "character": 63}}, "selectionRange": {"start": {"line": 624, "character": 8}, "end": {"line": 624, "character": 19}}, "detail": "drug_folder = '/data/merged/drug_feature/' + drug + '/'", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 630, "character": 8}, "end": {"line": 660, "character": 0}}, "selectionRange": {"start": {"line": 630, "character": 12}, "end": {"line": 630, "character": 18}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "tissue_cell_line_list", "kind": 13, "range": {"start": {"line": 630, "character": 8}, "end": {"line": 660, "character": 0}}, "selectionRange": {"start": {"line": 630, "character": 20}, "end": {"line": 630, "character": 41}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 633, "character": 12}, "end": {"line": 633, "character": 103}}, "selectionRange": {"start": {"line": 633, "character": 12}, "end": {"line": 633, "character": 35}}, "detail": "drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list )", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 634, "character": 12}, "end": {"line": 634, "character": 67}}, "selectionRange": {"start": {"line": 634, "character": 12}, "end": {"line": 634, "character": 35}}, "detail": "drug_specific_cell_line = list(drug_specific_cell_line)", "children": []}, {"name": "feature_list", "kind": 13, "range": {"start": {"line": 637, "character": 12}, "end": {"line": 637, "character": 29}}, "selectionRange": {"start": {"line": 637, "character": 12}, "end": {"line": 637, "character": 24}}, "detail": "feature_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 641, "character": 16}, "end": {"line": 643, "character": 0}}, "selectionRange": {"start": {"line": 641, "character": 20}, "end": {"line": 641, "character": 24}}, "detail": "for gene in feature_exp_gene_list: feature_description.append(gene+'_expression')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 646, "character": 16}, "end": {"line": 648, "character": 0}}, "selectionRange": {"start": {"line": 646, "character": 20}, "end": {"line": 646, "character": 24}}, "detail": "for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation')", "children": []}, {"name": "feature", "kind": 13, "range": {"start": {"line": 649, "character": 12}, "end": {"line": 649, "character": 58}}, "selectionRange": {"start": {"line": 649, "character": 12}, "end": {"line": 649, "character": 19}}, "detail": "feature = np.concatenate(feature_list, axis=1)", "children": []}, {"name": "label", "kind": 13, "range": {"start": {"line": 651, "character": 12}, "end": {"line": 651, "character": 88}}, "selectionRange": {"start": {"line": 651, "character": 12}, "end": {"line": 651, "character": 17}}, "detail": "label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 661, "character": 8}, "end": {"line": 661, "character": 84}}, "selectionRange": {"start": {"line": 661, "character": 8}, "end": {"line": 661, "character": 19}}, "detail": "file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\")", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 665, "character": 0}, "end": {"line": 665, "character": 52}}, "selectionRange": {"start": {"line": 665, "character": 0}, "end": {"line": 665, "character": 11}}, "detail": "file_handle = open('rename_selected_drug_list', 'w')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 666, "character": 0}, "end": {"line": 668, "character": 0}}, "selectionRange": {"start": {"line": 666, "character": 4}, "end": {"line": 666, "character": 8}}, "detail": "for drug in rename_selected_drug_list: file_handle.writelines(drug+ '\\n')", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 686, "character": 0}, "end": {"line": 686, "character": 13}}, "selectionRange": {"start": {"line": 686, "character": 7}, "end": {"line": 686, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cell_line_loc", "kind": 13, "range": {"start": {"line": 692, "character": 0}, "end": {"line": 692, "character": 84}}, "selectionRange": {"start": {"line": 692, "character": 0}, "end": {"line": 692, "character": 13}}, "detail": "cell_line_loc = '/cellar/users/samsonfong/Projects/tcrp-v2/from-ma/cell_line_lists/'", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 698, "character": 0}, "end": {"line": 700, "character": 0}}, "selectionRange": {"start": {"line": 698, "character": 53}, "end": {"line": 698, "character": 54}}, "detail": "with open('/data/drug_feature/KU-55933/KU', 'rb') as f: tmap= pickle.load(f)", "children": []}, {"name": "tmap", "kind": 13, "range": {"start": {"line": 699, "character": 4}, "end": {"line": 699, "character": 24}}, "selectionRange": {"start": {"line": 699, "character": 4}, "end": {"line": 699, "character": 8}}, "detail": "tmap= pickle.load(f)", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 717, "character": 0}, "end": {"line": 717, "character": 68}}, "selectionRange": {"start": {"line": 717, "character": 0}, "end": {"line": 717, "character": 1}}, "detail": "f = np.load('/data/drug_feature/KU-55933/lung_KU-55933_feature.npy')", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 3, "result": [{"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///root/capsule/code/process_merged.py", "version": 1}, "edits": [{"range": {"start": {"line": 594, "character": 0}, "end": {"line": 594, "character": 30}}, "newText": "def jls_extract_def(axis)"}, {"range": {"start": {"line": 595, "character": 4}, "end": {"line": 596, "character": 0}}, "newText": "for drug in selected_drug_list:\n        print(drug)\n    "}, {"range": {"start": {"line": 597, "character": 0}, "end": {"line": 597, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 599, "character": 4}, "end": {"line": 599, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 600, "character": 8}, "end": {"line": 600, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 601, "character": 4}, "end": {"line": 601, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 602, "character": 0}, "end": {"line": 602, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 603, "character": 0}, "end": {"line": 604, "character": 0}}, "newText": "    \n    "}, {"range": {"start": {"line": 605, "character": 8}, "end": {"line": 605, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 606, "character": 4}, "end": {"line": 607, "character": 0}}, "newText": "\n    "}, {"range": {"start": {"line": 608, "character": 8}, "end": {"line": 608, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 609, "character": 8}, "end": {"line": 609, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 610, "character": 0}, "end": {"line": 610, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 611, "character": 12}, "end": {"line": 612, "character": 0}}, "newText": "    continue\n    "}, {"range": {"start": {"line": 613, "character": 0}, "end": {"line": 614, "character": 0}}, "newText": "    \n    "}, {"range": {"start": {"line": 615, "character": 0}, "end": {"line": 616, "character": 0}}, "newText": "    \n    "}, {"range": {"start": {"line": 617, "character": 0}, "end": {"line": 620, "character": 0}}, "newText": "    \n            rename_selected_drug_list.append(drug)\n    \n    "}, {"range": {"start": {"line": 621, "character": 0}, "end": {"line": 621, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 622, "character": 12}, "end": {"line": 622, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 623, "character": 0}, "end": {"line": 624, "character": 0}}, "newText": "    \n    "}, {"range": {"start": {"line": 625, "character": 8}, "end": {"line": 625, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 626, "character": 12}, "end": {"line": 626, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 627, "character": 0}, "end": {"line": 628, "character": 0}}, "newText": "    \n    "}, {"range": {"start": {"line": 629, "character": 0}, "end": {"line": 630, "character": 0}}, "newText": "    \n    "}, {"range": {"start": {"line": 631, "character": 0}, "end": {"line": 631, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 632, "character": 16}, "end": {"line": 632, "character": 16}}, "newText": "    "}, {"range": {"start": {"line": 633, "character": 12}, "end": {"line": 633, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 634, "character": 12}, "end": {"line": 635, "character": 0}}, "newText": "    drug_specific_cell_line = list(drug_specific_cell_line)\n    "}, {"range": {"start": {"line": 636, "character": 0}, "end": {"line": 637, "character": 0}}, "newText": "    \n    "}, {"range": {"start": {"line": 638, "character": 0}, "end": {"line": 639, "character": 0}}, "newText": "    \n    "}, {"range": {"start": {"line": 640, "character": 16}, "end": {"line": 640, "character": 16}}, "newText": "    "}, {"range": {"start": {"line": 641, "character": 16}, "end": {"line": 641, "character": 16}}, "newText": "    "}, {"range": {"start": {"line": 642, "character": 20}, "end": {"line": 642, "character": 20}}, "newText": "    "}, {"range": {"start": {"line": 643, "character": 0}, "end": {"line": 644, "character": 0}}, "newText": "    \n    "}, {"range": {"start": {"line": 645, "character": 16}, "end": {"line": 645, "character": 16}}, "newText": "    "}, {"range": {"start": {"line": 646, "character": 16}, "end": {"line": 646, "character": 16}}, "newText": "    "}, {"range": {"start": {"line": 647, "character": 20}, "end": {"line": 647, "character": 20}}, "newText": "    "}, {"range": {"start": {"line": 648, "character": 0}, "end": {"line": 649, "character": 0}}, "newText": "    \n    "}, {"range": {"start": {"line": 650, "character": 0}, "end": {"line": 651, "character": 0}}, "newText": "    \n    "}, {"range": {"start": {"line": 652, "character": 0}, "end": {"line": 653, "character": 0}}, "newText": "    \n    "}, {"range": {"start": {"line": 654, "character": 0}, "end": {"line": 655, "character": 0}}, "newText": "    \n    "}, {"range": {"start": {"line": 656, "character": 0}, "end": {"line": 657, "character": 0}}, "newText": "    \n    "}, {"range": {"start": {"line": 658, "character": 12}, "end": {"line": 658, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 659, "character": 12}, "end": {"line": 659, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 660, "character": 0}, "end": {"line": 661, "character": 0}}, "newText": "    \n    "}, {"range": {"start": {"line": 662, "character": 8}, "end": {"line": 662, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 663, "character": 8}, "end": {"line": 663, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 663, "character": 26}, "end": {"line": 663, "character": 26}}, "newText": ")\n    return file_handle, drug, drug_tissue_map\n\n\nfile_handle, drug, drug_tissue_map = jls_extract_def(axis"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 4, "result": [{"name": "matplotlib", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 17}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 17}}, "detail": "module matplotlib", "children": []}, {"name": "os", "kind": 2, "range": {"start": {"line": 10, "character": 0}, "end": {"line": 10, "character": 9}}, "selectionRange": {"start": {"line": 10, "character": 7}, "end": {"line": 10, "character": 9}}, "detail": "module os", "children": []}, {"name": "pd", "kind": 2, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 11, "character": 19}}, "selectionRange": {"start": {"line": 11, "character": 17}, "end": {"line": 11, "character": 19}}, "detail": "module pd", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 12, "character": 0}, "end": {"line": 12, "character": 18}}, "selectionRange": {"start": {"line": 12, "character": 16}, "end": {"line": 12, "character": 18}}, "detail": "module np", "children": []}, {"name": "sys", "kind": 2, "range": {"start": {"line": 13, "character": 0}, "end": {"line": 13, "character": 10}}, "selectionRange": {"start": {"line": 13, "character": 7}, "end": {"line": 13, "character": 10}}, "detail": "module sys", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 14, "character": 0}, "end": {"line": 14, "character": 13}}, "selectionRange": {"start": {"line": 14, "character": 7}, "end": {"line": 14, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cdist", "kind": 12, "range": {"start": {"line": 15, "character": 0}, "end": {"line": 15, "character": 40}}, "selectionRange": {"start": {"line": 15, "character": 35}, "end": {"line": 15, "character": 40}}, "detail": "def cdist", "children": []}, {"name": "math", "kind": 2, "range": {"start": {"line": 16, "character": 0}, "end": {"line": 16, "character": 11}}, "selectionRange": {"start": {"line": 16, "character": 7}, "end": {"line": 16, "character": 11}}, "detail": "module math", "children": []}, {"name": "nx", "kind": 2, "range": {"start": {"line": 17, "character": 0}, "end": {"line": 17, "character": 21}}, "selectionRange": {"start": {"line": 17, "character": 19}, "end": {"line": 17, "character": 21}}, "detail": "module nx", "children": []}, {"name": "nxacc", "kind": 2, "range": {"start": {"line": 18, "character": 0}, "end": {"line": 18, "character": 56}}, "selectionRange": {"start": {"line": 18, "character": 51}, "end": {"line": 18, "character": 56}}, "detail": "module nxacc", "children": []}, {"name": "nxadag", "kind": 2, "range": {"start": {"line": 19, "character": 0}, "end": {"line": 19, "character": 40}}, "selectionRange": {"start": {"line": 19, "character": 34}, "end": {"line": 19, "character": 40}}, "detail": "module nxadag", "children": []}, {"name": "plt", "kind": 2, "range": {"start": {"line": 20, "character": 0}, "end": {"line": 20, "character": 31}}, "selectionRange": {"start": {"line": 20, "character": 28}, "end": {"line": 20, "character": 31}}, "detail": "module plt", "children": []}, {"name": "sns", "kind": 2, "range": {"start": {"line": 21, "character": 0}, "end": {"line": 21, "character": 21}}, "selectionRange": {"start": {"line": 21, "character": 18}, "end": {"line": 21, "character": 21}}, "detail": "module sns", "children": []}, {"name": "itertools", "kind": 2, "range": {"start": {"line": 22, "character": 0}, "end": {"line": 22, "character": 16}}, "selectionRange": {"start": {"line": 22, "character": 7}, "end": {"line": 22, "character": 16}}, "detail": "module itertools", "children": []}, {"name": "mygene", "kind": 2, "range": {"start": {"line": 23, "character": 0}, "end": {"line": 23, "character": 13}}, "selectionRange": {"start": {"line": 23, "character": 7}, "end": {"line": 23, "character": 13}}, "detail": "module mygene", "children": []}, {"name": "re", "kind": 2, "range": {"start": {"line": 24, "character": 0}, "end": {"line": 24, "character": 9}}, "selectionRange": {"start": {"line": 24, "character": 7}, "end": {"line": 24, "character": 9}}, "detail": "module re", "children": []}, {"name": "selected_exp_gene_list", "kind": 13, "range": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 95}}, "selectionRange": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 22}}, "detail": "selected_exp_gene_list = pd.read_csv(\"/data/common_exp_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "selected_mut_gene_list", "kind": 13, "range": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 95}}, "selectionRange": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 22}}, "detail": "selected_mut_gene_list = pd.read_csv(\"/data/common_mut_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "load_network", "kind": 12, "range": {"start": {"line": 37, "character": 0}, "end": {"line": 65, "character": 28}}, "selectionRange": {"start": {"line": 37, "character": 4}, "end": {"line": 37, "character": 16}}, "detail": "def load_network", "children": []}, {"name": "load_name_space", "kind": 12, "range": {"start": {"line": 67, "character": 0}, "end": {"line": 79, "character": 21}}, "selectionRange": {"start": {"line": 67, "character": 4}, "end": {"line": 67, "character": 19}}, "detail": "def load_name_space", "children": []}, {"name": "list2index", "kind": 12, "range": {"start": {"line": 81, "character": 0}, "end": {"line": 88, "character": 41}}, "selectionRange": {"start": {"line": 81, "character": 4}, "end": {"line": 81, "character": 14}}, "detail": "def list2index", "children": []}, {"name": "PDTC_data_file", "kind": 13, "range": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 30}}, "selectionRange": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 14}}, "detail": "PDTC_data_file = '/data/PTDC/'", "children": []}, {"name": "PDTC_exp_data_file", "kind": 13, "range": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 60}}, "selectionRange": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 18}}, "detail": "PDTC_exp_data_file = PDTC_data_file + 'ExpressionModels.tsv'", "children": []}, {"name": "PDTC_drug_cell_line_file", "kind": 13, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 72}}, "selectionRange": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 24}}, "detail": "PDTC_drug_cell_line_file = PDTC_data_file + 'DrugResponsesAUCModels.tsv'", "children": []}, {"name": "PDTC_mutation_data_file", "kind": 13, "range": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 59}}, "selectionRange": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 23}}, "detail": "PDTC_mutation_data_file = PDTC_data_file + 'SNVsModels.tsv'", "children": []}, {"name": "PDTC_drug_target_file", "kind": 13, "range": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 56}}, "selectionRange": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 21}}, "detail": "PDTC_drug_target_file ='/data/GDSC/drug_target_list.csv'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 37}}, "selectionRange": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 46}}, "selectionRange": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "data_file", "kind": 13, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 25}}, "selectionRange": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 9}}, "detail": "data_file = '/data/GDSC/'", "children": []}, {"name": "new_network_file", "kind": 13, "range": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 27}}, "selectionRange": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 16}}, "detail": "new_network_file = '/data/'", "children": []}, {"name": "exp_data_file", "kind": 13, "range": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 61}}, "selectionRange": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 13}}, "detail": "exp_data_file = data_file + 'Cell_line_RMA_proc_basalExp.txt'", "children": []}, {"name": "drug_cell_line_file", "kind": 13, "range": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 64}}, "selectionRange": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 19}}, "detail": "drug_cell_line_file = data_file + 'v17_fitted_dose_response.csv'", "children": []}, {"name": "cell_line_detail_file", "kind": 13, "range": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 60}}, "selectionRange": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 21}}, "detail": "cell_line_detail_file = data_file + 'Cell_Lines_Details.csv'", "children": []}, {"name": "mutation_data_file", "kind": 13, "range": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 51}}, "selectionRange": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 18}}, "detail": "mutation_data_file = data_file + 'WES_variants.csv'", "children": []}, {"name": "drug_target_file", "kind": 13, "range": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 51}}, "selectionRange": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 16}}, "detail": "drug_target_file ='/data/GDSC/drug_target_list.csv'", "children": []}, {"name": "feature_folder", "kind": 13, "range": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 27}}, "selectionRange": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 14}}, "detail": "feature_folder = 'feature/'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 37}}, "selectionRange": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 46}}, "selectionRange": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 58}}, "selectionRange": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 6}}, "detail": "exp_df = pd.read_csv(exp_data_file, sep='\\t', index_col=0)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 21}}, "selectionRange": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 6}}, "detail": "exp_df = exp_df.T[1:]", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 56}}, "selectionRange": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 6}}, "detail": "exp_df = exp_df.rename(columns={np.nan: 'NO_GENE_NAME'})", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 43}}, "selectionRange": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 6}}, "detail": "exp_df = exp_df.drop('NO_GENE_NAME',axis=1)", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 138, "character": 0}, "end": {"line": 140, "character": 26}}, "selectionRange": {"start": {"line": 138, "character": 4}, "end": {"line": 138, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 142, "character": 0}, "end": {"line": 142, "character": 44}}, "selectionRange": {"start": {"line": 142, "character": 7}, "end": {"line": 142, "character": 12}}, "detail": "exp_df.index = exp_df.index.map(stripNumber)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 40}}, "selectionRange": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 6}}, "detail": "exp_df = exp_df.groupby(level=0).first()", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 39}}, "selectionRange": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 6}}, "detail": "exp_df = exp_df[selected_exp_gene_list]", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 36}}, "selectionRange": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 48}}, "selectionRange": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 78}}, "selectionRange": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 11}}, "detail": "PDTC_exp_df = pd.read_csv(PDTC_exp_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 31}}, "selectionRange": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df.T[1:]", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 160, "character": 0}, "end": {"line": 162, "character": 26}}, "selectionRange": {"start": {"line": 160, "character": 4}, "end": {"line": 160, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 49}}, "selectionRange": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df[selected_exp_gene_list]", "children": []}, {"name": "PDTC_exp_gene_list", "kind": 13, "range": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 46}}, "selectionRange": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 18}}, "detail": "PDTC_exp_gene_list = list(PDTC_exp_df.columns)", "children": []}, {"name": "PDTC_exp_cell_line_list", "kind": 13, "range": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 58}}, "selectionRange": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 23}}, "detail": "PDTC_exp_cell_line_list = list(PDTC_exp_df.index.unique())", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 40}}, "selectionRange": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 6}}, "detail": "exp_df = pd.concat([exp_df,PDTC_exp_df])", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 36}}, "selectionRange": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 48}}, "selectionRange": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "maf", "kind": 13, "range": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 69}}, "selectionRange": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 3}}, "detail": "maf = pd.read_csv(mutation_data_file, sep=',', index_col=0).fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 75}}, "selectionRange": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 11}}, "detail": "mutation_df = maf.groupby(['COSMIC_ID', 'Gene']).size().unstack().fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 49}}, "selectionRange": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 11}}, "detail": "mutation_df = mutation_df[selected_mut_gene_list]", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 46}}, "selectionRange": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 58}}, "selectionRange": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "PDTC_maf", "kind": 13, "range": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 80}}, "selectionRange": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 8}}, "detail": "PDTC_maf = pd.read_csv(PDTC_mutation_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 61}}, "selectionRange": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_maf.replace(to_replace=\"NO\",value=0.0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 82}}, "selectionRange": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_mutation_df.replace(to_replace=\"chr*\",value=1.0,regex=True)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 47}}, "selectionRange": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df.transpose()", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 59}}, "selectionRange": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df[selected_mut_gene_list]", "children": []}, {"name": "PDTC_mutation_gene_list", "kind": 13, "range": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 56}}, "selectionRange": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 23}}, "detail": "PDTC_mutation_gene_list = list(PDTC_mutation_df.columns)", "children": []}, {"name": "PDTC_mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 68}}, "selectionRange": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 28}}, "detail": "PDTC_mutation_cell_line_list = list(PDTC_mutation_df.index.unique())", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 55}}, "selectionRange": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 11}}, "detail": "mutation_df = pd.concat([mutation_df,PDTC_mutation_df])", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 46}}, "selectionRange": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 58}}, "selectionRange": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 36}}, "selectionRange": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 11}}, "detail": "file_handle = open(drug_target_file)", "children": []}, {"name": "drug_target_map", "kind": 13, "range": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 20}}, "selectionRange": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 15}}, "detail": "drug_target_map = {}", "children": []}, {"name": "drug_target_list", "kind": 13, "range": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 21}}, "selectionRange": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 16}}, "detail": "drug_target_list = []", "children": []}, {"name": "line", "kind": 13, "range": {"start": {"line": 230, "character": 0}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 230, "character": 4}, "end": {"line": 230, "character": 8}}, "detail": "for line in file_handle: new_line = line.rstrip().split(\",\") drug = new_line[0] target_list=new_line[1].split(',') if drug != \"Drug\": target_list_str = \"\" for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\" drug = drug.strip() drug_target_map[drug] = [] if ',' not in target_list_str: drug_target_map[drug].append(target_list_str.strip()) drug_target_list.append(target_list_str.strip()) else: target_list = target_list_str.split(',') for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "new_line", "kind": 13, "range": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 39}}, "selectionRange": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 12}}, "detail": "new_line = line.rstrip().split(\",\")", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 22}}, "selectionRange": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 8}}, "detail": "drug = new_line[0]", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 38}}, "selectionRange": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 15}}, "detail": "target_list=new_line[1].split(',')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 28}}, "selectionRange": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 23}}, "detail": "target_list_str = \"\"", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 237, "character": 8}, "end": {"line": 242, "character": 0}}, "selectionRange": {"start": {"line": 237, "character": 12}, "end": {"line": 237, "character": 13}}, "detail": "for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 65}}, "selectionRange": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 71}}, "selectionRange": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 27}}, "selectionRange": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 12}}, "detail": "drug = drug.strip()", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 52}}, "selectionRange": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 23}}, "detail": "target_list = target_list_str.split(',')", "children": []}, {"name": "target", "kind": 13, "range": {"start": {"line": 250, "character": 12}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 250, "character": 16}, "end": {"line": 250, "character": 22}}, "detail": "for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "drugs_legend", "kind": 13, "range": {"start": {"line": 261, "character": 0}, "end": {"line": 261, "character": 85}}, "selectionRange": {"start": {"line": 261, "character": 0}, "end": {"line": 261, "character": 12}}, "detail": "drugs_legend = pd.read_csv('/data/GDSC/Screened_Compounds.csv', sep=',', index_col=0)", "children": []}, {"name": "drug2id_mapping", "kind": 13, "range": {"start": {"line": 263, "character": 0}, "end": {"line": 263, "character": 20}}, "selectionRange": {"start": {"line": 263, "character": 0}, "end": {"line": 263, "character": 15}}, "detail": "drug2id_mapping = {}", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 265, "character": 0}, "end": {"line": 268, "character": 0}}, "selectionRange": {"start": {"line": 265, "character": 4}, "end": {"line": 265, "character": 9}}, "detail": "for index in list(drugs_legend.index) : drug_name = drugs_legend.loc[index,'Drug Name'] drug2id_mapping[ drug_name ] = index", "children": []}, {"name": "drug_name", "kind": 13, "range": {"start": {"line": 266, "character": 4}, "end": {"line": 266, "character": 51}}, "selectionRange": {"start": {"line": 266, "character": 4}, "end": {"line": 266, "character": 13}}, "detail": "drug_name = drugs_legend.loc[index,'Drug Name']", "children": []}, {"name": "valid_gene_list", "kind": 13, "range": {"start": {"line": 273, "character": 0}, "end": {"line": 273, "character": 92}}, "selectionRange": {"start": {"line": 273, "character": 0}, "end": {"line": 273, "character": 15}}, "detail": "valid_gene_list = list(set(drug_target_list) | set(exp_gene_list) | set(mutation_gene_list))", "children": []}, {"name": "network_list", "kind": 13, "range": {"start": {"line": 279, "character": 0}, "end": {"line": 279, "character": 82}}, "selectionRange": {"start": {"line": 279, "character": 0}, "end": {"line": 279, "character": 12}}, "detail": "network_list = [new_network_file+inbiomap_file, new_network_file+pathwaycomm_file]", "children": []}, {"name": "gene_neighbor_map", "kind": 13, "range": {"start": {"line": 280, "character": 0}, "end": {"line": 280, "character": 64}}, "selectionRange": {"start": {"line": 280, "character": 0}, "end": {"line": 280, "character": 17}}, "detail": "gene_neighbor_map = load_network(network_list, valid_gene_list)", "children": []}, {"name": "gene_name_df", "kind": 13, "range": {"start": {"line": 286, "character": 0}, "end": {"line": 286, "character": 89}}, "selectionRange": {"start": {"line": 286, "character": 0}, "end": {"line": 286, "character": 12}}, "detail": "gene_name_df = pd.read_table('/data/HUGO_protein-coding_gene.tsv',index_col=25, sep='\\t')", "children": []}, {"name": "gene_name_map", "kind": 13, "range": {"start": {"line": 292, "character": 0}, "end": {"line": 292, "character": 18}}, "selectionRange": {"start": {"line": 292, "character": 0}, "end": {"line": 292, "character": 13}}, "detail": "gene_name_map = {}", "children": []}, {"name": "uniprot_gene", "kind": 13, "range": {"start": {"line": 294, "character": 0}, "end": {"line": 303, "character": 0}}, "selectionRange": {"start": {"line": 294, "character": 4}, "end": {"line": 294, "character": 16}}, "detail": "for uniprot_gene in gene_name_df.index: if isinstance(uniprot_gene, type('aaa')) == False: continue if isinstance(gene_name_df.loc[uniprot_gene, 'symbol'], type('aaa')) == False: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol'][0] else: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 308, "character": 0}, "end": {"line": 308, "character": 76}}, "selectionRange": {"start": {"line": 308, "character": 0}, "end": {"line": 308, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "uniprot_gene_set", "kind": 13, "range": {"start": {"line": 310, "character": 0}, "end": {"line": 310, "character": 24}}, "selectionRange": {"start": {"line": 310, "character": 0}, "end": {"line": 310, "character": 16}}, "detail": "uniprot_gene_set = set()", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 312, "character": 0}, "end": {"line": 321, "character": 0}}, "selectionRange": {"start": {"line": 312, "character": 4}, "end": {"line": 312, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 317, "character": 4}, "end": {"line": 317, "character": 74}}, "selectionRange": {"start": {"line": 317, "character": 4}, "end": {"line": 317, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 319, "character": 4}, "end": {"line": 321, "character": 0}}, "selectionRange": {"start": {"line": 319, "character": 8}, "end": {"line": 319, "character": 12}}, "detail": "for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "query_gene_set", "kind": 13, "range": {"start": {"line": 324, "character": 0}, "end": {"line": 324, "character": 19}}, "selectionRange": {"start": {"line": 324, "character": 0}, "end": {"line": 324, "character": 14}}, "detail": "query_gene_set = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 326, "character": 0}, "end": {"line": 329, "character": 0}}, "selectionRange": {"start": {"line": 326, "character": 4}, "end": {"line": 326, "character": 8}}, "detail": "for gene in uniprot_gene_set: if gene not in gene_name_map: query_gene_set.append(gene)", "children": []}, {"name": "query_gene_list", "kind": 13, "range": {"start": {"line": 332, "character": 0}, "end": {"line": 332, "character": 38}}, "selectionRange": {"start": {"line": 332, "character": 0}, "end": {"line": 332, "character": 15}}, "detail": "query_gene_list = list(query_gene_set)", "children": []}, {"name": "mg", "kind": 13, "range": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 24}}, "selectionRange": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 2}}, "detail": "mg = mygene.MyGeneInfo()", "children": []}, {"name": "out", "kind": 13, "range": {"start": {"line": 335, "character": 0}, "end": {"line": 335, "character": 87}}, "selectionRange": {"start": {"line": 335, "character": 0}, "end": {"line": 335, "character": 3}}, "detail": "out = mg.querymany(query_gene_list, scopes='uniprot', fields='symbol', species='human')", "children": []}, {"name": "not_found_gene_list", "kind": 13, "range": {"start": {"line": 337, "character": 0}, "end": {"line": 337, "character": 24}}, "selectionRange": {"start": {"line": 337, "character": 0}, "end": {"line": 337, "character": 19}}, "detail": "not_found_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 339, "character": 0}, "end": {"line": 344, "character": 0}}, "selectionRange": {"start": {"line": 339, "character": 4}, "end": {"line": 339, "character": 5}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 339, "character": 0}, "end": {"line": 344, "character": 0}}, "selectionRange": {"start": {"line": 339, "character": 7}, "end": {"line": 339, "character": 11}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 351, "character": 0}, "end": {"line": 351, "character": 76}}, "selectionRange": {"start": {"line": 351, "character": 0}, "end": {"line": 351, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 353, "character": 0}, "end": {"line": 375, "character": 0}}, "selectionRange": {"start": {"line": 353, "character": 4}, "end": {"line": 353, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') complex_symbol_list = [] for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] ) for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 358, "character": 4}, "end": {"line": 358, "character": 74}}, "selectionRange": {"start": {"line": 358, "character": 4}, "end": {"line": 358, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "complex_symbol_list", "kind": 13, "range": {"start": {"line": 360, "character": 4}, "end": {"line": 360, "character": 28}}, "selectionRange": {"start": {"line": 360, "character": 4}, "end": {"line": 360, "character": 23}}, "detail": "complex_symbol_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 362, "character": 4}, "end": {"line": 365, "character": 0}}, "selectionRange": {"start": {"line": 362, "character": 8}, "end": {"line": 362, "character": 12}}, "detail": "for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] )", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 366, "character": 4}, "end": {"line": 375, "character": 0}}, "selectionRange": {"start": {"line": 366, "character": 8}, "end": {"line": 366, "character": 13}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 366, "character": 4}, "end": {"line": 375, "character": 0}}, "selectionRange": {"start": {"line": 366, "character": 15}, "end": {"line": 366, "character": 20}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene_exp_neighbor_map", "kind": 13, "range": {"start": {"line": 380, "character": 0}, "end": {"line": 380, "character": 26}}, "selectionRange": {"start": {"line": 380, "character": 0}, "end": {"line": 380, "character": 21}}, "detail": "gene_exp_neighbor_map = {}", "children": []}, {"name": "exp_matrix", "kind": 13, "range": {"start": {"line": 381, "character": 0}, "end": {"line": 381, "character": 26}}, "selectionRange": {"start": {"line": 381, "character": 0}, "end": {"line": 381, "character": 10}}, "detail": "exp_matrix = exp_df.values", "children": []}, {"name": "P", "kind": 13, "range": {"start": {"line": 383, "character": 0}, "end": {"line": 383, "character": 79}}, "selectionRange": {"start": {"line": 383, "character": 0}, "end": {"line": 383, "character": 1}}, "detail": "P = 1 - cdist(np.transpose(exp_matrix), np.transpose(exp_matrix),'correlation')", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 385, "character": 0}, "end": {"line": 399, "character": 0}}, "selectionRange": {"start": {"line": 385, "character": 4}, "end": {"line": 385, "character": 5}}, "detail": "for i in range(len(exp_gene_list)): gene1 = exp_gene_list[i] gene_exp_neighbor_map[gene1] = set() for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2) if gene1 not in gene_exp_neighbor_map[gene1]: print (gene1, 'not in itself?', P[i,i])", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 387, "character": 4}, "end": {"line": 387, "character": 28}}, "selectionRange": {"start": {"line": 387, "character": 4}, "end": {"line": 387, "character": 9}}, "detail": "gene1 = exp_gene_list[i]", "children": []}, {"name": "j", "kind": 13, "range": {"start": {"line": 390, "character": 4}, "end": {"line": 396, "character": 0}}, "selectionRange": {"start": {"line": 390, "character": 8}, "end": {"line": 390, "character": 9}}, "detail": "for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 392, "character": 8}, "end": {"line": 392, "character": 32}}, "selectionRange": {"start": {"line": 392, "character": 8}, "end": {"line": 392, "character": 13}}, "detail": "gene2 = exp_gene_list[j]", "children": []}, {"name": "drug_feature_list", "kind": 13, "range": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 22}}, "selectionRange": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 17}}, "detail": "drug_feature_list = []", "children": []}, {"name": "drug_neighbor_map", "kind": 13, "range": {"start": {"line": 408, "character": 0}, "end": {"line": 408, "character": 22}}, "selectionRange": {"start": {"line": 408, "character": 0}, "end": {"line": 408, "character": 17}}, "detail": "drug_neighbor_map = {}", "children": []}, {"name": "selected_drug_list", "kind": 13, "range": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 23}}, "selectionRange": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 18}}, "detail": "selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 411, "character": 0}, "end": {"line": 428, "character": 0}}, "selectionRange": {"start": {"line": 411, "character": 4}, "end": {"line": 411, "character": 8}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 411, "character": 0}, "end": {"line": 428, "character": 0}}, "selectionRange": {"start": {"line": 411, "character": 10}, "end": {"line": 411, "character": 21}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 414, "character": 8}, "end": {"line": 424, "character": 0}}, "selectionRange": {"start": {"line": 414, "character": 12}, "end": {"line": 414, "character": 16}}, "detail": "for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene]", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 442, "character": 0}, "end": {"line": 442, "character": 52}}, "selectionRange": {"start": {"line": 442, "character": 0}, "end": {"line": 442, "character": 5}}, "detail": "drugs = pd.read_csv(drug_cell_line_file,index_col=2)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 443, "character": 0}, "end": {"line": 443, "character": 93}}, "selectionRange": {"start": {"line": 443, "character": 0}, "end": {"line": 443, "character": 5}}, "detail": "drugs = drugs.drop([\"DATASET_VERSION\",\"IC50_RESULTS_ID\",\"MAX_CONC_MICROMOLAR\",\"RMSE\"],axis=1)", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 444, "character": 0}, "end": {"line": 444, "character": 49}}, "selectionRange": {"start": {"line": 444, "character": 0}, "end": {"line": 444, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 446, "character": 0}, "end": {"line": 446, "character": 28}}, "selectionRange": {"start": {"line": 446, "character": 0}, "end": {"line": 446, "character": 9}}, "detail": "drug_list = drugs[\"DRUG_ID\"]", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 447, "character": 0}, "end": {"line": 447, "character": 16}}, "selectionRange": {"start": {"line": 447, "character": 0}, "end": {"line": 447, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 457, "character": 0}, "end": {"line": 457, "character": 71}}, "selectionRange": {"start": {"line": 457, "character": 0}, "end": {"line": 457, "character": 10}}, "detail": "PDTC_drugs = pd.read_csv(PDTC_drug_cell_line_file,sep='\\t',index_col=0)", "children": []}, {"name": "PDTC_drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 458, "character": 0}, "end": {"line": 458, "character": 59}}, "selectionRange": {"start": {"line": 458, "character": 0}, "end": {"line": 458, "character": 25}}, "detail": "PDTC_drugs_cell_line_list = list(PDTC_drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 460, "character": 0}, "end": {"line": 460, "character": 39}}, "selectionRange": {"start": {"line": 460, "character": 0}, "end": {"line": 460, "character": 9}}, "detail": "drug_list = PDTC_drugs[\"Drug\"].tolist()", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 461, "character": 0}, "end": {"line": 461, "character": 16}}, "selectionRange": {"start": {"line": 461, "character": 0}, "end": {"line": 461, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 462, "character": 0}, "end": {"line": 467, "character": 0}}, "selectionRange": {"start": {"line": 462, "character": 4}, "end": {"line": 462, "character": 5}}, "detail": "for i in drug_list: if i in drug2id_mapping.keys(): new_drug_id.append(drug2id_mapping[i]) else: new_drug_id.append(0)", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 84}}, "selectionRange": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 10}}, "detail": "PDTC_drugs = PDTC_drugs.drop([\"Drug\",\"iC50\",\"D1_CONC\",\"D5_CONC\",\"perc.iC50\"],axis=1)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 477, "character": 0}, "end": {"line": 477, "character": 37}}, "selectionRange": {"start": {"line": 477, "character": 0}, "end": {"line": 477, "character": 5}}, "detail": "drugs = pd.concat([drugs,PDTC_drugs])", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 49}}, "selectionRange": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "cell_line_list", "kind": 13, "range": {"start": {"line": 490, "character": 0}, "end": {"line": 490, "character": 102}}, "selectionRange": {"start": {"line": 490, "character": 0}, "end": {"line": 490, "character": 14}}, "detail": "cell_line_list = list(set(drugs_cell_line_list)&set(exp_cell_line_list)&set(mutation_cell_line_list) )", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 497, "character": 0}, "end": {"line": 497, "character": 66}}, "selectionRange": {"start": {"line": 497, "character": 0}, "end": {"line": 497, "character": 16}}, "detail": "cell_line_legend = pd.read_csv(cell_line_detail_file, index_col=1)", "children": []}, {"name": "PDTC_cell_line", "kind": 13, "range": {"start": {"line": 498, "character": 0}, "end": {"line": 498, "character": 206}}, "selectionRange": {"start": {"line": 498, "character": 0}, "end": {"line": 498, "character": 14}}, "detail": "PDTC_cell_line = pd.DataFrame({'Line': [\"BRCA\"]*len(PDTC_exp_cell_line_list), 'Site':[\"PDTC\"]*len(PDTC_exp_cell_line_list),\"Histology\":[\"breast\"]*len(PDTC_exp_cell_line_list)},index=PDTC_exp_cell_line_list)", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 499, "character": 0}, "end": {"line": 499, "character": 63}}, "selectionRange": {"start": {"line": 499, "character": 0}, "end": {"line": 499, "character": 16}}, "detail": "cell_line_legend = pd.concat([cell_line_legend,PDTC_cell_line])", "children": []}, {"name": "tissue_map", "kind": 13, "range": {"start": {"line": 502, "character": 0}, "end": {"line": 502, "character": 15}}, "selectionRange": {"start": {"line": 502, "character": 0}, "end": {"line": 502, "character": 10}}, "detail": "tissue_map = {}", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 504, "character": 0}, "end": {"line": 512, "character": 0}}, "selectionRange": {"start": {"line": 504, "character": 4}, "end": {"line": 504, "character": 13}}, "detail": "for cell_line in cell_line_list: tissue = cell_line_legend.loc[cell_line,'Site'] if tissue not in tissue_map: tissue_map[tissue] = [] tissue_map[tissue].append(cell_line)", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 506, "character": 4}, "end": {"line": 506, "character": 51}}, "selectionRange": {"start": {"line": 506, "character": 4}, "end": {"line": 506, "character": 10}}, "detail": "tissue = cell_line_legend.loc[cell_line,'Site']", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 513, "character": 0}, "end": {"line": 513, "character": 23}}, "selectionRange": {"start": {"line": 513, "character": 0}, "end": {"line": 513, "character": 19}}, "detail": "large_tissue_number = 0", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 514, "character": 0}, "end": {"line": 520, "character": 0}}, "selectionRange": {"start": {"line": 514, "character": 4}, "end": {"line": 514, "character": 10}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 514, "character": 0}, "end": {"line": 520, "character": 0}}, "selectionRange": {"start": {"line": 514, "character": 12}, "end": {"line": 514, "character": 21}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 517, "character": 8}, "end": {"line": 517, "character": 32}}, "selectionRange": {"start": {"line": 517, "character": 8}, "end": {"line": 517, "character": 27}}, "detail": "large_tissue_number += 1", "children": []}, {"name": "new_exp_gene_list", "kind": 13, "range": {"start": {"line": 540, "character": 0}, "end": {"line": 540, "character": 22}}, "selectionRange": {"start": {"line": 540, "character": 0}, "end": {"line": 540, "character": 17}}, "detail": "new_exp_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 541, "character": 0}, "end": {"line": 544, "character": 0}}, "selectionRange": {"start": {"line": 541, "character": 4}, "end": {"line": 541, "character": 5}}, "detail": "for i in exp_gene_list: if i in valid_gene_list: new_exp_gene_list.append(i)", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 549, "character": 0}, "end": {"line": 549, "character": 41}}, "selectionRange": {"start": {"line": 549, "character": 0}, "end": {"line": 549, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 550, "character": 0}, "end": {"line": 550, "character": 38}}, "selectionRange": {"start": {"line": 550, "character": 0}, "end": {"line": 550, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 551, "character": 0}, "end": {"line": 551, "character": 72}}, "selectionRange": {"start": {"line": 551, "character": 0}, "end": {"line": 551, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 553, "character": 0}, "end": {"line": 553, "character": 43}}, "selectionRange": {"start": {"line": 553, "character": 0}, "end": {"line": 553, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 554, "character": 0}, "end": {"line": 554, "character": 68}}, "selectionRange": {"start": {"line": 554, "character": 0}, "end": {"line": 554, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 561, "character": 0}, "end": {"line": 561, "character": 58}}, "selectionRange": {"start": {"line": 561, "character": 0}, "end": {"line": 561, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 562, "character": 0}, "end": {"line": 562, "character": 68}}, "selectionRange": {"start": {"line": 562, "character": 0}, "end": {"line": 562, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "new_data_file", "kind": 13, "range": {"start": {"line": 571, "character": 0}, "end": {"line": 571, "character": 18}}, "selectionRange": {"start": {"line": 571, "character": 0}, "end": {"line": 571, "character": 13}}, "detail": "new_data_file = ''", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 41}}, "selectionRange": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 38}}, "selectionRange": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 72}}, "selectionRange": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 43}}, "selectionRange": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 68}}, "selectionRange": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 58}}, "selectionRange": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 68}}, "selectionRange": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "rename_selected_drug_list", "kind": 13, "range": {"start": {"line": 592, "character": 0}, "end": {"line": 592, "character": 30}}, "selectionRange": {"start": {"line": 592, "character": 0}, "end": {"line": 592, "character": 25}}, "detail": "rename_selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 594, "character": 0}, "end": {"line": 664, "character": 0}}, "selectionRange": {"start": {"line": 594, "character": 4}, "end": {"line": 594, "character": 8}}, "detail": "for drug in selected_drug_list: print(drug) if drug not in drug2id_mapping: print('drug name wrong', drug) else: cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]] feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) ) feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) ) print(len(feature_exp_gene_list) + len(feature_mut_gene_list)) if len(feature_exp_gene_list) + len(feature_mut_gene_list) == 0: continue feature_description = [] drug_tissue_map = {} drug = drug.replace(' ','_') rename_selected_drug_list.append(drug) if drug == 'Nutlin-3a_(-)': drug = 'Nutlin-3a' drug_folder = '/data/merged/drug_feature/' + drug + '/' if not os.path.exists(drug_folder): os.makedirs(drug_folder) for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description)) file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\") pickle.dump(drug_tissue_map,file_handle) file_handle.close()", "children": []}, {"name": "cell_line_drug_matrix", "kind": 13, "range": {"start": {"line": 602, "character": 8}, "end": {"line": 602, "character": 84}}, "selectionRange": {"start": {"line": 602, "character": 8}, "end": {"line": 602, "character": 29}}, "detail": "cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]]", "children": []}, {"name": "feature_exp_gene_list", "kind": 13, "range": {"start": {"line": 607, "character": 8}, "end": {"line": 607, "character": 98}}, "selectionRange": {"start": {"line": 607, "character": 8}, "end": {"line": 607, "character": 29}}, "detail": "feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) )", "children": []}, {"name": "feature_mut_gene_list", "kind": 13, "range": {"start": {"line": 608, "character": 8}, "end": {"line": 608, "character": 98}}, "selectionRange": {"start": {"line": 608, "character": 8}, "end": {"line": 608, "character": 29}}, "detail": "feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) )", "children": []}, {"name": "feature_description", "kind": 13, "range": {"start": {"line": 612, "character": 8}, "end": {"line": 612, "character": 32}}, "selectionRange": {"start": {"line": 612, "character": 8}, "end": {"line": 612, "character": 27}}, "detail": "feature_description = []", "children": []}, {"name": "drug_tissue_map", "kind": 13, "range": {"start": {"line": 614, "character": 8}, "end": {"line": 614, "character": 28}}, "selectionRange": {"start": {"line": 614, "character": 8}, "end": {"line": 614, "character": 23}}, "detail": "drug_tissue_map = {}", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 616, "character": 8}, "end": {"line": 616, "character": 36}}, "selectionRange": {"start": {"line": 616, "character": 8}, "end": {"line": 616, "character": 12}}, "detail": "drug = drug.replace(' ','_')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 622, "character": 12}, "end": {"line": 622, "character": 30}}, "selectionRange": {"start": {"line": 622, "character": 12}, "end": {"line": 622, "character": 16}}, "detail": "drug = 'Nutlin-3a'", "children": []}, {"name": "drug_folder", "kind": 13, "range": {"start": {"line": 624, "character": 8}, "end": {"line": 624, "character": 63}}, "selectionRange": {"start": {"line": 624, "character": 8}, "end": {"line": 624, "character": 19}}, "detail": "drug_folder = '/data/merged/drug_feature/' + drug + '/'", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 630, "character": 8}, "end": {"line": 660, "character": 0}}, "selectionRange": {"start": {"line": 630, "character": 12}, "end": {"line": 630, "character": 18}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "tissue_cell_line_list", "kind": 13, "range": {"start": {"line": 630, "character": 8}, "end": {"line": 660, "character": 0}}, "selectionRange": {"start": {"line": 630, "character": 20}, "end": {"line": 630, "character": 41}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 633, "character": 12}, "end": {"line": 633, "character": 103}}, "selectionRange": {"start": {"line": 633, "character": 12}, "end": {"line": 633, "character": 35}}, "detail": "drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list )", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 634, "character": 12}, "end": {"line": 634, "character": 67}}, "selectionRange": {"start": {"line": 634, "character": 12}, "end": {"line": 634, "character": 35}}, "detail": "drug_specific_cell_line = list(drug_specific_cell_line)", "children": []}, {"name": "feature_list", "kind": 13, "range": {"start": {"line": 637, "character": 12}, "end": {"line": 637, "character": 29}}, "selectionRange": {"start": {"line": 637, "character": 12}, "end": {"line": 637, "character": 24}}, "detail": "feature_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 641, "character": 16}, "end": {"line": 643, "character": 0}}, "selectionRange": {"start": {"line": 641, "character": 20}, "end": {"line": 641, "character": 24}}, "detail": "for gene in feature_exp_gene_list: feature_description.append(gene+'_expression')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 646, "character": 16}, "end": {"line": 648, "character": 0}}, "selectionRange": {"start": {"line": 646, "character": 20}, "end": {"line": 646, "character": 24}}, "detail": "for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation')", "children": []}, {"name": "feature", "kind": 13, "range": {"start": {"line": 649, "character": 12}, "end": {"line": 649, "character": 58}}, "selectionRange": {"start": {"line": 649, "character": 12}, "end": {"line": 649, "character": 19}}, "detail": "feature = np.concatenate(feature_list, axis=1)", "children": []}, {"name": "label", "kind": 13, "range": {"start": {"line": 651, "character": 12}, "end": {"line": 651, "character": 88}}, "selectionRange": {"start": {"line": 651, "character": 12}, "end": {"line": 651, "character": 17}}, "detail": "label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 661, "character": 8}, "end": {"line": 661, "character": 84}}, "selectionRange": {"start": {"line": 661, "character": 8}, "end": {"line": 661, "character": 19}}, "detail": "file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\")", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 665, "character": 0}, "end": {"line": 665, "character": 52}}, "selectionRange": {"start": {"line": 665, "character": 0}, "end": {"line": 665, "character": 11}}, "detail": "file_handle = open('rename_selected_drug_list', 'w')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 666, "character": 0}, "end": {"line": 668, "character": 0}}, "selectionRange": {"start": {"line": 666, "character": 4}, "end": {"line": 666, "character": 8}}, "detail": "for drug in rename_selected_drug_list: file_handle.writelines(drug+ '\\n')", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 686, "character": 0}, "end": {"line": 686, "character": 13}}, "selectionRange": {"start": {"line": 686, "character": 7}, "end": {"line": 686, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cell_line_loc", "kind": 13, "range": {"start": {"line": 692, "character": 0}, "end": {"line": 692, "character": 84}}, "selectionRange": {"start": {"line": 692, "character": 0}, "end": {"line": 692, "character": 13}}, "detail": "cell_line_loc = '/cellar/users/samsonfong/Projects/tcrp-v2/from-ma/cell_line_lists/'", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 698, "character": 0}, "end": {"line": 700, "character": 0}}, "selectionRange": {"start": {"line": 698, "character": 53}, "end": {"line": 698, "character": 54}}, "detail": "with open('/data/drug_feature/KU-55933/KU', 'rb') as f: tmap= pickle.load(f)", "children": []}, {"name": "tmap", "kind": 13, "range": {"start": {"line": 699, "character": 4}, "end": {"line": 699, "character": 24}}, "selectionRange": {"start": {"line": 699, "character": 4}, "end": {"line": 699, "character": 8}}, "detail": "tmap= pickle.load(f)", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 717, "character": 0}, "end": {"line": 717, "character": 68}}, "selectionRange": {"start": {"line": 717, "character": 0}, "end": {"line": 717, "character": 1}}, "detail": "f = np.load('/data/drug_feature/KU-55933/lung_KU-55933_feature.npy')", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 5, "result": [{"title": "Inline variable", "kind": "refactor.inline", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///root/capsule/code/process_merged.py", "version": 1}, "edits": [{"range": {"start": {"line": 29, "character": 0}, "end": {"line": 30, "character": 95}}, "newText": ""}, {"range": {"start": {"line": 145, "character": 16}, "end": {"line": 145, "character": 38}}, "newText": "pd.read_csv(\"/data/common_exp_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()"}, {"range": {"start": {"line": 166, "character": 26}, "end": {"line": 166, "character": 48}}, "newText": "pd.read_csv(\"/data/common_exp_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 6, "result": [{"name": "matplotlib", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 17}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 17}}, "detail": "module matplotlib", "children": []}, {"name": "os", "kind": 2, "range": {"start": {"line": 10, "character": 0}, "end": {"line": 10, "character": 9}}, "selectionRange": {"start": {"line": 10, "character": 7}, "end": {"line": 10, "character": 9}}, "detail": "module os", "children": []}, {"name": "pd", "kind": 2, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 11, "character": 19}}, "selectionRange": {"start": {"line": 11, "character": 17}, "end": {"line": 11, "character": 19}}, "detail": "module pd", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 12, "character": 0}, "end": {"line": 12, "character": 18}}, "selectionRange": {"start": {"line": 12, "character": 16}, "end": {"line": 12, "character": 18}}, "detail": "module np", "children": []}, {"name": "sys", "kind": 2, "range": {"start": {"line": 13, "character": 0}, "end": {"line": 13, "character": 10}}, "selectionRange": {"start": {"line": 13, "character": 7}, "end": {"line": 13, "character": 10}}, "detail": "module sys", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 14, "character": 0}, "end": {"line": 14, "character": 13}}, "selectionRange": {"start": {"line": 14, "character": 7}, "end": {"line": 14, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cdist", "kind": 12, "range": {"start": {"line": 15, "character": 0}, "end": {"line": 15, "character": 40}}, "selectionRange": {"start": {"line": 15, "character": 35}, "end": {"line": 15, "character": 40}}, "detail": "def cdist", "children": []}, {"name": "math", "kind": 2, "range": {"start": {"line": 16, "character": 0}, "end": {"line": 16, "character": 11}}, "selectionRange": {"start": {"line": 16, "character": 7}, "end": {"line": 16, "character": 11}}, "detail": "module math", "children": []}, {"name": "nx", "kind": 2, "range": {"start": {"line": 17, "character": 0}, "end": {"line": 17, "character": 21}}, "selectionRange": {"start": {"line": 17, "character": 19}, "end": {"line": 17, "character": 21}}, "detail": "module nx", "children": []}, {"name": "nxacc", "kind": 2, "range": {"start": {"line": 18, "character": 0}, "end": {"line": 18, "character": 56}}, "selectionRange": {"start": {"line": 18, "character": 51}, "end": {"line": 18, "character": 56}}, "detail": "module nxacc", "children": []}, {"name": "nxadag", "kind": 2, "range": {"start": {"line": 19, "character": 0}, "end": {"line": 19, "character": 40}}, "selectionRange": {"start": {"line": 19, "character": 34}, "end": {"line": 19, "character": 40}}, "detail": "module nxadag", "children": []}, {"name": "plt", "kind": 2, "range": {"start": {"line": 20, "character": 0}, "end": {"line": 20, "character": 31}}, "selectionRange": {"start": {"line": 20, "character": 28}, "end": {"line": 20, "character": 31}}, "detail": "module plt", "children": []}, {"name": "sns", "kind": 2, "range": {"start": {"line": 21, "character": 0}, "end": {"line": 21, "character": 21}}, "selectionRange": {"start": {"line": 21, "character": 18}, "end": {"line": 21, "character": 21}}, "detail": "module sns", "children": []}, {"name": "itertools", "kind": 2, "range": {"start": {"line": 22, "character": 0}, "end": {"line": 22, "character": 16}}, "selectionRange": {"start": {"line": 22, "character": 7}, "end": {"line": 22, "character": 16}}, "detail": "module itertools", "children": []}, {"name": "mygene", "kind": 2, "range": {"start": {"line": 23, "character": 0}, "end": {"line": 23, "character": 13}}, "selectionRange": {"start": {"line": 23, "character": 7}, "end": {"line": 23, "character": 13}}, "detail": "module mygene", "children": []}, {"name": "re", "kind": 2, "range": {"start": {"line": 24, "character": 0}, "end": {"line": 24, "character": 9}}, "selectionRange": {"start": {"line": 24, "character": 7}, "end": {"line": 24, "character": 9}}, "detail": "module re", "children": []}, {"name": "selected_exp_gene_list", "kind": 13, "range": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 95}}, "selectionRange": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 22}}, "detail": "selected_exp_gene_list = pd.read_csv(\"/data/common_exp_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "selected_mut_gene_list", "kind": 13, "range": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 95}}, "selectionRange": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 22}}, "detail": "selected_mut_gene_list = pd.read_csv(\"/data/common_mut_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "load_network", "kind": 12, "range": {"start": {"line": 37, "character": 0}, "end": {"line": 65, "character": 28}}, "selectionRange": {"start": {"line": 37, "character": 4}, "end": {"line": 37, "character": 16}}, "detail": "def load_network", "children": []}, {"name": "load_name_space", "kind": 12, "range": {"start": {"line": 67, "character": 0}, "end": {"line": 79, "character": 21}}, "selectionRange": {"start": {"line": 67, "character": 4}, "end": {"line": 67, "character": 19}}, "detail": "def load_name_space", "children": []}, {"name": "list2index", "kind": 12, "range": {"start": {"line": 81, "character": 0}, "end": {"line": 88, "character": 41}}, "selectionRange": {"start": {"line": 81, "character": 4}, "end": {"line": 81, "character": 14}}, "detail": "def list2index", "children": []}, {"name": "PDTC_data_file", "kind": 13, "range": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 30}}, "selectionRange": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 14}}, "detail": "PDTC_data_file = '/data/PTDC/'", "children": []}, {"name": "PDTC_exp_data_file", "kind": 13, "range": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 60}}, "selectionRange": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 18}}, "detail": "PDTC_exp_data_file = PDTC_data_file + 'ExpressionModels.tsv'", "children": []}, {"name": "PDTC_drug_cell_line_file", "kind": 13, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 72}}, "selectionRange": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 24}}, "detail": "PDTC_drug_cell_line_file = PDTC_data_file + 'DrugResponsesAUCModels.tsv'", "children": []}, {"name": "PDTC_mutation_data_file", "kind": 13, "range": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 59}}, "selectionRange": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 23}}, "detail": "PDTC_mutation_data_file = PDTC_data_file + 'SNVsModels.tsv'", "children": []}, {"name": "PDTC_drug_target_file", "kind": 13, "range": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 56}}, "selectionRange": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 21}}, "detail": "PDTC_drug_target_file ='/data/GDSC/drug_target_list.csv'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 37}}, "selectionRange": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 46}}, "selectionRange": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "data_file", "kind": 13, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 25}}, "selectionRange": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 9}}, "detail": "data_file = '/data/GDSC/'", "children": []}, {"name": "new_network_file", "kind": 13, "range": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 27}}, "selectionRange": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 16}}, "detail": "new_network_file = '/data/'", "children": []}, {"name": "exp_data_file", "kind": 13, "range": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 61}}, "selectionRange": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 13}}, "detail": "exp_data_file = data_file + 'Cell_line_RMA_proc_basalExp.txt'", "children": []}, {"name": "drug_cell_line_file", "kind": 13, "range": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 64}}, "selectionRange": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 19}}, "detail": "drug_cell_line_file = data_file + 'v17_fitted_dose_response.csv'", "children": []}, {"name": "cell_line_detail_file", "kind": 13, "range": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 60}}, "selectionRange": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 21}}, "detail": "cell_line_detail_file = data_file + 'Cell_Lines_Details.csv'", "children": []}, {"name": "mutation_data_file", "kind": 13, "range": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 51}}, "selectionRange": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 18}}, "detail": "mutation_data_file = data_file + 'WES_variants.csv'", "children": []}, {"name": "drug_target_file", "kind": 13, "range": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 51}}, "selectionRange": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 16}}, "detail": "drug_target_file ='/data/GDSC/drug_target_list.csv'", "children": []}, {"name": "feature_folder", "kind": 13, "range": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 27}}, "selectionRange": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 14}}, "detail": "feature_folder = 'feature/'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 37}}, "selectionRange": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 46}}, "selectionRange": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 58}}, "selectionRange": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 6}}, "detail": "exp_df = pd.read_csv(exp_data_file, sep='\\t', index_col=0)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 21}}, "selectionRange": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 6}}, "detail": "exp_df = exp_df.T[1:]", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 56}}, "selectionRange": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 6}}, "detail": "exp_df = exp_df.rename(columns={np.nan: 'NO_GENE_NAME'})", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 43}}, "selectionRange": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 6}}, "detail": "exp_df = exp_df.drop('NO_GENE_NAME',axis=1)", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 138, "character": 0}, "end": {"line": 140, "character": 26}}, "selectionRange": {"start": {"line": 138, "character": 4}, "end": {"line": 138, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 142, "character": 0}, "end": {"line": 142, "character": 44}}, "selectionRange": {"start": {"line": 142, "character": 7}, "end": {"line": 142, "character": 12}}, "detail": "exp_df.index = exp_df.index.map(stripNumber)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 40}}, "selectionRange": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 6}}, "detail": "exp_df = exp_df.groupby(level=0).first()", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 39}}, "selectionRange": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 6}}, "detail": "exp_df = exp_df[selected_exp_gene_list]", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 36}}, "selectionRange": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 48}}, "selectionRange": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 78}}, "selectionRange": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 11}}, "detail": "PDTC_exp_df = pd.read_csv(PDTC_exp_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 31}}, "selectionRange": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df.T[1:]", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 160, "character": 0}, "end": {"line": 162, "character": 26}}, "selectionRange": {"start": {"line": 160, "character": 4}, "end": {"line": 160, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 49}}, "selectionRange": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df[selected_exp_gene_list]", "children": []}, {"name": "PDTC_exp_gene_list", "kind": 13, "range": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 46}}, "selectionRange": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 18}}, "detail": "PDTC_exp_gene_list = list(PDTC_exp_df.columns)", "children": []}, {"name": "PDTC_exp_cell_line_list", "kind": 13, "range": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 58}}, "selectionRange": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 23}}, "detail": "PDTC_exp_cell_line_list = list(PDTC_exp_df.index.unique())", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 40}}, "selectionRange": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 6}}, "detail": "exp_df = pd.concat([exp_df,PDTC_exp_df])", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 36}}, "selectionRange": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 48}}, "selectionRange": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "maf", "kind": 13, "range": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 69}}, "selectionRange": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 3}}, "detail": "maf = pd.read_csv(mutation_data_file, sep=',', index_col=0).fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 75}}, "selectionRange": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 11}}, "detail": "mutation_df = maf.groupby(['COSMIC_ID', 'Gene']).size().unstack().fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 49}}, "selectionRange": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 11}}, "detail": "mutation_df = mutation_df[selected_mut_gene_list]", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 46}}, "selectionRange": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 58}}, "selectionRange": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "PDTC_maf", "kind": 13, "range": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 80}}, "selectionRange": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 8}}, "detail": "PDTC_maf = pd.read_csv(PDTC_mutation_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 61}}, "selectionRange": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_maf.replace(to_replace=\"NO\",value=0.0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 82}}, "selectionRange": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_mutation_df.replace(to_replace=\"chr*\",value=1.0,regex=True)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 47}}, "selectionRange": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df.transpose()", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 59}}, "selectionRange": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df[selected_mut_gene_list]", "children": []}, {"name": "PDTC_mutation_gene_list", "kind": 13, "range": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 56}}, "selectionRange": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 23}}, "detail": "PDTC_mutation_gene_list = list(PDTC_mutation_df.columns)", "children": []}, {"name": "PDTC_mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 68}}, "selectionRange": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 28}}, "detail": "PDTC_mutation_cell_line_list = list(PDTC_mutation_df.index.unique())", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 55}}, "selectionRange": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 11}}, "detail": "mutation_df = pd.concat([mutation_df,PDTC_mutation_df])", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 46}}, "selectionRange": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 58}}, "selectionRange": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 36}}, "selectionRange": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 11}}, "detail": "file_handle = open(drug_target_file)", "children": []}, {"name": "drug_target_map", "kind": 13, "range": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 20}}, "selectionRange": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 15}}, "detail": "drug_target_map = {}", "children": []}, {"name": "drug_target_list", "kind": 13, "range": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 21}}, "selectionRange": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 16}}, "detail": "drug_target_list = []", "children": []}, {"name": "line", "kind": 13, "range": {"start": {"line": 230, "character": 0}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 230, "character": 4}, "end": {"line": 230, "character": 8}}, "detail": "for line in file_handle: new_line = line.rstrip().split(\",\") drug = new_line[0] target_list=new_line[1].split(',') if drug != \"Drug\": target_list_str = \"\" for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\" drug = drug.strip() drug_target_map[drug] = [] if ',' not in target_list_str: drug_target_map[drug].append(target_list_str.strip()) drug_target_list.append(target_list_str.strip()) else: target_list = target_list_str.split(',') for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "new_line", "kind": 13, "range": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 39}}, "selectionRange": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 12}}, "detail": "new_line = line.rstrip().split(\",\")", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 22}}, "selectionRange": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 8}}, "detail": "drug = new_line[0]", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 38}}, "selectionRange": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 15}}, "detail": "target_list=new_line[1].split(',')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 28}}, "selectionRange": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 23}}, "detail": "target_list_str = \"\"", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 237, "character": 8}, "end": {"line": 242, "character": 0}}, "selectionRange": {"start": {"line": 237, "character": 12}, "end": {"line": 237, "character": 13}}, "detail": "for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 65}}, "selectionRange": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 71}}, "selectionRange": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 27}}, "selectionRange": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 12}}, "detail": "drug = drug.strip()", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 52}}, "selectionRange": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 23}}, "detail": "target_list = target_list_str.split(',')", "children": []}, {"name": "target", "kind": 13, "range": {"start": {"line": 250, "character": 12}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 250, "character": 16}, "end": {"line": 250, "character": 22}}, "detail": "for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "drugs_legend", "kind": 13, "range": {"start": {"line": 261, "character": 0}, "end": {"line": 261, "character": 85}}, "selectionRange": {"start": {"line": 261, "character": 0}, "end": {"line": 261, "character": 12}}, "detail": "drugs_legend = pd.read_csv('/data/GDSC/Screened_Compounds.csv', sep=',', index_col=0)", "children": []}, {"name": "drug2id_mapping", "kind": 13, "range": {"start": {"line": 263, "character": 0}, "end": {"line": 263, "character": 20}}, "selectionRange": {"start": {"line": 263, "character": 0}, "end": {"line": 263, "character": 15}}, "detail": "drug2id_mapping = {}", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 265, "character": 0}, "end": {"line": 268, "character": 0}}, "selectionRange": {"start": {"line": 265, "character": 4}, "end": {"line": 265, "character": 9}}, "detail": "for index in list(drugs_legend.index) : drug_name = drugs_legend.loc[index,'Drug Name'] drug2id_mapping[ drug_name ] = index", "children": []}, {"name": "drug_name", "kind": 13, "range": {"start": {"line": 266, "character": 4}, "end": {"line": 266, "character": 51}}, "selectionRange": {"start": {"line": 266, "character": 4}, "end": {"line": 266, "character": 13}}, "detail": "drug_name = drugs_legend.loc[index,'Drug Name']", "children": []}, {"name": "valid_gene_list", "kind": 13, "range": {"start": {"line": 273, "character": 0}, "end": {"line": 273, "character": 92}}, "selectionRange": {"start": {"line": 273, "character": 0}, "end": {"line": 273, "character": 15}}, "detail": "valid_gene_list = list(set(drug_target_list) | set(exp_gene_list) | set(mutation_gene_list))", "children": []}, {"name": "network_list", "kind": 13, "range": {"start": {"line": 279, "character": 0}, "end": {"line": 279, "character": 82}}, "selectionRange": {"start": {"line": 279, "character": 0}, "end": {"line": 279, "character": 12}}, "detail": "network_list = [new_network_file+inbiomap_file, new_network_file+pathwaycomm_file]", "children": []}, {"name": "gene_neighbor_map", "kind": 13, "range": {"start": {"line": 280, "character": 0}, "end": {"line": 280, "character": 64}}, "selectionRange": {"start": {"line": 280, "character": 0}, "end": {"line": 280, "character": 17}}, "detail": "gene_neighbor_map = load_network(network_list, valid_gene_list)", "children": []}, {"name": "gene_name_df", "kind": 13, "range": {"start": {"line": 286, "character": 0}, "end": {"line": 286, "character": 89}}, "selectionRange": {"start": {"line": 286, "character": 0}, "end": {"line": 286, "character": 12}}, "detail": "gene_name_df = pd.read_table('/data/HUGO_protein-coding_gene.tsv',index_col=25, sep='\\t')", "children": []}, {"name": "gene_name_map", "kind": 13, "range": {"start": {"line": 292, "character": 0}, "end": {"line": 292, "character": 18}}, "selectionRange": {"start": {"line": 292, "character": 0}, "end": {"line": 292, "character": 13}}, "detail": "gene_name_map = {}", "children": []}, {"name": "uniprot_gene", "kind": 13, "range": {"start": {"line": 294, "character": 0}, "end": {"line": 303, "character": 0}}, "selectionRange": {"start": {"line": 294, "character": 4}, "end": {"line": 294, "character": 16}}, "detail": "for uniprot_gene in gene_name_df.index: if isinstance(uniprot_gene, type('aaa')) == False: continue if isinstance(gene_name_df.loc[uniprot_gene, 'symbol'], type('aaa')) == False: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol'][0] else: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 308, "character": 0}, "end": {"line": 308, "character": 76}}, "selectionRange": {"start": {"line": 308, "character": 0}, "end": {"line": 308, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "uniprot_gene_set", "kind": 13, "range": {"start": {"line": 310, "character": 0}, "end": {"line": 310, "character": 24}}, "selectionRange": {"start": {"line": 310, "character": 0}, "end": {"line": 310, "character": 16}}, "detail": "uniprot_gene_set = set()", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 312, "character": 0}, "end": {"line": 321, "character": 0}}, "selectionRange": {"start": {"line": 312, "character": 4}, "end": {"line": 312, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 317, "character": 4}, "end": {"line": 317, "character": 74}}, "selectionRange": {"start": {"line": 317, "character": 4}, "end": {"line": 317, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 319, "character": 4}, "end": {"line": 321, "character": 0}}, "selectionRange": {"start": {"line": 319, "character": 8}, "end": {"line": 319, "character": 12}}, "detail": "for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "query_gene_set", "kind": 13, "range": {"start": {"line": 324, "character": 0}, "end": {"line": 324, "character": 19}}, "selectionRange": {"start": {"line": 324, "character": 0}, "end": {"line": 324, "character": 14}}, "detail": "query_gene_set = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 326, "character": 0}, "end": {"line": 329, "character": 0}}, "selectionRange": {"start": {"line": 326, "character": 4}, "end": {"line": 326, "character": 8}}, "detail": "for gene in uniprot_gene_set: if gene not in gene_name_map: query_gene_set.append(gene)", "children": []}, {"name": "query_gene_list", "kind": 13, "range": {"start": {"line": 332, "character": 0}, "end": {"line": 332, "character": 38}}, "selectionRange": {"start": {"line": 332, "character": 0}, "end": {"line": 332, "character": 15}}, "detail": "query_gene_list = list(query_gene_set)", "children": []}, {"name": "mg", "kind": 13, "range": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 24}}, "selectionRange": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 2}}, "detail": "mg = mygene.MyGeneInfo()", "children": []}, {"name": "out", "kind": 13, "range": {"start": {"line": 335, "character": 0}, "end": {"line": 335, "character": 87}}, "selectionRange": {"start": {"line": 335, "character": 0}, "end": {"line": 335, "character": 3}}, "detail": "out = mg.querymany(query_gene_list, scopes='uniprot', fields='symbol', species='human')", "children": []}, {"name": "not_found_gene_list", "kind": 13, "range": {"start": {"line": 337, "character": 0}, "end": {"line": 337, "character": 24}}, "selectionRange": {"start": {"line": 337, "character": 0}, "end": {"line": 337, "character": 19}}, "detail": "not_found_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 339, "character": 0}, "end": {"line": 344, "character": 0}}, "selectionRange": {"start": {"line": 339, "character": 4}, "end": {"line": 339, "character": 5}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 339, "character": 0}, "end": {"line": 344, "character": 0}}, "selectionRange": {"start": {"line": 339, "character": 7}, "end": {"line": 339, "character": 11}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 351, "character": 0}, "end": {"line": 351, "character": 76}}, "selectionRange": {"start": {"line": 351, "character": 0}, "end": {"line": 351, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 353, "character": 0}, "end": {"line": 375, "character": 0}}, "selectionRange": {"start": {"line": 353, "character": 4}, "end": {"line": 353, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') complex_symbol_list = [] for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] ) for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 358, "character": 4}, "end": {"line": 358, "character": 74}}, "selectionRange": {"start": {"line": 358, "character": 4}, "end": {"line": 358, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "complex_symbol_list", "kind": 13, "range": {"start": {"line": 360, "character": 4}, "end": {"line": 360, "character": 28}}, "selectionRange": {"start": {"line": 360, "character": 4}, "end": {"line": 360, "character": 23}}, "detail": "complex_symbol_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 362, "character": 4}, "end": {"line": 365, "character": 0}}, "selectionRange": {"start": {"line": 362, "character": 8}, "end": {"line": 362, "character": 12}}, "detail": "for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] )", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 366, "character": 4}, "end": {"line": 375, "character": 0}}, "selectionRange": {"start": {"line": 366, "character": 8}, "end": {"line": 366, "character": 13}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 366, "character": 4}, "end": {"line": 375, "character": 0}}, "selectionRange": {"start": {"line": 366, "character": 15}, "end": {"line": 366, "character": 20}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene_exp_neighbor_map", "kind": 13, "range": {"start": {"line": 380, "character": 0}, "end": {"line": 380, "character": 26}}, "selectionRange": {"start": {"line": 380, "character": 0}, "end": {"line": 380, "character": 21}}, "detail": "gene_exp_neighbor_map = {}", "children": []}, {"name": "exp_matrix", "kind": 13, "range": {"start": {"line": 381, "character": 0}, "end": {"line": 381, "character": 26}}, "selectionRange": {"start": {"line": 381, "character": 0}, "end": {"line": 381, "character": 10}}, "detail": "exp_matrix = exp_df.values", "children": []}, {"name": "P", "kind": 13, "range": {"start": {"line": 383, "character": 0}, "end": {"line": 383, "character": 79}}, "selectionRange": {"start": {"line": 383, "character": 0}, "end": {"line": 383, "character": 1}}, "detail": "P = 1 - cdist(np.transpose(exp_matrix), np.transpose(exp_matrix),'correlation')", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 385, "character": 0}, "end": {"line": 399, "character": 0}}, "selectionRange": {"start": {"line": 385, "character": 4}, "end": {"line": 385, "character": 5}}, "detail": "for i in range(len(exp_gene_list)): gene1 = exp_gene_list[i] gene_exp_neighbor_map[gene1] = set() for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2) if gene1 not in gene_exp_neighbor_map[gene1]: print (gene1, 'not in itself?', P[i,i])", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 387, "character": 4}, "end": {"line": 387, "character": 28}}, "selectionRange": {"start": {"line": 387, "character": 4}, "end": {"line": 387, "character": 9}}, "detail": "gene1 = exp_gene_list[i]", "children": []}, {"name": "j", "kind": 13, "range": {"start": {"line": 390, "character": 4}, "end": {"line": 396, "character": 0}}, "selectionRange": {"start": {"line": 390, "character": 8}, "end": {"line": 390, "character": 9}}, "detail": "for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 392, "character": 8}, "end": {"line": 392, "character": 32}}, "selectionRange": {"start": {"line": 392, "character": 8}, "end": {"line": 392, "character": 13}}, "detail": "gene2 = exp_gene_list[j]", "children": []}, {"name": "drug_feature_list", "kind": 13, "range": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 22}}, "selectionRange": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 17}}, "detail": "drug_feature_list = []", "children": []}, {"name": "drug_neighbor_map", "kind": 13, "range": {"start": {"line": 408, "character": 0}, "end": {"line": 408, "character": 22}}, "selectionRange": {"start": {"line": 408, "character": 0}, "end": {"line": 408, "character": 17}}, "detail": "drug_neighbor_map = {}", "children": []}, {"name": "selected_drug_list", "kind": 13, "range": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 23}}, "selectionRange": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 18}}, "detail": "selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 411, "character": 0}, "end": {"line": 428, "character": 0}}, "selectionRange": {"start": {"line": 411, "character": 4}, "end": {"line": 411, "character": 8}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 411, "character": 0}, "end": {"line": 428, "character": 0}}, "selectionRange": {"start": {"line": 411, "character": 10}, "end": {"line": 411, "character": 21}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 414, "character": 8}, "end": {"line": 424, "character": 0}}, "selectionRange": {"start": {"line": 414, "character": 12}, "end": {"line": 414, "character": 16}}, "detail": "for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene]", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 442, "character": 0}, "end": {"line": 442, "character": 52}}, "selectionRange": {"start": {"line": 442, "character": 0}, "end": {"line": 442, "character": 5}}, "detail": "drugs = pd.read_csv(drug_cell_line_file,index_col=2)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 443, "character": 0}, "end": {"line": 443, "character": 93}}, "selectionRange": {"start": {"line": 443, "character": 0}, "end": {"line": 443, "character": 5}}, "detail": "drugs = drugs.drop([\"DATASET_VERSION\",\"IC50_RESULTS_ID\",\"MAX_CONC_MICROMOLAR\",\"RMSE\"],axis=1)", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 444, "character": 0}, "end": {"line": 444, "character": 49}}, "selectionRange": {"start": {"line": 444, "character": 0}, "end": {"line": 444, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 446, "character": 0}, "end": {"line": 446, "character": 28}}, "selectionRange": {"start": {"line": 446, "character": 0}, "end": {"line": 446, "character": 9}}, "detail": "drug_list = drugs[\"DRUG_ID\"]", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 447, "character": 0}, "end": {"line": 447, "character": 16}}, "selectionRange": {"start": {"line": 447, "character": 0}, "end": {"line": 447, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 457, "character": 0}, "end": {"line": 457, "character": 71}}, "selectionRange": {"start": {"line": 457, "character": 0}, "end": {"line": 457, "character": 10}}, "detail": "PDTC_drugs = pd.read_csv(PDTC_drug_cell_line_file,sep='\\t',index_col=0)", "children": []}, {"name": "PDTC_drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 458, "character": 0}, "end": {"line": 458, "character": 59}}, "selectionRange": {"start": {"line": 458, "character": 0}, "end": {"line": 458, "character": 25}}, "detail": "PDTC_drugs_cell_line_list = list(PDTC_drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 460, "character": 0}, "end": {"line": 460, "character": 39}}, "selectionRange": {"start": {"line": 460, "character": 0}, "end": {"line": 460, "character": 9}}, "detail": "drug_list = PDTC_drugs[\"Drug\"].tolist()", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 461, "character": 0}, "end": {"line": 461, "character": 16}}, "selectionRange": {"start": {"line": 461, "character": 0}, "end": {"line": 461, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 462, "character": 0}, "end": {"line": 467, "character": 0}}, "selectionRange": {"start": {"line": 462, "character": 4}, "end": {"line": 462, "character": 5}}, "detail": "for i in drug_list: if i in drug2id_mapping.keys(): new_drug_id.append(drug2id_mapping[i]) else: new_drug_id.append(0)", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 84}}, "selectionRange": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 10}}, "detail": "PDTC_drugs = PDTC_drugs.drop([\"Drug\",\"iC50\",\"D1_CONC\",\"D5_CONC\",\"perc.iC50\"],axis=1)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 477, "character": 0}, "end": {"line": 477, "character": 37}}, "selectionRange": {"start": {"line": 477, "character": 0}, "end": {"line": 477, "character": 5}}, "detail": "drugs = pd.concat([drugs,PDTC_drugs])", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 49}}, "selectionRange": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "cell_line_list", "kind": 13, "range": {"start": {"line": 490, "character": 0}, "end": {"line": 490, "character": 102}}, "selectionRange": {"start": {"line": 490, "character": 0}, "end": {"line": 490, "character": 14}}, "detail": "cell_line_list = list(set(drugs_cell_line_list)&set(exp_cell_line_list)&set(mutation_cell_line_list) )", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 497, "character": 0}, "end": {"line": 497, "character": 66}}, "selectionRange": {"start": {"line": 497, "character": 0}, "end": {"line": 497, "character": 16}}, "detail": "cell_line_legend = pd.read_csv(cell_line_detail_file, index_col=1)", "children": []}, {"name": "PDTC_cell_line", "kind": 13, "range": {"start": {"line": 498, "character": 0}, "end": {"line": 498, "character": 206}}, "selectionRange": {"start": {"line": 498, "character": 0}, "end": {"line": 498, "character": 14}}, "detail": "PDTC_cell_line = pd.DataFrame({'Line': [\"BRCA\"]*len(PDTC_exp_cell_line_list), 'Site':[\"PDTC\"]*len(PDTC_exp_cell_line_list),\"Histology\":[\"breast\"]*len(PDTC_exp_cell_line_list)},index=PDTC_exp_cell_line_list)", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 499, "character": 0}, "end": {"line": 499, "character": 63}}, "selectionRange": {"start": {"line": 499, "character": 0}, "end": {"line": 499, "character": 16}}, "detail": "cell_line_legend = pd.concat([cell_line_legend,PDTC_cell_line])", "children": []}, {"name": "tissue_map", "kind": 13, "range": {"start": {"line": 502, "character": 0}, "end": {"line": 502, "character": 15}}, "selectionRange": {"start": {"line": 502, "character": 0}, "end": {"line": 502, "character": 10}}, "detail": "tissue_map = {}", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 504, "character": 0}, "end": {"line": 512, "character": 0}}, "selectionRange": {"start": {"line": 504, "character": 4}, "end": {"line": 504, "character": 13}}, "detail": "for cell_line in cell_line_list: tissue = cell_line_legend.loc[cell_line,'Site'] if tissue not in tissue_map: tissue_map[tissue] = [] tissue_map[tissue].append(cell_line)", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 506, "character": 4}, "end": {"line": 506, "character": 51}}, "selectionRange": {"start": {"line": 506, "character": 4}, "end": {"line": 506, "character": 10}}, "detail": "tissue = cell_line_legend.loc[cell_line,'Site']", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 513, "character": 0}, "end": {"line": 513, "character": 23}}, "selectionRange": {"start": {"line": 513, "character": 0}, "end": {"line": 513, "character": 19}}, "detail": "large_tissue_number = 0", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 514, "character": 0}, "end": {"line": 520, "character": 0}}, "selectionRange": {"start": {"line": 514, "character": 4}, "end": {"line": 514, "character": 10}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 514, "character": 0}, "end": {"line": 520, "character": 0}}, "selectionRange": {"start": {"line": 514, "character": 12}, "end": {"line": 514, "character": 21}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 517, "character": 8}, "end": {"line": 517, "character": 32}}, "selectionRange": {"start": {"line": 517, "character": 8}, "end": {"line": 517, "character": 27}}, "detail": "large_tissue_number += 1", "children": []}, {"name": "new_exp_gene_list", "kind": 13, "range": {"start": {"line": 540, "character": 0}, "end": {"line": 540, "character": 22}}, "selectionRange": {"start": {"line": 540, "character": 0}, "end": {"line": 540, "character": 17}}, "detail": "new_exp_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 541, "character": 0}, "end": {"line": 544, "character": 0}}, "selectionRange": {"start": {"line": 541, "character": 4}, "end": {"line": 541, "character": 5}}, "detail": "for i in exp_gene_list: if i in valid_gene_list: new_exp_gene_list.append(i)", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 549, "character": 0}, "end": {"line": 549, "character": 41}}, "selectionRange": {"start": {"line": 549, "character": 0}, "end": {"line": 549, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 550, "character": 0}, "end": {"line": 550, "character": 38}}, "selectionRange": {"start": {"line": 550, "character": 0}, "end": {"line": 550, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 551, "character": 0}, "end": {"line": 551, "character": 72}}, "selectionRange": {"start": {"line": 551, "character": 0}, "end": {"line": 551, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 553, "character": 0}, "end": {"line": 553, "character": 43}}, "selectionRange": {"start": {"line": 553, "character": 0}, "end": {"line": 553, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 554, "character": 0}, "end": {"line": 554, "character": 68}}, "selectionRange": {"start": {"line": 554, "character": 0}, "end": {"line": 554, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 561, "character": 0}, "end": {"line": 561, "character": 58}}, "selectionRange": {"start": {"line": 561, "character": 0}, "end": {"line": 561, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 562, "character": 0}, "end": {"line": 562, "character": 68}}, "selectionRange": {"start": {"line": 562, "character": 0}, "end": {"line": 562, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "new_data_file", "kind": 13, "range": {"start": {"line": 571, "character": 0}, "end": {"line": 571, "character": 18}}, "selectionRange": {"start": {"line": 571, "character": 0}, "end": {"line": 571, "character": 13}}, "detail": "new_data_file = ''", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 41}}, "selectionRange": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 38}}, "selectionRange": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 72}}, "selectionRange": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 43}}, "selectionRange": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 68}}, "selectionRange": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 58}}, "selectionRange": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 68}}, "selectionRange": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "rename_selected_drug_list", "kind": 13, "range": {"start": {"line": 592, "character": 0}, "end": {"line": 592, "character": 30}}, "selectionRange": {"start": {"line": 592, "character": 0}, "end": {"line": 592, "character": 25}}, "detail": "rename_selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 594, "character": 0}, "end": {"line": 664, "character": 0}}, "selectionRange": {"start": {"line": 594, "character": 4}, "end": {"line": 594, "character": 8}}, "detail": "for drug in selected_drug_list: print(drug) if drug not in drug2id_mapping: print('drug name wrong', drug) else: cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]] feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) ) feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) ) print(len(feature_exp_gene_list) + len(feature_mut_gene_list)) if len(feature_exp_gene_list) + len(feature_mut_gene_list) == 0: continue feature_description = [] drug_tissue_map = {} drug = drug.replace(' ','_') rename_selected_drug_list.append(drug) if drug == 'Nutlin-3a_(-)': drug = 'Nutlin-3a' drug_folder = '/data/merged/drug_feature/' + drug + '/' if not os.path.exists(drug_folder): os.makedirs(drug_folder) for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description)) file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\") pickle.dump(drug_tissue_map,file_handle) file_handle.close()", "children": []}, {"name": "cell_line_drug_matrix", "kind": 13, "range": {"start": {"line": 602, "character": 8}, "end": {"line": 602, "character": 84}}, "selectionRange": {"start": {"line": 602, "character": 8}, "end": {"line": 602, "character": 29}}, "detail": "cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]]", "children": []}, {"name": "feature_exp_gene_list", "kind": 13, "range": {"start": {"line": 607, "character": 8}, "end": {"line": 607, "character": 98}}, "selectionRange": {"start": {"line": 607, "character": 8}, "end": {"line": 607, "character": 29}}, "detail": "feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) )", "children": []}, {"name": "feature_mut_gene_list", "kind": 13, "range": {"start": {"line": 608, "character": 8}, "end": {"line": 608, "character": 98}}, "selectionRange": {"start": {"line": 608, "character": 8}, "end": {"line": 608, "character": 29}}, "detail": "feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) )", "children": []}, {"name": "feature_description", "kind": 13, "range": {"start": {"line": 612, "character": 8}, "end": {"line": 612, "character": 32}}, "selectionRange": {"start": {"line": 612, "character": 8}, "end": {"line": 612, "character": 27}}, "detail": "feature_description = []", "children": []}, {"name": "drug_tissue_map", "kind": 13, "range": {"start": {"line": 614, "character": 8}, "end": {"line": 614, "character": 28}}, "selectionRange": {"start": {"line": 614, "character": 8}, "end": {"line": 614, "character": 23}}, "detail": "drug_tissue_map = {}", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 616, "character": 8}, "end": {"line": 616, "character": 36}}, "selectionRange": {"start": {"line": 616, "character": 8}, "end": {"line": 616, "character": 12}}, "detail": "drug = drug.replace(' ','_')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 622, "character": 12}, "end": {"line": 622, "character": 30}}, "selectionRange": {"start": {"line": 622, "character": 12}, "end": {"line": 622, "character": 16}}, "detail": "drug = 'Nutlin-3a'", "children": []}, {"name": "drug_folder", "kind": 13, "range": {"start": {"line": 624, "character": 8}, "end": {"line": 624, "character": 63}}, "selectionRange": {"start": {"line": 624, "character": 8}, "end": {"line": 624, "character": 19}}, "detail": "drug_folder = '/data/merged/drug_feature/' + drug + '/'", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 630, "character": 8}, "end": {"line": 660, "character": 0}}, "selectionRange": {"start": {"line": 630, "character": 12}, "end": {"line": 630, "character": 18}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "tissue_cell_line_list", "kind": 13, "range": {"start": {"line": 630, "character": 8}, "end": {"line": 660, "character": 0}}, "selectionRange": {"start": {"line": 630, "character": 20}, "end": {"line": 630, "character": 41}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 633, "character": 12}, "end": {"line": 633, "character": 103}}, "selectionRange": {"start": {"line": 633, "character": 12}, "end": {"line": 633, "character": 35}}, "detail": "drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list )", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 634, "character": 12}, "end": {"line": 634, "character": 67}}, "selectionRange": {"start": {"line": 634, "character": 12}, "end": {"line": 634, "character": 35}}, "detail": "drug_specific_cell_line = list(drug_specific_cell_line)", "children": []}, {"name": "feature_list", "kind": 13, "range": {"start": {"line": 637, "character": 12}, "end": {"line": 637, "character": 29}}, "selectionRange": {"start": {"line": 637, "character": 12}, "end": {"line": 637, "character": 24}}, "detail": "feature_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 641, "character": 16}, "end": {"line": 643, "character": 0}}, "selectionRange": {"start": {"line": 641, "character": 20}, "end": {"line": 641, "character": 24}}, "detail": "for gene in feature_exp_gene_list: feature_description.append(gene+'_expression')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 646, "character": 16}, "end": {"line": 648, "character": 0}}, "selectionRange": {"start": {"line": 646, "character": 20}, "end": {"line": 646, "character": 24}}, "detail": "for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation')", "children": []}, {"name": "feature", "kind": 13, "range": {"start": {"line": 649, "character": 12}, "end": {"line": 649, "character": 58}}, "selectionRange": {"start": {"line": 649, "character": 12}, "end": {"line": 649, "character": 19}}, "detail": "feature = np.concatenate(feature_list, axis=1)", "children": []}, {"name": "label", "kind": 13, "range": {"start": {"line": 651, "character": 12}, "end": {"line": 651, "character": 88}}, "selectionRange": {"start": {"line": 651, "character": 12}, "end": {"line": 651, "character": 17}}, "detail": "label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 661, "character": 8}, "end": {"line": 661, "character": 84}}, "selectionRange": {"start": {"line": 661, "character": 8}, "end": {"line": 661, "character": 19}}, "detail": "file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\")", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 665, "character": 0}, "end": {"line": 665, "character": 52}}, "selectionRange": {"start": {"line": 665, "character": 0}, "end": {"line": 665, "character": 11}}, "detail": "file_handle = open('rename_selected_drug_list', 'w')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 666, "character": 0}, "end": {"line": 668, "character": 0}}, "selectionRange": {"start": {"line": 666, "character": 4}, "end": {"line": 666, "character": 8}}, "detail": "for drug in rename_selected_drug_list: file_handle.writelines(drug+ '\\n')", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 686, "character": 0}, "end": {"line": 686, "character": 13}}, "selectionRange": {"start": {"line": 686, "character": 7}, "end": {"line": 686, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cell_line_loc", "kind": 13, "range": {"start": {"line": 692, "character": 0}, "end": {"line": 692, "character": 84}}, "selectionRange": {"start": {"line": 692, "character": 0}, "end": {"line": 692, "character": 13}}, "detail": "cell_line_loc = '/cellar/users/samsonfong/Projects/tcrp-v2/from-ma/cell_line_lists/'", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 698, "character": 0}, "end": {"line": 700, "character": 0}}, "selectionRange": {"start": {"line": 698, "character": 53}, "end": {"line": 698, "character": 54}}, "detail": "with open('/data/drug_feature/KU-55933/KU', 'rb') as f: tmap= pickle.load(f)", "children": []}, {"name": "tmap", "kind": 13, "range": {"start": {"line": 699, "character": 4}, "end": {"line": 699, "character": 24}}, "selectionRange": {"start": {"line": 699, "character": 4}, "end": {"line": 699, "character": 8}}, "detail": "tmap= pickle.load(f)", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 717, "character": 0}, "end": {"line": 717, "character": 68}}, "selectionRange": {"start": {"line": 717, "character": 0}, "end": {"line": 717, "character": 1}}, "detail": "f = np.load('/data/drug_feature/KU-55933/lung_KU-55933_feature.npy')", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 7, "result": [{"title": "Inline variable", "kind": "refactor.inline", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///root/capsule/code/process_merged.py", "version": 1}, "edits": [{"range": {"start": {"line": 228, "character": 12}, "end": {"line": 229, "character": 12}}, "newText": ""}, {"range": {"start": {"line": 244, "character": 8}, "end": {"line": 244, "character": 23}}, "newText": "({})"}, {"range": {"start": {"line": 246, "character": 12}, "end": {"line": 246, "character": 27}}, "newText": "({})"}, {"range": {"start": {"line": 251, "character": 16}, "end": {"line": 251, "character": 31}}, "newText": "({})"}, {"range": {"start": {"line": 411, "character": 25}, "end": {"line": 411, "character": 40}}, "newText": "({})"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 8, "result": {"contents": {"kind": "markdown", "value": "```python\ndef read_csv(filepath_or_buffer: FilePathOrBuffer, sep=lib.no_default, delimiter=None, header=\"infer\", names=lib.no_default, index_col=None, usecols=None, squeeze=False, prefix=lib.no_default, mangle_dupe_cols=True, dtype: DtypeArg | None=None, engine=None, converters=None, true_values=None, false_values=None, skipinitialspace=False, skiprows=None, skipfooter=0, nrows=None, na_values=None, keep_default_na=True, na_filter=True, verbose=False, skip_blank_lines=True, parse_dates=False, infer_datetime_format=False, keep_date_col=False, date_parser=None, dayfirst=False, cache_dates=True, iterator=False, chunksize=None, compression=\"infer\", thousands=None, decimal: str=\".\", lineterminator=None, quotechar='\"', quoting=csv.QUOTE_MINIMAL, doublequote=True, escapechar=None, comment=None, encoding=None, encoding_errors: str | None=\"strict\", dialect=None, error_bad_lines=None, warn_bad_lines=None, on_bad_lines=None, delim_whitespace=False, low_memory=_c_parser_defaults[\"low_memory\"], memory_map=False, float_precision=None, storage_options: StorageOptions=None)\n```\n---\n**Full name:** `pandas.io.parsers.readers.read_csv`"}, "range": {"start": {"line": 261, "character": 18}, "end": {"line": 261, "character": 26}}}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 9, "result": {"contents": {"kind": "markdown", "value": "```python\ndrug_target_map[drug] = []\n```\n---\n**Full name:** `code.process_merged.drug_target_map`"}, "range": {"start": {"line": 251, "character": 16}, "end": {"line": 251, "character": 31}}}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 10, "result": [{"name": "matplotlib", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 17}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 17}}, "detail": "module matplotlib", "children": []}, {"name": "os", "kind": 2, "range": {"start": {"line": 10, "character": 0}, "end": {"line": 10, "character": 9}}, "selectionRange": {"start": {"line": 10, "character": 7}, "end": {"line": 10, "character": 9}}, "detail": "module os", "children": []}, {"name": "pd", "kind": 2, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 11, "character": 19}}, "selectionRange": {"start": {"line": 11, "character": 17}, "end": {"line": 11, "character": 19}}, "detail": "module pd", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 12, "character": 0}, "end": {"line": 12, "character": 18}}, "selectionRange": {"start": {"line": 12, "character": 16}, "end": {"line": 12, "character": 18}}, "detail": "module np", "children": []}, {"name": "sys", "kind": 2, "range": {"start": {"line": 13, "character": 0}, "end": {"line": 13, "character": 10}}, "selectionRange": {"start": {"line": 13, "character": 7}, "end": {"line": 13, "character": 10}}, "detail": "module sys", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 14, "character": 0}, "end": {"line": 14, "character": 13}}, "selectionRange": {"start": {"line": 14, "character": 7}, "end": {"line": 14, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cdist", "kind": 12, "range": {"start": {"line": 15, "character": 0}, "end": {"line": 15, "character": 40}}, "selectionRange": {"start": {"line": 15, "character": 35}, "end": {"line": 15, "character": 40}}, "detail": "def cdist", "children": []}, {"name": "math", "kind": 2, "range": {"start": {"line": 16, "character": 0}, "end": {"line": 16, "character": 11}}, "selectionRange": {"start": {"line": 16, "character": 7}, "end": {"line": 16, "character": 11}}, "detail": "module math", "children": []}, {"name": "nx", "kind": 2, "range": {"start": {"line": 17, "character": 0}, "end": {"line": 17, "character": 21}}, "selectionRange": {"start": {"line": 17, "character": 19}, "end": {"line": 17, "character": 21}}, "detail": "module nx", "children": []}, {"name": "nxacc", "kind": 2, "range": {"start": {"line": 18, "character": 0}, "end": {"line": 18, "character": 56}}, "selectionRange": {"start": {"line": 18, "character": 51}, "end": {"line": 18, "character": 56}}, "detail": "module nxacc", "children": []}, {"name": "nxadag", "kind": 2, "range": {"start": {"line": 19, "character": 0}, "end": {"line": 19, "character": 40}}, "selectionRange": {"start": {"line": 19, "character": 34}, "end": {"line": 19, "character": 40}}, "detail": "module nxadag", "children": []}, {"name": "plt", "kind": 2, "range": {"start": {"line": 20, "character": 0}, "end": {"line": 20, "character": 31}}, "selectionRange": {"start": {"line": 20, "character": 28}, "end": {"line": 20, "character": 31}}, "detail": "module plt", "children": []}, {"name": "sns", "kind": 2, "range": {"start": {"line": 21, "character": 0}, "end": {"line": 21, "character": 21}}, "selectionRange": {"start": {"line": 21, "character": 18}, "end": {"line": 21, "character": 21}}, "detail": "module sns", "children": []}, {"name": "itertools", "kind": 2, "range": {"start": {"line": 22, "character": 0}, "end": {"line": 22, "character": 16}}, "selectionRange": {"start": {"line": 22, "character": 7}, "end": {"line": 22, "character": 16}}, "detail": "module itertools", "children": []}, {"name": "mygene", "kind": 2, "range": {"start": {"line": 23, "character": 0}, "end": {"line": 23, "character": 13}}, "selectionRange": {"start": {"line": 23, "character": 7}, "end": {"line": 23, "character": 13}}, "detail": "module mygene", "children": []}, {"name": "re", "kind": 2, "range": {"start": {"line": 24, "character": 0}, "end": {"line": 24, "character": 9}}, "selectionRange": {"start": {"line": 24, "character": 7}, "end": {"line": 24, "character": 9}}, "detail": "module re", "children": []}, {"name": "selected_exp_gene_list", "kind": 13, "range": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 95}}, "selectionRange": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 22}}, "detail": "selected_exp_gene_list = pd.read_csv(\"/data/common_exp_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "selected_mut_gene_list", "kind": 13, "range": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 95}}, "selectionRange": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 22}}, "detail": "selected_mut_gene_list = pd.read_csv(\"/data/common_mut_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "load_network", "kind": 12, "range": {"start": {"line": 37, "character": 0}, "end": {"line": 65, "character": 28}}, "selectionRange": {"start": {"line": 37, "character": 4}, "end": {"line": 37, "character": 16}}, "detail": "def load_network", "children": []}, {"name": "load_name_space", "kind": 12, "range": {"start": {"line": 67, "character": 0}, "end": {"line": 79, "character": 21}}, "selectionRange": {"start": {"line": 67, "character": 4}, "end": {"line": 67, "character": 19}}, "detail": "def load_name_space", "children": []}, {"name": "list2index", "kind": 12, "range": {"start": {"line": 81, "character": 0}, "end": {"line": 88, "character": 41}}, "selectionRange": {"start": {"line": 81, "character": 4}, "end": {"line": 81, "character": 14}}, "detail": "def list2index", "children": []}, {"name": "PDTC_data_file", "kind": 13, "range": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 30}}, "selectionRange": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 14}}, "detail": "PDTC_data_file = '/data/PTDC/'", "children": []}, {"name": "PDTC_exp_data_file", "kind": 13, "range": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 60}}, "selectionRange": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 18}}, "detail": "PDTC_exp_data_file = PDTC_data_file + 'ExpressionModels.tsv'", "children": []}, {"name": "PDTC_drug_cell_line_file", "kind": 13, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 72}}, "selectionRange": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 24}}, "detail": "PDTC_drug_cell_line_file = PDTC_data_file + 'DrugResponsesAUCModels.tsv'", "children": []}, {"name": "PDTC_mutation_data_file", "kind": 13, "range": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 59}}, "selectionRange": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 23}}, "detail": "PDTC_mutation_data_file = PDTC_data_file + 'SNVsModels.tsv'", "children": []}, {"name": "PDTC_drug_target_file", "kind": 13, "range": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 56}}, "selectionRange": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 21}}, "detail": "PDTC_drug_target_file ='/data/GDSC/drug_target_list.csv'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 37}}, "selectionRange": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 46}}, "selectionRange": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "data_file", "kind": 13, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 25}}, "selectionRange": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 9}}, "detail": "data_file = '/data/GDSC/'", "children": []}, {"name": "new_network_file", "kind": 13, "range": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 27}}, "selectionRange": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 16}}, "detail": "new_network_file = '/data/'", "children": []}, {"name": "exp_data_file", "kind": 13, "range": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 61}}, "selectionRange": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 13}}, "detail": "exp_data_file = data_file + 'Cell_line_RMA_proc_basalExp.txt'", "children": []}, {"name": "drug_cell_line_file", "kind": 13, "range": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 64}}, "selectionRange": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 19}}, "detail": "drug_cell_line_file = data_file + 'v17_fitted_dose_response.csv'", "children": []}, {"name": "cell_line_detail_file", "kind": 13, "range": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 60}}, "selectionRange": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 21}}, "detail": "cell_line_detail_file = data_file + 'Cell_Lines_Details.csv'", "children": []}, {"name": "mutation_data_file", "kind": 13, "range": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 51}}, "selectionRange": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 18}}, "detail": "mutation_data_file = data_file + 'WES_variants.csv'", "children": []}, {"name": "drug_target_file", "kind": 13, "range": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 51}}, "selectionRange": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 16}}, "detail": "drug_target_file ='/data/GDSC/drug_target_list.csv'", "children": []}, {"name": "feature_folder", "kind": 13, "range": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 27}}, "selectionRange": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 14}}, "detail": "feature_folder = 'feature/'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 37}}, "selectionRange": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 46}}, "selectionRange": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 58}}, "selectionRange": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 6}}, "detail": "exp_df = pd.read_csv(exp_data_file, sep='\\t', index_col=0)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 21}}, "selectionRange": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 6}}, "detail": "exp_df = exp_df.T[1:]", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 56}}, "selectionRange": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 6}}, "detail": "exp_df = exp_df.rename(columns={np.nan: 'NO_GENE_NAME'})", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 43}}, "selectionRange": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 6}}, "detail": "exp_df = exp_df.drop('NO_GENE_NAME',axis=1)", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 138, "character": 0}, "end": {"line": 140, "character": 26}}, "selectionRange": {"start": {"line": 138, "character": 4}, "end": {"line": 138, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 142, "character": 0}, "end": {"line": 142, "character": 44}}, "selectionRange": {"start": {"line": 142, "character": 7}, "end": {"line": 142, "character": 12}}, "detail": "exp_df.index = exp_df.index.map(stripNumber)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 40}}, "selectionRange": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 6}}, "detail": "exp_df = exp_df.groupby(level=0).first()", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 39}}, "selectionRange": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 6}}, "detail": "exp_df = exp_df[selected_exp_gene_list]", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 36}}, "selectionRange": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 48}}, "selectionRange": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 78}}, "selectionRange": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 11}}, "detail": "PDTC_exp_df = pd.read_csv(PDTC_exp_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 31}}, "selectionRange": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df.T[1:]", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 160, "character": 0}, "end": {"line": 162, "character": 26}}, "selectionRange": {"start": {"line": 160, "character": 4}, "end": {"line": 160, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 49}}, "selectionRange": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df[selected_exp_gene_list]", "children": []}, {"name": "PDTC_exp_gene_list", "kind": 13, "range": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 46}}, "selectionRange": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 18}}, "detail": "PDTC_exp_gene_list = list(PDTC_exp_df.columns)", "children": []}, {"name": "PDTC_exp_cell_line_list", "kind": 13, "range": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 58}}, "selectionRange": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 23}}, "detail": "PDTC_exp_cell_line_list = list(PDTC_exp_df.index.unique())", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 40}}, "selectionRange": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 6}}, "detail": "exp_df = pd.concat([exp_df,PDTC_exp_df])", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 36}}, "selectionRange": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 48}}, "selectionRange": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "maf", "kind": 13, "range": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 69}}, "selectionRange": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 3}}, "detail": "maf = pd.read_csv(mutation_data_file, sep=',', index_col=0).fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 75}}, "selectionRange": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 11}}, "detail": "mutation_df = maf.groupby(['COSMIC_ID', 'Gene']).size().unstack().fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 49}}, "selectionRange": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 11}}, "detail": "mutation_df = mutation_df[selected_mut_gene_list]", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 46}}, "selectionRange": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 58}}, "selectionRange": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "PDTC_maf", "kind": 13, "range": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 80}}, "selectionRange": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 8}}, "detail": "PDTC_maf = pd.read_csv(PDTC_mutation_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 61}}, "selectionRange": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_maf.replace(to_replace=\"NO\",value=0.0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 82}}, "selectionRange": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_mutation_df.replace(to_replace=\"chr*\",value=1.0,regex=True)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 47}}, "selectionRange": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df.transpose()", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 59}}, "selectionRange": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df[selected_mut_gene_list]", "children": []}, {"name": "PDTC_mutation_gene_list", "kind": 13, "range": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 56}}, "selectionRange": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 23}}, "detail": "PDTC_mutation_gene_list = list(PDTC_mutation_df.columns)", "children": []}, {"name": "PDTC_mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 68}}, "selectionRange": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 28}}, "detail": "PDTC_mutation_cell_line_list = list(PDTC_mutation_df.index.unique())", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 55}}, "selectionRange": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 11}}, "detail": "mutation_df = pd.concat([mutation_df,PDTC_mutation_df])", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 46}}, "selectionRange": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 58}}, "selectionRange": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 36}}, "selectionRange": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 11}}, "detail": "file_handle = open(drug_target_file)", "children": []}, {"name": "drug_target_map", "kind": 13, "range": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 20}}, "selectionRange": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 15}}, "detail": "drug_target_map = {}", "children": []}, {"name": "drug_target_list", "kind": 13, "range": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 21}}, "selectionRange": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 16}}, "detail": "drug_target_list = []", "children": []}, {"name": "line", "kind": 13, "range": {"start": {"line": 230, "character": 0}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 230, "character": 4}, "end": {"line": 230, "character": 8}}, "detail": "for line in file_handle: new_line = line.rstrip().split(\",\") drug = new_line[0] target_list=new_line[1].split(',') if drug != \"Drug\": target_list_str = \"\" for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\" drug = drug.strip() drug_target_map[drug] = [] if ',' not in target_list_str: drug_target_map[drug].append(target_list_str.strip()) drug_target_list.append(target_list_str.strip()) else: target_list = target_list_str.split(',') for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "new_line", "kind": 13, "range": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 39}}, "selectionRange": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 12}}, "detail": "new_line = line.rstrip().split(\",\")", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 22}}, "selectionRange": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 8}}, "detail": "drug = new_line[0]", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 38}}, "selectionRange": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 15}}, "detail": "target_list=new_line[1].split(',')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 28}}, "selectionRange": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 23}}, "detail": "target_list_str = \"\"", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 237, "character": 8}, "end": {"line": 242, "character": 0}}, "selectionRange": {"start": {"line": 237, "character": 12}, "end": {"line": 237, "character": 13}}, "detail": "for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 65}}, "selectionRange": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 71}}, "selectionRange": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 27}}, "selectionRange": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 12}}, "detail": "drug = drug.strip()", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 52}}, "selectionRange": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 23}}, "detail": "target_list = target_list_str.split(',')", "children": []}, {"name": "target", "kind": 13, "range": {"start": {"line": 250, "character": 12}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 250, "character": 16}, "end": {"line": 250, "character": 22}}, "detail": "for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "drugs_legend", "kind": 13, "range": {"start": {"line": 261, "character": 0}, "end": {"line": 261, "character": 85}}, "selectionRange": {"start": {"line": 261, "character": 0}, "end": {"line": 261, "character": 12}}, "detail": "drugs_legend = pd.read_csv('/data/GDSC/Screened_Compounds.csv', sep=',', index_col=0)", "children": []}, {"name": "drug2id_mapping", "kind": 13, "range": {"start": {"line": 263, "character": 0}, "end": {"line": 263, "character": 20}}, "selectionRange": {"start": {"line": 263, "character": 0}, "end": {"line": 263, "character": 15}}, "detail": "drug2id_mapping = {}", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 265, "character": 0}, "end": {"line": 268, "character": 0}}, "selectionRange": {"start": {"line": 265, "character": 4}, "end": {"line": 265, "character": 9}}, "detail": "for index in list(drugs_legend.index) : drug_name = drugs_legend.loc[index,'Drug Name'] drug2id_mapping[ drug_name ] = index", "children": []}, {"name": "drug_name", "kind": 13, "range": {"start": {"line": 266, "character": 4}, "end": {"line": 266, "character": 51}}, "selectionRange": {"start": {"line": 266, "character": 4}, "end": {"line": 266, "character": 13}}, "detail": "drug_name = drugs_legend.loc[index,'Drug Name']", "children": []}, {"name": "valid_gene_list", "kind": 13, "range": {"start": {"line": 273, "character": 0}, "end": {"line": 273, "character": 92}}, "selectionRange": {"start": {"line": 273, "character": 0}, "end": {"line": 273, "character": 15}}, "detail": "valid_gene_list = list(set(drug_target_list) | set(exp_gene_list) | set(mutation_gene_list))", "children": []}, {"name": "network_list", "kind": 13, "range": {"start": {"line": 279, "character": 0}, "end": {"line": 279, "character": 82}}, "selectionRange": {"start": {"line": 279, "character": 0}, "end": {"line": 279, "character": 12}}, "detail": "network_list = [new_network_file+inbiomap_file, new_network_file+pathwaycomm_file]", "children": []}, {"name": "gene_neighbor_map", "kind": 13, "range": {"start": {"line": 280, "character": 0}, "end": {"line": 280, "character": 64}}, "selectionRange": {"start": {"line": 280, "character": 0}, "end": {"line": 280, "character": 17}}, "detail": "gene_neighbor_map = load_network(network_list, valid_gene_list)", "children": []}, {"name": "gene_name_df", "kind": 13, "range": {"start": {"line": 286, "character": 0}, "end": {"line": 286, "character": 89}}, "selectionRange": {"start": {"line": 286, "character": 0}, "end": {"line": 286, "character": 12}}, "detail": "gene_name_df = pd.read_table('/data/HUGO_protein-coding_gene.tsv',index_col=25, sep='\\t')", "children": []}, {"name": "gene_name_map", "kind": 13, "range": {"start": {"line": 292, "character": 0}, "end": {"line": 292, "character": 18}}, "selectionRange": {"start": {"line": 292, "character": 0}, "end": {"line": 292, "character": 13}}, "detail": "gene_name_map = {}", "children": []}, {"name": "uniprot_gene", "kind": 13, "range": {"start": {"line": 294, "character": 0}, "end": {"line": 303, "character": 0}}, "selectionRange": {"start": {"line": 294, "character": 4}, "end": {"line": 294, "character": 16}}, "detail": "for uniprot_gene in gene_name_df.index: if isinstance(uniprot_gene, type('aaa')) == False: continue if isinstance(gene_name_df.loc[uniprot_gene, 'symbol'], type('aaa')) == False: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol'][0] else: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 308, "character": 0}, "end": {"line": 308, "character": 76}}, "selectionRange": {"start": {"line": 308, "character": 0}, "end": {"line": 308, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "uniprot_gene_set", "kind": 13, "range": {"start": {"line": 310, "character": 0}, "end": {"line": 310, "character": 24}}, "selectionRange": {"start": {"line": 310, "character": 0}, "end": {"line": 310, "character": 16}}, "detail": "uniprot_gene_set = set()", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 312, "character": 0}, "end": {"line": 321, "character": 0}}, "selectionRange": {"start": {"line": 312, "character": 4}, "end": {"line": 312, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 317, "character": 4}, "end": {"line": 317, "character": 74}}, "selectionRange": {"start": {"line": 317, "character": 4}, "end": {"line": 317, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 319, "character": 4}, "end": {"line": 321, "character": 0}}, "selectionRange": {"start": {"line": 319, "character": 8}, "end": {"line": 319, "character": 12}}, "detail": "for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "query_gene_set", "kind": 13, "range": {"start": {"line": 324, "character": 0}, "end": {"line": 324, "character": 19}}, "selectionRange": {"start": {"line": 324, "character": 0}, "end": {"line": 324, "character": 14}}, "detail": "query_gene_set = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 326, "character": 0}, "end": {"line": 329, "character": 0}}, "selectionRange": {"start": {"line": 326, "character": 4}, "end": {"line": 326, "character": 8}}, "detail": "for gene in uniprot_gene_set: if gene not in gene_name_map: query_gene_set.append(gene)", "children": []}, {"name": "query_gene_list", "kind": 13, "range": {"start": {"line": 332, "character": 0}, "end": {"line": 332, "character": 38}}, "selectionRange": {"start": {"line": 332, "character": 0}, "end": {"line": 332, "character": 15}}, "detail": "query_gene_list = list(query_gene_set)", "children": []}, {"name": "mg", "kind": 13, "range": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 24}}, "selectionRange": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 2}}, "detail": "mg = mygene.MyGeneInfo()", "children": []}, {"name": "out", "kind": 13, "range": {"start": {"line": 335, "character": 0}, "end": {"line": 335, "character": 87}}, "selectionRange": {"start": {"line": 335, "character": 0}, "end": {"line": 335, "character": 3}}, "detail": "out = mg.querymany(query_gene_list, scopes='uniprot', fields='symbol', species='human')", "children": []}, {"name": "not_found_gene_list", "kind": 13, "range": {"start": {"line": 337, "character": 0}, "end": {"line": 337, "character": 24}}, "selectionRange": {"start": {"line": 337, "character": 0}, "end": {"line": 337, "character": 19}}, "detail": "not_found_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 339, "character": 0}, "end": {"line": 344, "character": 0}}, "selectionRange": {"start": {"line": 339, "character": 4}, "end": {"line": 339, "character": 5}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 339, "character": 0}, "end": {"line": 344, "character": 0}}, "selectionRange": {"start": {"line": 339, "character": 7}, "end": {"line": 339, "character": 11}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 351, "character": 0}, "end": {"line": 351, "character": 76}}, "selectionRange": {"start": {"line": 351, "character": 0}, "end": {"line": 351, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 353, "character": 0}, "end": {"line": 375, "character": 0}}, "selectionRange": {"start": {"line": 353, "character": 4}, "end": {"line": 353, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') complex_symbol_list = [] for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] ) for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 358, "character": 4}, "end": {"line": 358, "character": 74}}, "selectionRange": {"start": {"line": 358, "character": 4}, "end": {"line": 358, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "complex_symbol_list", "kind": 13, "range": {"start": {"line": 360, "character": 4}, "end": {"line": 360, "character": 28}}, "selectionRange": {"start": {"line": 360, "character": 4}, "end": {"line": 360, "character": 23}}, "detail": "complex_symbol_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 362, "character": 4}, "end": {"line": 365, "character": 0}}, "selectionRange": {"start": {"line": 362, "character": 8}, "end": {"line": 362, "character": 12}}, "detail": "for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] )", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 366, "character": 4}, "end": {"line": 375, "character": 0}}, "selectionRange": {"start": {"line": 366, "character": 8}, "end": {"line": 366, "character": 13}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 366, "character": 4}, "end": {"line": 375, "character": 0}}, "selectionRange": {"start": {"line": 366, "character": 15}, "end": {"line": 366, "character": 20}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene_exp_neighbor_map", "kind": 13, "range": {"start": {"line": 380, "character": 0}, "end": {"line": 380, "character": 26}}, "selectionRange": {"start": {"line": 380, "character": 0}, "end": {"line": 380, "character": 21}}, "detail": "gene_exp_neighbor_map = {}", "children": []}, {"name": "exp_matrix", "kind": 13, "range": {"start": {"line": 381, "character": 0}, "end": {"line": 381, "character": 26}}, "selectionRange": {"start": {"line": 381, "character": 0}, "end": {"line": 381, "character": 10}}, "detail": "exp_matrix = exp_df.values", "children": []}, {"name": "P", "kind": 13, "range": {"start": {"line": 383, "character": 0}, "end": {"line": 383, "character": 79}}, "selectionRange": {"start": {"line": 383, "character": 0}, "end": {"line": 383, "character": 1}}, "detail": "P = 1 - cdist(np.transpose(exp_matrix), np.transpose(exp_matrix),'correlation')", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 385, "character": 0}, "end": {"line": 399, "character": 0}}, "selectionRange": {"start": {"line": 385, "character": 4}, "end": {"line": 385, "character": 5}}, "detail": "for i in range(len(exp_gene_list)): gene1 = exp_gene_list[i] gene_exp_neighbor_map[gene1] = set() for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2) if gene1 not in gene_exp_neighbor_map[gene1]: print (gene1, 'not in itself?', P[i,i])", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 387, "character": 4}, "end": {"line": 387, "character": 28}}, "selectionRange": {"start": {"line": 387, "character": 4}, "end": {"line": 387, "character": 9}}, "detail": "gene1 = exp_gene_list[i]", "children": []}, {"name": "j", "kind": 13, "range": {"start": {"line": 390, "character": 4}, "end": {"line": 396, "character": 0}}, "selectionRange": {"start": {"line": 390, "character": 8}, "end": {"line": 390, "character": 9}}, "detail": "for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 392, "character": 8}, "end": {"line": 392, "character": 32}}, "selectionRange": {"start": {"line": 392, "character": 8}, "end": {"line": 392, "character": 13}}, "detail": "gene2 = exp_gene_list[j]", "children": []}, {"name": "drug_feature_list", "kind": 13, "range": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 22}}, "selectionRange": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 17}}, "detail": "drug_feature_list = []", "children": []}, {"name": "drug_neighbor_map", "kind": 13, "range": {"start": {"line": 408, "character": 0}, "end": {"line": 408, "character": 22}}, "selectionRange": {"start": {"line": 408, "character": 0}, "end": {"line": 408, "character": 17}}, "detail": "drug_neighbor_map = {}", "children": []}, {"name": "selected_drug_list", "kind": 13, "range": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 23}}, "selectionRange": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 18}}, "detail": "selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 411, "character": 0}, "end": {"line": 428, "character": 0}}, "selectionRange": {"start": {"line": 411, "character": 4}, "end": {"line": 411, "character": 8}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 411, "character": 0}, "end": {"line": 428, "character": 0}}, "selectionRange": {"start": {"line": 411, "character": 10}, "end": {"line": 411, "character": 21}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 414, "character": 8}, "end": {"line": 424, "character": 0}}, "selectionRange": {"start": {"line": 414, "character": 12}, "end": {"line": 414, "character": 16}}, "detail": "for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene]", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 442, "character": 0}, "end": {"line": 442, "character": 52}}, "selectionRange": {"start": {"line": 442, "character": 0}, "end": {"line": 442, "character": 5}}, "detail": "drugs = pd.read_csv(drug_cell_line_file,index_col=2)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 443, "character": 0}, "end": {"line": 443, "character": 93}}, "selectionRange": {"start": {"line": 443, "character": 0}, "end": {"line": 443, "character": 5}}, "detail": "drugs = drugs.drop([\"DATASET_VERSION\",\"IC50_RESULTS_ID\",\"MAX_CONC_MICROMOLAR\",\"RMSE\"],axis=1)", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 444, "character": 0}, "end": {"line": 444, "character": 49}}, "selectionRange": {"start": {"line": 444, "character": 0}, "end": {"line": 444, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 446, "character": 0}, "end": {"line": 446, "character": 28}}, "selectionRange": {"start": {"line": 446, "character": 0}, "end": {"line": 446, "character": 9}}, "detail": "drug_list = drugs[\"DRUG_ID\"]", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 447, "character": 0}, "end": {"line": 447, "character": 16}}, "selectionRange": {"start": {"line": 447, "character": 0}, "end": {"line": 447, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 457, "character": 0}, "end": {"line": 457, "character": 71}}, "selectionRange": {"start": {"line": 457, "character": 0}, "end": {"line": 457, "character": 10}}, "detail": "PDTC_drugs = pd.read_csv(PDTC_drug_cell_line_file,sep='\\t',index_col=0)", "children": []}, {"name": "PDTC_drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 458, "character": 0}, "end": {"line": 458, "character": 59}}, "selectionRange": {"start": {"line": 458, "character": 0}, "end": {"line": 458, "character": 25}}, "detail": "PDTC_drugs_cell_line_list = list(PDTC_drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 460, "character": 0}, "end": {"line": 460, "character": 39}}, "selectionRange": {"start": {"line": 460, "character": 0}, "end": {"line": 460, "character": 9}}, "detail": "drug_list = PDTC_drugs[\"Drug\"].tolist()", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 461, "character": 0}, "end": {"line": 461, "character": 16}}, "selectionRange": {"start": {"line": 461, "character": 0}, "end": {"line": 461, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 462, "character": 0}, "end": {"line": 467, "character": 0}}, "selectionRange": {"start": {"line": 462, "character": 4}, "end": {"line": 462, "character": 5}}, "detail": "for i in drug_list: if i in drug2id_mapping.keys(): new_drug_id.append(drug2id_mapping[i]) else: new_drug_id.append(0)", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 84}}, "selectionRange": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 10}}, "detail": "PDTC_drugs = PDTC_drugs.drop([\"Drug\",\"iC50\",\"D1_CONC\",\"D5_CONC\",\"perc.iC50\"],axis=1)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 477, "character": 0}, "end": {"line": 477, "character": 37}}, "selectionRange": {"start": {"line": 477, "character": 0}, "end": {"line": 477, "character": 5}}, "detail": "drugs = pd.concat([drugs,PDTC_drugs])", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 49}}, "selectionRange": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "cell_line_list", "kind": 13, "range": {"start": {"line": 490, "character": 0}, "end": {"line": 490, "character": 102}}, "selectionRange": {"start": {"line": 490, "character": 0}, "end": {"line": 490, "character": 14}}, "detail": "cell_line_list = list(set(drugs_cell_line_list)&set(exp_cell_line_list)&set(mutation_cell_line_list) )", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 497, "character": 0}, "end": {"line": 497, "character": 66}}, "selectionRange": {"start": {"line": 497, "character": 0}, "end": {"line": 497, "character": 16}}, "detail": "cell_line_legend = pd.read_csv(cell_line_detail_file, index_col=1)", "children": []}, {"name": "PDTC_cell_line", "kind": 13, "range": {"start": {"line": 498, "character": 0}, "end": {"line": 498, "character": 206}}, "selectionRange": {"start": {"line": 498, "character": 0}, "end": {"line": 498, "character": 14}}, "detail": "PDTC_cell_line = pd.DataFrame({'Line': [\"BRCA\"]*len(PDTC_exp_cell_line_list), 'Site':[\"PDTC\"]*len(PDTC_exp_cell_line_list),\"Histology\":[\"breast\"]*len(PDTC_exp_cell_line_list)},index=PDTC_exp_cell_line_list)", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 499, "character": 0}, "end": {"line": 499, "character": 63}}, "selectionRange": {"start": {"line": 499, "character": 0}, "end": {"line": 499, "character": 16}}, "detail": "cell_line_legend = pd.concat([cell_line_legend,PDTC_cell_line])", "children": []}, {"name": "tissue_map", "kind": 13, "range": {"start": {"line": 502, "character": 0}, "end": {"line": 502, "character": 15}}, "selectionRange": {"start": {"line": 502, "character": 0}, "end": {"line": 502, "character": 10}}, "detail": "tissue_map = {}", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 504, "character": 0}, "end": {"line": 512, "character": 0}}, "selectionRange": {"start": {"line": 504, "character": 4}, "end": {"line": 504, "character": 13}}, "detail": "for cell_line in cell_line_list: tissue = cell_line_legend.loc[cell_line,'Site'] if tissue not in tissue_map: tissue_map[tissue] = [] tissue_map[tissue].append(cell_line)", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 506, "character": 4}, "end": {"line": 506, "character": 51}}, "selectionRange": {"start": {"line": 506, "character": 4}, "end": {"line": 506, "character": 10}}, "detail": "tissue = cell_line_legend.loc[cell_line,'Site']", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 513, "character": 0}, "end": {"line": 513, "character": 23}}, "selectionRange": {"start": {"line": 513, "character": 0}, "end": {"line": 513, "character": 19}}, "detail": "large_tissue_number = 0", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 514, "character": 0}, "end": {"line": 520, "character": 0}}, "selectionRange": {"start": {"line": 514, "character": 4}, "end": {"line": 514, "character": 10}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 514, "character": 0}, "end": {"line": 520, "character": 0}}, "selectionRange": {"start": {"line": 514, "character": 12}, "end": {"line": 514, "character": 21}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 517, "character": 8}, "end": {"line": 517, "character": 32}}, "selectionRange": {"start": {"line": 517, "character": 8}, "end": {"line": 517, "character": 27}}, "detail": "large_tissue_number += 1", "children": []}, {"name": "new_exp_gene_list", "kind": 13, "range": {"start": {"line": 540, "character": 0}, "end": {"line": 540, "character": 22}}, "selectionRange": {"start": {"line": 540, "character": 0}, "end": {"line": 540, "character": 17}}, "detail": "new_exp_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 541, "character": 0}, "end": {"line": 544, "character": 0}}, "selectionRange": {"start": {"line": 541, "character": 4}, "end": {"line": 541, "character": 5}}, "detail": "for i in exp_gene_list: if i in valid_gene_list: new_exp_gene_list.append(i)", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 549, "character": 0}, "end": {"line": 549, "character": 41}}, "selectionRange": {"start": {"line": 549, "character": 0}, "end": {"line": 549, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 550, "character": 0}, "end": {"line": 550, "character": 38}}, "selectionRange": {"start": {"line": 550, "character": 0}, "end": {"line": 550, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 551, "character": 0}, "end": {"line": 551, "character": 72}}, "selectionRange": {"start": {"line": 551, "character": 0}, "end": {"line": 551, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 553, "character": 0}, "end": {"line": 553, "character": 43}}, "selectionRange": {"start": {"line": 553, "character": 0}, "end": {"line": 553, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 554, "character": 0}, "end": {"line": 554, "character": 68}}, "selectionRange": {"start": {"line": 554, "character": 0}, "end": {"line": 554, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 561, "character": 0}, "end": {"line": 561, "character": 58}}, "selectionRange": {"start": {"line": 561, "character": 0}, "end": {"line": 561, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 562, "character": 0}, "end": {"line": 562, "character": 68}}, "selectionRange": {"start": {"line": 562, "character": 0}, "end": {"line": 562, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "new_data_file", "kind": 13, "range": {"start": {"line": 571, "character": 0}, "end": {"line": 571, "character": 18}}, "selectionRange": {"start": {"line": 571, "character": 0}, "end": {"line": 571, "character": 13}}, "detail": "new_data_file = ''", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 41}}, "selectionRange": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 38}}, "selectionRange": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 72}}, "selectionRange": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 43}}, "selectionRange": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 68}}, "selectionRange": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 58}}, "selectionRange": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 68}}, "selectionRange": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "rename_selected_drug_list", "kind": 13, "range": {"start": {"line": 592, "character": 0}, "end": {"line": 592, "character": 30}}, "selectionRange": {"start": {"line": 592, "character": 0}, "end": {"line": 592, "character": 25}}, "detail": "rename_selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 594, "character": 0}, "end": {"line": 664, "character": 0}}, "selectionRange": {"start": {"line": 594, "character": 4}, "end": {"line": 594, "character": 8}}, "detail": "for drug in selected_drug_list: print(drug) if drug not in drug2id_mapping: print('drug name wrong', drug) else: cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]] feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) ) feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) ) print(len(feature_exp_gene_list) + len(feature_mut_gene_list)) if len(feature_exp_gene_list) + len(feature_mut_gene_list) == 0: continue feature_description = [] drug_tissue_map = {} drug = drug.replace(' ','_') rename_selected_drug_list.append(drug) if drug == 'Nutlin-3a_(-)': drug = 'Nutlin-3a' drug_folder = '/data/merged/drug_feature/' + drug + '/' if not os.path.exists(drug_folder): os.makedirs(drug_folder) for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description)) file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\") pickle.dump(drug_tissue_map,file_handle) file_handle.close()", "children": []}, {"name": "cell_line_drug_matrix", "kind": 13, "range": {"start": {"line": 602, "character": 8}, "end": {"line": 602, "character": 84}}, "selectionRange": {"start": {"line": 602, "character": 8}, "end": {"line": 602, "character": 29}}, "detail": "cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]]", "children": []}, {"name": "feature_exp_gene_list", "kind": 13, "range": {"start": {"line": 607, "character": 8}, "end": {"line": 607, "character": 98}}, "selectionRange": {"start": {"line": 607, "character": 8}, "end": {"line": 607, "character": 29}}, "detail": "feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) )", "children": []}, {"name": "feature_mut_gene_list", "kind": 13, "range": {"start": {"line": 608, "character": 8}, "end": {"line": 608, "character": 98}}, "selectionRange": {"start": {"line": 608, "character": 8}, "end": {"line": 608, "character": 29}}, "detail": "feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) )", "children": []}, {"name": "feature_description", "kind": 13, "range": {"start": {"line": 612, "character": 8}, "end": {"line": 612, "character": 32}}, "selectionRange": {"start": {"line": 612, "character": 8}, "end": {"line": 612, "character": 27}}, "detail": "feature_description = []", "children": []}, {"name": "drug_tissue_map", "kind": 13, "range": {"start": {"line": 614, "character": 8}, "end": {"line": 614, "character": 28}}, "selectionRange": {"start": {"line": 614, "character": 8}, "end": {"line": 614, "character": 23}}, "detail": "drug_tissue_map = {}", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 616, "character": 8}, "end": {"line": 616, "character": 36}}, "selectionRange": {"start": {"line": 616, "character": 8}, "end": {"line": 616, "character": 12}}, "detail": "drug = drug.replace(' ','_')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 622, "character": 12}, "end": {"line": 622, "character": 30}}, "selectionRange": {"start": {"line": 622, "character": 12}, "end": {"line": 622, "character": 16}}, "detail": "drug = 'Nutlin-3a'", "children": []}, {"name": "drug_folder", "kind": 13, "range": {"start": {"line": 624, "character": 8}, "end": {"line": 624, "character": 63}}, "selectionRange": {"start": {"line": 624, "character": 8}, "end": {"line": 624, "character": 19}}, "detail": "drug_folder = '/data/merged/drug_feature/' + drug + '/'", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 630, "character": 8}, "end": {"line": 660, "character": 0}}, "selectionRange": {"start": {"line": 630, "character": 12}, "end": {"line": 630, "character": 18}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "tissue_cell_line_list", "kind": 13, "range": {"start": {"line": 630, "character": 8}, "end": {"line": 660, "character": 0}}, "selectionRange": {"start": {"line": 630, "character": 20}, "end": {"line": 630, "character": 41}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 633, "character": 12}, "end": {"line": 633, "character": 103}}, "selectionRange": {"start": {"line": 633, "character": 12}, "end": {"line": 633, "character": 35}}, "detail": "drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list )", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 634, "character": 12}, "end": {"line": 634, "character": 67}}, "selectionRange": {"start": {"line": 634, "character": 12}, "end": {"line": 634, "character": 35}}, "detail": "drug_specific_cell_line = list(drug_specific_cell_line)", "children": []}, {"name": "feature_list", "kind": 13, "range": {"start": {"line": 637, "character": 12}, "end": {"line": 637, "character": 29}}, "selectionRange": {"start": {"line": 637, "character": 12}, "end": {"line": 637, "character": 24}}, "detail": "feature_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 641, "character": 16}, "end": {"line": 643, "character": 0}}, "selectionRange": {"start": {"line": 641, "character": 20}, "end": {"line": 641, "character": 24}}, "detail": "for gene in feature_exp_gene_list: feature_description.append(gene+'_expression')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 646, "character": 16}, "end": {"line": 648, "character": 0}}, "selectionRange": {"start": {"line": 646, "character": 20}, "end": {"line": 646, "character": 24}}, "detail": "for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation')", "children": []}, {"name": "feature", "kind": 13, "range": {"start": {"line": 649, "character": 12}, "end": {"line": 649, "character": 58}}, "selectionRange": {"start": {"line": 649, "character": 12}, "end": {"line": 649, "character": 19}}, "detail": "feature = np.concatenate(feature_list, axis=1)", "children": []}, {"name": "label", "kind": 13, "range": {"start": {"line": 651, "character": 12}, "end": {"line": 651, "character": 88}}, "selectionRange": {"start": {"line": 651, "character": 12}, "end": {"line": 651, "character": 17}}, "detail": "label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 661, "character": 8}, "end": {"line": 661, "character": 84}}, "selectionRange": {"start": {"line": 661, "character": 8}, "end": {"line": 661, "character": 19}}, "detail": "file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\")", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 665, "character": 0}, "end": {"line": 665, "character": 52}}, "selectionRange": {"start": {"line": 665, "character": 0}, "end": {"line": 665, "character": 11}}, "detail": "file_handle = open('rename_selected_drug_list', 'w')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 666, "character": 0}, "end": {"line": 668, "character": 0}}, "selectionRange": {"start": {"line": 666, "character": 4}, "end": {"line": 666, "character": 8}}, "detail": "for drug in rename_selected_drug_list: file_handle.writelines(drug+ '\\n')", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 686, "character": 0}, "end": {"line": 686, "character": 13}}, "selectionRange": {"start": {"line": 686, "character": 7}, "end": {"line": 686, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cell_line_loc", "kind": 13, "range": {"start": {"line": 692, "character": 0}, "end": {"line": 692, "character": 84}}, "selectionRange": {"start": {"line": 692, "character": 0}, "end": {"line": 692, "character": 13}}, "detail": "cell_line_loc = '/cellar/users/samsonfong/Projects/tcrp-v2/from-ma/cell_line_lists/'", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 698, "character": 0}, "end": {"line": 700, "character": 0}}, "selectionRange": {"start": {"line": 698, "character": 53}, "end": {"line": 698, "character": 54}}, "detail": "with open('/data/drug_feature/KU-55933/KU', 'rb') as f: tmap= pickle.load(f)", "children": []}, {"name": "tmap", "kind": 13, "range": {"start": {"line": 699, "character": 4}, "end": {"line": 699, "character": 24}}, "selectionRange": {"start": {"line": 699, "character": 4}, "end": {"line": 699, "character": 8}}, "detail": "tmap= pickle.load(f)", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 717, "character": 0}, "end": {"line": 717, "character": 68}}, "selectionRange": {"start": {"line": 717, "character": 0}, "end": {"line": 717, "character": 1}}, "detail": "f = np.load('/data/drug_feature/KU-55933/lung_KU-55933_feature.npy')", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 11, "result": [{"title": "Inline variable", "kind": "refactor.inline", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///root/capsule/code/process_merged.py", "version": 1}, "edits": [{"range": {"start": {"line": 286, "character": 0}, "end": {"line": 286, "character": 15}}, "newText": "\n\n# In[86]:\n\n\ngene_name_map = {}\n\nfor uniprot_gene in ("}, {"range": {"start": {"line": 286, "character": 89}, "end": {"line": 294, "character": 32}}, "newText": ")"}, {"range": {"start": {"line": 299, "character": 18}, "end": {"line": 299, "character": 30}}, "newText": "(pd.read_table('/data/HUGO_protein-coding_gene.tsv',index_col=25, sep='\\t'))"}, {"range": {"start": {"line": 300, "character": 38}, "end": {"line": 300, "character": 50}}, "newText": "(pd.read_table('/data/HUGO_protein-coding_gene.tsv',index_col=25, sep='\\t'))"}, {"range": {"start": {"line": 302, "character": 38}, "end": {"line": 302, "character": 50}}, "newText": "(pd.read_table('/data/HUGO_protein-coding_gene.tsv',index_col=25, sep='\\t'))"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 12, "result": [{"name": "matplotlib", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 17}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 17}}, "detail": "module matplotlib", "children": []}, {"name": "os", "kind": 2, "range": {"start": {"line": 10, "character": 0}, "end": {"line": 10, "character": 9}}, "selectionRange": {"start": {"line": 10, "character": 7}, "end": {"line": 10, "character": 9}}, "detail": "module os", "children": []}, {"name": "pd", "kind": 2, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 11, "character": 19}}, "selectionRange": {"start": {"line": 11, "character": 17}, "end": {"line": 11, "character": 19}}, "detail": "module pd", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 12, "character": 0}, "end": {"line": 12, "character": 18}}, "selectionRange": {"start": {"line": 12, "character": 16}, "end": {"line": 12, "character": 18}}, "detail": "module np", "children": []}, {"name": "sys", "kind": 2, "range": {"start": {"line": 13, "character": 0}, "end": {"line": 13, "character": 10}}, "selectionRange": {"start": {"line": 13, "character": 7}, "end": {"line": 13, "character": 10}}, "detail": "module sys", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 14, "character": 0}, "end": {"line": 14, "character": 13}}, "selectionRange": {"start": {"line": 14, "character": 7}, "end": {"line": 14, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cdist", "kind": 12, "range": {"start": {"line": 15, "character": 0}, "end": {"line": 15, "character": 40}}, "selectionRange": {"start": {"line": 15, "character": 35}, "end": {"line": 15, "character": 40}}, "detail": "def cdist", "children": []}, {"name": "math", "kind": 2, "range": {"start": {"line": 16, "character": 0}, "end": {"line": 16, "character": 11}}, "selectionRange": {"start": {"line": 16, "character": 7}, "end": {"line": 16, "character": 11}}, "detail": "module math", "children": []}, {"name": "nx", "kind": 2, "range": {"start": {"line": 17, "character": 0}, "end": {"line": 17, "character": 21}}, "selectionRange": {"start": {"line": 17, "character": 19}, "end": {"line": 17, "character": 21}}, "detail": "module nx", "children": []}, {"name": "nxacc", "kind": 2, "range": {"start": {"line": 18, "character": 0}, "end": {"line": 18, "character": 56}}, "selectionRange": {"start": {"line": 18, "character": 51}, "end": {"line": 18, "character": 56}}, "detail": "module nxacc", "children": []}, {"name": "nxadag", "kind": 2, "range": {"start": {"line": 19, "character": 0}, "end": {"line": 19, "character": 40}}, "selectionRange": {"start": {"line": 19, "character": 34}, "end": {"line": 19, "character": 40}}, "detail": "module nxadag", "children": []}, {"name": "plt", "kind": 2, "range": {"start": {"line": 20, "character": 0}, "end": {"line": 20, "character": 31}}, "selectionRange": {"start": {"line": 20, "character": 28}, "end": {"line": 20, "character": 31}}, "detail": "module plt", "children": []}, {"name": "sns", "kind": 2, "range": {"start": {"line": 21, "character": 0}, "end": {"line": 21, "character": 21}}, "selectionRange": {"start": {"line": 21, "character": 18}, "end": {"line": 21, "character": 21}}, "detail": "module sns", "children": []}, {"name": "itertools", "kind": 2, "range": {"start": {"line": 22, "character": 0}, "end": {"line": 22, "character": 16}}, "selectionRange": {"start": {"line": 22, "character": 7}, "end": {"line": 22, "character": 16}}, "detail": "module itertools", "children": []}, {"name": "mygene", "kind": 2, "range": {"start": {"line": 23, "character": 0}, "end": {"line": 23, "character": 13}}, "selectionRange": {"start": {"line": 23, "character": 7}, "end": {"line": 23, "character": 13}}, "detail": "module mygene", "children": []}, {"name": "re", "kind": 2, "range": {"start": {"line": 24, "character": 0}, "end": {"line": 24, "character": 9}}, "selectionRange": {"start": {"line": 24, "character": 7}, "end": {"line": 24, "character": 9}}, "detail": "module re", "children": []}, {"name": "selected_exp_gene_list", "kind": 13, "range": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 95}}, "selectionRange": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 22}}, "detail": "selected_exp_gene_list = pd.read_csv(\"/data/common_exp_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "selected_mut_gene_list", "kind": 13, "range": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 95}}, "selectionRange": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 22}}, "detail": "selected_mut_gene_list = pd.read_csv(\"/data/common_mut_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "load_network", "kind": 12, "range": {"start": {"line": 37, "character": 0}, "end": {"line": 65, "character": 28}}, "selectionRange": {"start": {"line": 37, "character": 4}, "end": {"line": 37, "character": 16}}, "detail": "def load_network", "children": []}, {"name": "load_name_space", "kind": 12, "range": {"start": {"line": 67, "character": 0}, "end": {"line": 79, "character": 21}}, "selectionRange": {"start": {"line": 67, "character": 4}, "end": {"line": 67, "character": 19}}, "detail": "def load_name_space", "children": []}, {"name": "list2index", "kind": 12, "range": {"start": {"line": 81, "character": 0}, "end": {"line": 88, "character": 41}}, "selectionRange": {"start": {"line": 81, "character": 4}, "end": {"line": 81, "character": 14}}, "detail": "def list2index", "children": []}, {"name": "PDTC_data_file", "kind": 13, "range": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 30}}, "selectionRange": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 14}}, "detail": "PDTC_data_file = '/data/PTDC/'", "children": []}, {"name": "PDTC_exp_data_file", "kind": 13, "range": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 60}}, "selectionRange": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 18}}, "detail": "PDTC_exp_data_file = PDTC_data_file + 'ExpressionModels.tsv'", "children": []}, {"name": "PDTC_drug_cell_line_file", "kind": 13, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 72}}, "selectionRange": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 24}}, "detail": "PDTC_drug_cell_line_file = PDTC_data_file + 'DrugResponsesAUCModels.tsv'", "children": []}, {"name": "PDTC_mutation_data_file", "kind": 13, "range": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 59}}, "selectionRange": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 23}}, "detail": "PDTC_mutation_data_file = PDTC_data_file + 'SNVsModels.tsv'", "children": []}, {"name": "PDTC_drug_target_file", "kind": 13, "range": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 56}}, "selectionRange": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 21}}, "detail": "PDTC_drug_target_file ='/data/GDSC/drug_target_list.csv'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 37}}, "selectionRange": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 46}}, "selectionRange": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "data_file", "kind": 13, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 25}}, "selectionRange": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 9}}, "detail": "data_file = '/data/GDSC/'", "children": []}, {"name": "new_network_file", "kind": 13, "range": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 27}}, "selectionRange": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 16}}, "detail": "new_network_file = '/data/'", "children": []}, {"name": "exp_data_file", "kind": 13, "range": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 61}}, "selectionRange": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 13}}, "detail": "exp_data_file = data_file + 'Cell_line_RMA_proc_basalExp.txt'", "children": []}, {"name": "drug_cell_line_file", "kind": 13, "range": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 64}}, "selectionRange": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 19}}, "detail": "drug_cell_line_file = data_file + 'v17_fitted_dose_response.csv'", "children": []}, {"name": "cell_line_detail_file", "kind": 13, "range": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 60}}, "selectionRange": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 21}}, "detail": "cell_line_detail_file = data_file + 'Cell_Lines_Details.csv'", "children": []}, {"name": "mutation_data_file", "kind": 13, "range": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 51}}, "selectionRange": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 18}}, "detail": "mutation_data_file = data_file + 'WES_variants.csv'", "children": []}, {"name": "drug_target_file", "kind": 13, "range": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 51}}, "selectionRange": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 16}}, "detail": "drug_target_file ='/data/GDSC/drug_target_list.csv'", "children": []}, {"name": "feature_folder", "kind": 13, "range": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 27}}, "selectionRange": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 14}}, "detail": "feature_folder = 'feature/'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 37}}, "selectionRange": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 46}}, "selectionRange": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 58}}, "selectionRange": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 6}}, "detail": "exp_df = pd.read_csv(exp_data_file, sep='\\t', index_col=0)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 21}}, "selectionRange": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 6}}, "detail": "exp_df = exp_df.T[1:]", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 56}}, "selectionRange": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 6}}, "detail": "exp_df = exp_df.rename(columns={np.nan: 'NO_GENE_NAME'})", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 43}}, "selectionRange": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 6}}, "detail": "exp_df = exp_df.drop('NO_GENE_NAME',axis=1)", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 138, "character": 0}, "end": {"line": 140, "character": 26}}, "selectionRange": {"start": {"line": 138, "character": 4}, "end": {"line": 138, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 142, "character": 0}, "end": {"line": 142, "character": 44}}, "selectionRange": {"start": {"line": 142, "character": 7}, "end": {"line": 142, "character": 12}}, "detail": "exp_df.index = exp_df.index.map(stripNumber)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 40}}, "selectionRange": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 6}}, "detail": "exp_df = exp_df.groupby(level=0).first()", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 39}}, "selectionRange": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 6}}, "detail": "exp_df = exp_df[selected_exp_gene_list]", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 36}}, "selectionRange": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 48}}, "selectionRange": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 78}}, "selectionRange": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 11}}, "detail": "PDTC_exp_df = pd.read_csv(PDTC_exp_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 31}}, "selectionRange": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df.T[1:]", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 160, "character": 0}, "end": {"line": 162, "character": 26}}, "selectionRange": {"start": {"line": 160, "character": 4}, "end": {"line": 160, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 49}}, "selectionRange": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df[selected_exp_gene_list]", "children": []}, {"name": "PDTC_exp_gene_list", "kind": 13, "range": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 46}}, "selectionRange": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 18}}, "detail": "PDTC_exp_gene_list = list(PDTC_exp_df.columns)", "children": []}, {"name": "PDTC_exp_cell_line_list", "kind": 13, "range": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 58}}, "selectionRange": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 23}}, "detail": "PDTC_exp_cell_line_list = list(PDTC_exp_df.index.unique())", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 40}}, "selectionRange": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 6}}, "detail": "exp_df = pd.concat([exp_df,PDTC_exp_df])", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 36}}, "selectionRange": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 48}}, "selectionRange": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "maf", "kind": 13, "range": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 69}}, "selectionRange": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 3}}, "detail": "maf = pd.read_csv(mutation_data_file, sep=',', index_col=0).fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 75}}, "selectionRange": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 11}}, "detail": "mutation_df = maf.groupby(['COSMIC_ID', 'Gene']).size().unstack().fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 49}}, "selectionRange": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 11}}, "detail": "mutation_df = mutation_df[selected_mut_gene_list]", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 46}}, "selectionRange": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 58}}, "selectionRange": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "PDTC_maf", "kind": 13, "range": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 80}}, "selectionRange": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 8}}, "detail": "PDTC_maf = pd.read_csv(PDTC_mutation_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 61}}, "selectionRange": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_maf.replace(to_replace=\"NO\",value=0.0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 82}}, "selectionRange": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_mutation_df.replace(to_replace=\"chr*\",value=1.0,regex=True)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 47}}, "selectionRange": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df.transpose()", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 59}}, "selectionRange": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df[selected_mut_gene_list]", "children": []}, {"name": "PDTC_mutation_gene_list", "kind": 13, "range": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 56}}, "selectionRange": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 23}}, "detail": "PDTC_mutation_gene_list = list(PDTC_mutation_df.columns)", "children": []}, {"name": "PDTC_mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 68}}, "selectionRange": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 28}}, "detail": "PDTC_mutation_cell_line_list = list(PDTC_mutation_df.index.unique())", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 55}}, "selectionRange": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 11}}, "detail": "mutation_df = pd.concat([mutation_df,PDTC_mutation_df])", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 46}}, "selectionRange": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 58}}, "selectionRange": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 36}}, "selectionRange": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 11}}, "detail": "file_handle = open(drug_target_file)", "children": []}, {"name": "drug_target_map", "kind": 13, "range": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 20}}, "selectionRange": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 15}}, "detail": "drug_target_map = {}", "children": []}, {"name": "drug_target_list", "kind": 13, "range": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 21}}, "selectionRange": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 16}}, "detail": "drug_target_list = []", "children": []}, {"name": "line", "kind": 13, "range": {"start": {"line": 230, "character": 0}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 230, "character": 4}, "end": {"line": 230, "character": 8}}, "detail": "for line in file_handle: new_line = line.rstrip().split(\",\") drug = new_line[0] target_list=new_line[1].split(',') if drug != \"Drug\": target_list_str = \"\" for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\" drug = drug.strip() drug_target_map[drug] = [] if ',' not in target_list_str: drug_target_map[drug].append(target_list_str.strip()) drug_target_list.append(target_list_str.strip()) else: target_list = target_list_str.split(',') for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "new_line", "kind": 13, "range": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 39}}, "selectionRange": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 12}}, "detail": "new_line = line.rstrip().split(\",\")", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 22}}, "selectionRange": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 8}}, "detail": "drug = new_line[0]", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 38}}, "selectionRange": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 15}}, "detail": "target_list=new_line[1].split(',')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 28}}, "selectionRange": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 23}}, "detail": "target_list_str = \"\"", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 237, "character": 8}, "end": {"line": 242, "character": 0}}, "selectionRange": {"start": {"line": 237, "character": 12}, "end": {"line": 237, "character": 13}}, "detail": "for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 65}}, "selectionRange": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 71}}, "selectionRange": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 27}}, "selectionRange": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 12}}, "detail": "drug = drug.strip()", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 52}}, "selectionRange": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 23}}, "detail": "target_list = target_list_str.split(',')", "children": []}, {"name": "target", "kind": 13, "range": {"start": {"line": 250, "character": 12}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 250, "character": 16}, "end": {"line": 250, "character": 22}}, "detail": "for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "drugs_legend", "kind": 13, "range": {"start": {"line": 261, "character": 0}, "end": {"line": 261, "character": 85}}, "selectionRange": {"start": {"line": 261, "character": 0}, "end": {"line": 261, "character": 12}}, "detail": "drugs_legend = pd.read_csv('/data/GDSC/Screened_Compounds.csv', sep=',', index_col=0)", "children": []}, {"name": "drug2id_mapping", "kind": 13, "range": {"start": {"line": 263, "character": 0}, "end": {"line": 263, "character": 20}}, "selectionRange": {"start": {"line": 263, "character": 0}, "end": {"line": 263, "character": 15}}, "detail": "drug2id_mapping = {}", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 265, "character": 0}, "end": {"line": 268, "character": 0}}, "selectionRange": {"start": {"line": 265, "character": 4}, "end": {"line": 265, "character": 9}}, "detail": "for index in list(drugs_legend.index) : drug_name = drugs_legend.loc[index,'Drug Name'] drug2id_mapping[ drug_name ] = index", "children": []}, {"name": "drug_name", "kind": 13, "range": {"start": {"line": 266, "character": 4}, "end": {"line": 266, "character": 51}}, "selectionRange": {"start": {"line": 266, "character": 4}, "end": {"line": 266, "character": 13}}, "detail": "drug_name = drugs_legend.loc[index,'Drug Name']", "children": []}, {"name": "valid_gene_list", "kind": 13, "range": {"start": {"line": 273, "character": 0}, "end": {"line": 273, "character": 92}}, "selectionRange": {"start": {"line": 273, "character": 0}, "end": {"line": 273, "character": 15}}, "detail": "valid_gene_list = list(set(drug_target_list) | set(exp_gene_list) | set(mutation_gene_list))", "children": []}, {"name": "network_list", "kind": 13, "range": {"start": {"line": 279, "character": 0}, "end": {"line": 279, "character": 82}}, "selectionRange": {"start": {"line": 279, "character": 0}, "end": {"line": 279, "character": 12}}, "detail": "network_list = [new_network_file+inbiomap_file, new_network_file+pathwaycomm_file]", "children": []}, {"name": "gene_neighbor_map", "kind": 13, "range": {"start": {"line": 280, "character": 0}, "end": {"line": 280, "character": 64}}, "selectionRange": {"start": {"line": 280, "character": 0}, "end": {"line": 280, "character": 17}}, "detail": "gene_neighbor_map = load_network(network_list, valid_gene_list)", "children": []}, {"name": "gene_name_df", "kind": 13, "range": {"start": {"line": 286, "character": 0}, "end": {"line": 286, "character": 89}}, "selectionRange": {"start": {"line": 286, "character": 0}, "end": {"line": 286, "character": 12}}, "detail": "gene_name_df = pd.read_table('/data/HUGO_protein-coding_gene.tsv',index_col=25, sep='\\t')", "children": []}, {"name": "gene_name_map", "kind": 13, "range": {"start": {"line": 292, "character": 0}, "end": {"line": 292, "character": 18}}, "selectionRange": {"start": {"line": 292, "character": 0}, "end": {"line": 292, "character": 13}}, "detail": "gene_name_map = {}", "children": []}, {"name": "uniprot_gene", "kind": 13, "range": {"start": {"line": 294, "character": 0}, "end": {"line": 303, "character": 0}}, "selectionRange": {"start": {"line": 294, "character": 4}, "end": {"line": 294, "character": 16}}, "detail": "for uniprot_gene in gene_name_df.index: if isinstance(uniprot_gene, type('aaa')) == False: continue if isinstance(gene_name_df.loc[uniprot_gene, 'symbol'], type('aaa')) == False: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol'][0] else: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 308, "character": 0}, "end": {"line": 308, "character": 76}}, "selectionRange": {"start": {"line": 308, "character": 0}, "end": {"line": 308, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "uniprot_gene_set", "kind": 13, "range": {"start": {"line": 310, "character": 0}, "end": {"line": 310, "character": 24}}, "selectionRange": {"start": {"line": 310, "character": 0}, "end": {"line": 310, "character": 16}}, "detail": "uniprot_gene_set = set()", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 312, "character": 0}, "end": {"line": 321, "character": 0}}, "selectionRange": {"start": {"line": 312, "character": 4}, "end": {"line": 312, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 317, "character": 4}, "end": {"line": 317, "character": 74}}, "selectionRange": {"start": {"line": 317, "character": 4}, "end": {"line": 317, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 319, "character": 4}, "end": {"line": 321, "character": 0}}, "selectionRange": {"start": {"line": 319, "character": 8}, "end": {"line": 319, "character": 12}}, "detail": "for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "query_gene_set", "kind": 13, "range": {"start": {"line": 324, "character": 0}, "end": {"line": 324, "character": 19}}, "selectionRange": {"start": {"line": 324, "character": 0}, "end": {"line": 324, "character": 14}}, "detail": "query_gene_set = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 326, "character": 0}, "end": {"line": 329, "character": 0}}, "selectionRange": {"start": {"line": 326, "character": 4}, "end": {"line": 326, "character": 8}}, "detail": "for gene in uniprot_gene_set: if gene not in gene_name_map: query_gene_set.append(gene)", "children": []}, {"name": "query_gene_list", "kind": 13, "range": {"start": {"line": 332, "character": 0}, "end": {"line": 332, "character": 38}}, "selectionRange": {"start": {"line": 332, "character": 0}, "end": {"line": 332, "character": 15}}, "detail": "query_gene_list = list(query_gene_set)", "children": []}, {"name": "mg", "kind": 13, "range": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 24}}, "selectionRange": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 2}}, "detail": "mg = mygene.MyGeneInfo()", "children": []}, {"name": "out", "kind": 13, "range": {"start": {"line": 335, "character": 0}, "end": {"line": 335, "character": 87}}, "selectionRange": {"start": {"line": 335, "character": 0}, "end": {"line": 335, "character": 3}}, "detail": "out = mg.querymany(query_gene_list, scopes='uniprot', fields='symbol', species='human')", "children": []}, {"name": "not_found_gene_list", "kind": 13, "range": {"start": {"line": 337, "character": 0}, "end": {"line": 337, "character": 24}}, "selectionRange": {"start": {"line": 337, "character": 0}, "end": {"line": 337, "character": 19}}, "detail": "not_found_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 339, "character": 0}, "end": {"line": 344, "character": 0}}, "selectionRange": {"start": {"line": 339, "character": 4}, "end": {"line": 339, "character": 5}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 339, "character": 0}, "end": {"line": 344, "character": 0}}, "selectionRange": {"start": {"line": 339, "character": 7}, "end": {"line": 339, "character": 11}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 351, "character": 0}, "end": {"line": 351, "character": 76}}, "selectionRange": {"start": {"line": 351, "character": 0}, "end": {"line": 351, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 353, "character": 0}, "end": {"line": 375, "character": 0}}, "selectionRange": {"start": {"line": 353, "character": 4}, "end": {"line": 353, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') complex_symbol_list = [] for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] ) for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 358, "character": 4}, "end": {"line": 358, "character": 74}}, "selectionRange": {"start": {"line": 358, "character": 4}, "end": {"line": 358, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "complex_symbol_list", "kind": 13, "range": {"start": {"line": 360, "character": 4}, "end": {"line": 360, "character": 28}}, "selectionRange": {"start": {"line": 360, "character": 4}, "end": {"line": 360, "character": 23}}, "detail": "complex_symbol_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 362, "character": 4}, "end": {"line": 365, "character": 0}}, "selectionRange": {"start": {"line": 362, "character": 8}, "end": {"line": 362, "character": 12}}, "detail": "for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] )", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 366, "character": 4}, "end": {"line": 375, "character": 0}}, "selectionRange": {"start": {"line": 366, "character": 8}, "end": {"line": 366, "character": 13}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 366, "character": 4}, "end": {"line": 375, "character": 0}}, "selectionRange": {"start": {"line": 366, "character": 15}, "end": {"line": 366, "character": 20}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene_exp_neighbor_map", "kind": 13, "range": {"start": {"line": 380, "character": 0}, "end": {"line": 380, "character": 26}}, "selectionRange": {"start": {"line": 380, "character": 0}, "end": {"line": 380, "character": 21}}, "detail": "gene_exp_neighbor_map = {}", "children": []}, {"name": "exp_matrix", "kind": 13, "range": {"start": {"line": 381, "character": 0}, "end": {"line": 381, "character": 26}}, "selectionRange": {"start": {"line": 381, "character": 0}, "end": {"line": 381, "character": 10}}, "detail": "exp_matrix = exp_df.values", "children": []}, {"name": "P", "kind": 13, "range": {"start": {"line": 383, "character": 0}, "end": {"line": 383, "character": 79}}, "selectionRange": {"start": {"line": 383, "character": 0}, "end": {"line": 383, "character": 1}}, "detail": "P = 1 - cdist(np.transpose(exp_matrix), np.transpose(exp_matrix),'correlation')", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 385, "character": 0}, "end": {"line": 399, "character": 0}}, "selectionRange": {"start": {"line": 385, "character": 4}, "end": {"line": 385, "character": 5}}, "detail": "for i in range(len(exp_gene_list)): gene1 = exp_gene_list[i] gene_exp_neighbor_map[gene1] = set() for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2) if gene1 not in gene_exp_neighbor_map[gene1]: print (gene1, 'not in itself?', P[i,i])", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 387, "character": 4}, "end": {"line": 387, "character": 28}}, "selectionRange": {"start": {"line": 387, "character": 4}, "end": {"line": 387, "character": 9}}, "detail": "gene1 = exp_gene_list[i]", "children": []}, {"name": "j", "kind": 13, "range": {"start": {"line": 390, "character": 4}, "end": {"line": 396, "character": 0}}, "selectionRange": {"start": {"line": 390, "character": 8}, "end": {"line": 390, "character": 9}}, "detail": "for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 392, "character": 8}, "end": {"line": 392, "character": 32}}, "selectionRange": {"start": {"line": 392, "character": 8}, "end": {"line": 392, "character": 13}}, "detail": "gene2 = exp_gene_list[j]", "children": []}, {"name": "drug_feature_list", "kind": 13, "range": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 22}}, "selectionRange": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 17}}, "detail": "drug_feature_list = []", "children": []}, {"name": "drug_neighbor_map", "kind": 13, "range": {"start": {"line": 408, "character": 0}, "end": {"line": 408, "character": 22}}, "selectionRange": {"start": {"line": 408, "character": 0}, "end": {"line": 408, "character": 17}}, "detail": "drug_neighbor_map = {}", "children": []}, {"name": "selected_drug_list", "kind": 13, "range": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 23}}, "selectionRange": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 18}}, "detail": "selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 411, "character": 0}, "end": {"line": 428, "character": 0}}, "selectionRange": {"start": {"line": 411, "character": 4}, "end": {"line": 411, "character": 8}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 411, "character": 0}, "end": {"line": 428, "character": 0}}, "selectionRange": {"start": {"line": 411, "character": 10}, "end": {"line": 411, "character": 21}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 414, "character": 8}, "end": {"line": 424, "character": 0}}, "selectionRange": {"start": {"line": 414, "character": 12}, "end": {"line": 414, "character": 16}}, "detail": "for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene]", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 442, "character": 0}, "end": {"line": 442, "character": 52}}, "selectionRange": {"start": {"line": 442, "character": 0}, "end": {"line": 442, "character": 5}}, "detail": "drugs = pd.read_csv(drug_cell_line_file,index_col=2)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 443, "character": 0}, "end": {"line": 443, "character": 93}}, "selectionRange": {"start": {"line": 443, "character": 0}, "end": {"line": 443, "character": 5}}, "detail": "drugs = drugs.drop([\"DATASET_VERSION\",\"IC50_RESULTS_ID\",\"MAX_CONC_MICROMOLAR\",\"RMSE\"],axis=1)", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 444, "character": 0}, "end": {"line": 444, "character": 49}}, "selectionRange": {"start": {"line": 444, "character": 0}, "end": {"line": 444, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 446, "character": 0}, "end": {"line": 446, "character": 28}}, "selectionRange": {"start": {"line": 446, "character": 0}, "end": {"line": 446, "character": 9}}, "detail": "drug_list = drugs[\"DRUG_ID\"]", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 447, "character": 0}, "end": {"line": 447, "character": 16}}, "selectionRange": {"start": {"line": 447, "character": 0}, "end": {"line": 447, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 457, "character": 0}, "end": {"line": 457, "character": 71}}, "selectionRange": {"start": {"line": 457, "character": 0}, "end": {"line": 457, "character": 10}}, "detail": "PDTC_drugs = pd.read_csv(PDTC_drug_cell_line_file,sep='\\t',index_col=0)", "children": []}, {"name": "PDTC_drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 458, "character": 0}, "end": {"line": 458, "character": 59}}, "selectionRange": {"start": {"line": 458, "character": 0}, "end": {"line": 458, "character": 25}}, "detail": "PDTC_drugs_cell_line_list = list(PDTC_drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 460, "character": 0}, "end": {"line": 460, "character": 39}}, "selectionRange": {"start": {"line": 460, "character": 0}, "end": {"line": 460, "character": 9}}, "detail": "drug_list = PDTC_drugs[\"Drug\"].tolist()", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 461, "character": 0}, "end": {"line": 461, "character": 16}}, "selectionRange": {"start": {"line": 461, "character": 0}, "end": {"line": 461, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 462, "character": 0}, "end": {"line": 467, "character": 0}}, "selectionRange": {"start": {"line": 462, "character": 4}, "end": {"line": 462, "character": 5}}, "detail": "for i in drug_list: if i in drug2id_mapping.keys(): new_drug_id.append(drug2id_mapping[i]) else: new_drug_id.append(0)", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 84}}, "selectionRange": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 10}}, "detail": "PDTC_drugs = PDTC_drugs.drop([\"Drug\",\"iC50\",\"D1_CONC\",\"D5_CONC\",\"perc.iC50\"],axis=1)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 477, "character": 0}, "end": {"line": 477, "character": 37}}, "selectionRange": {"start": {"line": 477, "character": 0}, "end": {"line": 477, "character": 5}}, "detail": "drugs = pd.concat([drugs,PDTC_drugs])", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 49}}, "selectionRange": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "cell_line_list", "kind": 13, "range": {"start": {"line": 490, "character": 0}, "end": {"line": 490, "character": 102}}, "selectionRange": {"start": {"line": 490, "character": 0}, "end": {"line": 490, "character": 14}}, "detail": "cell_line_list = list(set(drugs_cell_line_list)&set(exp_cell_line_list)&set(mutation_cell_line_list) )", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 497, "character": 0}, "end": {"line": 497, "character": 66}}, "selectionRange": {"start": {"line": 497, "character": 0}, "end": {"line": 497, "character": 16}}, "detail": "cell_line_legend = pd.read_csv(cell_line_detail_file, index_col=1)", "children": []}, {"name": "PDTC_cell_line", "kind": 13, "range": {"start": {"line": 498, "character": 0}, "end": {"line": 498, "character": 206}}, "selectionRange": {"start": {"line": 498, "character": 0}, "end": {"line": 498, "character": 14}}, "detail": "PDTC_cell_line = pd.DataFrame({'Line': [\"BRCA\"]*len(PDTC_exp_cell_line_list), 'Site':[\"PDTC\"]*len(PDTC_exp_cell_line_list),\"Histology\":[\"breast\"]*len(PDTC_exp_cell_line_list)},index=PDTC_exp_cell_line_list)", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 499, "character": 0}, "end": {"line": 499, "character": 63}}, "selectionRange": {"start": {"line": 499, "character": 0}, "end": {"line": 499, "character": 16}}, "detail": "cell_line_legend = pd.concat([cell_line_legend,PDTC_cell_line])", "children": []}, {"name": "tissue_map", "kind": 13, "range": {"start": {"line": 502, "character": 0}, "end": {"line": 502, "character": 15}}, "selectionRange": {"start": {"line": 502, "character": 0}, "end": {"line": 502, "character": 10}}, "detail": "tissue_map = {}", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 504, "character": 0}, "end": {"line": 512, "character": 0}}, "selectionRange": {"start": {"line": 504, "character": 4}, "end": {"line": 504, "character": 13}}, "detail": "for cell_line in cell_line_list: tissue = cell_line_legend.loc[cell_line,'Site'] if tissue not in tissue_map: tissue_map[tissue] = [] tissue_map[tissue].append(cell_line)", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 506, "character": 4}, "end": {"line": 506, "character": 51}}, "selectionRange": {"start": {"line": 506, "character": 4}, "end": {"line": 506, "character": 10}}, "detail": "tissue = cell_line_legend.loc[cell_line,'Site']", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 513, "character": 0}, "end": {"line": 513, "character": 23}}, "selectionRange": {"start": {"line": 513, "character": 0}, "end": {"line": 513, "character": 19}}, "detail": "large_tissue_number = 0", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 514, "character": 0}, "end": {"line": 520, "character": 0}}, "selectionRange": {"start": {"line": 514, "character": 4}, "end": {"line": 514, "character": 10}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 514, "character": 0}, "end": {"line": 520, "character": 0}}, "selectionRange": {"start": {"line": 514, "character": 12}, "end": {"line": 514, "character": 21}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 517, "character": 8}, "end": {"line": 517, "character": 32}}, "selectionRange": {"start": {"line": 517, "character": 8}, "end": {"line": 517, "character": 27}}, "detail": "large_tissue_number += 1", "children": []}, {"name": "new_exp_gene_list", "kind": 13, "range": {"start": {"line": 540, "character": 0}, "end": {"line": 540, "character": 22}}, "selectionRange": {"start": {"line": 540, "character": 0}, "end": {"line": 540, "character": 17}}, "detail": "new_exp_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 541, "character": 0}, "end": {"line": 544, "character": 0}}, "selectionRange": {"start": {"line": 541, "character": 4}, "end": {"line": 541, "character": 5}}, "detail": "for i in exp_gene_list: if i in valid_gene_list: new_exp_gene_list.append(i)", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 549, "character": 0}, "end": {"line": 549, "character": 41}}, "selectionRange": {"start": {"line": 549, "character": 0}, "end": {"line": 549, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 550, "character": 0}, "end": {"line": 550, "character": 38}}, "selectionRange": {"start": {"line": 550, "character": 0}, "end": {"line": 550, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 551, "character": 0}, "end": {"line": 551, "character": 72}}, "selectionRange": {"start": {"line": 551, "character": 0}, "end": {"line": 551, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 553, "character": 0}, "end": {"line": 553, "character": 43}}, "selectionRange": {"start": {"line": 553, "character": 0}, "end": {"line": 553, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 554, "character": 0}, "end": {"line": 554, "character": 68}}, "selectionRange": {"start": {"line": 554, "character": 0}, "end": {"line": 554, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 561, "character": 0}, "end": {"line": 561, "character": 58}}, "selectionRange": {"start": {"line": 561, "character": 0}, "end": {"line": 561, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 562, "character": 0}, "end": {"line": 562, "character": 68}}, "selectionRange": {"start": {"line": 562, "character": 0}, "end": {"line": 562, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "new_data_file", "kind": 13, "range": {"start": {"line": 571, "character": 0}, "end": {"line": 571, "character": 18}}, "selectionRange": {"start": {"line": 571, "character": 0}, "end": {"line": 571, "character": 13}}, "detail": "new_data_file = ''", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 41}}, "selectionRange": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 38}}, "selectionRange": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 72}}, "selectionRange": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 43}}, "selectionRange": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 68}}, "selectionRange": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 58}}, "selectionRange": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 68}}, "selectionRange": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "rename_selected_drug_list", "kind": 13, "range": {"start": {"line": 592, "character": 0}, "end": {"line": 592, "character": 30}}, "selectionRange": {"start": {"line": 592, "character": 0}, "end": {"line": 592, "character": 25}}, "detail": "rename_selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 594, "character": 0}, "end": {"line": 664, "character": 0}}, "selectionRange": {"start": {"line": 594, "character": 4}, "end": {"line": 594, "character": 8}}, "detail": "for drug in selected_drug_list: print(drug) if drug not in drug2id_mapping: print('drug name wrong', drug) else: cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]] feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) ) feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) ) print(len(feature_exp_gene_list) + len(feature_mut_gene_list)) if len(feature_exp_gene_list) + len(feature_mut_gene_list) == 0: continue feature_description = [] drug_tissue_map = {} drug = drug.replace(' ','_') rename_selected_drug_list.append(drug) if drug == 'Nutlin-3a_(-)': drug = 'Nutlin-3a' drug_folder = '/data/merged/drug_feature/' + drug + '/' if not os.path.exists(drug_folder): os.makedirs(drug_folder) for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description)) file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\") pickle.dump(drug_tissue_map,file_handle) file_handle.close()", "children": []}, {"name": "cell_line_drug_matrix", "kind": 13, "range": {"start": {"line": 602, "character": 8}, "end": {"line": 602, "character": 84}}, "selectionRange": {"start": {"line": 602, "character": 8}, "end": {"line": 602, "character": 29}}, "detail": "cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]]", "children": []}, {"name": "feature_exp_gene_list", "kind": 13, "range": {"start": {"line": 607, "character": 8}, "end": {"line": 607, "character": 98}}, "selectionRange": {"start": {"line": 607, "character": 8}, "end": {"line": 607, "character": 29}}, "detail": "feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) )", "children": []}, {"name": "feature_mut_gene_list", "kind": 13, "range": {"start": {"line": 608, "character": 8}, "end": {"line": 608, "character": 98}}, "selectionRange": {"start": {"line": 608, "character": 8}, "end": {"line": 608, "character": 29}}, "detail": "feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) )", "children": []}, {"name": "feature_description", "kind": 13, "range": {"start": {"line": 612, "character": 8}, "end": {"line": 612, "character": 32}}, "selectionRange": {"start": {"line": 612, "character": 8}, "end": {"line": 612, "character": 27}}, "detail": "feature_description = []", "children": []}, {"name": "drug_tissue_map", "kind": 13, "range": {"start": {"line": 614, "character": 8}, "end": {"line": 614, "character": 28}}, "selectionRange": {"start": {"line": 614, "character": 8}, "end": {"line": 614, "character": 23}}, "detail": "drug_tissue_map = {}", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 616, "character": 8}, "end": {"line": 616, "character": 36}}, "selectionRange": {"start": {"line": 616, "character": 8}, "end": {"line": 616, "character": 12}}, "detail": "drug = drug.replace(' ','_')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 622, "character": 12}, "end": {"line": 622, "character": 30}}, "selectionRange": {"start": {"line": 622, "character": 12}, "end": {"line": 622, "character": 16}}, "detail": "drug = 'Nutlin-3a'", "children": []}, {"name": "drug_folder", "kind": 13, "range": {"start": {"line": 624, "character": 8}, "end": {"line": 624, "character": 63}}, "selectionRange": {"start": {"line": 624, "character": 8}, "end": {"line": 624, "character": 19}}, "detail": "drug_folder = '/data/merged/drug_feature/' + drug + '/'", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 630, "character": 8}, "end": {"line": 660, "character": 0}}, "selectionRange": {"start": {"line": 630, "character": 12}, "end": {"line": 630, "character": 18}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "tissue_cell_line_list", "kind": 13, "range": {"start": {"line": 630, "character": 8}, "end": {"line": 660, "character": 0}}, "selectionRange": {"start": {"line": 630, "character": 20}, "end": {"line": 630, "character": 41}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 633, "character": 12}, "end": {"line": 633, "character": 103}}, "selectionRange": {"start": {"line": 633, "character": 12}, "end": {"line": 633, "character": 35}}, "detail": "drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list )", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 634, "character": 12}, "end": {"line": 634, "character": 67}}, "selectionRange": {"start": {"line": 634, "character": 12}, "end": {"line": 634, "character": 35}}, "detail": "drug_specific_cell_line = list(drug_specific_cell_line)", "children": []}, {"name": "feature_list", "kind": 13, "range": {"start": {"line": 637, "character": 12}, "end": {"line": 637, "character": 29}}, "selectionRange": {"start": {"line": 637, "character": 12}, "end": {"line": 637, "character": 24}}, "detail": "feature_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 641, "character": 16}, "end": {"line": 643, "character": 0}}, "selectionRange": {"start": {"line": 641, "character": 20}, "end": {"line": 641, "character": 24}}, "detail": "for gene in feature_exp_gene_list: feature_description.append(gene+'_expression')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 646, "character": 16}, "end": {"line": 648, "character": 0}}, "selectionRange": {"start": {"line": 646, "character": 20}, "end": {"line": 646, "character": 24}}, "detail": "for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation')", "children": []}, {"name": "feature", "kind": 13, "range": {"start": {"line": 649, "character": 12}, "end": {"line": 649, "character": 58}}, "selectionRange": {"start": {"line": 649, "character": 12}, "end": {"line": 649, "character": 19}}, "detail": "feature = np.concatenate(feature_list, axis=1)", "children": []}, {"name": "label", "kind": 13, "range": {"start": {"line": 651, "character": 12}, "end": {"line": 651, "character": 88}}, "selectionRange": {"start": {"line": 651, "character": 12}, "end": {"line": 651, "character": 17}}, "detail": "label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 661, "character": 8}, "end": {"line": 661, "character": 84}}, "selectionRange": {"start": {"line": 661, "character": 8}, "end": {"line": 661, "character": 19}}, "detail": "file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\")", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 665, "character": 0}, "end": {"line": 665, "character": 52}}, "selectionRange": {"start": {"line": 665, "character": 0}, "end": {"line": 665, "character": 11}}, "detail": "file_handle = open('rename_selected_drug_list', 'w')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 666, "character": 0}, "end": {"line": 668, "character": 0}}, "selectionRange": {"start": {"line": 666, "character": 4}, "end": {"line": 666, "character": 8}}, "detail": "for drug in rename_selected_drug_list: file_handle.writelines(drug+ '\\n')", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 686, "character": 0}, "end": {"line": 686, "character": 13}}, "selectionRange": {"start": {"line": 686, "character": 7}, "end": {"line": 686, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cell_line_loc", "kind": 13, "range": {"start": {"line": 692, "character": 0}, "end": {"line": 692, "character": 84}}, "selectionRange": {"start": {"line": 692, "character": 0}, "end": {"line": 692, "character": 13}}, "detail": "cell_line_loc = '/cellar/users/samsonfong/Projects/tcrp-v2/from-ma/cell_line_lists/'", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 698, "character": 0}, "end": {"line": 700, "character": 0}}, "selectionRange": {"start": {"line": 698, "character": 53}, "end": {"line": 698, "character": 54}}, "detail": "with open('/data/drug_feature/KU-55933/KU', 'rb') as f: tmap= pickle.load(f)", "children": []}, {"name": "tmap", "kind": 13, "range": {"start": {"line": 699, "character": 4}, "end": {"line": 699, "character": 24}}, "selectionRange": {"start": {"line": 699, "character": 4}, "end": {"line": 699, "character": 8}}, "detail": "tmap= pickle.load(f)", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 717, "character": 0}, "end": {"line": 717, "character": 68}}, "selectionRange": {"start": {"line": 717, "character": 0}, "end": {"line": 717, "character": 1}}, "detail": "f = np.load('/data/drug_feature/KU-55933/lung_KU-55933_feature.npy')", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 13, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 14, "result": [{"name": "matplotlib", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 17}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 17}}, "detail": "module matplotlib", "children": []}, {"name": "os", "kind": 2, "range": {"start": {"line": 10, "character": 0}, "end": {"line": 10, "character": 9}}, "selectionRange": {"start": {"line": 10, "character": 7}, "end": {"line": 10, "character": 9}}, "detail": "module os", "children": []}, {"name": "pd", "kind": 2, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 11, "character": 19}}, "selectionRange": {"start": {"line": 11, "character": 17}, "end": {"line": 11, "character": 19}}, "detail": "module pd", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 12, "character": 0}, "end": {"line": 12, "character": 18}}, "selectionRange": {"start": {"line": 12, "character": 16}, "end": {"line": 12, "character": 18}}, "detail": "module np", "children": []}, {"name": "sys", "kind": 2, "range": {"start": {"line": 13, "character": 0}, "end": {"line": 13, "character": 10}}, "selectionRange": {"start": {"line": 13, "character": 7}, "end": {"line": 13, "character": 10}}, "detail": "module sys", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 14, "character": 0}, "end": {"line": 14, "character": 13}}, "selectionRange": {"start": {"line": 14, "character": 7}, "end": {"line": 14, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cdist", "kind": 12, "range": {"start": {"line": 15, "character": 0}, "end": {"line": 15, "character": 40}}, "selectionRange": {"start": {"line": 15, "character": 35}, "end": {"line": 15, "character": 40}}, "detail": "def cdist", "children": []}, {"name": "math", "kind": 2, "range": {"start": {"line": 16, "character": 0}, "end": {"line": 16, "character": 11}}, "selectionRange": {"start": {"line": 16, "character": 7}, "end": {"line": 16, "character": 11}}, "detail": "module math", "children": []}, {"name": "nx", "kind": 2, "range": {"start": {"line": 17, "character": 0}, "end": {"line": 17, "character": 21}}, "selectionRange": {"start": {"line": 17, "character": 19}, "end": {"line": 17, "character": 21}}, "detail": "module nx", "children": []}, {"name": "nxacc", "kind": 2, "range": {"start": {"line": 18, "character": 0}, "end": {"line": 18, "character": 56}}, "selectionRange": {"start": {"line": 18, "character": 51}, "end": {"line": 18, "character": 56}}, "detail": "module nxacc", "children": []}, {"name": "nxadag", "kind": 2, "range": {"start": {"line": 19, "character": 0}, "end": {"line": 19, "character": 40}}, "selectionRange": {"start": {"line": 19, "character": 34}, "end": {"line": 19, "character": 40}}, "detail": "module nxadag", "children": []}, {"name": "plt", "kind": 2, "range": {"start": {"line": 20, "character": 0}, "end": {"line": 20, "character": 31}}, "selectionRange": {"start": {"line": 20, "character": 28}, "end": {"line": 20, "character": 31}}, "detail": "module plt", "children": []}, {"name": "sns", "kind": 2, "range": {"start": {"line": 21, "character": 0}, "end": {"line": 21, "character": 21}}, "selectionRange": {"start": {"line": 21, "character": 18}, "end": {"line": 21, "character": 21}}, "detail": "module sns", "children": []}, {"name": "itertools", "kind": 2, "range": {"start": {"line": 22, "character": 0}, "end": {"line": 22, "character": 16}}, "selectionRange": {"start": {"line": 22, "character": 7}, "end": {"line": 22, "character": 16}}, "detail": "module itertools", "children": []}, {"name": "mygene", "kind": 2, "range": {"start": {"line": 23, "character": 0}, "end": {"line": 23, "character": 13}}, "selectionRange": {"start": {"line": 23, "character": 7}, "end": {"line": 23, "character": 13}}, "detail": "module mygene", "children": []}, {"name": "re", "kind": 2, "range": {"start": {"line": 24, "character": 0}, "end": {"line": 24, "character": 9}}, "selectionRange": {"start": {"line": 24, "character": 7}, "end": {"line": 24, "character": 9}}, "detail": "module re", "children": []}, {"name": "selected_exp_gene_list", "kind": 13, "range": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 95}}, "selectionRange": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 22}}, "detail": "selected_exp_gene_list = pd.read_csv(\"/data/common_exp_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "selected_mut_gene_list", "kind": 13, "range": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 95}}, "selectionRange": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 22}}, "detail": "selected_mut_gene_list = pd.read_csv(\"/data/common_mut_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "load_network", "kind": 12, "range": {"start": {"line": 37, "character": 0}, "end": {"line": 65, "character": 28}}, "selectionRange": {"start": {"line": 37, "character": 4}, "end": {"line": 37, "character": 16}}, "detail": "def load_network", "children": []}, {"name": "load_name_space", "kind": 12, "range": {"start": {"line": 67, "character": 0}, "end": {"line": 79, "character": 21}}, "selectionRange": {"start": {"line": 67, "character": 4}, "end": {"line": 67, "character": 19}}, "detail": "def load_name_space", "children": []}, {"name": "list2index", "kind": 12, "range": {"start": {"line": 81, "character": 0}, "end": {"line": 88, "character": 41}}, "selectionRange": {"start": {"line": 81, "character": 4}, "end": {"line": 81, "character": 14}}, "detail": "def list2index", "children": []}, {"name": "PDTC_data_file", "kind": 13, "range": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 30}}, "selectionRange": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 14}}, "detail": "PDTC_data_file = '/data/PTDC/'", "children": []}, {"name": "PDTC_exp_data_file", "kind": 13, "range": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 60}}, "selectionRange": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 18}}, "detail": "PDTC_exp_data_file = PDTC_data_file + 'ExpressionModels.tsv'", "children": []}, {"name": "PDTC_drug_cell_line_file", "kind": 13, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 72}}, "selectionRange": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 24}}, "detail": "PDTC_drug_cell_line_file = PDTC_data_file + 'DrugResponsesAUCModels.tsv'", "children": []}, {"name": "PDTC_mutation_data_file", "kind": 13, "range": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 59}}, "selectionRange": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 23}}, "detail": "PDTC_mutation_data_file = PDTC_data_file + 'SNVsModels.tsv'", "children": []}, {"name": "PDTC_drug_target_file", "kind": 13, "range": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 56}}, "selectionRange": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 21}}, "detail": "PDTC_drug_target_file ='/data/GDSC/drug_target_list.csv'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 37}}, "selectionRange": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 46}}, "selectionRange": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "data_file", "kind": 13, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 25}}, "selectionRange": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 9}}, "detail": "data_file = '/data/GDSC/'", "children": []}, {"name": "new_network_file", "kind": 13, "range": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 27}}, "selectionRange": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 16}}, "detail": "new_network_file = '/data/'", "children": []}, {"name": "exp_data_file", "kind": 13, "range": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 61}}, "selectionRange": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 13}}, "detail": "exp_data_file = data_file + 'Cell_line_RMA_proc_basalExp.txt'", "children": []}, {"name": "drug_cell_line_file", "kind": 13, "range": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 64}}, "selectionRange": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 19}}, "detail": "drug_cell_line_file = data_file + 'v17_fitted_dose_response.csv'", "children": []}, {"name": "cell_line_detail_file", "kind": 13, "range": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 60}}, "selectionRange": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 21}}, "detail": "cell_line_detail_file = data_file + 'Cell_Lines_Details.csv'", "children": []}, {"name": "mutation_data_file", "kind": 13, "range": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 51}}, "selectionRange": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 18}}, "detail": "mutation_data_file = data_file + 'WES_variants.csv'", "children": []}, {"name": "drug_target_file", "kind": 13, "range": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 51}}, "selectionRange": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 16}}, "detail": "drug_target_file ='/data/GDSC/drug_target_list.csv'", "children": []}, {"name": "feature_folder", "kind": 13, "range": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 27}}, "selectionRange": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 14}}, "detail": "feature_folder = 'feature/'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 37}}, "selectionRange": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 46}}, "selectionRange": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 58}}, "selectionRange": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 6}}, "detail": "exp_df = pd.read_csv(exp_data_file, sep='\\t', index_col=0)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 21}}, "selectionRange": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 6}}, "detail": "exp_df = exp_df.T[1:]", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 56}}, "selectionRange": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 6}}, "detail": "exp_df = exp_df.rename(columns={np.nan: 'NO_GENE_NAME'})", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 43}}, "selectionRange": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 6}}, "detail": "exp_df = exp_df.drop('NO_GENE_NAME',axis=1)", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 138, "character": 0}, "end": {"line": 140, "character": 26}}, "selectionRange": {"start": {"line": 138, "character": 4}, "end": {"line": 138, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 142, "character": 0}, "end": {"line": 142, "character": 44}}, "selectionRange": {"start": {"line": 142, "character": 7}, "end": {"line": 142, "character": 12}}, "detail": "exp_df.index = exp_df.index.map(stripNumber)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 40}}, "selectionRange": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 6}}, "detail": "exp_df = exp_df.groupby(level=0).first()", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 39}}, "selectionRange": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 6}}, "detail": "exp_df = exp_df[selected_exp_gene_list]", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 36}}, "selectionRange": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 48}}, "selectionRange": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 78}}, "selectionRange": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 11}}, "detail": "PDTC_exp_df = pd.read_csv(PDTC_exp_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 31}}, "selectionRange": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df.T[1:]", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 160, "character": 0}, "end": {"line": 162, "character": 26}}, "selectionRange": {"start": {"line": 160, "character": 4}, "end": {"line": 160, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 49}}, "selectionRange": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df[selected_exp_gene_list]", "children": []}, {"name": "PDTC_exp_gene_list", "kind": 13, "range": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 46}}, "selectionRange": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 18}}, "detail": "PDTC_exp_gene_list = list(PDTC_exp_df.columns)", "children": []}, {"name": "PDTC_exp_cell_line_list", "kind": 13, "range": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 58}}, "selectionRange": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 23}}, "detail": "PDTC_exp_cell_line_list = list(PDTC_exp_df.index.unique())", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 40}}, "selectionRange": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 6}}, "detail": "exp_df = pd.concat([exp_df,PDTC_exp_df])", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 36}}, "selectionRange": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 48}}, "selectionRange": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "maf", "kind": 13, "range": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 69}}, "selectionRange": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 3}}, "detail": "maf = pd.read_csv(mutation_data_file, sep=',', index_col=0).fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 75}}, "selectionRange": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 11}}, "detail": "mutation_df = maf.groupby(['COSMIC_ID', 'Gene']).size().unstack().fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 49}}, "selectionRange": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 11}}, "detail": "mutation_df = mutation_df[selected_mut_gene_list]", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 46}}, "selectionRange": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 58}}, "selectionRange": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "PDTC_maf", "kind": 13, "range": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 80}}, "selectionRange": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 8}}, "detail": "PDTC_maf = pd.read_csv(PDTC_mutation_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 61}}, "selectionRange": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_maf.replace(to_replace=\"NO\",value=0.0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 82}}, "selectionRange": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_mutation_df.replace(to_replace=\"chr*\",value=1.0,regex=True)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 47}}, "selectionRange": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df.transpose()", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 59}}, "selectionRange": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df[selected_mut_gene_list]", "children": []}, {"name": "PDTC_mutation_gene_list", "kind": 13, "range": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 56}}, "selectionRange": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 23}}, "detail": "PDTC_mutation_gene_list = list(PDTC_mutation_df.columns)", "children": []}, {"name": "PDTC_mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 68}}, "selectionRange": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 28}}, "detail": "PDTC_mutation_cell_line_list = list(PDTC_mutation_df.index.unique())", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 55}}, "selectionRange": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 11}}, "detail": "mutation_df = pd.concat([mutation_df,PDTC_mutation_df])", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 46}}, "selectionRange": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 58}}, "selectionRange": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 36}}, "selectionRange": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 11}}, "detail": "file_handle = open(drug_target_file)", "children": []}, {"name": "drug_target_map", "kind": 13, "range": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 20}}, "selectionRange": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 15}}, "detail": "drug_target_map = {}", "children": []}, {"name": "drug_target_list", "kind": 13, "range": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 21}}, "selectionRange": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 16}}, "detail": "drug_target_list = []", "children": []}, {"name": "line", "kind": 13, "range": {"start": {"line": 230, "character": 0}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 230, "character": 4}, "end": {"line": 230, "character": 8}}, "detail": "for line in file_handle: new_line = line.rstrip().split(\",\") drug = new_line[0] target_list=new_line[1].split(',') if drug != \"Drug\": target_list_str = \"\" for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\" drug = drug.strip() drug_target_map[drug] = [] if ',' not in target_list_str: drug_target_map[drug].append(target_list_str.strip()) drug_target_list.append(target_list_str.strip()) else: target_list = target_list_str.split(',') for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "new_line", "kind": 13, "range": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 39}}, "selectionRange": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 12}}, "detail": "new_line = line.rstrip().split(\",\")", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 22}}, "selectionRange": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 8}}, "detail": "drug = new_line[0]", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 38}}, "selectionRange": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 15}}, "detail": "target_list=new_line[1].split(',')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 28}}, "selectionRange": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 23}}, "detail": "target_list_str = \"\"", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 237, "character": 8}, "end": {"line": 242, "character": 0}}, "selectionRange": {"start": {"line": 237, "character": 12}, "end": {"line": 237, "character": 13}}, "detail": "for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 65}}, "selectionRange": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 71}}, "selectionRange": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 27}}, "selectionRange": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 12}}, "detail": "drug = drug.strip()", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 52}}, "selectionRange": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 23}}, "detail": "target_list = target_list_str.split(',')", "children": []}, {"name": "target", "kind": 13, "range": {"start": {"line": 250, "character": 12}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 250, "character": 16}, "end": {"line": 250, "character": 22}}, "detail": "for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "drugs_legend", "kind": 13, "range": {"start": {"line": 261, "character": 0}, "end": {"line": 261, "character": 85}}, "selectionRange": {"start": {"line": 261, "character": 0}, "end": {"line": 261, "character": 12}}, "detail": "drugs_legend = pd.read_csv('/data/GDSC/Screened_Compounds.csv', sep=',', index_col=0)", "children": []}, {"name": "drug2id_mapping", "kind": 13, "range": {"start": {"line": 263, "character": 0}, "end": {"line": 263, "character": 20}}, "selectionRange": {"start": {"line": 263, "character": 0}, "end": {"line": 263, "character": 15}}, "detail": "drug2id_mapping = {}", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 265, "character": 0}, "end": {"line": 268, "character": 0}}, "selectionRange": {"start": {"line": 265, "character": 4}, "end": {"line": 265, "character": 9}}, "detail": "for index in list(drugs_legend.index) : drug_name = drugs_legend.loc[index,'Drug Name'] drug2id_mapping[ drug_name ] = index", "children": []}, {"name": "drug_name", "kind": 13, "range": {"start": {"line": 266, "character": 4}, "end": {"line": 266, "character": 51}}, "selectionRange": {"start": {"line": 266, "character": 4}, "end": {"line": 266, "character": 13}}, "detail": "drug_name = drugs_legend.loc[index,'Drug Name']", "children": []}, {"name": "valid_gene_list", "kind": 13, "range": {"start": {"line": 273, "character": 0}, "end": {"line": 273, "character": 92}}, "selectionRange": {"start": {"line": 273, "character": 0}, "end": {"line": 273, "character": 15}}, "detail": "valid_gene_list = list(set(drug_target_list) | set(exp_gene_list) | set(mutation_gene_list))", "children": []}, {"name": "network_list", "kind": 13, "range": {"start": {"line": 279, "character": 0}, "end": {"line": 279, "character": 82}}, "selectionRange": {"start": {"line": 279, "character": 0}, "end": {"line": 279, "character": 12}}, "detail": "network_list = [new_network_file+inbiomap_file, new_network_file+pathwaycomm_file]", "children": []}, {"name": "gene_neighbor_map", "kind": 13, "range": {"start": {"line": 280, "character": 0}, "end": {"line": 280, "character": 64}}, "selectionRange": {"start": {"line": 280, "character": 0}, "end": {"line": 280, "character": 17}}, "detail": "gene_neighbor_map = load_network(network_list, valid_gene_list)", "children": []}, {"name": "gene_name_df", "kind": 13, "range": {"start": {"line": 286, "character": 0}, "end": {"line": 286, "character": 89}}, "selectionRange": {"start": {"line": 286, "character": 0}, "end": {"line": 286, "character": 12}}, "detail": "gene_name_df = pd.read_table('/data/HUGO_protein-coding_gene.tsv',index_col=25, sep='\\t')", "children": []}, {"name": "gene_name_map", "kind": 13, "range": {"start": {"line": 292, "character": 0}, "end": {"line": 292, "character": 18}}, "selectionRange": {"start": {"line": 292, "character": 0}, "end": {"line": 292, "character": 13}}, "detail": "gene_name_map = {}", "children": []}, {"name": "uniprot_gene", "kind": 13, "range": {"start": {"line": 294, "character": 0}, "end": {"line": 303, "character": 0}}, "selectionRange": {"start": {"line": 294, "character": 4}, "end": {"line": 294, "character": 16}}, "detail": "for uniprot_gene in gene_name_df.index: if isinstance(uniprot_gene, type('aaa')) == False: continue if isinstance(gene_name_df.loc[uniprot_gene, 'symbol'], type('aaa')) == False: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol'][0] else: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 308, "character": 0}, "end": {"line": 308, "character": 76}}, "selectionRange": {"start": {"line": 308, "character": 0}, "end": {"line": 308, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "uniprot_gene_set", "kind": 13, "range": {"start": {"line": 310, "character": 0}, "end": {"line": 310, "character": 24}}, "selectionRange": {"start": {"line": 310, "character": 0}, "end": {"line": 310, "character": 16}}, "detail": "uniprot_gene_set = set()", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 312, "character": 0}, "end": {"line": 321, "character": 0}}, "selectionRange": {"start": {"line": 312, "character": 4}, "end": {"line": 312, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 317, "character": 4}, "end": {"line": 317, "character": 74}}, "selectionRange": {"start": {"line": 317, "character": 4}, "end": {"line": 317, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 319, "character": 4}, "end": {"line": 321, "character": 0}}, "selectionRange": {"start": {"line": 319, "character": 8}, "end": {"line": 319, "character": 12}}, "detail": "for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "query_gene_set", "kind": 13, "range": {"start": {"line": 324, "character": 0}, "end": {"line": 324, "character": 19}}, "selectionRange": {"start": {"line": 324, "character": 0}, "end": {"line": 324, "character": 14}}, "detail": "query_gene_set = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 326, "character": 0}, "end": {"line": 329, "character": 0}}, "selectionRange": {"start": {"line": 326, "character": 4}, "end": {"line": 326, "character": 8}}, "detail": "for gene in uniprot_gene_set: if gene not in gene_name_map: query_gene_set.append(gene)", "children": []}, {"name": "query_gene_list", "kind": 13, "range": {"start": {"line": 332, "character": 0}, "end": {"line": 332, "character": 38}}, "selectionRange": {"start": {"line": 332, "character": 0}, "end": {"line": 332, "character": 15}}, "detail": "query_gene_list = list(query_gene_set)", "children": []}, {"name": "mg", "kind": 13, "range": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 24}}, "selectionRange": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 2}}, "detail": "mg = mygene.MyGeneInfo()", "children": []}, {"name": "out", "kind": 13, "range": {"start": {"line": 335, "character": 0}, "end": {"line": 335, "character": 87}}, "selectionRange": {"start": {"line": 335, "character": 0}, "end": {"line": 335, "character": 3}}, "detail": "out = mg.querymany(query_gene_list, scopes='uniprot', fields='symbol', species='human')", "children": []}, {"name": "not_found_gene_list", "kind": 13, "range": {"start": {"line": 337, "character": 0}, "end": {"line": 337, "character": 24}}, "selectionRange": {"start": {"line": 337, "character": 0}, "end": {"line": 337, "character": 19}}, "detail": "not_found_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 339, "character": 0}, "end": {"line": 344, "character": 0}}, "selectionRange": {"start": {"line": 339, "character": 4}, "end": {"line": 339, "character": 5}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 339, "character": 0}, "end": {"line": 344, "character": 0}}, "selectionRange": {"start": {"line": 339, "character": 7}, "end": {"line": 339, "character": 11}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 351, "character": 0}, "end": {"line": 351, "character": 76}}, "selectionRange": {"start": {"line": 351, "character": 0}, "end": {"line": 351, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 353, "character": 0}, "end": {"line": 375, "character": 0}}, "selectionRange": {"start": {"line": 353, "character": 4}, "end": {"line": 353, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') complex_symbol_list = [] for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] ) for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 358, "character": 4}, "end": {"line": 358, "character": 74}}, "selectionRange": {"start": {"line": 358, "character": 4}, "end": {"line": 358, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "complex_symbol_list", "kind": 13, "range": {"start": {"line": 360, "character": 4}, "end": {"line": 360, "character": 28}}, "selectionRange": {"start": {"line": 360, "character": 4}, "end": {"line": 360, "character": 23}}, "detail": "complex_symbol_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 362, "character": 4}, "end": {"line": 365, "character": 0}}, "selectionRange": {"start": {"line": 362, "character": 8}, "end": {"line": 362, "character": 12}}, "detail": "for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] )", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 366, "character": 4}, "end": {"line": 375, "character": 0}}, "selectionRange": {"start": {"line": 366, "character": 8}, "end": {"line": 366, "character": 13}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 366, "character": 4}, "end": {"line": 375, "character": 0}}, "selectionRange": {"start": {"line": 366, "character": 15}, "end": {"line": 366, "character": 20}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene_exp_neighbor_map", "kind": 13, "range": {"start": {"line": 380, "character": 0}, "end": {"line": 380, "character": 26}}, "selectionRange": {"start": {"line": 380, "character": 0}, "end": {"line": 380, "character": 21}}, "detail": "gene_exp_neighbor_map = {}", "children": []}, {"name": "exp_matrix", "kind": 13, "range": {"start": {"line": 381, "character": 0}, "end": {"line": 381, "character": 26}}, "selectionRange": {"start": {"line": 381, "character": 0}, "end": {"line": 381, "character": 10}}, "detail": "exp_matrix = exp_df.values", "children": []}, {"name": "P", "kind": 13, "range": {"start": {"line": 383, "character": 0}, "end": {"line": 383, "character": 79}}, "selectionRange": {"start": {"line": 383, "character": 0}, "end": {"line": 383, "character": 1}}, "detail": "P = 1 - cdist(np.transpose(exp_matrix), np.transpose(exp_matrix),'correlation')", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 385, "character": 0}, "end": {"line": 399, "character": 0}}, "selectionRange": {"start": {"line": 385, "character": 4}, "end": {"line": 385, "character": 5}}, "detail": "for i in range(len(exp_gene_list)): gene1 = exp_gene_list[i] gene_exp_neighbor_map[gene1] = set() for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2) if gene1 not in gene_exp_neighbor_map[gene1]: print (gene1, 'not in itself?', P[i,i])", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 387, "character": 4}, "end": {"line": 387, "character": 28}}, "selectionRange": {"start": {"line": 387, "character": 4}, "end": {"line": 387, "character": 9}}, "detail": "gene1 = exp_gene_list[i]", "children": []}, {"name": "j", "kind": 13, "range": {"start": {"line": 390, "character": 4}, "end": {"line": 396, "character": 0}}, "selectionRange": {"start": {"line": 390, "character": 8}, "end": {"line": 390, "character": 9}}, "detail": "for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 392, "character": 8}, "end": {"line": 392, "character": 32}}, "selectionRange": {"start": {"line": 392, "character": 8}, "end": {"line": 392, "character": 13}}, "detail": "gene2 = exp_gene_list[j]", "children": []}, {"name": "drug_feature_list", "kind": 13, "range": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 22}}, "selectionRange": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 17}}, "detail": "drug_feature_list = []", "children": []}, {"name": "drug_neighbor_map", "kind": 13, "range": {"start": {"line": 408, "character": 0}, "end": {"line": 408, "character": 22}}, "selectionRange": {"start": {"line": 408, "character": 0}, "end": {"line": 408, "character": 17}}, "detail": "drug_neighbor_map = {}", "children": []}, {"name": "selected_drug_list", "kind": 13, "range": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 23}}, "selectionRange": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 18}}, "detail": "selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 411, "character": 0}, "end": {"line": 428, "character": 0}}, "selectionRange": {"start": {"line": 411, "character": 4}, "end": {"line": 411, "character": 8}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 411, "character": 0}, "end": {"line": 428, "character": 0}}, "selectionRange": {"start": {"line": 411, "character": 10}, "end": {"line": 411, "character": 21}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 414, "character": 8}, "end": {"line": 424, "character": 0}}, "selectionRange": {"start": {"line": 414, "character": 12}, "end": {"line": 414, "character": 16}}, "detail": "for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene]", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 442, "character": 0}, "end": {"line": 442, "character": 52}}, "selectionRange": {"start": {"line": 442, "character": 0}, "end": {"line": 442, "character": 5}}, "detail": "drugs = pd.read_csv(drug_cell_line_file,index_col=2)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 443, "character": 0}, "end": {"line": 443, "character": 93}}, "selectionRange": {"start": {"line": 443, "character": 0}, "end": {"line": 443, "character": 5}}, "detail": "drugs = drugs.drop([\"DATASET_VERSION\",\"IC50_RESULTS_ID\",\"MAX_CONC_MICROMOLAR\",\"RMSE\"],axis=1)", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 444, "character": 0}, "end": {"line": 444, "character": 49}}, "selectionRange": {"start": {"line": 444, "character": 0}, "end": {"line": 444, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 446, "character": 0}, "end": {"line": 446, "character": 28}}, "selectionRange": {"start": {"line": 446, "character": 0}, "end": {"line": 446, "character": 9}}, "detail": "drug_list = drugs[\"DRUG_ID\"]", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 447, "character": 0}, "end": {"line": 447, "character": 16}}, "selectionRange": {"start": {"line": 447, "character": 0}, "end": {"line": 447, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 457, "character": 0}, "end": {"line": 457, "character": 71}}, "selectionRange": {"start": {"line": 457, "character": 0}, "end": {"line": 457, "character": 10}}, "detail": "PDTC_drugs = pd.read_csv(PDTC_drug_cell_line_file,sep='\\t',index_col=0)", "children": []}, {"name": "PDTC_drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 458, "character": 0}, "end": {"line": 458, "character": 59}}, "selectionRange": {"start": {"line": 458, "character": 0}, "end": {"line": 458, "character": 25}}, "detail": "PDTC_drugs_cell_line_list = list(PDTC_drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 460, "character": 0}, "end": {"line": 460, "character": 39}}, "selectionRange": {"start": {"line": 460, "character": 0}, "end": {"line": 460, "character": 9}}, "detail": "drug_list = PDTC_drugs[\"Drug\"].tolist()", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 461, "character": 0}, "end": {"line": 461, "character": 16}}, "selectionRange": {"start": {"line": 461, "character": 0}, "end": {"line": 461, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 462, "character": 0}, "end": {"line": 467, "character": 0}}, "selectionRange": {"start": {"line": 462, "character": 4}, "end": {"line": 462, "character": 5}}, "detail": "for i in drug_list: if i in drug2id_mapping.keys(): new_drug_id.append(drug2id_mapping[i]) else: new_drug_id.append(0)", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 84}}, "selectionRange": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 10}}, "detail": "PDTC_drugs = PDTC_drugs.drop([\"Drug\",\"iC50\",\"D1_CONC\",\"D5_CONC\",\"perc.iC50\"],axis=1)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 477, "character": 0}, "end": {"line": 477, "character": 37}}, "selectionRange": {"start": {"line": 477, "character": 0}, "end": {"line": 477, "character": 5}}, "detail": "drugs = pd.concat([drugs,PDTC_drugs])", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 49}}, "selectionRange": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "cell_line_list", "kind": 13, "range": {"start": {"line": 490, "character": 0}, "end": {"line": 490, "character": 102}}, "selectionRange": {"start": {"line": 490, "character": 0}, "end": {"line": 490, "character": 14}}, "detail": "cell_line_list = list(set(drugs_cell_line_list)&set(exp_cell_line_list)&set(mutation_cell_line_list) )", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 497, "character": 0}, "end": {"line": 497, "character": 66}}, "selectionRange": {"start": {"line": 497, "character": 0}, "end": {"line": 497, "character": 16}}, "detail": "cell_line_legend = pd.read_csv(cell_line_detail_file, index_col=1)", "children": []}, {"name": "PDTC_cell_line", "kind": 13, "range": {"start": {"line": 498, "character": 0}, "end": {"line": 498, "character": 206}}, "selectionRange": {"start": {"line": 498, "character": 0}, "end": {"line": 498, "character": 14}}, "detail": "PDTC_cell_line = pd.DataFrame({'Line': [\"BRCA\"]*len(PDTC_exp_cell_line_list), 'Site':[\"PDTC\"]*len(PDTC_exp_cell_line_list),\"Histology\":[\"breast\"]*len(PDTC_exp_cell_line_list)},index=PDTC_exp_cell_line_list)", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 499, "character": 0}, "end": {"line": 499, "character": 63}}, "selectionRange": {"start": {"line": 499, "character": 0}, "end": {"line": 499, "character": 16}}, "detail": "cell_line_legend = pd.concat([cell_line_legend,PDTC_cell_line])", "children": []}, {"name": "tissue_map", "kind": 13, "range": {"start": {"line": 502, "character": 0}, "end": {"line": 502, "character": 15}}, "selectionRange": {"start": {"line": 502, "character": 0}, "end": {"line": 502, "character": 10}}, "detail": "tissue_map = {}", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 504, "character": 0}, "end": {"line": 512, "character": 0}}, "selectionRange": {"start": {"line": 504, "character": 4}, "end": {"line": 504, "character": 13}}, "detail": "for cell_line in cell_line_list: tissue = cell_line_legend.loc[cell_line,'Site'] if tissue not in tissue_map: tissue_map[tissue] = [] tissue_map[tissue].append(cell_line)", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 506, "character": 4}, "end": {"line": 506, "character": 51}}, "selectionRange": {"start": {"line": 506, "character": 4}, "end": {"line": 506, "character": 10}}, "detail": "tissue = cell_line_legend.loc[cell_line,'Site']", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 513, "character": 0}, "end": {"line": 513, "character": 23}}, "selectionRange": {"start": {"line": 513, "character": 0}, "end": {"line": 513, "character": 19}}, "detail": "large_tissue_number = 0", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 514, "character": 0}, "end": {"line": 520, "character": 0}}, "selectionRange": {"start": {"line": 514, "character": 4}, "end": {"line": 514, "character": 10}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 514, "character": 0}, "end": {"line": 520, "character": 0}}, "selectionRange": {"start": {"line": 514, "character": 12}, "end": {"line": 514, "character": 21}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 517, "character": 8}, "end": {"line": 517, "character": 32}}, "selectionRange": {"start": {"line": 517, "character": 8}, "end": {"line": 517, "character": 27}}, "detail": "large_tissue_number += 1", "children": []}, {"name": "new_exp_gene_list", "kind": 13, "range": {"start": {"line": 540, "character": 0}, "end": {"line": 540, "character": 22}}, "selectionRange": {"start": {"line": 540, "character": 0}, "end": {"line": 540, "character": 17}}, "detail": "new_exp_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 541, "character": 0}, "end": {"line": 544, "character": 0}}, "selectionRange": {"start": {"line": 541, "character": 4}, "end": {"line": 541, "character": 5}}, "detail": "for i in exp_gene_list: if i in valid_gene_list: new_exp_gene_list.append(i)", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 549, "character": 0}, "end": {"line": 549, "character": 41}}, "selectionRange": {"start": {"line": 549, "character": 0}, "end": {"line": 549, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 550, "character": 0}, "end": {"line": 550, "character": 38}}, "selectionRange": {"start": {"line": 550, "character": 0}, "end": {"line": 550, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 551, "character": 0}, "end": {"line": 551, "character": 72}}, "selectionRange": {"start": {"line": 551, "character": 0}, "end": {"line": 551, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 553, "character": 0}, "end": {"line": 553, "character": 43}}, "selectionRange": {"start": {"line": 553, "character": 0}, "end": {"line": 553, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 554, "character": 0}, "end": {"line": 554, "character": 68}}, "selectionRange": {"start": {"line": 554, "character": 0}, "end": {"line": 554, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 561, "character": 0}, "end": {"line": 561, "character": 58}}, "selectionRange": {"start": {"line": 561, "character": 0}, "end": {"line": 561, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 562, "character": 0}, "end": {"line": 562, "character": 68}}, "selectionRange": {"start": {"line": 562, "character": 0}, "end": {"line": 562, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "new_data_file", "kind": 13, "range": {"start": {"line": 571, "character": 0}, "end": {"line": 571, "character": 18}}, "selectionRange": {"start": {"line": 571, "character": 0}, "end": {"line": 571, "character": 13}}, "detail": "new_data_file = ''", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 41}}, "selectionRange": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 38}}, "selectionRange": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 72}}, "selectionRange": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 43}}, "selectionRange": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 68}}, "selectionRange": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 58}}, "selectionRange": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 68}}, "selectionRange": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "rename_selected_drug_list", "kind": 13, "range": {"start": {"line": 592, "character": 0}, "end": {"line": 592, "character": 30}}, "selectionRange": {"start": {"line": 592, "character": 0}, "end": {"line": 592, "character": 25}}, "detail": "rename_selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 594, "character": 0}, "end": {"line": 664, "character": 0}}, "selectionRange": {"start": {"line": 594, "character": 4}, "end": {"line": 594, "character": 8}}, "detail": "for drug in selected_drug_list: print(drug) if drug not in drug2id_mapping: print('drug name wrong', drug) else: cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]] feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) ) feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) ) print(len(feature_exp_gene_list) + len(feature_mut_gene_list)) if len(feature_exp_gene_list) + len(feature_mut_gene_list) == 0: continue feature_description = [] drug_tissue_map = {} drug = drug.replace(' ','_') rename_selected_drug_list.append(drug) if drug == 'Nutlin-3a_(-)': drug = 'Nutlin-3a' drug_folder = '/data/merged/drug_feature/' + drug + '/' if not os.path.exists(drug_folder): os.makedirs(drug_folder) for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description)) file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\") pickle.dump(drug_tissue_map,file_handle) file_handle.close()", "children": []}, {"name": "cell_line_drug_matrix", "kind": 13, "range": {"start": {"line": 602, "character": 8}, "end": {"line": 602, "character": 84}}, "selectionRange": {"start": {"line": 602, "character": 8}, "end": {"line": 602, "character": 29}}, "detail": "cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]]", "children": []}, {"name": "feature_exp_gene_list", "kind": 13, "range": {"start": {"line": 607, "character": 8}, "end": {"line": 607, "character": 98}}, "selectionRange": {"start": {"line": 607, "character": 8}, "end": {"line": 607, "character": 29}}, "detail": "feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) )", "children": []}, {"name": "feature_mut_gene_list", "kind": 13, "range": {"start": {"line": 608, "character": 8}, "end": {"line": 608, "character": 98}}, "selectionRange": {"start": {"line": 608, "character": 8}, "end": {"line": 608, "character": 29}}, "detail": "feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) )", "children": []}, {"name": "feature_description", "kind": 13, "range": {"start": {"line": 612, "character": 8}, "end": {"line": 612, "character": 32}}, "selectionRange": {"start": {"line": 612, "character": 8}, "end": {"line": 612, "character": 27}}, "detail": "feature_description = []", "children": []}, {"name": "drug_tissue_map", "kind": 13, "range": {"start": {"line": 614, "character": 8}, "end": {"line": 614, "character": 28}}, "selectionRange": {"start": {"line": 614, "character": 8}, "end": {"line": 614, "character": 23}}, "detail": "drug_tissue_map = {}", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 616, "character": 8}, "end": {"line": 616, "character": 36}}, "selectionRange": {"start": {"line": 616, "character": 8}, "end": {"line": 616, "character": 12}}, "detail": "drug = drug.replace(' ','_')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 622, "character": 12}, "end": {"line": 622, "character": 30}}, "selectionRange": {"start": {"line": 622, "character": 12}, "end": {"line": 622, "character": 16}}, "detail": "drug = 'Nutlin-3a'", "children": []}, {"name": "drug_folder", "kind": 13, "range": {"start": {"line": 624, "character": 8}, "end": {"line": 624, "character": 63}}, "selectionRange": {"start": {"line": 624, "character": 8}, "end": {"line": 624, "character": 19}}, "detail": "drug_folder = '/data/merged/drug_feature/' + drug + '/'", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 630, "character": 8}, "end": {"line": 660, "character": 0}}, "selectionRange": {"start": {"line": 630, "character": 12}, "end": {"line": 630, "character": 18}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "tissue_cell_line_list", "kind": 13, "range": {"start": {"line": 630, "character": 8}, "end": {"line": 660, "character": 0}}, "selectionRange": {"start": {"line": 630, "character": 20}, "end": {"line": 630, "character": 41}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 633, "character": 12}, "end": {"line": 633, "character": 103}}, "selectionRange": {"start": {"line": 633, "character": 12}, "end": {"line": 633, "character": 35}}, "detail": "drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list )", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 634, "character": 12}, "end": {"line": 634, "character": 67}}, "selectionRange": {"start": {"line": 634, "character": 12}, "end": {"line": 634, "character": 35}}, "detail": "drug_specific_cell_line = list(drug_specific_cell_line)", "children": []}, {"name": "feature_list", "kind": 13, "range": {"start": {"line": 637, "character": 12}, "end": {"line": 637, "character": 29}}, "selectionRange": {"start": {"line": 637, "character": 12}, "end": {"line": 637, "character": 24}}, "detail": "feature_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 641, "character": 16}, "end": {"line": 643, "character": 0}}, "selectionRange": {"start": {"line": 641, "character": 20}, "end": {"line": 641, "character": 24}}, "detail": "for gene in feature_exp_gene_list: feature_description.append(gene+'_expression')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 646, "character": 16}, "end": {"line": 648, "character": 0}}, "selectionRange": {"start": {"line": 646, "character": 20}, "end": {"line": 646, "character": 24}}, "detail": "for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation')", "children": []}, {"name": "feature", "kind": 13, "range": {"start": {"line": 649, "character": 12}, "end": {"line": 649, "character": 58}}, "selectionRange": {"start": {"line": 649, "character": 12}, "end": {"line": 649, "character": 19}}, "detail": "feature = np.concatenate(feature_list, axis=1)", "children": []}, {"name": "label", "kind": 13, "range": {"start": {"line": 651, "character": 12}, "end": {"line": 651, "character": 88}}, "selectionRange": {"start": {"line": 651, "character": 12}, "end": {"line": 651, "character": 17}}, "detail": "label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 661, "character": 8}, "end": {"line": 661, "character": 84}}, "selectionRange": {"start": {"line": 661, "character": 8}, "end": {"line": 661, "character": 19}}, "detail": "file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\")", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 665, "character": 0}, "end": {"line": 665, "character": 52}}, "selectionRange": {"start": {"line": 665, "character": 0}, "end": {"line": 665, "character": 11}}, "detail": "file_handle = open('rename_selected_drug_list', 'w')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 666, "character": 0}, "end": {"line": 668, "character": 0}}, "selectionRange": {"start": {"line": 666, "character": 4}, "end": {"line": 666, "character": 8}}, "detail": "for drug in rename_selected_drug_list: file_handle.writelines(drug+ '\\n')", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 686, "character": 0}, "end": {"line": 686, "character": 13}}, "selectionRange": {"start": {"line": 686, "character": 7}, "end": {"line": 686, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cell_line_loc", "kind": 13, "range": {"start": {"line": 692, "character": 0}, "end": {"line": 692, "character": 84}}, "selectionRange": {"start": {"line": 692, "character": 0}, "end": {"line": 692, "character": 13}}, "detail": "cell_line_loc = '/cellar/users/samsonfong/Projects/tcrp-v2/from-ma/cell_line_lists/'", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 698, "character": 0}, "end": {"line": 700, "character": 0}}, "selectionRange": {"start": {"line": 698, "character": 53}, "end": {"line": 698, "character": 54}}, "detail": "with open('/data/drug_feature/KU-55933/KU', 'rb') as f: tmap= pickle.load(f)", "children": []}, {"name": "tmap", "kind": 13, "range": {"start": {"line": 699, "character": 4}, "end": {"line": 699, "character": 24}}, "selectionRange": {"start": {"line": 699, "character": 4}, "end": {"line": 699, "character": 8}}, "detail": "tmap= pickle.load(f)", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 717, "character": 0}, "end": {"line": 717, "character": 68}}, "selectionRange": {"start": {"line": 717, "character": 0}, "end": {"line": 717, "character": 1}}, "detail": "f = np.load('/data/drug_feature/KU-55933/lung_KU-55933_feature.npy')", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 15, "result": [{"title": "Inline variable", "kind": "refactor.inline", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///root/capsule/code/process_merged.py", "version": 1}, "edits": [{"range": {"start": {"line": 383, "character": 0}, "end": {"line": 384, "character": 0}}, "newText": ""}, {"range": {"start": {"line": 394, "character": 21}, "end": {"line": 394, "character": 22}}, "newText": "(1 - cdist(np.transpose(exp_matrix), np.transpose(exp_matrix),'correlation'))"}, {"range": {"start": {"line": 398, "character": 40}, "end": {"line": 398, "character": 41}}, "newText": "(1 - cdist(np.transpose(exp_matrix), np.transpose(exp_matrix),'correlation'))"}]}]}}]}
