INFO:pygls.server:Starting IO server
INFO:pygls.feature_manager:Registered "textDocument/didOpen" with options "None"
INFO:pygls.feature_manager:Registered "textDocument/didChange" with options "None"
INFO:pygls.feature_manager:Registered "textDocument/didSave" with options "None"
INFO:pygls.feature_manager:Registered "textDocument/didClose" with options "None"
INFO:pygls.feature_manager:Registered "textDocument/hover" with options "None"
INFO:pygls.protocol:Language server initialized work_done_token=None process_id=87 root_uri='file:///root/capsule' capabilities=ClientCapabilities(workspace=WorkspaceClientCapabilities(apply_edit=True, workspace_edit=WorkspaceEditClientCapabilities(document_changes=True, resource_operations=[<ResourceOperationKind.Create: 'create'>, <ResourceOperationKind.Rename: 'rename'>, <ResourceOperationKind.Delete: 'delete'>], failure_handling=<FailureHandlingKind.TextOnlyTransactional: 'textOnlyTransactional'>, normalizes_line_endings=True, change_annotation_support=ChangeAnnotationSupport(groups_on_label=True)), did_change_configuration=DidChangeConfigurationClientCapabilities(dynamic_registration=True), did_change_watched_files=DidChangeWatchedFilesClientCapabilities(dynamic_registration=True), symbol=WorkspaceSymbolClientCapabilities(dynamic_registration=True, symbol_kind=WorkspaceCapabilitiesSymbolKind(value_set=[<SymbolKind.File: 1>, <SymbolKind.Module: 2>, <SymbolKind.Namespace: 3>, <SymbolKind.Package: 4>, <SymbolKind.Class: 5>, <SymbolKind.Method: 6>, <SymbolKind.Property: 7>, <SymbolKind.Field: 8>, <SymbolKind.Constructor: 9>, <SymbolKind.Enum: 10>, <SymbolKind.Interface: 11>, <SymbolKind.Function: 12>, <SymbolKind.Variable: 13>, <SymbolKind.Constant: 14>, <SymbolKind.String: 15>, <SymbolKind.Number: 16>, <SymbolKind.Boolean: 17>, <SymbolKind.Array: 18>, <SymbolKind.Object: 19>, <SymbolKind.Key: 20>, <SymbolKind.Null: 21>, <SymbolKind.EnumMember: 22>, <SymbolKind.Struct: 23>, <SymbolKind.Event: 24>, <SymbolKind.Operator: 25>, <SymbolKind.TypeParameter: 26>]), tag_support=WorkspaceCapabilitiesTagSupport(value_set=[<SymbolKind.File: 1>])), execute_command=ExecuteCommandClientCapabilities(dynamic_registration=True), workspace_folders=True, configuration=True, semantic_tokens=SemanticTokensWorkspaceClientCapabilities(refresh_support=True), code_lens=CodeLensWorkspaceClientCapabilities(refresh_support=True), file_operations=FileOperationsClientCapabilities(dynamic_registration=True, did_create=True, will_create=True, did_rename=True, will_rename=True, did_delete=True, will_delete=True)), text_document=TextDocumentClientCapabilities(synchronization=TextDocumentSyncClientCapabilities(dynamic_registration=True, will_save=True, will_save_wait_until=True, did_save=True), completion=CompletionClientCapabilities(dynamic_registration=True, completion_item=CompletionItemClientCapabilities(snippet_support=True, commit_characters_support=True, documentation_format=[<MarkupKind.Markdown: 'markdown'>, <MarkupKind.PlainText: 'plaintext'>], deprecated_support=True, preselect_support=True, tag_support=CompletionTagSupportClientCapabilities(value_set=[<CompletionItemTag.Deprecated: 1>]), insert_replace_support=True, resolve_support=ResolveSupportClientCapabilities(properties=['documentation', 'detail', 'additionalTextEdits']), insert_text_mode_support=InsertTextModeSupportClientCapabilities(value_set=[<InsertTextMode.AsIs: 1>, <InsertTextMode.AdjustIndentation: 2>])), completion_item_kind=CompletionItemKindClientCapabilities(value_set=[<CompletionItemKind.Text: 1>, <CompletionItemKind.Method: 2>, <CompletionItemKind.Function: 3>, <CompletionItemKind.Constructor: 4>, <CompletionItemKind.Field: 5>, <CompletionItemKind.Variable: 6>, <CompletionItemKind.Class: 7>, <CompletionItemKind.Interface: 8>, <CompletionItemKind.Module: 9>, <CompletionItemKind.Property: 10>, <CompletionItemKind.Unit: 11>, <CompletionItemKind.Value: 12>, <CompletionItemKind.Enum: 13>, <CompletionItemKind.Keyword: 14>, <CompletionItemKind.Snippet: 15>, <CompletionItemKind.Color: 16>, <CompletionItemKind.File: 17>, <CompletionItemKind.Reference: 18>, <CompletionItemKind.Folder: 19>, <CompletionItemKind.EnumMember: 20>, <CompletionItemKind.Constant: 21>, <CompletionItemKind.Struct: 22>, <CompletionItemKind.Event: 23>, <CompletionItemKind.Operator: 24>, <CompletionItemKind.TypeParameter: 25>]), context_support=True), hover=HoverClientCapabilities(dynamic_registration=True, content_format=[<MarkupKind.Markdown: 'markdown'>, <MarkupKind.PlainText: 'plaintext'>]), signature_help=SignatureHelpClientCapabilities(dynamic_registration=True, signature_information=SignatureHelpInformationClientCapabilities(documentation_format=[<MarkupKind.Markdown: 'markdown'>, <MarkupKind.PlainText: 'plaintext'>], parameter_information=SignatureHelpInformationParameterInformationClientCapabilities(label_offset_support=True), active_parameter_support=True), context_support=True), declaration=DeclarationClientCapabilities(dynamic_registration=True, link_support=True), definition=DefinitionClientCapabilities(dynamic_registration=True, link_support=True), type_definition=TypeDefinitionClientCapabilities(dynamic_registration=True, link_support=True), implementation=ImplementationClientCapabilities(dynamic_registration=True, link_support=True), references=ReferenceClientCapabilities(dynamic_registration=True), document_highlight=DocumentHighlightClientCapabilities(dynamic_registration=True), document_symbol=DocumentSymbolClientCapabilities(dynamic_registration=True, symbol_kind=WorkspaceCapabilitiesSymbolKind(value_set=[<SymbolKind.File: 1>, <SymbolKind.Module: 2>, <SymbolKind.Namespace: 3>, <SymbolKind.Package: 4>, <SymbolKind.Class: 5>, <SymbolKind.Method: 6>, <SymbolKind.Property: 7>, <SymbolKind.Field: 8>, <SymbolKind.Constructor: 9>, <SymbolKind.Enum: 10>, <SymbolKind.Interface: 11>, <SymbolKind.Function: 12>, <SymbolKind.Variable: 13>, <SymbolKind.Constant: 14>, <SymbolKind.String: 15>, <SymbolKind.Number: 16>, <SymbolKind.Boolean: 17>, <SymbolKind.Array: 18>, <SymbolKind.Object: 19>, <SymbolKind.Key: 20>, <SymbolKind.Null: 21>, <SymbolKind.EnumMember: 22>, <SymbolKind.Struct: 23>, <SymbolKind.Event: 24>, <SymbolKind.Operator: 25>, <SymbolKind.TypeParameter: 26>]), hierarchical_document_symbol_support=True, tag_support=WorkspaceCapabilitiesTagSupport(value_set=[<SymbolKind.File: 1>]), label_support=True), code_action=CodeActionClientCapabilities(dynamic_registration=True, code_action_literal_support=CodeActionLiteralSupportClientCapabilities(code_action_kind=CodeActionLiteralSupportActionKindClientCapabilities(value_set=['', 'quickfix', 'refactor', 'refactor.extract', 'refactor.inline', 'refactor.rewrite', 'source', 'source.organizeImports'])), is_preferred_support=True, disabled_support=True, data_support=True, resolve_support=ResolveSupportClientCapabilities(properties=['edit']), honors_change_annotations=False), code_lens=CodeLensClientCapabilities(dynamic_registration=True), document_link=DocumentLinkClientCapabilities(dynamic_registration=True, tooltip_support=True), color_provider=DocumentColorClientCapabilities(dynamic_registration=True), formatting=DocumentFormattingClientCapabilities(dynamic_registration=True), range_formatting=DocumentRangeFormattingClientCapabilities(dynamic_registration=True), on_type_formatting=DocumentOnTypeFormattingClientCapabilities(dynamic_registration=True), rename=RenameClientCapabilities(dynamic_registration=True, prepare_support=True, prepare_support_default_behavior=<PrepareSupportDefaultBehavior.Identifier: 1>, honors_change_annotations=True), publish_diagnostics=PublishDiagnosticsClientCapabilities(related_information=True, tag_support=PublishDiagnosticsTagSupportClientCapabilities(value_set=[<DiagnosticTag.Unnecessary: 1>, <DiagnosticTag.Deprecated: 2>]), version_support=False, code_description_support=True, data_support=True), folding_range=FoldingRangeClientCapabilities(dynamic_registration=True, range_limit=5000, line_folding_only=True), selection_range=SelectionRangeClientCapabilities(dynamic_registration=True), linked_editing_range=LinkedEditingRangeClientCapabilities(dynamic_registration=True), call_hierarchy=CallHierarchyClientCapabilities(dynamic_registration=True), semantic_tokens=SemanticTokensClientCapabilities(requests=SemanticTokensRequests(range=True, full=SemanticTokensRequestsFull(delta=True)), token_types=['namespace', 'type', 'class', 'enum', 'interface', 'struct', 'typeParameter', 'parameter', 'variable', 'property', 'enumMember', 'event', 'function', 'method', 'macro', 'keyword', 'modifier', 'comment', 'string', 'number', 'regexp', 'operator'], token_modifiers=['declaration', 'definition', 'readonly', 'static', 'deprecated', 'abstract', 'async', 'modification', 'documentation', 'defaultLibrary'], formats=[<TokenFormat.Relative: 'relative'>], overlapping_token_support=False, multiline_token_support=False, dynamic_registration=True), moniker=None), window=WindowClientCapabilities(work_done_progress=True, show_message=ShowMessageRequestClientCapabilities(message_action_item=ShowMessageRequestActionItem(additional_properties_support=True)), show_document=ShowDocumentClientCapabilities(support=True)), general=GeneralClientCapabilities(regular_expressions=RegularExpressionsClientCapabilities(engine='ECMAScript', version='ES2020'), markdown=MarkdownClientCapabilities(parser='marked', version='1.1.0')), experimental=None) client_info=ClientInfo(name='code-server', version='1.63.0') locale='en' root_path='/root/capsule' initialization_options={'markupKindPreferred': 'markdown', 'completion': {'resolveEagerly': False, 'disableSnippets': False}, 'diagnostics': {'enable': True, 'didOpen': True, 'didSave': True, 'didChange': True}, 'workspace': {'extraPaths': ['/root/capsule'], 'symbols': {'maxSymbols': 0}}} trace=<Trace.Off: 'off'> workspace_folders=[WorkspaceFolder(uri='file:///root/capsule', name='capsule')]
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 0, "result": {"capabilities": {"textDocumentSync": {"openClose": true, "change": 2, "willSave": false, "willSaveWaitUntil": false, "save": true}, "completionProvider": {"triggerCharacters": [".", "'", "\""], "resolveProvider": true}, "hoverProvider": true, "signatureHelpProvider": {"triggerCharacters": ["(", ","]}, "definitionProvider": true, "referencesProvider": true, "documentHighlightProvider": true, "documentSymbolProvider": true, "codeActionProvider": {"codeActionKinds": ["refactor.inline", "refactor.extract"]}, "renameProvider": true, "executeCommandProvider": {"commands": []}, "workspaceSymbolProvider": true, "workspace": {"workspaceFolders": {"supported": true, "changeNotifications": true}, "fileOperations": {}}}}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///root/capsule/code/process_merged.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 1, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 2, "result": [{"name": "matplotlib", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 17}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 17}}, "detail": "module matplotlib", "children": []}, {"name": "os", "kind": 2, "range": {"start": {"line": 10, "character": 0}, "end": {"line": 10, "character": 9}}, "selectionRange": {"start": {"line": 10, "character": 7}, "end": {"line": 10, "character": 9}}, "detail": "module os", "children": []}, {"name": "pd", "kind": 2, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 11, "character": 19}}, "selectionRange": {"start": {"line": 11, "character": 17}, "end": {"line": 11, "character": 19}}, "detail": "module pd", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 12, "character": 0}, "end": {"line": 12, "character": 18}}, "selectionRange": {"start": {"line": 12, "character": 16}, "end": {"line": 12, "character": 18}}, "detail": "module np", "children": []}, {"name": "sys", "kind": 2, "range": {"start": {"line": 13, "character": 0}, "end": {"line": 13, "character": 10}}, "selectionRange": {"start": {"line": 13, "character": 7}, "end": {"line": 13, "character": 10}}, "detail": "module sys", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 14, "character": 0}, "end": {"line": 14, "character": 13}}, "selectionRange": {"start": {"line": 14, "character": 7}, "end": {"line": 14, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cdist", "kind": 12, "range": {"start": {"line": 15, "character": 0}, "end": {"line": 15, "character": 40}}, "selectionRange": {"start": {"line": 15, "character": 35}, "end": {"line": 15, "character": 40}}, "detail": "def cdist", "children": []}, {"name": "math", "kind": 2, "range": {"start": {"line": 16, "character": 0}, "end": {"line": 16, "character": 11}}, "selectionRange": {"start": {"line": 16, "character": 7}, "end": {"line": 16, "character": 11}}, "detail": "module math", "children": []}, {"name": "nx", "kind": 2, "range": {"start": {"line": 17, "character": 0}, "end": {"line": 17, "character": 21}}, "selectionRange": {"start": {"line": 17, "character": 19}, "end": {"line": 17, "character": 21}}, "detail": "module nx", "children": []}, {"name": "nxacc", "kind": 2, "range": {"start": {"line": 18, "character": 0}, "end": {"line": 18, "character": 56}}, "selectionRange": {"start": {"line": 18, "character": 51}, "end": {"line": 18, "character": 56}}, "detail": "module nxacc", "children": []}, {"name": "nxadag", "kind": 2, "range": {"start": {"line": 19, "character": 0}, "end": {"line": 19, "character": 40}}, "selectionRange": {"start": {"line": 19, "character": 34}, "end": {"line": 19, "character": 40}}, "detail": "module nxadag", "children": []}, {"name": "plt", "kind": 2, "range": {"start": {"line": 20, "character": 0}, "end": {"line": 20, "character": 31}}, "selectionRange": {"start": {"line": 20, "character": 28}, "end": {"line": 20, "character": 31}}, "detail": "module plt", "children": []}, {"name": "sns", "kind": 2, "range": {"start": {"line": 21, "character": 0}, "end": {"line": 21, "character": 21}}, "selectionRange": {"start": {"line": 21, "character": 18}, "end": {"line": 21, "character": 21}}, "detail": "module sns", "children": []}, {"name": "itertools", "kind": 2, "range": {"start": {"line": 22, "character": 0}, "end": {"line": 22, "character": 16}}, "selectionRange": {"start": {"line": 22, "character": 7}, "end": {"line": 22, "character": 16}}, "detail": "module itertools", "children": []}, {"name": "mygene", "kind": 2, "range": {"start": {"line": 23, "character": 0}, "end": {"line": 23, "character": 13}}, "selectionRange": {"start": {"line": 23, "character": 7}, "end": {"line": 23, "character": 13}}, "detail": "module mygene", "children": []}, {"name": "re", "kind": 2, "range": {"start": {"line": 24, "character": 0}, "end": {"line": 24, "character": 9}}, "selectionRange": {"start": {"line": 24, "character": 7}, "end": {"line": 24, "character": 9}}, "detail": "module re", "children": []}, {"name": "selected_exp_gene_list", "kind": 13, "range": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 95}}, "selectionRange": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 22}}, "detail": "selected_exp_gene_list = pd.read_csv(\"/data/common_exp_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "selected_mut_gene_list", "kind": 13, "range": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 95}}, "selectionRange": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 22}}, "detail": "selected_mut_gene_list = pd.read_csv(\"/data/common_mut_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "load_network", "kind": 12, "range": {"start": {"line": 37, "character": 0}, "end": {"line": 65, "character": 28}}, "selectionRange": {"start": {"line": 37, "character": 4}, "end": {"line": 37, "character": 16}}, "detail": "def load_network", "children": []}, {"name": "load_name_space", "kind": 12, "range": {"start": {"line": 67, "character": 0}, "end": {"line": 79, "character": 21}}, "selectionRange": {"start": {"line": 67, "character": 4}, "end": {"line": 67, "character": 19}}, "detail": "def load_name_space", "children": []}, {"name": "list2index", "kind": 12, "range": {"start": {"line": 81, "character": 0}, "end": {"line": 88, "character": 41}}, "selectionRange": {"start": {"line": 81, "character": 4}, "end": {"line": 81, "character": 14}}, "detail": "def list2index", "children": []}, {"name": "PDTC_data_file", "kind": 13, "range": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 30}}, "selectionRange": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 14}}, "detail": "PDTC_data_file = '/data/PTDC/'", "children": []}, {"name": "PDTC_exp_data_file", "kind": 13, "range": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 60}}, "selectionRange": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 18}}, "detail": "PDTC_exp_data_file = PDTC_data_file + 'ExpressionModels.tsv'", "children": []}, {"name": "PDTC_drug_cell_line_file", "kind": 13, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 72}}, "selectionRange": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 24}}, "detail": "PDTC_drug_cell_line_file = PDTC_data_file + 'DrugResponsesAUCModels.tsv'", "children": []}, {"name": "PDTC_mutation_data_file", "kind": 13, "range": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 59}}, "selectionRange": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 23}}, "detail": "PDTC_mutation_data_file = PDTC_data_file + 'SNVsModels.tsv'", "children": []}, {"name": "PDTC_drug_target_file", "kind": 13, "range": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 47}}, "selectionRange": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 21}}, "detail": "PDTC_drug_target_file ='/data/drug_targets.tsv'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 37}}, "selectionRange": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 46}}, "selectionRange": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "data_file", "kind": 13, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 25}}, "selectionRange": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 9}}, "detail": "data_file = '/data/GDSC/'", "children": []}, {"name": "new_network_file", "kind": 13, "range": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 27}}, "selectionRange": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 16}}, "detail": "new_network_file = '/data/'", "children": []}, {"name": "exp_data_file", "kind": 13, "range": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 61}}, "selectionRange": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 13}}, "detail": "exp_data_file = data_file + 'Cell_line_RMA_proc_basalExp.txt'", "children": []}, {"name": "drug_cell_line_file", "kind": 13, "range": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 64}}, "selectionRange": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 19}}, "detail": "drug_cell_line_file = data_file + 'v17_fitted_dose_response.csv'", "children": []}, {"name": "cell_line_detail_file", "kind": 13, "range": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 60}}, "selectionRange": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 21}}, "detail": "cell_line_detail_file = data_file + 'Cell_Lines_Details.csv'", "children": []}, {"name": "mutation_data_file", "kind": 13, "range": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 51}}, "selectionRange": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 18}}, "detail": "mutation_data_file = data_file + 'WES_variants.csv'", "children": []}, {"name": "drug_target_file", "kind": 13, "range": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 42}}, "selectionRange": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 16}}, "detail": "drug_target_file ='/data/drug_targets.tsv'", "children": []}, {"name": "feature_folder", "kind": 13, "range": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 27}}, "selectionRange": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 14}}, "detail": "feature_folder = 'feature/'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 37}}, "selectionRange": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 46}}, "selectionRange": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 58}}, "selectionRange": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 6}}, "detail": "exp_df = pd.read_csv(exp_data_file, sep='\\t', index_col=0)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 21}}, "selectionRange": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 6}}, "detail": "exp_df = exp_df.T[1:]", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 56}}, "selectionRange": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 6}}, "detail": "exp_df = exp_df.rename(columns={np.nan: 'NO_GENE_NAME'})", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 43}}, "selectionRange": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 6}}, "detail": "exp_df = exp_df.drop('NO_GENE_NAME',axis=1)", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 138, "character": 0}, "end": {"line": 140, "character": 26}}, "selectionRange": {"start": {"line": 138, "character": 4}, "end": {"line": 138, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 142, "character": 0}, "end": {"line": 142, "character": 44}}, "selectionRange": {"start": {"line": 142, "character": 7}, "end": {"line": 142, "character": 12}}, "detail": "exp_df.index = exp_df.index.map(stripNumber)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 40}}, "selectionRange": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 6}}, "detail": "exp_df = exp_df.groupby(level=0).first()", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 39}}, "selectionRange": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 6}}, "detail": "exp_df = exp_df[selected_exp_gene_list]", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 36}}, "selectionRange": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 48}}, "selectionRange": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 78}}, "selectionRange": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 11}}, "detail": "PDTC_exp_df = pd.read_csv(PDTC_exp_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 31}}, "selectionRange": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df.T[1:]", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 160, "character": 0}, "end": {"line": 162, "character": 26}}, "selectionRange": {"start": {"line": 160, "character": 4}, "end": {"line": 160, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 49}}, "selectionRange": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df[selected_exp_gene_list]", "children": []}, {"name": "PDTC_exp_gene_list", "kind": 13, "range": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 46}}, "selectionRange": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 18}}, "detail": "PDTC_exp_gene_list = list(PDTC_exp_df.columns)", "children": []}, {"name": "PDTC_exp_cell_line_list", "kind": 13, "range": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 58}}, "selectionRange": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 23}}, "detail": "PDTC_exp_cell_line_list = list(PDTC_exp_df.index.unique())", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 40}}, "selectionRange": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 6}}, "detail": "exp_df = pd.concat([exp_df,PDTC_exp_df])", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 36}}, "selectionRange": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 48}}, "selectionRange": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "maf", "kind": 13, "range": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 69}}, "selectionRange": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 3}}, "detail": "maf = pd.read_csv(mutation_data_file, sep=',', index_col=0).fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 75}}, "selectionRange": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 11}}, "detail": "mutation_df = maf.groupby(['COSMIC_ID', 'Gene']).size().unstack().fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 49}}, "selectionRange": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 11}}, "detail": "mutation_df = mutation_df[selected_mut_gene_list]", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 46}}, "selectionRange": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 58}}, "selectionRange": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "PDTC_maf", "kind": 13, "range": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 80}}, "selectionRange": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 8}}, "detail": "PDTC_maf = pd.read_csv(PDTC_mutation_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 61}}, "selectionRange": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_maf.replace(to_replace=\"NO\",value=0.0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 82}}, "selectionRange": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_mutation_df.replace(to_replace=\"chr*\",value=1.0,regex=True)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 47}}, "selectionRange": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df.transpose()", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 59}}, "selectionRange": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df[selected_mut_gene_list]", "children": []}, {"name": "PDTC_mutation_gene_list", "kind": 13, "range": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 56}}, "selectionRange": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 23}}, "detail": "PDTC_mutation_gene_list = list(PDTC_mutation_df.columns)", "children": []}, {"name": "PDTC_mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 68}}, "selectionRange": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 28}}, "detail": "PDTC_mutation_cell_line_list = list(PDTC_mutation_df.index.unique())", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 55}}, "selectionRange": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 11}}, "detail": "mutation_df = pd.concat([mutation_df,PDTC_mutation_df])", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 46}}, "selectionRange": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 58}}, "selectionRange": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 36}}, "selectionRange": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 11}}, "detail": "file_handle = open(drug_target_file)", "children": []}, {"name": "drug_target_map", "kind": 13, "range": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 20}}, "selectionRange": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 15}}, "detail": "drug_target_map = {}", "children": []}, {"name": "drug_target_list", "kind": 13, "range": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 21}}, "selectionRange": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 16}}, "detail": "drug_target_list = []", "children": []}, {"name": "line", "kind": 13, "range": {"start": {"line": 230, "character": 0}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 230, "character": 4}, "end": {"line": 230, "character": 8}}, "detail": "for line in file_handle: new_line = line.rstrip().split(\"\\t\") drug = new_line[0] target_list=new_line[1].split(',') if drug != \"Drug\": target_list_str = \"\" for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\" drug = drug.strip() drug_target_map[drug] = [] if ',' not in target_list_str: drug_target_map[drug].append(target_list_str.strip()) drug_target_list.append(target_list_str.strip()) else: target_list = target_list_str.split(',') for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "new_line", "kind": 13, "range": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 40}}, "selectionRange": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 12}}, "detail": "new_line = line.rstrip().split(\"\\t\")", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 22}}, "selectionRange": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 8}}, "detail": "drug = new_line[0]", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 38}}, "selectionRange": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 15}}, "detail": "target_list=new_line[1].split(',')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 28}}, "selectionRange": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 23}}, "detail": "target_list_str = \"\"", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 237, "character": 8}, "end": {"line": 242, "character": 0}}, "selectionRange": {"start": {"line": 237, "character": 12}, "end": {"line": 237, "character": 13}}, "detail": "for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 65}}, "selectionRange": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 71}}, "selectionRange": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 27}}, "selectionRange": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 12}}, "detail": "drug = drug.strip()", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 52}}, "selectionRange": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 23}}, "detail": "target_list = target_list_str.split(',')", "children": []}, {"name": "target", "kind": 13, "range": {"start": {"line": 250, "character": 12}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 250, "character": 16}, "end": {"line": 250, "character": 22}}, "detail": "for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "drugs_legend", "kind": 13, "range": {"start": {"line": 261, "character": 0}, "end": {"line": 261, "character": 85}}, "selectionRange": {"start": {"line": 261, "character": 0}, "end": {"line": 261, "character": 12}}, "detail": "drugs_legend = pd.read_csv('/data/GDSC/Screened_Compounds.csv', sep=',', index_col=0)", "children": []}, {"name": "drug2id_mapping", "kind": 13, "range": {"start": {"line": 263, "character": 0}, "end": {"line": 263, "character": 20}}, "selectionRange": {"start": {"line": 263, "character": 0}, "end": {"line": 263, "character": 15}}, "detail": "drug2id_mapping = {}", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 265, "character": 0}, "end": {"line": 268, "character": 0}}, "selectionRange": {"start": {"line": 265, "character": 4}, "end": {"line": 265, "character": 9}}, "detail": "for index in list(drugs_legend.index) : drug_name = drugs_legend.loc[index,'Drug Name'] drug2id_mapping[ drug_name ] = index", "children": []}, {"name": "drug_name", "kind": 13, "range": {"start": {"line": 266, "character": 4}, "end": {"line": 266, "character": 51}}, "selectionRange": {"start": {"line": 266, "character": 4}, "end": {"line": 266, "character": 13}}, "detail": "drug_name = drugs_legend.loc[index,'Drug Name']", "children": []}, {"name": "valid_gene_list", "kind": 13, "range": {"start": {"line": 273, "character": 0}, "end": {"line": 273, "character": 92}}, "selectionRange": {"start": {"line": 273, "character": 0}, "end": {"line": 273, "character": 15}}, "detail": "valid_gene_list = list(set(drug_target_list) | set(exp_gene_list) | set(mutation_gene_list))", "children": []}, {"name": "network_list", "kind": 13, "range": {"start": {"line": 279, "character": 0}, "end": {"line": 279, "character": 82}}, "selectionRange": {"start": {"line": 279, "character": 0}, "end": {"line": 279, "character": 12}}, "detail": "network_list = [new_network_file+inbiomap_file, new_network_file+pathwaycomm_file]", "children": []}, {"name": "gene_neighbor_map", "kind": 13, "range": {"start": {"line": 280, "character": 0}, "end": {"line": 280, "character": 64}}, "selectionRange": {"start": {"line": 280, "character": 0}, "end": {"line": 280, "character": 17}}, "detail": "gene_neighbor_map = load_network(network_list, valid_gene_list)", "children": []}, {"name": "gene_name_df", "kind": 13, "range": {"start": {"line": 286, "character": 0}, "end": {"line": 286, "character": 89}}, "selectionRange": {"start": {"line": 286, "character": 0}, "end": {"line": 286, "character": 12}}, "detail": "gene_name_df = pd.read_table('/data/HUGO_protein-coding_gene.tsv',index_col=25, sep='\\t')", "children": []}, {"name": "gene_name_map", "kind": 13, "range": {"start": {"line": 292, "character": 0}, "end": {"line": 292, "character": 18}}, "selectionRange": {"start": {"line": 292, "character": 0}, "end": {"line": 292, "character": 13}}, "detail": "gene_name_map = {}", "children": []}, {"name": "uniprot_gene", "kind": 13, "range": {"start": {"line": 294, "character": 0}, "end": {"line": 303, "character": 0}}, "selectionRange": {"start": {"line": 294, "character": 4}, "end": {"line": 294, "character": 16}}, "detail": "for uniprot_gene in gene_name_df.index: if isinstance(uniprot_gene, type('aaa')) == False: continue if isinstance(gene_name_df.loc[uniprot_gene, 'symbol'], type('aaa')) == False: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol'][0] else: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 308, "character": 0}, "end": {"line": 308, "character": 76}}, "selectionRange": {"start": {"line": 308, "character": 0}, "end": {"line": 308, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "uniprot_gene_set", "kind": 13, "range": {"start": {"line": 310, "character": 0}, "end": {"line": 310, "character": 24}}, "selectionRange": {"start": {"line": 310, "character": 0}, "end": {"line": 310, "character": 16}}, "detail": "uniprot_gene_set = set()", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 312, "character": 0}, "end": {"line": 321, "character": 0}}, "selectionRange": {"start": {"line": 312, "character": 4}, "end": {"line": 312, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 317, "character": 4}, "end": {"line": 317, "character": 74}}, "selectionRange": {"start": {"line": 317, "character": 4}, "end": {"line": 317, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 319, "character": 4}, "end": {"line": 321, "character": 0}}, "selectionRange": {"start": {"line": 319, "character": 8}, "end": {"line": 319, "character": 12}}, "detail": "for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "query_gene_set", "kind": 13, "range": {"start": {"line": 324, "character": 0}, "end": {"line": 324, "character": 19}}, "selectionRange": {"start": {"line": 324, "character": 0}, "end": {"line": 324, "character": 14}}, "detail": "query_gene_set = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 326, "character": 0}, "end": {"line": 329, "character": 0}}, "selectionRange": {"start": {"line": 326, "character": 4}, "end": {"line": 326, "character": 8}}, "detail": "for gene in uniprot_gene_set: if gene not in gene_name_map: query_gene_set.append(gene)", "children": []}, {"name": "query_gene_list", "kind": 13, "range": {"start": {"line": 332, "character": 0}, "end": {"line": 332, "character": 38}}, "selectionRange": {"start": {"line": 332, "character": 0}, "end": {"line": 332, "character": 15}}, "detail": "query_gene_list = list(query_gene_set)", "children": []}, {"name": "mg", "kind": 13, "range": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 24}}, "selectionRange": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 2}}, "detail": "mg = mygene.MyGeneInfo()", "children": []}, {"name": "out", "kind": 13, "range": {"start": {"line": 335, "character": 0}, "end": {"line": 335, "character": 87}}, "selectionRange": {"start": {"line": 335, "character": 0}, "end": {"line": 335, "character": 3}}, "detail": "out = mg.querymany(query_gene_list, scopes='uniprot', fields='symbol', species='human')", "children": []}, {"name": "not_found_gene_list", "kind": 13, "range": {"start": {"line": 337, "character": 0}, "end": {"line": 337, "character": 24}}, "selectionRange": {"start": {"line": 337, "character": 0}, "end": {"line": 337, "character": 19}}, "detail": "not_found_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 339, "character": 0}, "end": {"line": 344, "character": 0}}, "selectionRange": {"start": {"line": 339, "character": 4}, "end": {"line": 339, "character": 5}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 339, "character": 0}, "end": {"line": 344, "character": 0}}, "selectionRange": {"start": {"line": 339, "character": 7}, "end": {"line": 339, "character": 11}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 351, "character": 0}, "end": {"line": 351, "character": 76}}, "selectionRange": {"start": {"line": 351, "character": 0}, "end": {"line": 351, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 353, "character": 0}, "end": {"line": 375, "character": 0}}, "selectionRange": {"start": {"line": 353, "character": 4}, "end": {"line": 353, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') complex_symbol_list = [] for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] ) for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 358, "character": 4}, "end": {"line": 358, "character": 74}}, "selectionRange": {"start": {"line": 358, "character": 4}, "end": {"line": 358, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "complex_symbol_list", "kind": 13, "range": {"start": {"line": 360, "character": 4}, "end": {"line": 360, "character": 28}}, "selectionRange": {"start": {"line": 360, "character": 4}, "end": {"line": 360, "character": 23}}, "detail": "complex_symbol_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 362, "character": 4}, "end": {"line": 365, "character": 0}}, "selectionRange": {"start": {"line": 362, "character": 8}, "end": {"line": 362, "character": 12}}, "detail": "for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] )", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 366, "character": 4}, "end": {"line": 375, "character": 0}}, "selectionRange": {"start": {"line": 366, "character": 8}, "end": {"line": 366, "character": 13}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 366, "character": 4}, "end": {"line": 375, "character": 0}}, "selectionRange": {"start": {"line": 366, "character": 15}, "end": {"line": 366, "character": 20}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene_exp_neighbor_map", "kind": 13, "range": {"start": {"line": 380, "character": 0}, "end": {"line": 380, "character": 26}}, "selectionRange": {"start": {"line": 380, "character": 0}, "end": {"line": 380, "character": 21}}, "detail": "gene_exp_neighbor_map = {}", "children": []}, {"name": "exp_matrix", "kind": 13, "range": {"start": {"line": 381, "character": 0}, "end": {"line": 381, "character": 26}}, "selectionRange": {"start": {"line": 381, "character": 0}, "end": {"line": 381, "character": 10}}, "detail": "exp_matrix = exp_df.values", "children": []}, {"name": "P", "kind": 13, "range": {"start": {"line": 383, "character": 0}, "end": {"line": 383, "character": 79}}, "selectionRange": {"start": {"line": 383, "character": 0}, "end": {"line": 383, "character": 1}}, "detail": "P = 1 - cdist(np.transpose(exp_matrix), np.transpose(exp_matrix),'correlation')", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 385, "character": 0}, "end": {"line": 399, "character": 0}}, "selectionRange": {"start": {"line": 385, "character": 4}, "end": {"line": 385, "character": 5}}, "detail": "for i in range(len(exp_gene_list)): gene1 = exp_gene_list[i] gene_exp_neighbor_map[gene1] = set() for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2) if gene1 not in gene_exp_neighbor_map[gene1]: print (gene1, 'not in itself?', P[i,i])", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 387, "character": 4}, "end": {"line": 387, "character": 28}}, "selectionRange": {"start": {"line": 387, "character": 4}, "end": {"line": 387, "character": 9}}, "detail": "gene1 = exp_gene_list[i]", "children": []}, {"name": "j", "kind": 13, "range": {"start": {"line": 390, "character": 4}, "end": {"line": 396, "character": 0}}, "selectionRange": {"start": {"line": 390, "character": 8}, "end": {"line": 390, "character": 9}}, "detail": "for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 392, "character": 8}, "end": {"line": 392, "character": 32}}, "selectionRange": {"start": {"line": 392, "character": 8}, "end": {"line": 392, "character": 13}}, "detail": "gene2 = exp_gene_list[j]", "children": []}, {"name": "drug_feature_list", "kind": 13, "range": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 22}}, "selectionRange": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 17}}, "detail": "drug_feature_list = []", "children": []}, {"name": "drug_neighbor_map", "kind": 13, "range": {"start": {"line": 408, "character": 0}, "end": {"line": 408, "character": 22}}, "selectionRange": {"start": {"line": 408, "character": 0}, "end": {"line": 408, "character": 17}}, "detail": "drug_neighbor_map = {}", "children": []}, {"name": "selected_drug_list", "kind": 13, "range": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 23}}, "selectionRange": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 18}}, "detail": "selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 411, "character": 0}, "end": {"line": 428, "character": 0}}, "selectionRange": {"start": {"line": 411, "character": 4}, "end": {"line": 411, "character": 8}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 411, "character": 0}, "end": {"line": 428, "character": 0}}, "selectionRange": {"start": {"line": 411, "character": 10}, "end": {"line": 411, "character": 21}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 414, "character": 8}, "end": {"line": 424, "character": 0}}, "selectionRange": {"start": {"line": 414, "character": 12}, "end": {"line": 414, "character": 16}}, "detail": "for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene]", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 442, "character": 0}, "end": {"line": 442, "character": 52}}, "selectionRange": {"start": {"line": 442, "character": 0}, "end": {"line": 442, "character": 5}}, "detail": "drugs = pd.read_csv(drug_cell_line_file,index_col=2)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 443, "character": 0}, "end": {"line": 443, "character": 93}}, "selectionRange": {"start": {"line": 443, "character": 0}, "end": {"line": 443, "character": 5}}, "detail": "drugs = drugs.drop([\"DATASET_VERSION\",\"IC50_RESULTS_ID\",\"MAX_CONC_MICROMOLAR\",\"RMSE\"],axis=1)", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 444, "character": 0}, "end": {"line": 444, "character": 49}}, "selectionRange": {"start": {"line": 444, "character": 0}, "end": {"line": 444, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 446, "character": 0}, "end": {"line": 446, "character": 28}}, "selectionRange": {"start": {"line": 446, "character": 0}, "end": {"line": 446, "character": 9}}, "detail": "drug_list = drugs[\"DRUG_ID\"]", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 447, "character": 0}, "end": {"line": 447, "character": 16}}, "selectionRange": {"start": {"line": 447, "character": 0}, "end": {"line": 447, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 457, "character": 0}, "end": {"line": 457, "character": 71}}, "selectionRange": {"start": {"line": 457, "character": 0}, "end": {"line": 457, "character": 10}}, "detail": "PDTC_drugs = pd.read_csv(PDTC_drug_cell_line_file,sep='\\t',index_col=0)", "children": []}, {"name": "PDTC_drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 458, "character": 0}, "end": {"line": 458, "character": 59}}, "selectionRange": {"start": {"line": 458, "character": 0}, "end": {"line": 458, "character": 25}}, "detail": "PDTC_drugs_cell_line_list = list(PDTC_drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 460, "character": 0}, "end": {"line": 460, "character": 39}}, "selectionRange": {"start": {"line": 460, "character": 0}, "end": {"line": 460, "character": 9}}, "detail": "drug_list = PDTC_drugs[\"Drug\"].tolist()", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 461, "character": 0}, "end": {"line": 461, "character": 16}}, "selectionRange": {"start": {"line": 461, "character": 0}, "end": {"line": 461, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 462, "character": 0}, "end": {"line": 467, "character": 0}}, "selectionRange": {"start": {"line": 462, "character": 4}, "end": {"line": 462, "character": 5}}, "detail": "for i in drug_list: if i in drug2id_mapping.keys(): new_drug_id.append(drug2id_mapping[i]) else: new_drug_id.append(0)", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 84}}, "selectionRange": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 10}}, "detail": "PDTC_drugs = PDTC_drugs.drop([\"Drug\",\"iC50\",\"D1_CONC\",\"D5_CONC\",\"perc.iC50\"],axis=1)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 477, "character": 0}, "end": {"line": 477, "character": 37}}, "selectionRange": {"start": {"line": 477, "character": 0}, "end": {"line": 477, "character": 5}}, "detail": "drugs = pd.concat([drugs,PDTC_drugs])", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 49}}, "selectionRange": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "cell_line_list", "kind": 13, "range": {"start": {"line": 490, "character": 0}, "end": {"line": 490, "character": 102}}, "selectionRange": {"start": {"line": 490, "character": 0}, "end": {"line": 490, "character": 14}}, "detail": "cell_line_list = list(set(drugs_cell_line_list)&set(exp_cell_line_list)&set(mutation_cell_line_list) )", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 497, "character": 0}, "end": {"line": 497, "character": 66}}, "selectionRange": {"start": {"line": 497, "character": 0}, "end": {"line": 497, "character": 16}}, "detail": "cell_line_legend = pd.read_csv(cell_line_detail_file, index_col=1)", "children": []}, {"name": "PDTC_cell_line", "kind": 13, "range": {"start": {"line": 498, "character": 0}, "end": {"line": 498, "character": 206}}, "selectionRange": {"start": {"line": 498, "character": 0}, "end": {"line": 498, "character": 14}}, "detail": "PDTC_cell_line = pd.DataFrame({'Line': [\"BRCA\"]*len(PDTC_exp_cell_line_list), 'Site':[\"PDTC\"]*len(PDTC_exp_cell_line_list),\"Histology\":[\"breast\"]*len(PDTC_exp_cell_line_list)},index=PDTC_exp_cell_line_list)", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 499, "character": 0}, "end": {"line": 499, "character": 63}}, "selectionRange": {"start": {"line": 499, "character": 0}, "end": {"line": 499, "character": 16}}, "detail": "cell_line_legend = pd.concat([cell_line_legend,PDTC_cell_line])", "children": []}, {"name": "tissue_map", "kind": 13, "range": {"start": {"line": 502, "character": 0}, "end": {"line": 502, "character": 15}}, "selectionRange": {"start": {"line": 502, "character": 0}, "end": {"line": 502, "character": 10}}, "detail": "tissue_map = {}", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 504, "character": 0}, "end": {"line": 512, "character": 0}}, "selectionRange": {"start": {"line": 504, "character": 4}, "end": {"line": 504, "character": 13}}, "detail": "for cell_line in cell_line_list: tissue = cell_line_legend.loc[cell_line,'Site'] if tissue not in tissue_map: tissue_map[tissue] = [] tissue_map[tissue].append(cell_line)", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 506, "character": 4}, "end": {"line": 506, "character": 51}}, "selectionRange": {"start": {"line": 506, "character": 4}, "end": {"line": 506, "character": 10}}, "detail": "tissue = cell_line_legend.loc[cell_line,'Site']", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 513, "character": 0}, "end": {"line": 513, "character": 23}}, "selectionRange": {"start": {"line": 513, "character": 0}, "end": {"line": 513, "character": 19}}, "detail": "large_tissue_number = 0", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 514, "character": 0}, "end": {"line": 520, "character": 0}}, "selectionRange": {"start": {"line": 514, "character": 4}, "end": {"line": 514, "character": 10}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 514, "character": 0}, "end": {"line": 520, "character": 0}}, "selectionRange": {"start": {"line": 514, "character": 12}, "end": {"line": 514, "character": 21}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 517, "character": 8}, "end": {"line": 517, "character": 32}}, "selectionRange": {"start": {"line": 517, "character": 8}, "end": {"line": 517, "character": 27}}, "detail": "large_tissue_number += 1", "children": []}, {"name": "new_exp_gene_list", "kind": 13, "range": {"start": {"line": 540, "character": 0}, "end": {"line": 540, "character": 22}}, "selectionRange": {"start": {"line": 540, "character": 0}, "end": {"line": 540, "character": 17}}, "detail": "new_exp_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 541, "character": 0}, "end": {"line": 544, "character": 0}}, "selectionRange": {"start": {"line": 541, "character": 4}, "end": {"line": 541, "character": 5}}, "detail": "for i in exp_gene_list: if i in valid_gene_list: new_exp_gene_list.append(i)", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 549, "character": 0}, "end": {"line": 549, "character": 41}}, "selectionRange": {"start": {"line": 549, "character": 0}, "end": {"line": 549, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 550, "character": 0}, "end": {"line": 550, "character": 38}}, "selectionRange": {"start": {"line": 550, "character": 0}, "end": {"line": 550, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 551, "character": 0}, "end": {"line": 551, "character": 72}}, "selectionRange": {"start": {"line": 551, "character": 0}, "end": {"line": 551, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 553, "character": 0}, "end": {"line": 553, "character": 43}}, "selectionRange": {"start": {"line": 553, "character": 0}, "end": {"line": 553, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 554, "character": 0}, "end": {"line": 554, "character": 68}}, "selectionRange": {"start": {"line": 554, "character": 0}, "end": {"line": 554, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 561, "character": 0}, "end": {"line": 561, "character": 58}}, "selectionRange": {"start": {"line": 561, "character": 0}, "end": {"line": 561, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 562, "character": 0}, "end": {"line": 562, "character": 68}}, "selectionRange": {"start": {"line": 562, "character": 0}, "end": {"line": 562, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "new_data_file", "kind": 13, "range": {"start": {"line": 571, "character": 0}, "end": {"line": 571, "character": 18}}, "selectionRange": {"start": {"line": 571, "character": 0}, "end": {"line": 571, "character": 13}}, "detail": "new_data_file = ''", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 41}}, "selectionRange": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 38}}, "selectionRange": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 72}}, "selectionRange": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 43}}, "selectionRange": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 68}}, "selectionRange": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 58}}, "selectionRange": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 68}}, "selectionRange": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "rename_selected_drug_list", "kind": 13, "range": {"start": {"line": 592, "character": 0}, "end": {"line": 592, "character": 30}}, "selectionRange": {"start": {"line": 592, "character": 0}, "end": {"line": 592, "character": 25}}, "detail": "rename_selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 594, "character": 0}, "end": {"line": 664, "character": 0}}, "selectionRange": {"start": {"line": 594, "character": 4}, "end": {"line": 594, "character": 8}}, "detail": "for drug in selected_drug_list: print(drug) if drug not in drug2id_mapping: print('drug name wrong', drug) else: cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]] feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) ) feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) ) print(len(feature_exp_gene_list) + len(feature_mut_gene_list)) if len(feature_exp_gene_list) + len(feature_mut_gene_list) == 0: continue feature_description = [] drug_tissue_map = {} drug = drug.replace(' ','_') rename_selected_drug_list.append(drug) if drug == 'Nutlin-3a_(-)': drug = 'Nutlin-3a' drug_folder = '/data/merged/drug_feature/' + drug + '/' if not os.path.exists(drug_folder): os.makedirs(drug_folder) for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description)) file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\") pickle.dump(drug_tissue_map,file_handle) file_handle.close()", "children": []}, {"name": "cell_line_drug_matrix", "kind": 13, "range": {"start": {"line": 602, "character": 8}, "end": {"line": 602, "character": 84}}, "selectionRange": {"start": {"line": 602, "character": 8}, "end": {"line": 602, "character": 29}}, "detail": "cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]]", "children": []}, {"name": "feature_exp_gene_list", "kind": 13, "range": {"start": {"line": 607, "character": 8}, "end": {"line": 607, "character": 98}}, "selectionRange": {"start": {"line": 607, "character": 8}, "end": {"line": 607, "character": 29}}, "detail": "feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) )", "children": []}, {"name": "feature_mut_gene_list", "kind": 13, "range": {"start": {"line": 608, "character": 8}, "end": {"line": 608, "character": 98}}, "selectionRange": {"start": {"line": 608, "character": 8}, "end": {"line": 608, "character": 29}}, "detail": "feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) )", "children": []}, {"name": "feature_description", "kind": 13, "range": {"start": {"line": 612, "character": 8}, "end": {"line": 612, "character": 32}}, "selectionRange": {"start": {"line": 612, "character": 8}, "end": {"line": 612, "character": 27}}, "detail": "feature_description = []", "children": []}, {"name": "drug_tissue_map", "kind": 13, "range": {"start": {"line": 614, "character": 8}, "end": {"line": 614, "character": 28}}, "selectionRange": {"start": {"line": 614, "character": 8}, "end": {"line": 614, "character": 23}}, "detail": "drug_tissue_map = {}", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 616, "character": 8}, "end": {"line": 616, "character": 36}}, "selectionRange": {"start": {"line": 616, "character": 8}, "end": {"line": 616, "character": 12}}, "detail": "drug = drug.replace(' ','_')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 622, "character": 12}, "end": {"line": 622, "character": 30}}, "selectionRange": {"start": {"line": 622, "character": 12}, "end": {"line": 622, "character": 16}}, "detail": "drug = 'Nutlin-3a'", "children": []}, {"name": "drug_folder", "kind": 13, "range": {"start": {"line": 624, "character": 8}, "end": {"line": 624, "character": 63}}, "selectionRange": {"start": {"line": 624, "character": 8}, "end": {"line": 624, "character": 19}}, "detail": "drug_folder = '/data/merged/drug_feature/' + drug + '/'", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 630, "character": 8}, "end": {"line": 660, "character": 0}}, "selectionRange": {"start": {"line": 630, "character": 12}, "end": {"line": 630, "character": 18}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "tissue_cell_line_list", "kind": 13, "range": {"start": {"line": 630, "character": 8}, "end": {"line": 660, "character": 0}}, "selectionRange": {"start": {"line": 630, "character": 20}, "end": {"line": 630, "character": 41}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 633, "character": 12}, "end": {"line": 633, "character": 103}}, "selectionRange": {"start": {"line": 633, "character": 12}, "end": {"line": 633, "character": 35}}, "detail": "drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list )", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 634, "character": 12}, "end": {"line": 634, "character": 67}}, "selectionRange": {"start": {"line": 634, "character": 12}, "end": {"line": 634, "character": 35}}, "detail": "drug_specific_cell_line = list(drug_specific_cell_line)", "children": []}, {"name": "feature_list", "kind": 13, "range": {"start": {"line": 637, "character": 12}, "end": {"line": 637, "character": 29}}, "selectionRange": {"start": {"line": 637, "character": 12}, "end": {"line": 637, "character": 24}}, "detail": "feature_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 641, "character": 16}, "end": {"line": 643, "character": 0}}, "selectionRange": {"start": {"line": 641, "character": 20}, "end": {"line": 641, "character": 24}}, "detail": "for gene in feature_exp_gene_list: feature_description.append(gene+'_expression')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 646, "character": 16}, "end": {"line": 648, "character": 0}}, "selectionRange": {"start": {"line": 646, "character": 20}, "end": {"line": 646, "character": 24}}, "detail": "for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation')", "children": []}, {"name": "feature", "kind": 13, "range": {"start": {"line": 649, "character": 12}, "end": {"line": 649, "character": 58}}, "selectionRange": {"start": {"line": 649, "character": 12}, "end": {"line": 649, "character": 19}}, "detail": "feature = np.concatenate(feature_list, axis=1)", "children": []}, {"name": "label", "kind": 13, "range": {"start": {"line": 651, "character": 12}, "end": {"line": 651, "character": 88}}, "selectionRange": {"start": {"line": 651, "character": 12}, "end": {"line": 651, "character": 17}}, "detail": "label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 661, "character": 8}, "end": {"line": 661, "character": 84}}, "selectionRange": {"start": {"line": 661, "character": 8}, "end": {"line": 661, "character": 19}}, "detail": "file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\")", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 665, "character": 0}, "end": {"line": 665, "character": 52}}, "selectionRange": {"start": {"line": 665, "character": 0}, "end": {"line": 665, "character": 11}}, "detail": "file_handle = open('rename_selected_drug_list', 'w')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 666, "character": 0}, "end": {"line": 668, "character": 0}}, "selectionRange": {"start": {"line": 666, "character": 4}, "end": {"line": 666, "character": 8}}, "detail": "for drug in rename_selected_drug_list: file_handle.writelines(drug+ '\\n')", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 686, "character": 0}, "end": {"line": 686, "character": 13}}, "selectionRange": {"start": {"line": 686, "character": 7}, "end": {"line": 686, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cell_line_loc", "kind": 13, "range": {"start": {"line": 692, "character": 0}, "end": {"line": 692, "character": 84}}, "selectionRange": {"start": {"line": 692, "character": 0}, "end": {"line": 692, "character": 13}}, "detail": "cell_line_loc = '/cellar/users/samsonfong/Projects/tcrp-v2/from-ma/cell_line_lists/'", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 698, "character": 0}, "end": {"line": 700, "character": 0}}, "selectionRange": {"start": {"line": 698, "character": 53}, "end": {"line": 698, "character": 54}}, "detail": "with open('/data/drug_feature/KU-55933/KU', 'rb') as f: tmap= pickle.load(f)", "children": []}, {"name": "tmap", "kind": 13, "range": {"start": {"line": 699, "character": 4}, "end": {"line": 699, "character": 24}}, "selectionRange": {"start": {"line": 699, "character": 4}, "end": {"line": 699, "character": 8}}, "detail": "tmap= pickle.load(f)", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 717, "character": 0}, "end": {"line": 717, "character": 68}}, "selectionRange": {"start": {"line": 717, "character": 0}, "end": {"line": 717, "character": 1}}, "detail": "f = np.load('/data/drug_feature/KU-55933/lung_KU-55933_feature.npy')", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 3, "result": [{"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///root/capsule/code/process_merged.py", "version": 1}, "edits": [{"range": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 0}}, "newText": "def jls_extract_def():\n    "}, {"range": {"start": {"line": 227, "character": 0}, "end": {"line": 227, "character": 0}}, "newText": "    \n    return file_handle\n\n\nfile_handle = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 4, "result": {"contents": {"kind": "markdown", "value": "```python\ndrug_target_map = {}\n```\n---\n**Full name:** `code.process_merged.drug_target_map`"}, "range": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 15}}}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 5, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 6, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 7, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 8, "result": {"contents": {"kind": "markdown", "value": "```python\nkeyword from\n```\n---\n```text\nThe \"import\" statement\n**********************\n\n   import_stmt     ::= \"import\" module [\"as\" identifier] (\",\" module [\"as\" identifier])*\n                   | \"from\" relative_module \"import\" identifier [\"as\" identifier]\n                   (\",\" identifier [\"as\" identifier])*\n                   | \"from\" relative_module \"import\" \"(\" identifier [\"as\" identifier]\n                   (\",\" identifier [\"as\" identifier])* [\",\"] \")\"\n                   | \"from\" module \"import\" \"*\"\n   module          ::= (identifier \".\")* identifier\n   relative_module ::= \".\"* module | \".\"+\n\nThe basic import statement (no \"from\" clause) is executed in two\nsteps:\n\n1. find a module, loading and initializing it if necessary\n\n2. define a name or names in the local namespace for the scope\n   where the \"import\" statement occurs.\n\nWhen the statement contains multiple clauses (separated by commas) the\ntwo steps are carried out separately for each clause, just as though\nthe clauses had been separated out into individual import statements.\n\nThe details of the first step, finding and loading modules are\ndescribed in greater detail in the section on the import system, which\nalso describes the various types of packages and modules that can be\nimported, as well as all the hooks that can be used to customize the\nimport system. Note that failures in this step may indicate either\nthat the module could not be located, *or* that an error occurred\nwhile initializing the module, which includes execution of the\nmodule\u2019s code.\n\nIf the requested module is retrieved successfully, it will be made\navailable in the local namespace in one of three ways:\n\n* If the module name is followed by \"as\", then the name following\n  \"as\" is bound directly to the imported module.\n\n* If no other name is specified, and the module being imported is a\n  top level module, the module\u2019s name is bound in the local namespace\n  as a reference to the imported module\n\n* If the module being imported is *not* a top level module, then the\n  name of the top level package that contains the module is bound in\n  the local namespace as a reference to the top level package. The\n  imported module must be accessed using its full qualified name\n  rather than directly\n\nThe \"from\" form uses a slightly more complex process:\n\n1. find the module specified in the \"from\" clause, loading and\n   initializing it if necessary;\n\n2. for each of the identifiers specified in the \"import\" clauses:\n\n   1. check if the imported module has an attribute by that name\n\n   2. if not, attempt to import a submodule with that name and then\n      check the imported module again for that attribute\n\n   3. if the attribute is not found, \"ImportError\" is raised.\n\n   4. otherwise, a reference to that value is stored in the local\n      namespace, using the name in the \"as\" clause if it is present,\n      otherwise using the attribute name\n\nExamples:\n\n   import foo                 # foo imported and bound locally\n   import foo.bar.baz         # foo.bar.baz imported, foo bound locally\n   import foo.bar.baz as fbb  # foo.bar.baz imported and bound as fbb\n   from foo.bar import baz    # foo.bar.baz imported and bound as baz\n   from foo import attr       # foo imported and foo.attr bound as attr\n\nIf the list of identifiers is replaced by a star (\"'*'\"), all public\nnames defined in the module are bound in the local namespace for the\nscope where the \"import\" statement occurs.\n\nThe *public names* defined by a module are determined by checking the\nmodule\u2019s namespace for a variable named \"__all__\"; if defined, it must\nbe a sequence of strings which are names defined or imported by that\nmodule.  The names given in \"__all__\" are all considered public and\nare required to exist.  If \"__all__\" is not defined, the set of public\nnames includes all names found in the module\u2019s namespace which do not\nbegin with an underscore character (\"'_'\").  \"__all__\" should contain\nthe entire public API. It is intended to avoid accidentally exporting\nitems that are not part of the API (such as library modules which were\nimported and used within the module).\n\nThe wild card form of import \u2014 \"from module import *\" \u2014 is only\nallowed at the module level.  Attempting to use it in class or\nfunction definitions will raise a \"SyntaxError\".\n\nWhen specifying what module to import you do not have to specify the\nabsolute name of the module. When a module or package is contained\nwithin another package it is possible to make a relative import within\nthe same top package without having to mention the package name. By\nusing leading dots in the specified module or package after \"from\" you\ncan specify how high to traverse up the current package hierarchy\nwithout specifying exact names. One leading dot means the current\npackage where the module making the import exists. Two dots means up\none package level. Three dots is up two levels, etc. So if you execute\n\"from . import mod\" from a module in the \"pkg\" package then you will\nend up importing \"pkg.mod\". If you execute \"from ..subpkg2 import mod\"\nfrom within \"pkg.subpkg1\" you will import \"pkg.subpkg2.mod\". The\nspecification for relative imports is contained within **PEP 328**.\n\n\"importlib.import_module()\" is provided to support applications that\ndetermine dynamically the modules to be loaded.\n\n\nFuture statements\n=================\n\nA *future statement* is a directive to the compiler that a particular\nmodule should be compiled using syntax or semantics that will be\navailable in a specified future release of Python where the feature\nbecomes standard.\n\nThe future statement is intended to ease migration to future versions\nof Python that introduce incompatible changes to the language.  It\nallows use of the new features on a per-module basis before the\nrelease in which the feature becomes standard.\n\n   future_stmt ::= \"from\" \"__future__\" \"import\" feature [\"as\" identifier]\n                   (\",\" feature [\"as\" identifier])*\n                   | \"from\" \"__future__\" \"import\" \"(\" feature [\"as\" identifier]\n                   (\",\" feature [\"as\" identifier])* [\",\"] \")\"\n   feature     ::= identifier\n\nA future statement must appear near the top of the module.  The only\nlines that can appear before a future statement are:\n\n* the module docstring (if any),\n\n* comments,\n\n* blank lines, and\n\n* other future statements.\n\nThe only feature in Python 3.7 that requires using the future\nstatement is \"annotations\".\n\nAll historical features enabled by the future statement are still\nrecognized by Python 3.  The list includes \"absolute_import\",\n\"division\", \"generators\", \"generator_stop\", \"unicode_literals\",\n\"print_function\", \"nested_scopes\" and \"with_statement\".  They are all\nredundant because they are always enabled, and only kept for backwards\ncompatibility.\n\nA future statement is recognized and treated specially at compile\ntime: Changes to the semantics of core constructs are often\nimplemented by generating different code.  It may even be the case\nthat a new feature introduces new incompatible syntax (such as a new\nreserved word), in which case the compiler may need to parse the\nmodule differently.  Such decisions cannot be pushed off until\nruntime.\n\nFor any given release, the compiler knows which feature names have\nbeen defined, and raises a compile-time error if a future statement\ncontains a feature not known to it.\n\nThe direct runtime semantics are the same as for any import statement:\nthere is a standard module \"__future__\", described later, and it will\nbe imported in the usual way at the time the future statement is\nexecuted.\n\nThe interesting runtime semantics depend on the specific feature\nenabled by the future statement.\n\nNote that there is nothing special about the statement:\n\n   import __future__ [as name]\n\nThat is not a future statement; it\u2019s an ordinary import statement with\nno special semantics or syntax restrictions.\n\nCode compiled by calls to the built-in functions \"exec()\" and\n\"compile()\" that occur in a module \"M\" containing a future statement\nwill, by default, use the new syntax or semantics associated with the\nfuture statement.  This can be controlled by optional arguments to\n\"compile()\" \u2014 see the documentation of that function for details.\n\nA future statement typed at an interactive interpreter prompt will\ntake effect for the rest of the interpreter session.  If an\ninterpreter is started with the \"-i\" option, is passed a script name\nto execute, and the script includes a future statement, it will be in\neffect in the interactive session started after the script is\nexecuted.\n\nSee also:\n\n  **PEP 236** - Back to the __future__\n     The original proposal for the __future__ mechanism.\n```"}, "range": {"start": {"line": 15, "character": 0}, "end": {"line": 15, "character": 4}}}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 9, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 10, "result": [{"name": "matplotlib", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 17}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 17}}, "detail": "module matplotlib", "children": []}, {"name": "os", "kind": 2, "range": {"start": {"line": 10, "character": 0}, "end": {"line": 10, "character": 9}}, "selectionRange": {"start": {"line": 10, "character": 7}, "end": {"line": 10, "character": 9}}, "detail": "module os", "children": []}, {"name": "pd", "kind": 2, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 11, "character": 19}}, "selectionRange": {"start": {"line": 11, "character": 17}, "end": {"line": 11, "character": 19}}, "detail": "module pd", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 12, "character": 0}, "end": {"line": 12, "character": 18}}, "selectionRange": {"start": {"line": 12, "character": 16}, "end": {"line": 12, "character": 18}}, "detail": "module np", "children": []}, {"name": "sys", "kind": 2, "range": {"start": {"line": 13, "character": 0}, "end": {"line": 13, "character": 10}}, "selectionRange": {"start": {"line": 13, "character": 7}, "end": {"line": 13, "character": 10}}, "detail": "module sys", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 14, "character": 0}, "end": {"line": 14, "character": 13}}, "selectionRange": {"start": {"line": 14, "character": 7}, "end": {"line": 14, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cdist", "kind": 12, "range": {"start": {"line": 15, "character": 0}, "end": {"line": 15, "character": 40}}, "selectionRange": {"start": {"line": 15, "character": 35}, "end": {"line": 15, "character": 40}}, "detail": "def cdist", "children": []}, {"name": "math", "kind": 2, "range": {"start": {"line": 16, "character": 0}, "end": {"line": 16, "character": 11}}, "selectionRange": {"start": {"line": 16, "character": 7}, "end": {"line": 16, "character": 11}}, "detail": "module math", "children": []}, {"name": "nx", "kind": 2, "range": {"start": {"line": 17, "character": 0}, "end": {"line": 17, "character": 21}}, "selectionRange": {"start": {"line": 17, "character": 19}, "end": {"line": 17, "character": 21}}, "detail": "module nx", "children": []}, {"name": "nxacc", "kind": 2, "range": {"start": {"line": 18, "character": 0}, "end": {"line": 18, "character": 56}}, "selectionRange": {"start": {"line": 18, "character": 51}, "end": {"line": 18, "character": 56}}, "detail": "module nxacc", "children": []}, {"name": "nxadag", "kind": 2, "range": {"start": {"line": 19, "character": 0}, "end": {"line": 19, "character": 40}}, "selectionRange": {"start": {"line": 19, "character": 34}, "end": {"line": 19, "character": 40}}, "detail": "module nxadag", "children": []}, {"name": "plt", "kind": 2, "range": {"start": {"line": 20, "character": 0}, "end": {"line": 20, "character": 31}}, "selectionRange": {"start": {"line": 20, "character": 28}, "end": {"line": 20, "character": 31}}, "detail": "module plt", "children": []}, {"name": "sns", "kind": 2, "range": {"start": {"line": 21, "character": 0}, "end": {"line": 21, "character": 21}}, "selectionRange": {"start": {"line": 21, "character": 18}, "end": {"line": 21, "character": 21}}, "detail": "module sns", "children": []}, {"name": "itertools", "kind": 2, "range": {"start": {"line": 22, "character": 0}, "end": {"line": 22, "character": 16}}, "selectionRange": {"start": {"line": 22, "character": 7}, "end": {"line": 22, "character": 16}}, "detail": "module itertools", "children": []}, {"name": "mygene", "kind": 2, "range": {"start": {"line": 23, "character": 0}, "end": {"line": 23, "character": 13}}, "selectionRange": {"start": {"line": 23, "character": 7}, "end": {"line": 23, "character": 13}}, "detail": "module mygene", "children": []}, {"name": "re", "kind": 2, "range": {"start": {"line": 24, "character": 0}, "end": {"line": 24, "character": 9}}, "selectionRange": {"start": {"line": 24, "character": 7}, "end": {"line": 24, "character": 9}}, "detail": "module re", "children": []}, {"name": "selected_exp_gene_list", "kind": 13, "range": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 95}}, "selectionRange": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 22}}, "detail": "selected_exp_gene_list = pd.read_csv(\"/data/common_exp_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "selected_mut_gene_list", "kind": 13, "range": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 95}}, "selectionRange": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 22}}, "detail": "selected_mut_gene_list = pd.read_csv(\"/data/common_mut_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "load_network", "kind": 12, "range": {"start": {"line": 37, "character": 0}, "end": {"line": 65, "character": 28}}, "selectionRange": {"start": {"line": 37, "character": 4}, "end": {"line": 37, "character": 16}}, "detail": "def load_network", "children": []}, {"name": "load_name_space", "kind": 12, "range": {"start": {"line": 67, "character": 0}, "end": {"line": 79, "character": 21}}, "selectionRange": {"start": {"line": 67, "character": 4}, "end": {"line": 67, "character": 19}}, "detail": "def load_name_space", "children": []}, {"name": "list2index", "kind": 12, "range": {"start": {"line": 81, "character": 0}, "end": {"line": 88, "character": 41}}, "selectionRange": {"start": {"line": 81, "character": 4}, "end": {"line": 81, "character": 14}}, "detail": "def list2index", "children": []}, {"name": "PDTC_data_file", "kind": 13, "range": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 30}}, "selectionRange": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 14}}, "detail": "PDTC_data_file = '/data/PTDC/'", "children": []}, {"name": "PDTC_exp_data_file", "kind": 13, "range": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 60}}, "selectionRange": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 18}}, "detail": "PDTC_exp_data_file = PDTC_data_file + 'ExpressionModels.tsv'", "children": []}, {"name": "PDTC_drug_cell_line_file", "kind": 13, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 72}}, "selectionRange": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 24}}, "detail": "PDTC_drug_cell_line_file = PDTC_data_file + 'DrugResponsesAUCModels.tsv'", "children": []}, {"name": "PDTC_mutation_data_file", "kind": 13, "range": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 59}}, "selectionRange": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 23}}, "detail": "PDTC_mutation_data_file = PDTC_data_file + 'SNVsModels.tsv'", "children": []}, {"name": "PDTC_drug_target_file", "kind": 13, "range": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 47}}, "selectionRange": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 21}}, "detail": "PDTC_drug_target_file ='/data/drug_targets.tsv'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 37}}, "selectionRange": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 46}}, "selectionRange": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "data_file", "kind": 13, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 25}}, "selectionRange": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 9}}, "detail": "data_file = '/data/GDSC/'", "children": []}, {"name": "new_network_file", "kind": 13, "range": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 27}}, "selectionRange": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 16}}, "detail": "new_network_file = '/data/'", "children": []}, {"name": "exp_data_file", "kind": 13, "range": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 61}}, "selectionRange": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 13}}, "detail": "exp_data_file = data_file + 'Cell_line_RMA_proc_basalExp.txt'", "children": []}, {"name": "drug_cell_line_file", "kind": 13, "range": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 64}}, "selectionRange": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 19}}, "detail": "drug_cell_line_file = data_file + 'v17_fitted_dose_response.csv'", "children": []}, {"name": "cell_line_detail_file", "kind": 13, "range": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 60}}, "selectionRange": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 21}}, "detail": "cell_line_detail_file = data_file + 'Cell_Lines_Details.csv'", "children": []}, {"name": "mutation_data_file", "kind": 13, "range": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 51}}, "selectionRange": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 18}}, "detail": "mutation_data_file = data_file + 'WES_variants.csv'", "children": []}, {"name": "drug_target_file", "kind": 13, "range": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 42}}, "selectionRange": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 16}}, "detail": "drug_target_file ='/data/drug_targets.tsv'", "children": []}, {"name": "feature_folder", "kind": 13, "range": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 27}}, "selectionRange": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 14}}, "detail": "feature_folder = 'feature/'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 37}}, "selectionRange": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 46}}, "selectionRange": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 58}}, "selectionRange": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 6}}, "detail": "exp_df = pd.read_csv(exp_data_file, sep='\\t', index_col=0)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 21}}, "selectionRange": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 6}}, "detail": "exp_df = exp_df.T[1:]", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 56}}, "selectionRange": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 6}}, "detail": "exp_df = exp_df.rename(columns={np.nan: 'NO_GENE_NAME'})", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 43}}, "selectionRange": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 6}}, "detail": "exp_df = exp_df.drop('NO_GENE_NAME',axis=1)", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 138, "character": 0}, "end": {"line": 140, "character": 26}}, "selectionRange": {"start": {"line": 138, "character": 4}, "end": {"line": 138, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 142, "character": 0}, "end": {"line": 142, "character": 44}}, "selectionRange": {"start": {"line": 142, "character": 7}, "end": {"line": 142, "character": 12}}, "detail": "exp_df.index = exp_df.index.map(stripNumber)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 40}}, "selectionRange": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 6}}, "detail": "exp_df = exp_df.groupby(level=0).first()", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 39}}, "selectionRange": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 6}}, "detail": "exp_df = exp_df[selected_exp_gene_list]", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 36}}, "selectionRange": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 48}}, "selectionRange": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 78}}, "selectionRange": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 11}}, "detail": "PDTC_exp_df = pd.read_csv(PDTC_exp_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 31}}, "selectionRange": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df.T[1:]", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 160, "character": 0}, "end": {"line": 162, "character": 26}}, "selectionRange": {"start": {"line": 160, "character": 4}, "end": {"line": 160, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 49}}, "selectionRange": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df[selected_exp_gene_list]", "children": []}, {"name": "PDTC_exp_gene_list", "kind": 13, "range": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 46}}, "selectionRange": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 18}}, "detail": "PDTC_exp_gene_list = list(PDTC_exp_df.columns)", "children": []}, {"name": "PDTC_exp_cell_line_list", "kind": 13, "range": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 58}}, "selectionRange": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 23}}, "detail": "PDTC_exp_cell_line_list = list(PDTC_exp_df.index.unique())", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 40}}, "selectionRange": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 6}}, "detail": "exp_df = pd.concat([exp_df,PDTC_exp_df])", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 36}}, "selectionRange": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 48}}, "selectionRange": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "maf", "kind": 13, "range": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 69}}, "selectionRange": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 3}}, "detail": "maf = pd.read_csv(mutation_data_file, sep=',', index_col=0).fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 75}}, "selectionRange": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 11}}, "detail": "mutation_df = maf.groupby(['COSMIC_ID', 'Gene']).size().unstack().fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 49}}, "selectionRange": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 11}}, "detail": "mutation_df = mutation_df[selected_mut_gene_list]", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 46}}, "selectionRange": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 58}}, "selectionRange": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "PDTC_maf", "kind": 13, "range": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 80}}, "selectionRange": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 8}}, "detail": "PDTC_maf = pd.read_csv(PDTC_mutation_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 61}}, "selectionRange": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_maf.replace(to_replace=\"NO\",value=0.0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 82}}, "selectionRange": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_mutation_df.replace(to_replace=\"chr*\",value=1.0,regex=True)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 47}}, "selectionRange": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df.transpose()", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 59}}, "selectionRange": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df[selected_mut_gene_list]", "children": []}, {"name": "PDTC_mutation_gene_list", "kind": 13, "range": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 56}}, "selectionRange": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 23}}, "detail": "PDTC_mutation_gene_list = list(PDTC_mutation_df.columns)", "children": []}, {"name": "PDTC_mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 68}}, "selectionRange": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 28}}, "detail": "PDTC_mutation_cell_line_list = list(PDTC_mutation_df.index.unique())", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 55}}, "selectionRange": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 11}}, "detail": "mutation_df = pd.concat([mutation_df,PDTC_mutation_df])", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 46}}, "selectionRange": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 58}}, "selectionRange": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 36}}, "selectionRange": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 11}}, "detail": "file_handle = open(drug_target_file)", "children": []}, {"name": "drug_target_map", "kind": 13, "range": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 20}}, "selectionRange": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 15}}, "detail": "drug_target_map = {}", "children": []}, {"name": "drug_target_list", "kind": 13, "range": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 21}}, "selectionRange": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 16}}, "detail": "drug_target_list = []", "children": []}, {"name": "line", "kind": 13, "range": {"start": {"line": 230, "character": 0}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 230, "character": 4}, "end": {"line": 230, "character": 8}}, "detail": "for line in file_handle: new_line = line.rstrip().split(\"\\t\") drug = new_line[0] target_list=new_line[1].split(',') if drug != \"Drug\": target_list_str = \"\" for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\" drug = drug.strip() drug_target_map[drug] = [] if ',' not in target_list_str: drug_target_map[drug].append(target_list_str.strip()) drug_target_list.append(target_list_str.strip()) else: target_list = target_list_str.split(',') for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "new_line", "kind": 13, "range": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 40}}, "selectionRange": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 12}}, "detail": "new_line = line.rstrip().split(\"\\t\")", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 22}}, "selectionRange": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 8}}, "detail": "drug = new_line[0]", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 38}}, "selectionRange": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 15}}, "detail": "target_list=new_line[1].split(',')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 28}}, "selectionRange": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 23}}, "detail": "target_list_str = \"\"", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 237, "character": 8}, "end": {"line": 242, "character": 0}}, "selectionRange": {"start": {"line": 237, "character": 12}, "end": {"line": 237, "character": 13}}, "detail": "for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 65}}, "selectionRange": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 71}}, "selectionRange": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 27}}, "selectionRange": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 12}}, "detail": "drug = drug.strip()", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 52}}, "selectionRange": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 23}}, "detail": "target_list = target_list_str.split(',')", "children": []}, {"name": "target", "kind": 13, "range": {"start": {"line": 250, "character": 12}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 250, "character": 16}, "end": {"line": 250, "character": 22}}, "detail": "for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "drugs_legend", "kind": 13, "range": {"start": {"line": 261, "character": 0}, "end": {"line": 261, "character": 85}}, "selectionRange": {"start": {"line": 261, "character": 0}, "end": {"line": 261, "character": 12}}, "detail": "drugs_legend = pd.read_csv('/data/GDSC/Screened_Compounds.csv', sep=',', index_col=0)", "children": []}, {"name": "drug2id_mapping", "kind": 13, "range": {"start": {"line": 263, "character": 0}, "end": {"line": 263, "character": 20}}, "selectionRange": {"start": {"line": 263, "character": 0}, "end": {"line": 263, "character": 15}}, "detail": "drug2id_mapping = {}", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 265, "character": 0}, "end": {"line": 268, "character": 0}}, "selectionRange": {"start": {"line": 265, "character": 4}, "end": {"line": 265, "character": 9}}, "detail": "for index in list(drugs_legend.index) : drug_name = drugs_legend.loc[index,'Drug Name'] drug2id_mapping[ drug_name ] = index", "children": []}, {"name": "drug_name", "kind": 13, "range": {"start": {"line": 266, "character": 4}, "end": {"line": 266, "character": 51}}, "selectionRange": {"start": {"line": 266, "character": 4}, "end": {"line": 266, "character": 13}}, "detail": "drug_name = drugs_legend.loc[index,'Drug Name']", "children": []}, {"name": "valid_gene_list", "kind": 13, "range": {"start": {"line": 273, "character": 0}, "end": {"line": 273, "character": 92}}, "selectionRange": {"start": {"line": 273, "character": 0}, "end": {"line": 273, "character": 15}}, "detail": "valid_gene_list = list(set(drug_target_list) | set(exp_gene_list) | set(mutation_gene_list))", "children": []}, {"name": "network_list", "kind": 13, "range": {"start": {"line": 279, "character": 0}, "end": {"line": 279, "character": 82}}, "selectionRange": {"start": {"line": 279, "character": 0}, "end": {"line": 279, "character": 12}}, "detail": "network_list = [new_network_file+inbiomap_file, new_network_file+pathwaycomm_file]", "children": []}, {"name": "gene_neighbor_map", "kind": 13, "range": {"start": {"line": 280, "character": 0}, "end": {"line": 280, "character": 64}}, "selectionRange": {"start": {"line": 280, "character": 0}, "end": {"line": 280, "character": 17}}, "detail": "gene_neighbor_map = load_network(network_list, valid_gene_list)", "children": []}, {"name": "gene_name_df", "kind": 13, "range": {"start": {"line": 286, "character": 0}, "end": {"line": 286, "character": 89}}, "selectionRange": {"start": {"line": 286, "character": 0}, "end": {"line": 286, "character": 12}}, "detail": "gene_name_df = pd.read_table('/data/HUGO_protein-coding_gene.tsv',index_col=25, sep='\\t')", "children": []}, {"name": "gene_name_map", "kind": 13, "range": {"start": {"line": 292, "character": 0}, "end": {"line": 292, "character": 18}}, "selectionRange": {"start": {"line": 292, "character": 0}, "end": {"line": 292, "character": 13}}, "detail": "gene_name_map = {}", "children": []}, {"name": "uniprot_gene", "kind": 13, "range": {"start": {"line": 294, "character": 0}, "end": {"line": 303, "character": 0}}, "selectionRange": {"start": {"line": 294, "character": 4}, "end": {"line": 294, "character": 16}}, "detail": "for uniprot_gene in gene_name_df.index: if isinstance(uniprot_gene, type('aaa')) == False: continue if isinstance(gene_name_df.loc[uniprot_gene, 'symbol'], type('aaa')) == False: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol'][0] else: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 308, "character": 0}, "end": {"line": 308, "character": 76}}, "selectionRange": {"start": {"line": 308, "character": 0}, "end": {"line": 308, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "uniprot_gene_set", "kind": 13, "range": {"start": {"line": 310, "character": 0}, "end": {"line": 310, "character": 24}}, "selectionRange": {"start": {"line": 310, "character": 0}, "end": {"line": 310, "character": 16}}, "detail": "uniprot_gene_set = set()", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 312, "character": 0}, "end": {"line": 321, "character": 0}}, "selectionRange": {"start": {"line": 312, "character": 4}, "end": {"line": 312, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 317, "character": 4}, "end": {"line": 317, "character": 74}}, "selectionRange": {"start": {"line": 317, "character": 4}, "end": {"line": 317, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 319, "character": 4}, "end": {"line": 321, "character": 0}}, "selectionRange": {"start": {"line": 319, "character": 8}, "end": {"line": 319, "character": 12}}, "detail": "for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "query_gene_set", "kind": 13, "range": {"start": {"line": 324, "character": 0}, "end": {"line": 324, "character": 19}}, "selectionRange": {"start": {"line": 324, "character": 0}, "end": {"line": 324, "character": 14}}, "detail": "query_gene_set = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 326, "character": 0}, "end": {"line": 329, "character": 0}}, "selectionRange": {"start": {"line": 326, "character": 4}, "end": {"line": 326, "character": 8}}, "detail": "for gene in uniprot_gene_set: if gene not in gene_name_map: query_gene_set.append(gene)", "children": []}, {"name": "query_gene_list", "kind": 13, "range": {"start": {"line": 332, "character": 0}, "end": {"line": 332, "character": 38}}, "selectionRange": {"start": {"line": 332, "character": 0}, "end": {"line": 332, "character": 15}}, "detail": "query_gene_list = list(query_gene_set)", "children": []}, {"name": "mg", "kind": 13, "range": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 24}}, "selectionRange": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 2}}, "detail": "mg = mygene.MyGeneInfo()", "children": []}, {"name": "out", "kind": 13, "range": {"start": {"line": 335, "character": 0}, "end": {"line": 335, "character": 87}}, "selectionRange": {"start": {"line": 335, "character": 0}, "end": {"line": 335, "character": 3}}, "detail": "out = mg.querymany(query_gene_list, scopes='uniprot', fields='symbol', species='human')", "children": []}, {"name": "not_found_gene_list", "kind": 13, "range": {"start": {"line": 337, "character": 0}, "end": {"line": 337, "character": 24}}, "selectionRange": {"start": {"line": 337, "character": 0}, "end": {"line": 337, "character": 19}}, "detail": "not_found_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 339, "character": 0}, "end": {"line": 344, "character": 0}}, "selectionRange": {"start": {"line": 339, "character": 4}, "end": {"line": 339, "character": 5}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 339, "character": 0}, "end": {"line": 344, "character": 0}}, "selectionRange": {"start": {"line": 339, "character": 7}, "end": {"line": 339, "character": 11}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 351, "character": 0}, "end": {"line": 351, "character": 76}}, "selectionRange": {"start": {"line": 351, "character": 0}, "end": {"line": 351, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 353, "character": 0}, "end": {"line": 375, "character": 0}}, "selectionRange": {"start": {"line": 353, "character": 4}, "end": {"line": 353, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') complex_symbol_list = [] for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] ) for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 358, "character": 4}, "end": {"line": 358, "character": 74}}, "selectionRange": {"start": {"line": 358, "character": 4}, "end": {"line": 358, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "complex_symbol_list", "kind": 13, "range": {"start": {"line": 360, "character": 4}, "end": {"line": 360, "character": 28}}, "selectionRange": {"start": {"line": 360, "character": 4}, "end": {"line": 360, "character": 23}}, "detail": "complex_symbol_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 362, "character": 4}, "end": {"line": 365, "character": 0}}, "selectionRange": {"start": {"line": 362, "character": 8}, "end": {"line": 362, "character": 12}}, "detail": "for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] )", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 366, "character": 4}, "end": {"line": 375, "character": 0}}, "selectionRange": {"start": {"line": 366, "character": 8}, "end": {"line": 366, "character": 13}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 366, "character": 4}, "end": {"line": 375, "character": 0}}, "selectionRange": {"start": {"line": 366, "character": 15}, "end": {"line": 366, "character": 20}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene_exp_neighbor_map", "kind": 13, "range": {"start": {"line": 380, "character": 0}, "end": {"line": 380, "character": 26}}, "selectionRange": {"start": {"line": 380, "character": 0}, "end": {"line": 380, "character": 21}}, "detail": "gene_exp_neighbor_map = {}", "children": []}, {"name": "exp_matrix", "kind": 13, "range": {"start": {"line": 381, "character": 0}, "end": {"line": 381, "character": 26}}, "selectionRange": {"start": {"line": 381, "character": 0}, "end": {"line": 381, "character": 10}}, "detail": "exp_matrix = exp_df.values", "children": []}, {"name": "P", "kind": 13, "range": {"start": {"line": 383, "character": 0}, "end": {"line": 383, "character": 79}}, "selectionRange": {"start": {"line": 383, "character": 0}, "end": {"line": 383, "character": 1}}, "detail": "P = 1 - cdist(np.transpose(exp_matrix), np.transpose(exp_matrix),'correlation')", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 385, "character": 0}, "end": {"line": 399, "character": 0}}, "selectionRange": {"start": {"line": 385, "character": 4}, "end": {"line": 385, "character": 5}}, "detail": "for i in range(len(exp_gene_list)): gene1 = exp_gene_list[i] gene_exp_neighbor_map[gene1] = set() for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2) if gene1 not in gene_exp_neighbor_map[gene1]: print (gene1, 'not in itself?', P[i,i])", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 387, "character": 4}, "end": {"line": 387, "character": 28}}, "selectionRange": {"start": {"line": 387, "character": 4}, "end": {"line": 387, "character": 9}}, "detail": "gene1 = exp_gene_list[i]", "children": []}, {"name": "j", "kind": 13, "range": {"start": {"line": 390, "character": 4}, "end": {"line": 396, "character": 0}}, "selectionRange": {"start": {"line": 390, "character": 8}, "end": {"line": 390, "character": 9}}, "detail": "for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 392, "character": 8}, "end": {"line": 392, "character": 32}}, "selectionRange": {"start": {"line": 392, "character": 8}, "end": {"line": 392, "character": 13}}, "detail": "gene2 = exp_gene_list[j]", "children": []}, {"name": "drug_feature_list", "kind": 13, "range": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 22}}, "selectionRange": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 17}}, "detail": "drug_feature_list = []", "children": []}, {"name": "drug_neighbor_map", "kind": 13, "range": {"start": {"line": 408, "character": 0}, "end": {"line": 408, "character": 22}}, "selectionRange": {"start": {"line": 408, "character": 0}, "end": {"line": 408, "character": 17}}, "detail": "drug_neighbor_map = {}", "children": []}, {"name": "selected_drug_list", "kind": 13, "range": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 23}}, "selectionRange": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 18}}, "detail": "selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 411, "character": 0}, "end": {"line": 428, "character": 0}}, "selectionRange": {"start": {"line": 411, "character": 4}, "end": {"line": 411, "character": 8}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 411, "character": 0}, "end": {"line": 428, "character": 0}}, "selectionRange": {"start": {"line": 411, "character": 10}, "end": {"line": 411, "character": 21}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 414, "character": 8}, "end": {"line": 424, "character": 0}}, "selectionRange": {"start": {"line": 414, "character": 12}, "end": {"line": 414, "character": 16}}, "detail": "for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene]", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 442, "character": 0}, "end": {"line": 442, "character": 52}}, "selectionRange": {"start": {"line": 442, "character": 0}, "end": {"line": 442, "character": 5}}, "detail": "drugs = pd.read_csv(drug_cell_line_file,index_col=2)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 443, "character": 0}, "end": {"line": 443, "character": 93}}, "selectionRange": {"start": {"line": 443, "character": 0}, "end": {"line": 443, "character": 5}}, "detail": "drugs = drugs.drop([\"DATASET_VERSION\",\"IC50_RESULTS_ID\",\"MAX_CONC_MICROMOLAR\",\"RMSE\"],axis=1)", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 444, "character": 0}, "end": {"line": 444, "character": 49}}, "selectionRange": {"start": {"line": 444, "character": 0}, "end": {"line": 444, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 446, "character": 0}, "end": {"line": 446, "character": 28}}, "selectionRange": {"start": {"line": 446, "character": 0}, "end": {"line": 446, "character": 9}}, "detail": "drug_list = drugs[\"DRUG_ID\"]", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 447, "character": 0}, "end": {"line": 447, "character": 16}}, "selectionRange": {"start": {"line": 447, "character": 0}, "end": {"line": 447, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 457, "character": 0}, "end": {"line": 457, "character": 71}}, "selectionRange": {"start": {"line": 457, "character": 0}, "end": {"line": 457, "character": 10}}, "detail": "PDTC_drugs = pd.read_csv(PDTC_drug_cell_line_file,sep='\\t',index_col=0)", "children": []}, {"name": "PDTC_drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 458, "character": 0}, "end": {"line": 458, "character": 59}}, "selectionRange": {"start": {"line": 458, "character": 0}, "end": {"line": 458, "character": 25}}, "detail": "PDTC_drugs_cell_line_list = list(PDTC_drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 460, "character": 0}, "end": {"line": 460, "character": 39}}, "selectionRange": {"start": {"line": 460, "character": 0}, "end": {"line": 460, "character": 9}}, "detail": "drug_list = PDTC_drugs[\"Drug\"].tolist()", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 461, "character": 0}, "end": {"line": 461, "character": 16}}, "selectionRange": {"start": {"line": 461, "character": 0}, "end": {"line": 461, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 462, "character": 0}, "end": {"line": 467, "character": 0}}, "selectionRange": {"start": {"line": 462, "character": 4}, "end": {"line": 462, "character": 5}}, "detail": "for i in drug_list: if i in drug2id_mapping.keys(): new_drug_id.append(drug2id_mapping[i]) else: new_drug_id.append(0)", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 84}}, "selectionRange": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 10}}, "detail": "PDTC_drugs = PDTC_drugs.drop([\"Drug\",\"iC50\",\"D1_CONC\",\"D5_CONC\",\"perc.iC50\"],axis=1)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 477, "character": 0}, "end": {"line": 477, "character": 37}}, "selectionRange": {"start": {"line": 477, "character": 0}, "end": {"line": 477, "character": 5}}, "detail": "drugs = pd.concat([drugs,PDTC_drugs])", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 49}}, "selectionRange": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "cell_line_list", "kind": 13, "range": {"start": {"line": 490, "character": 0}, "end": {"line": 490, "character": 102}}, "selectionRange": {"start": {"line": 490, "character": 0}, "end": {"line": 490, "character": 14}}, "detail": "cell_line_list = list(set(drugs_cell_line_list)&set(exp_cell_line_list)&set(mutation_cell_line_list) )", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 497, "character": 0}, "end": {"line": 497, "character": 66}}, "selectionRange": {"start": {"line": 497, "character": 0}, "end": {"line": 497, "character": 16}}, "detail": "cell_line_legend = pd.read_csv(cell_line_detail_file, index_col=1)", "children": []}, {"name": "PDTC_cell_line", "kind": 13, "range": {"start": {"line": 498, "character": 0}, "end": {"line": 498, "character": 206}}, "selectionRange": {"start": {"line": 498, "character": 0}, "end": {"line": 498, "character": 14}}, "detail": "PDTC_cell_line = pd.DataFrame({'Line': [\"BRCA\"]*len(PDTC_exp_cell_line_list), 'Site':[\"PDTC\"]*len(PDTC_exp_cell_line_list),\"Histology\":[\"breast\"]*len(PDTC_exp_cell_line_list)},index=PDTC_exp_cell_line_list)", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 499, "character": 0}, "end": {"line": 499, "character": 63}}, "selectionRange": {"start": {"line": 499, "character": 0}, "end": {"line": 499, "character": 16}}, "detail": "cell_line_legend = pd.concat([cell_line_legend,PDTC_cell_line])", "children": []}, {"name": "tissue_map", "kind": 13, "range": {"start": {"line": 502, "character": 0}, "end": {"line": 502, "character": 15}}, "selectionRange": {"start": {"line": 502, "character": 0}, "end": {"line": 502, "character": 10}}, "detail": "tissue_map = {}", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 504, "character": 0}, "end": {"line": 512, "character": 0}}, "selectionRange": {"start": {"line": 504, "character": 4}, "end": {"line": 504, "character": 13}}, "detail": "for cell_line in cell_line_list: tissue = cell_line_legend.loc[cell_line,'Site'] if tissue not in tissue_map: tissue_map[tissue] = [] tissue_map[tissue].append(cell_line)", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 506, "character": 4}, "end": {"line": 506, "character": 51}}, "selectionRange": {"start": {"line": 506, "character": 4}, "end": {"line": 506, "character": 10}}, "detail": "tissue = cell_line_legend.loc[cell_line,'Site']", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 513, "character": 0}, "end": {"line": 513, "character": 23}}, "selectionRange": {"start": {"line": 513, "character": 0}, "end": {"line": 513, "character": 19}}, "detail": "large_tissue_number = 0", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 514, "character": 0}, "end": {"line": 520, "character": 0}}, "selectionRange": {"start": {"line": 514, "character": 4}, "end": {"line": 514, "character": 10}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 514, "character": 0}, "end": {"line": 520, "character": 0}}, "selectionRange": {"start": {"line": 514, "character": 12}, "end": {"line": 514, "character": 21}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 517, "character": 8}, "end": {"line": 517, "character": 32}}, "selectionRange": {"start": {"line": 517, "character": 8}, "end": {"line": 517, "character": 27}}, "detail": "large_tissue_number += 1", "children": []}, {"name": "new_exp_gene_list", "kind": 13, "range": {"start": {"line": 540, "character": 0}, "end": {"line": 540, "character": 22}}, "selectionRange": {"start": {"line": 540, "character": 0}, "end": {"line": 540, "character": 17}}, "detail": "new_exp_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 541, "character": 0}, "end": {"line": 544, "character": 0}}, "selectionRange": {"start": {"line": 541, "character": 4}, "end": {"line": 541, "character": 5}}, "detail": "for i in exp_gene_list: if i in valid_gene_list: new_exp_gene_list.append(i)", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 549, "character": 0}, "end": {"line": 549, "character": 41}}, "selectionRange": {"start": {"line": 549, "character": 0}, "end": {"line": 549, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 550, "character": 0}, "end": {"line": 550, "character": 38}}, "selectionRange": {"start": {"line": 550, "character": 0}, "end": {"line": 550, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 551, "character": 0}, "end": {"line": 551, "character": 72}}, "selectionRange": {"start": {"line": 551, "character": 0}, "end": {"line": 551, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 553, "character": 0}, "end": {"line": 553, "character": 43}}, "selectionRange": {"start": {"line": 553, "character": 0}, "end": {"line": 553, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 554, "character": 0}, "end": {"line": 554, "character": 68}}, "selectionRange": {"start": {"line": 554, "character": 0}, "end": {"line": 554, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 561, "character": 0}, "end": {"line": 561, "character": 58}}, "selectionRange": {"start": {"line": 561, "character": 0}, "end": {"line": 561, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 562, "character": 0}, "end": {"line": 562, "character": 68}}, "selectionRange": {"start": {"line": 562, "character": 0}, "end": {"line": 562, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "new_data_file", "kind": 13, "range": {"start": {"line": 571, "character": 0}, "end": {"line": 571, "character": 18}}, "selectionRange": {"start": {"line": 571, "character": 0}, "end": {"line": 571, "character": 13}}, "detail": "new_data_file = ''", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 41}}, "selectionRange": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 38}}, "selectionRange": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 72}}, "selectionRange": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 43}}, "selectionRange": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 68}}, "selectionRange": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 58}}, "selectionRange": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 68}}, "selectionRange": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "rename_selected_drug_list", "kind": 13, "range": {"start": {"line": 592, "character": 0}, "end": {"line": 592, "character": 30}}, "selectionRange": {"start": {"line": 592, "character": 0}, "end": {"line": 592, "character": 25}}, "detail": "rename_selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 594, "character": 0}, "end": {"line": 664, "character": 0}}, "selectionRange": {"start": {"line": 594, "character": 4}, "end": {"line": 594, "character": 8}}, "detail": "for drug in selected_drug_list: print(drug) if drug not in drug2id_mapping: print('drug name wrong', drug) else: cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]] feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) ) feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) ) print(len(feature_exp_gene_list) + len(feature_mut_gene_list)) if len(feature_exp_gene_list) + len(feature_mut_gene_list) == 0: continue feature_description = [] drug_tissue_map = {} drug = drug.replace(' ','_') rename_selected_drug_list.append(drug) if drug == 'Nutlin-3a_(-)': drug = 'Nutlin-3a' drug_folder = '/data/merged/drug_feature/' + drug + '/' if not os.path.exists(drug_folder): os.makedirs(drug_folder) for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description)) file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\") pickle.dump(drug_tissue_map,file_handle) file_handle.close()", "children": []}, {"name": "cell_line_drug_matrix", "kind": 13, "range": {"start": {"line": 602, "character": 8}, "end": {"line": 602, "character": 84}}, "selectionRange": {"start": {"line": 602, "character": 8}, "end": {"line": 602, "character": 29}}, "detail": "cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]]", "children": []}, {"name": "feature_exp_gene_list", "kind": 13, "range": {"start": {"line": 607, "character": 8}, "end": {"line": 607, "character": 98}}, "selectionRange": {"start": {"line": 607, "character": 8}, "end": {"line": 607, "character": 29}}, "detail": "feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) )", "children": []}, {"name": "feature_mut_gene_list", "kind": 13, "range": {"start": {"line": 608, "character": 8}, "end": {"line": 608, "character": 98}}, "selectionRange": {"start": {"line": 608, "character": 8}, "end": {"line": 608, "character": 29}}, "detail": "feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) )", "children": []}, {"name": "feature_description", "kind": 13, "range": {"start": {"line": 612, "character": 8}, "end": {"line": 612, "character": 32}}, "selectionRange": {"start": {"line": 612, "character": 8}, "end": {"line": 612, "character": 27}}, "detail": "feature_description = []", "children": []}, {"name": "drug_tissue_map", "kind": 13, "range": {"start": {"line": 614, "character": 8}, "end": {"line": 614, "character": 28}}, "selectionRange": {"start": {"line": 614, "character": 8}, "end": {"line": 614, "character": 23}}, "detail": "drug_tissue_map = {}", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 616, "character": 8}, "end": {"line": 616, "character": 36}}, "selectionRange": {"start": {"line": 616, "character": 8}, "end": {"line": 616, "character": 12}}, "detail": "drug = drug.replace(' ','_')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 622, "character": 12}, "end": {"line": 622, "character": 30}}, "selectionRange": {"start": {"line": 622, "character": 12}, "end": {"line": 622, "character": 16}}, "detail": "drug = 'Nutlin-3a'", "children": []}, {"name": "drug_folder", "kind": 13, "range": {"start": {"line": 624, "character": 8}, "end": {"line": 624, "character": 63}}, "selectionRange": {"start": {"line": 624, "character": 8}, "end": {"line": 624, "character": 19}}, "detail": "drug_folder = '/data/merged/drug_feature/' + drug + '/'", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 630, "character": 8}, "end": {"line": 660, "character": 0}}, "selectionRange": {"start": {"line": 630, "character": 12}, "end": {"line": 630, "character": 18}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "tissue_cell_line_list", "kind": 13, "range": {"start": {"line": 630, "character": 8}, "end": {"line": 660, "character": 0}}, "selectionRange": {"start": {"line": 630, "character": 20}, "end": {"line": 630, "character": 41}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 633, "character": 12}, "end": {"line": 633, "character": 103}}, "selectionRange": {"start": {"line": 633, "character": 12}, "end": {"line": 633, "character": 35}}, "detail": "drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list )", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 634, "character": 12}, "end": {"line": 634, "character": 67}}, "selectionRange": {"start": {"line": 634, "character": 12}, "end": {"line": 634, "character": 35}}, "detail": "drug_specific_cell_line = list(drug_specific_cell_line)", "children": []}, {"name": "feature_list", "kind": 13, "range": {"start": {"line": 637, "character": 12}, "end": {"line": 637, "character": 29}}, "selectionRange": {"start": {"line": 637, "character": 12}, "end": {"line": 637, "character": 24}}, "detail": "feature_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 641, "character": 16}, "end": {"line": 643, "character": 0}}, "selectionRange": {"start": {"line": 641, "character": 20}, "end": {"line": 641, "character": 24}}, "detail": "for gene in feature_exp_gene_list: feature_description.append(gene+'_expression')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 646, "character": 16}, "end": {"line": 648, "character": 0}}, "selectionRange": {"start": {"line": 646, "character": 20}, "end": {"line": 646, "character": 24}}, "detail": "for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation')", "children": []}, {"name": "feature", "kind": 13, "range": {"start": {"line": 649, "character": 12}, "end": {"line": 649, "character": 58}}, "selectionRange": {"start": {"line": 649, "character": 12}, "end": {"line": 649, "character": 19}}, "detail": "feature = np.concatenate(feature_list, axis=1)", "children": []}, {"name": "label", "kind": 13, "range": {"start": {"line": 651, "character": 12}, "end": {"line": 651, "character": 88}}, "selectionRange": {"start": {"line": 651, "character": 12}, "end": {"line": 651, "character": 17}}, "detail": "label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 661, "character": 8}, "end": {"line": 661, "character": 84}}, "selectionRange": {"start": {"line": 661, "character": 8}, "end": {"line": 661, "character": 19}}, "detail": "file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\")", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 665, "character": 0}, "end": {"line": 665, "character": 52}}, "selectionRange": {"start": {"line": 665, "character": 0}, "end": {"line": 665, "character": 11}}, "detail": "file_handle = open('rename_selected_drug_list', 'w')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 666, "character": 0}, "end": {"line": 668, "character": 0}}, "selectionRange": {"start": {"line": 666, "character": 4}, "end": {"line": 666, "character": 8}}, "detail": "for drug in rename_selected_drug_list: file_handle.writelines(drug+ '\\n')", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 686, "character": 0}, "end": {"line": 686, "character": 13}}, "selectionRange": {"start": {"line": 686, "character": 7}, "end": {"line": 686, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cell_line_loc", "kind": 13, "range": {"start": {"line": 692, "character": 0}, "end": {"line": 692, "character": 84}}, "selectionRange": {"start": {"line": 692, "character": 0}, "end": {"line": 692, "character": 13}}, "detail": "cell_line_loc = '/cellar/users/samsonfong/Projects/tcrp-v2/from-ma/cell_line_lists/'", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 698, "character": 0}, "end": {"line": 700, "character": 0}}, "selectionRange": {"start": {"line": 698, "character": 53}, "end": {"line": 698, "character": 54}}, "detail": "with open('/data/drug_feature/KU-55933/KU', 'rb') as f: tmap= pickle.load(f)", "children": []}, {"name": "tmap", "kind": 13, "range": {"start": {"line": 699, "character": 4}, "end": {"line": 699, "character": 24}}, "selectionRange": {"start": {"line": 699, "character": 4}, "end": {"line": 699, "character": 8}}, "detail": "tmap= pickle.load(f)", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 717, "character": 0}, "end": {"line": 717, "character": 68}}, "selectionRange": {"start": {"line": 717, "character": 0}, "end": {"line": 717, "character": 1}}, "detail": "f = np.load('/data/drug_feature/KU-55933/lung_KU-55933_feature.npy')", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 11, "result": [{"range": {"start": {"line": 444, "character": 0}, "end": {"line": 444, "character": 20}}}, {"range": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 20}}}, {"range": {"start": {"line": 490, "character": 26}, "end": {"line": 490, "character": 46}}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 12, "result": [{"title": "Inline variable", "kind": "refactor.inline", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///root/capsule/code/process_merged.py", "version": 1}, "edits": [{"range": {"start": {"line": 29, "character": 0}, "end": {"line": 30, "character": 95}}, "newText": ""}, {"range": {"start": {"line": 145, "character": 16}, "end": {"line": 145, "character": 38}}, "newText": "pd.read_csv(\"/data/common_exp_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()"}, {"range": {"start": {"line": 166, "character": 26}, "end": {"line": 166, "character": 48}}, "newText": "pd.read_csv(\"/data/common_exp_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 13, "result": [{"name": "matplotlib", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 17}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 17}}, "detail": "module matplotlib", "children": []}, {"name": "os", "kind": 2, "range": {"start": {"line": 10, "character": 0}, "end": {"line": 10, "character": 9}}, "selectionRange": {"start": {"line": 10, "character": 7}, "end": {"line": 10, "character": 9}}, "detail": "module os", "children": []}, {"name": "pd", "kind": 2, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 11, "character": 19}}, "selectionRange": {"start": {"line": 11, "character": 17}, "end": {"line": 11, "character": 19}}, "detail": "module pd", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 12, "character": 0}, "end": {"line": 12, "character": 18}}, "selectionRange": {"start": {"line": 12, "character": 16}, "end": {"line": 12, "character": 18}}, "detail": "module np", "children": []}, {"name": "sys", "kind": 2, "range": {"start": {"line": 13, "character": 0}, "end": {"line": 13, "character": 10}}, "selectionRange": {"start": {"line": 13, "character": 7}, "end": {"line": 13, "character": 10}}, "detail": "module sys", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 14, "character": 0}, "end": {"line": 14, "character": 13}}, "selectionRange": {"start": {"line": 14, "character": 7}, "end": {"line": 14, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cdist", "kind": 12, "range": {"start": {"line": 15, "character": 0}, "end": {"line": 15, "character": 40}}, "selectionRange": {"start": {"line": 15, "character": 35}, "end": {"line": 15, "character": 40}}, "detail": "def cdist", "children": []}, {"name": "math", "kind": 2, "range": {"start": {"line": 16, "character": 0}, "end": {"line": 16, "character": 11}}, "selectionRange": {"start": {"line": 16, "character": 7}, "end": {"line": 16, "character": 11}}, "detail": "module math", "children": []}, {"name": "nx", "kind": 2, "range": {"start": {"line": 17, "character": 0}, "end": {"line": 17, "character": 21}}, "selectionRange": {"start": {"line": 17, "character": 19}, "end": {"line": 17, "character": 21}}, "detail": "module nx", "children": []}, {"name": "nxacc", "kind": 2, "range": {"start": {"line": 18, "character": 0}, "end": {"line": 18, "character": 56}}, "selectionRange": {"start": {"line": 18, "character": 51}, "end": {"line": 18, "character": 56}}, "detail": "module nxacc", "children": []}, {"name": "nxadag", "kind": 2, "range": {"start": {"line": 19, "character": 0}, "end": {"line": 19, "character": 40}}, "selectionRange": {"start": {"line": 19, "character": 34}, "end": {"line": 19, "character": 40}}, "detail": "module nxadag", "children": []}, {"name": "plt", "kind": 2, "range": {"start": {"line": 20, "character": 0}, "end": {"line": 20, "character": 31}}, "selectionRange": {"start": {"line": 20, "character": 28}, "end": {"line": 20, "character": 31}}, "detail": "module plt", "children": []}, {"name": "sns", "kind": 2, "range": {"start": {"line": 21, "character": 0}, "end": {"line": 21, "character": 21}}, "selectionRange": {"start": {"line": 21, "character": 18}, "end": {"line": 21, "character": 21}}, "detail": "module sns", "children": []}, {"name": "itertools", "kind": 2, "range": {"start": {"line": 22, "character": 0}, "end": {"line": 22, "character": 16}}, "selectionRange": {"start": {"line": 22, "character": 7}, "end": {"line": 22, "character": 16}}, "detail": "module itertools", "children": []}, {"name": "mygene", "kind": 2, "range": {"start": {"line": 23, "character": 0}, "end": {"line": 23, "character": 13}}, "selectionRange": {"start": {"line": 23, "character": 7}, "end": {"line": 23, "character": 13}}, "detail": "module mygene", "children": []}, {"name": "re", "kind": 2, "range": {"start": {"line": 24, "character": 0}, "end": {"line": 24, "character": 9}}, "selectionRange": {"start": {"line": 24, "character": 7}, "end": {"line": 24, "character": 9}}, "detail": "module re", "children": []}, {"name": "selected_exp_gene_list", "kind": 13, "range": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 95}}, "selectionRange": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 22}}, "detail": "selected_exp_gene_list = pd.read_csv(\"/data/common_exp_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "selected_mut_gene_list", "kind": 13, "range": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 95}}, "selectionRange": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 22}}, "detail": "selected_mut_gene_list = pd.read_csv(\"/data/common_mut_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "load_network", "kind": 12, "range": {"start": {"line": 37, "character": 0}, "end": {"line": 65, "character": 28}}, "selectionRange": {"start": {"line": 37, "character": 4}, "end": {"line": 37, "character": 16}}, "detail": "def load_network", "children": []}, {"name": "load_name_space", "kind": 12, "range": {"start": {"line": 67, "character": 0}, "end": {"line": 79, "character": 21}}, "selectionRange": {"start": {"line": 67, "character": 4}, "end": {"line": 67, "character": 19}}, "detail": "def load_name_space", "children": []}, {"name": "list2index", "kind": 12, "range": {"start": {"line": 81, "character": 0}, "end": {"line": 88, "character": 41}}, "selectionRange": {"start": {"line": 81, "character": 4}, "end": {"line": 81, "character": 14}}, "detail": "def list2index", "children": []}, {"name": "PDTC_data_file", "kind": 13, "range": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 30}}, "selectionRange": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 14}}, "detail": "PDTC_data_file = '/data/PTDC/'", "children": []}, {"name": "PDTC_exp_data_file", "kind": 13, "range": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 60}}, "selectionRange": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 18}}, "detail": "PDTC_exp_data_file = PDTC_data_file + 'ExpressionModels.tsv'", "children": []}, {"name": "PDTC_drug_cell_line_file", "kind": 13, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 72}}, "selectionRange": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 24}}, "detail": "PDTC_drug_cell_line_file = PDTC_data_file + 'DrugResponsesAUCModels.tsv'", "children": []}, {"name": "PDTC_mutation_data_file", "kind": 13, "range": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 59}}, "selectionRange": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 23}}, "detail": "PDTC_mutation_data_file = PDTC_data_file + 'SNVsModels.tsv'", "children": []}, {"name": "PDTC_drug_target_file", "kind": 13, "range": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 47}}, "selectionRange": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 21}}, "detail": "PDTC_drug_target_file ='/data/drug_targets.tsv'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 37}}, "selectionRange": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 46}}, "selectionRange": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "data_file", "kind": 13, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 25}}, "selectionRange": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 9}}, "detail": "data_file = '/data/GDSC/'", "children": []}, {"name": "new_network_file", "kind": 13, "range": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 27}}, "selectionRange": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 16}}, "detail": "new_network_file = '/data/'", "children": []}, {"name": "exp_data_file", "kind": 13, "range": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 61}}, "selectionRange": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 13}}, "detail": "exp_data_file = data_file + 'Cell_line_RMA_proc_basalExp.txt'", "children": []}, {"name": "drug_cell_line_file", "kind": 13, "range": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 64}}, "selectionRange": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 19}}, "detail": "drug_cell_line_file = data_file + 'v17_fitted_dose_response.csv'", "children": []}, {"name": "cell_line_detail_file", "kind": 13, "range": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 60}}, "selectionRange": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 21}}, "detail": "cell_line_detail_file = data_file + 'Cell_Lines_Details.csv'", "children": []}, {"name": "mutation_data_file", "kind": 13, "range": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 51}}, "selectionRange": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 18}}, "detail": "mutation_data_file = data_file + 'WES_variants.csv'", "children": []}, {"name": "drug_target_file", "kind": 13, "range": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 42}}, "selectionRange": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 16}}, "detail": "drug_target_file ='/data/drug_targets.tsv'", "children": []}, {"name": "feature_folder", "kind": 13, "range": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 27}}, "selectionRange": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 14}}, "detail": "feature_folder = 'feature/'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 37}}, "selectionRange": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 46}}, "selectionRange": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 58}}, "selectionRange": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 6}}, "detail": "exp_df = pd.read_csv(exp_data_file, sep='\\t', index_col=0)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 21}}, "selectionRange": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 6}}, "detail": "exp_df = exp_df.T[1:]", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 56}}, "selectionRange": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 6}}, "detail": "exp_df = exp_df.rename(columns={np.nan: 'NO_GENE_NAME'})", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 43}}, "selectionRange": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 6}}, "detail": "exp_df = exp_df.drop('NO_GENE_NAME',axis=1)", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 138, "character": 0}, "end": {"line": 140, "character": 26}}, "selectionRange": {"start": {"line": 138, "character": 4}, "end": {"line": 138, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 142, "character": 0}, "end": {"line": 142, "character": 44}}, "selectionRange": {"start": {"line": 142, "character": 7}, "end": {"line": 142, "character": 12}}, "detail": "exp_df.index = exp_df.index.map(stripNumber)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 40}}, "selectionRange": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 6}}, "detail": "exp_df = exp_df.groupby(level=0).first()", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 39}}, "selectionRange": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 6}}, "detail": "exp_df = exp_df[selected_exp_gene_list]", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 36}}, "selectionRange": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 48}}, "selectionRange": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 78}}, "selectionRange": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 11}}, "detail": "PDTC_exp_df = pd.read_csv(PDTC_exp_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 31}}, "selectionRange": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df.T[1:]", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 160, "character": 0}, "end": {"line": 162, "character": 26}}, "selectionRange": {"start": {"line": 160, "character": 4}, "end": {"line": 160, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 49}}, "selectionRange": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df[selected_exp_gene_list]", "children": []}, {"name": "PDTC_exp_gene_list", "kind": 13, "range": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 46}}, "selectionRange": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 18}}, "detail": "PDTC_exp_gene_list = list(PDTC_exp_df.columns)", "children": []}, {"name": "PDTC_exp_cell_line_list", "kind": 13, "range": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 58}}, "selectionRange": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 23}}, "detail": "PDTC_exp_cell_line_list = list(PDTC_exp_df.index.unique())", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 40}}, "selectionRange": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 6}}, "detail": "exp_df = pd.concat([exp_df,PDTC_exp_df])", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 36}}, "selectionRange": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 48}}, "selectionRange": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "maf", "kind": 13, "range": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 69}}, "selectionRange": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 3}}, "detail": "maf = pd.read_csv(mutation_data_file, sep=',', index_col=0).fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 75}}, "selectionRange": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 11}}, "detail": "mutation_df = maf.groupby(['COSMIC_ID', 'Gene']).size().unstack().fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 49}}, "selectionRange": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 11}}, "detail": "mutation_df = mutation_df[selected_mut_gene_list]", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 46}}, "selectionRange": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 58}}, "selectionRange": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "PDTC_maf", "kind": 13, "range": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 80}}, "selectionRange": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 8}}, "detail": "PDTC_maf = pd.read_csv(PDTC_mutation_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 61}}, "selectionRange": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_maf.replace(to_replace=\"NO\",value=0.0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 82}}, "selectionRange": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_mutation_df.replace(to_replace=\"chr*\",value=1.0,regex=True)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 47}}, "selectionRange": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df.transpose()", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 59}}, "selectionRange": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df[selected_mut_gene_list]", "children": []}, {"name": "PDTC_mutation_gene_list", "kind": 13, "range": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 56}}, "selectionRange": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 23}}, "detail": "PDTC_mutation_gene_list = list(PDTC_mutation_df.columns)", "children": []}, {"name": "PDTC_mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 68}}, "selectionRange": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 28}}, "detail": "PDTC_mutation_cell_line_list = list(PDTC_mutation_df.index.unique())", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 55}}, "selectionRange": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 11}}, "detail": "mutation_df = pd.concat([mutation_df,PDTC_mutation_df])", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 46}}, "selectionRange": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 58}}, "selectionRange": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 36}}, "selectionRange": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 11}}, "detail": "file_handle = open(drug_target_file)", "children": []}, {"name": "drug_target_map", "kind": 13, "range": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 20}}, "selectionRange": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 15}}, "detail": "drug_target_map = {}", "children": []}, {"name": "drug_target_list", "kind": 13, "range": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 21}}, "selectionRange": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 16}}, "detail": "drug_target_list = []", "children": []}, {"name": "line", "kind": 13, "range": {"start": {"line": 230, "character": 0}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 230, "character": 4}, "end": {"line": 230, "character": 8}}, "detail": "for line in file_handle: new_line = line.rstrip().split(\"\\t\") drug = new_line[0] target_list=new_line[1].split(',') if drug != \"Drug\": target_list_str = \"\" for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\" drug = drug.strip() drug_target_map[drug] = [] if ',' not in target_list_str: drug_target_map[drug].append(target_list_str.strip()) drug_target_list.append(target_list_str.strip()) else: target_list = target_list_str.split(',') for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "new_line", "kind": 13, "range": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 40}}, "selectionRange": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 12}}, "detail": "new_line = line.rstrip().split(\"\\t\")", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 22}}, "selectionRange": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 8}}, "detail": "drug = new_line[0]", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 38}}, "selectionRange": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 15}}, "detail": "target_list=new_line[1].split(',')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 28}}, "selectionRange": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 23}}, "detail": "target_list_str = \"\"", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 237, "character": 8}, "end": {"line": 242, "character": 0}}, "selectionRange": {"start": {"line": 237, "character": 12}, "end": {"line": 237, "character": 13}}, "detail": "for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 65}}, "selectionRange": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 71}}, "selectionRange": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 27}}, "selectionRange": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 12}}, "detail": "drug = drug.strip()", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 52}}, "selectionRange": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 23}}, "detail": "target_list = target_list_str.split(',')", "children": []}, {"name": "target", "kind": 13, "range": {"start": {"line": 250, "character": 12}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 250, "character": 16}, "end": {"line": 250, "character": 22}}, "detail": "for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "drugs_legend", "kind": 13, "range": {"start": {"line": 261, "character": 0}, "end": {"line": 261, "character": 85}}, "selectionRange": {"start": {"line": 261, "character": 0}, "end": {"line": 261, "character": 12}}, "detail": "drugs_legend = pd.read_csv('/data/GDSC/Screened_Compounds.csv', sep=',', index_col=0)", "children": []}, {"name": "drug2id_mapping", "kind": 13, "range": {"start": {"line": 263, "character": 0}, "end": {"line": 263, "character": 20}}, "selectionRange": {"start": {"line": 263, "character": 0}, "end": {"line": 263, "character": 15}}, "detail": "drug2id_mapping = {}", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 265, "character": 0}, "end": {"line": 268, "character": 0}}, "selectionRange": {"start": {"line": 265, "character": 4}, "end": {"line": 265, "character": 9}}, "detail": "for index in list(drugs_legend.index) : drug_name = drugs_legend.loc[index,'Drug Name'] drug2id_mapping[ drug_name ] = index", "children": []}, {"name": "drug_name", "kind": 13, "range": {"start": {"line": 266, "character": 4}, "end": {"line": 266, "character": 51}}, "selectionRange": {"start": {"line": 266, "character": 4}, "end": {"line": 266, "character": 13}}, "detail": "drug_name = drugs_legend.loc[index,'Drug Name']", "children": []}, {"name": "valid_gene_list", "kind": 13, "range": {"start": {"line": 273, "character": 0}, "end": {"line": 273, "character": 92}}, "selectionRange": {"start": {"line": 273, "character": 0}, "end": {"line": 273, "character": 15}}, "detail": "valid_gene_list = list(set(drug_target_list) | set(exp_gene_list) | set(mutation_gene_list))", "children": []}, {"name": "network_list", "kind": 13, "range": {"start": {"line": 279, "character": 0}, "end": {"line": 279, "character": 82}}, "selectionRange": {"start": {"line": 279, "character": 0}, "end": {"line": 279, "character": 12}}, "detail": "network_list = [new_network_file+inbiomap_file, new_network_file+pathwaycomm_file]", "children": []}, {"name": "gene_neighbor_map", "kind": 13, "range": {"start": {"line": 280, "character": 0}, "end": {"line": 280, "character": 64}}, "selectionRange": {"start": {"line": 280, "character": 0}, "end": {"line": 280, "character": 17}}, "detail": "gene_neighbor_map = load_network(network_list, valid_gene_list)", "children": []}, {"name": "gene_name_df", "kind": 13, "range": {"start": {"line": 286, "character": 0}, "end": {"line": 286, "character": 89}}, "selectionRange": {"start": {"line": 286, "character": 0}, "end": {"line": 286, "character": 12}}, "detail": "gene_name_df = pd.read_table('/data/HUGO_protein-coding_gene.tsv',index_col=25, sep='\\t')", "children": []}, {"name": "gene_name_map", "kind": 13, "range": {"start": {"line": 292, "character": 0}, "end": {"line": 292, "character": 18}}, "selectionRange": {"start": {"line": 292, "character": 0}, "end": {"line": 292, "character": 13}}, "detail": "gene_name_map = {}", "children": []}, {"name": "uniprot_gene", "kind": 13, "range": {"start": {"line": 294, "character": 0}, "end": {"line": 303, "character": 0}}, "selectionRange": {"start": {"line": 294, "character": 4}, "end": {"line": 294, "character": 16}}, "detail": "for uniprot_gene in gene_name_df.index: if isinstance(uniprot_gene, type('aaa')) == False: continue if isinstance(gene_name_df.loc[uniprot_gene, 'symbol'], type('aaa')) == False: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol'][0] else: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 308, "character": 0}, "end": {"line": 308, "character": 76}}, "selectionRange": {"start": {"line": 308, "character": 0}, "end": {"line": 308, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "uniprot_gene_set", "kind": 13, "range": {"start": {"line": 310, "character": 0}, "end": {"line": 310, "character": 24}}, "selectionRange": {"start": {"line": 310, "character": 0}, "end": {"line": 310, "character": 16}}, "detail": "uniprot_gene_set = set()", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 312, "character": 0}, "end": {"line": 321, "character": 0}}, "selectionRange": {"start": {"line": 312, "character": 4}, "end": {"line": 312, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 317, "character": 4}, "end": {"line": 317, "character": 74}}, "selectionRange": {"start": {"line": 317, "character": 4}, "end": {"line": 317, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 319, "character": 4}, "end": {"line": 321, "character": 0}}, "selectionRange": {"start": {"line": 319, "character": 8}, "end": {"line": 319, "character": 12}}, "detail": "for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "query_gene_set", "kind": 13, "range": {"start": {"line": 324, "character": 0}, "end": {"line": 324, "character": 19}}, "selectionRange": {"start": {"line": 324, "character": 0}, "end": {"line": 324, "character": 14}}, "detail": "query_gene_set = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 326, "character": 0}, "end": {"line": 329, "character": 0}}, "selectionRange": {"start": {"line": 326, "character": 4}, "end": {"line": 326, "character": 8}}, "detail": "for gene in uniprot_gene_set: if gene not in gene_name_map: query_gene_set.append(gene)", "children": []}, {"name": "query_gene_list", "kind": 13, "range": {"start": {"line": 332, "character": 0}, "end": {"line": 332, "character": 38}}, "selectionRange": {"start": {"line": 332, "character": 0}, "end": {"line": 332, "character": 15}}, "detail": "query_gene_list = list(query_gene_set)", "children": []}, {"name": "mg", "kind": 13, "range": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 24}}, "selectionRange": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 2}}, "detail": "mg = mygene.MyGeneInfo()", "children": []}, {"name": "out", "kind": 13, "range": {"start": {"line": 335, "character": 0}, "end": {"line": 335, "character": 87}}, "selectionRange": {"start": {"line": 335, "character": 0}, "end": {"line": 335, "character": 3}}, "detail": "out = mg.querymany(query_gene_list, scopes='uniprot', fields='symbol', species='human')", "children": []}, {"name": "not_found_gene_list", "kind": 13, "range": {"start": {"line": 337, "character": 0}, "end": {"line": 337, "character": 24}}, "selectionRange": {"start": {"line": 337, "character": 0}, "end": {"line": 337, "character": 19}}, "detail": "not_found_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 339, "character": 0}, "end": {"line": 344, "character": 0}}, "selectionRange": {"start": {"line": 339, "character": 4}, "end": {"line": 339, "character": 5}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 339, "character": 0}, "end": {"line": 344, "character": 0}}, "selectionRange": {"start": {"line": 339, "character": 7}, "end": {"line": 339, "character": 11}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 351, "character": 0}, "end": {"line": 351, "character": 76}}, "selectionRange": {"start": {"line": 351, "character": 0}, "end": {"line": 351, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 353, "character": 0}, "end": {"line": 375, "character": 0}}, "selectionRange": {"start": {"line": 353, "character": 4}, "end": {"line": 353, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') complex_symbol_list = [] for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] ) for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 358, "character": 4}, "end": {"line": 358, "character": 74}}, "selectionRange": {"start": {"line": 358, "character": 4}, "end": {"line": 358, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "complex_symbol_list", "kind": 13, "range": {"start": {"line": 360, "character": 4}, "end": {"line": 360, "character": 28}}, "selectionRange": {"start": {"line": 360, "character": 4}, "end": {"line": 360, "character": 23}}, "detail": "complex_symbol_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 362, "character": 4}, "end": {"line": 365, "character": 0}}, "selectionRange": {"start": {"line": 362, "character": 8}, "end": {"line": 362, "character": 12}}, "detail": "for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] )", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 366, "character": 4}, "end": {"line": 375, "character": 0}}, "selectionRange": {"start": {"line": 366, "character": 8}, "end": {"line": 366, "character": 13}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 366, "character": 4}, "end": {"line": 375, "character": 0}}, "selectionRange": {"start": {"line": 366, "character": 15}, "end": {"line": 366, "character": 20}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene_exp_neighbor_map", "kind": 13, "range": {"start": {"line": 380, "character": 0}, "end": {"line": 380, "character": 26}}, "selectionRange": {"start": {"line": 380, "character": 0}, "end": {"line": 380, "character": 21}}, "detail": "gene_exp_neighbor_map = {}", "children": []}, {"name": "exp_matrix", "kind": 13, "range": {"start": {"line": 381, "character": 0}, "end": {"line": 381, "character": 26}}, "selectionRange": {"start": {"line": 381, "character": 0}, "end": {"line": 381, "character": 10}}, "detail": "exp_matrix = exp_df.values", "children": []}, {"name": "P", "kind": 13, "range": {"start": {"line": 383, "character": 0}, "end": {"line": 383, "character": 79}}, "selectionRange": {"start": {"line": 383, "character": 0}, "end": {"line": 383, "character": 1}}, "detail": "P = 1 - cdist(np.transpose(exp_matrix), np.transpose(exp_matrix),'correlation')", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 385, "character": 0}, "end": {"line": 399, "character": 0}}, "selectionRange": {"start": {"line": 385, "character": 4}, "end": {"line": 385, "character": 5}}, "detail": "for i in range(len(exp_gene_list)): gene1 = exp_gene_list[i] gene_exp_neighbor_map[gene1] = set() for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2) if gene1 not in gene_exp_neighbor_map[gene1]: print (gene1, 'not in itself?', P[i,i])", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 387, "character": 4}, "end": {"line": 387, "character": 28}}, "selectionRange": {"start": {"line": 387, "character": 4}, "end": {"line": 387, "character": 9}}, "detail": "gene1 = exp_gene_list[i]", "children": []}, {"name": "j", "kind": 13, "range": {"start": {"line": 390, "character": 4}, "end": {"line": 396, "character": 0}}, "selectionRange": {"start": {"line": 390, "character": 8}, "end": {"line": 390, "character": 9}}, "detail": "for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 392, "character": 8}, "end": {"line": 392, "character": 32}}, "selectionRange": {"start": {"line": 392, "character": 8}, "end": {"line": 392, "character": 13}}, "detail": "gene2 = exp_gene_list[j]", "children": []}, {"name": "drug_feature_list", "kind": 13, "range": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 22}}, "selectionRange": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 17}}, "detail": "drug_feature_list = []", "children": []}, {"name": "drug_neighbor_map", "kind": 13, "range": {"start": {"line": 408, "character": 0}, "end": {"line": 408, "character": 22}}, "selectionRange": {"start": {"line": 408, "character": 0}, "end": {"line": 408, "character": 17}}, "detail": "drug_neighbor_map = {}", "children": []}, {"name": "selected_drug_list", "kind": 13, "range": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 23}}, "selectionRange": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 18}}, "detail": "selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 411, "character": 0}, "end": {"line": 428, "character": 0}}, "selectionRange": {"start": {"line": 411, "character": 4}, "end": {"line": 411, "character": 8}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 411, "character": 0}, "end": {"line": 428, "character": 0}}, "selectionRange": {"start": {"line": 411, "character": 10}, "end": {"line": 411, "character": 21}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 414, "character": 8}, "end": {"line": 424, "character": 0}}, "selectionRange": {"start": {"line": 414, "character": 12}, "end": {"line": 414, "character": 16}}, "detail": "for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene]", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 442, "character": 0}, "end": {"line": 442, "character": 52}}, "selectionRange": {"start": {"line": 442, "character": 0}, "end": {"line": 442, "character": 5}}, "detail": "drugs = pd.read_csv(drug_cell_line_file,index_col=2)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 443, "character": 0}, "end": {"line": 443, "character": 93}}, "selectionRange": {"start": {"line": 443, "character": 0}, "end": {"line": 443, "character": 5}}, "detail": "drugs = drugs.drop([\"DATASET_VERSION\",\"IC50_RESULTS_ID\",\"MAX_CONC_MICROMOLAR\",\"RMSE\"],axis=1)", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 444, "character": 0}, "end": {"line": 444, "character": 49}}, "selectionRange": {"start": {"line": 444, "character": 0}, "end": {"line": 444, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 446, "character": 0}, "end": {"line": 446, "character": 28}}, "selectionRange": {"start": {"line": 446, "character": 0}, "end": {"line": 446, "character": 9}}, "detail": "drug_list = drugs[\"DRUG_ID\"]", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 447, "character": 0}, "end": {"line": 447, "character": 16}}, "selectionRange": {"start": {"line": 447, "character": 0}, "end": {"line": 447, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 457, "character": 0}, "end": {"line": 457, "character": 71}}, "selectionRange": {"start": {"line": 457, "character": 0}, "end": {"line": 457, "character": 10}}, "detail": "PDTC_drugs = pd.read_csv(PDTC_drug_cell_line_file,sep='\\t',index_col=0)", "children": []}, {"name": "PDTC_drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 458, "character": 0}, "end": {"line": 458, "character": 59}}, "selectionRange": {"start": {"line": 458, "character": 0}, "end": {"line": 458, "character": 25}}, "detail": "PDTC_drugs_cell_line_list = list(PDTC_drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 460, "character": 0}, "end": {"line": 460, "character": 39}}, "selectionRange": {"start": {"line": 460, "character": 0}, "end": {"line": 460, "character": 9}}, "detail": "drug_list = PDTC_drugs[\"Drug\"].tolist()", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 461, "character": 0}, "end": {"line": 461, "character": 16}}, "selectionRange": {"start": {"line": 461, "character": 0}, "end": {"line": 461, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 462, "character": 0}, "end": {"line": 467, "character": 0}}, "selectionRange": {"start": {"line": 462, "character": 4}, "end": {"line": 462, "character": 5}}, "detail": "for i in drug_list: if i in drug2id_mapping.keys(): new_drug_id.append(drug2id_mapping[i]) else: new_drug_id.append(0)", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 84}}, "selectionRange": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 10}}, "detail": "PDTC_drugs = PDTC_drugs.drop([\"Drug\",\"iC50\",\"D1_CONC\",\"D5_CONC\",\"perc.iC50\"],axis=1)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 477, "character": 0}, "end": {"line": 477, "character": 37}}, "selectionRange": {"start": {"line": 477, "character": 0}, "end": {"line": 477, "character": 5}}, "detail": "drugs = pd.concat([drugs,PDTC_drugs])", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 49}}, "selectionRange": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "cell_line_list", "kind": 13, "range": {"start": {"line": 490, "character": 0}, "end": {"line": 490, "character": 102}}, "selectionRange": {"start": {"line": 490, "character": 0}, "end": {"line": 490, "character": 14}}, "detail": "cell_line_list = list(set(drugs_cell_line_list)&set(exp_cell_line_list)&set(mutation_cell_line_list) )", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 497, "character": 0}, "end": {"line": 497, "character": 66}}, "selectionRange": {"start": {"line": 497, "character": 0}, "end": {"line": 497, "character": 16}}, "detail": "cell_line_legend = pd.read_csv(cell_line_detail_file, index_col=1)", "children": []}, {"name": "PDTC_cell_line", "kind": 13, "range": {"start": {"line": 498, "character": 0}, "end": {"line": 498, "character": 206}}, "selectionRange": {"start": {"line": 498, "character": 0}, "end": {"line": 498, "character": 14}}, "detail": "PDTC_cell_line = pd.DataFrame({'Line': [\"BRCA\"]*len(PDTC_exp_cell_line_list), 'Site':[\"PDTC\"]*len(PDTC_exp_cell_line_list),\"Histology\":[\"breast\"]*len(PDTC_exp_cell_line_list)},index=PDTC_exp_cell_line_list)", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 499, "character": 0}, "end": {"line": 499, "character": 63}}, "selectionRange": {"start": {"line": 499, "character": 0}, "end": {"line": 499, "character": 16}}, "detail": "cell_line_legend = pd.concat([cell_line_legend,PDTC_cell_line])", "children": []}, {"name": "tissue_map", "kind": 13, "range": {"start": {"line": 502, "character": 0}, "end": {"line": 502, "character": 15}}, "selectionRange": {"start": {"line": 502, "character": 0}, "end": {"line": 502, "character": 10}}, "detail": "tissue_map = {}", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 504, "character": 0}, "end": {"line": 512, "character": 0}}, "selectionRange": {"start": {"line": 504, "character": 4}, "end": {"line": 504, "character": 13}}, "detail": "for cell_line in cell_line_list: tissue = cell_line_legend.loc[cell_line,'Site'] if tissue not in tissue_map: tissue_map[tissue] = [] tissue_map[tissue].append(cell_line)", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 506, "character": 4}, "end": {"line": 506, "character": 51}}, "selectionRange": {"start": {"line": 506, "character": 4}, "end": {"line": 506, "character": 10}}, "detail": "tissue = cell_line_legend.loc[cell_line,'Site']", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 513, "character": 0}, "end": {"line": 513, "character": 23}}, "selectionRange": {"start": {"line": 513, "character": 0}, "end": {"line": 513, "character": 19}}, "detail": "large_tissue_number = 0", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 514, "character": 0}, "end": {"line": 520, "character": 0}}, "selectionRange": {"start": {"line": 514, "character": 4}, "end": {"line": 514, "character": 10}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 514, "character": 0}, "end": {"line": 520, "character": 0}}, "selectionRange": {"start": {"line": 514, "character": 12}, "end": {"line": 514, "character": 21}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 517, "character": 8}, "end": {"line": 517, "character": 32}}, "selectionRange": {"start": {"line": 517, "character": 8}, "end": {"line": 517, "character": 27}}, "detail": "large_tissue_number += 1", "children": []}, {"name": "new_exp_gene_list", "kind": 13, "range": {"start": {"line": 540, "character": 0}, "end": {"line": 540, "character": 22}}, "selectionRange": {"start": {"line": 540, "character": 0}, "end": {"line": 540, "character": 17}}, "detail": "new_exp_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 541, "character": 0}, "end": {"line": 544, "character": 0}}, "selectionRange": {"start": {"line": 541, "character": 4}, "end": {"line": 541, "character": 5}}, "detail": "for i in exp_gene_list: if i in valid_gene_list: new_exp_gene_list.append(i)", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 549, "character": 0}, "end": {"line": 549, "character": 41}}, "selectionRange": {"start": {"line": 549, "character": 0}, "end": {"line": 549, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 550, "character": 0}, "end": {"line": 550, "character": 38}}, "selectionRange": {"start": {"line": 550, "character": 0}, "end": {"line": 550, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 551, "character": 0}, "end": {"line": 551, "character": 72}}, "selectionRange": {"start": {"line": 551, "character": 0}, "end": {"line": 551, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 553, "character": 0}, "end": {"line": 553, "character": 43}}, "selectionRange": {"start": {"line": 553, "character": 0}, "end": {"line": 553, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 554, "character": 0}, "end": {"line": 554, "character": 68}}, "selectionRange": {"start": {"line": 554, "character": 0}, "end": {"line": 554, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 561, "character": 0}, "end": {"line": 561, "character": 58}}, "selectionRange": {"start": {"line": 561, "character": 0}, "end": {"line": 561, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 562, "character": 0}, "end": {"line": 562, "character": 68}}, "selectionRange": {"start": {"line": 562, "character": 0}, "end": {"line": 562, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "new_data_file", "kind": 13, "range": {"start": {"line": 571, "character": 0}, "end": {"line": 571, "character": 18}}, "selectionRange": {"start": {"line": 571, "character": 0}, "end": {"line": 571, "character": 13}}, "detail": "new_data_file = ''", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 41}}, "selectionRange": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 38}}, "selectionRange": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 72}}, "selectionRange": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 43}}, "selectionRange": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 68}}, "selectionRange": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 58}}, "selectionRange": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 68}}, "selectionRange": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "rename_selected_drug_list", "kind": 13, "range": {"start": {"line": 592, "character": 0}, "end": {"line": 592, "character": 30}}, "selectionRange": {"start": {"line": 592, "character": 0}, "end": {"line": 592, "character": 25}}, "detail": "rename_selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 594, "character": 0}, "end": {"line": 664, "character": 0}}, "selectionRange": {"start": {"line": 594, "character": 4}, "end": {"line": 594, "character": 8}}, "detail": "for drug in selected_drug_list: print(drug) if drug not in drug2id_mapping: print('drug name wrong', drug) else: cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]] feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) ) feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) ) print(len(feature_exp_gene_list) + len(feature_mut_gene_list)) if len(feature_exp_gene_list) + len(feature_mut_gene_list) == 0: continue feature_description = [] drug_tissue_map = {} drug = drug.replace(' ','_') rename_selected_drug_list.append(drug) if drug == 'Nutlin-3a_(-)': drug = 'Nutlin-3a' drug_folder = '/data/merged/drug_feature/' + drug + '/' if not os.path.exists(drug_folder): os.makedirs(drug_folder) for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description)) file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\") pickle.dump(drug_tissue_map,file_handle) file_handle.close()", "children": []}, {"name": "cell_line_drug_matrix", "kind": 13, "range": {"start": {"line": 602, "character": 8}, "end": {"line": 602, "character": 84}}, "selectionRange": {"start": {"line": 602, "character": 8}, "end": {"line": 602, "character": 29}}, "detail": "cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]]", "children": []}, {"name": "feature_exp_gene_list", "kind": 13, "range": {"start": {"line": 607, "character": 8}, "end": {"line": 607, "character": 98}}, "selectionRange": {"start": {"line": 607, "character": 8}, "end": {"line": 607, "character": 29}}, "detail": "feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) )", "children": []}, {"name": "feature_mut_gene_list", "kind": 13, "range": {"start": {"line": 608, "character": 8}, "end": {"line": 608, "character": 98}}, "selectionRange": {"start": {"line": 608, "character": 8}, "end": {"line": 608, "character": 29}}, "detail": "feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) )", "children": []}, {"name": "feature_description", "kind": 13, "range": {"start": {"line": 612, "character": 8}, "end": {"line": 612, "character": 32}}, "selectionRange": {"start": {"line": 612, "character": 8}, "end": {"line": 612, "character": 27}}, "detail": "feature_description = []", "children": []}, {"name": "drug_tissue_map", "kind": 13, "range": {"start": {"line": 614, "character": 8}, "end": {"line": 614, "character": 28}}, "selectionRange": {"start": {"line": 614, "character": 8}, "end": {"line": 614, "character": 23}}, "detail": "drug_tissue_map = {}", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 616, "character": 8}, "end": {"line": 616, "character": 36}}, "selectionRange": {"start": {"line": 616, "character": 8}, "end": {"line": 616, "character": 12}}, "detail": "drug = drug.replace(' ','_')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 622, "character": 12}, "end": {"line": 622, "character": 30}}, "selectionRange": {"start": {"line": 622, "character": 12}, "end": {"line": 622, "character": 16}}, "detail": "drug = 'Nutlin-3a'", "children": []}, {"name": "drug_folder", "kind": 13, "range": {"start": {"line": 624, "character": 8}, "end": {"line": 624, "character": 63}}, "selectionRange": {"start": {"line": 624, "character": 8}, "end": {"line": 624, "character": 19}}, "detail": "drug_folder = '/data/merged/drug_feature/' + drug + '/'", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 630, "character": 8}, "end": {"line": 660, "character": 0}}, "selectionRange": {"start": {"line": 630, "character": 12}, "end": {"line": 630, "character": 18}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "tissue_cell_line_list", "kind": 13, "range": {"start": {"line": 630, "character": 8}, "end": {"line": 660, "character": 0}}, "selectionRange": {"start": {"line": 630, "character": 20}, "end": {"line": 630, "character": 41}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 633, "character": 12}, "end": {"line": 633, "character": 103}}, "selectionRange": {"start": {"line": 633, "character": 12}, "end": {"line": 633, "character": 35}}, "detail": "drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list )", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 634, "character": 12}, "end": {"line": 634, "character": 67}}, "selectionRange": {"start": {"line": 634, "character": 12}, "end": {"line": 634, "character": 35}}, "detail": "drug_specific_cell_line = list(drug_specific_cell_line)", "children": []}, {"name": "feature_list", "kind": 13, "range": {"start": {"line": 637, "character": 12}, "end": {"line": 637, "character": 29}}, "selectionRange": {"start": {"line": 637, "character": 12}, "end": {"line": 637, "character": 24}}, "detail": "feature_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 641, "character": 16}, "end": {"line": 643, "character": 0}}, "selectionRange": {"start": {"line": 641, "character": 20}, "end": {"line": 641, "character": 24}}, "detail": "for gene in feature_exp_gene_list: feature_description.append(gene+'_expression')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 646, "character": 16}, "end": {"line": 648, "character": 0}}, "selectionRange": {"start": {"line": 646, "character": 20}, "end": {"line": 646, "character": 24}}, "detail": "for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation')", "children": []}, {"name": "feature", "kind": 13, "range": {"start": {"line": 649, "character": 12}, "end": {"line": 649, "character": 58}}, "selectionRange": {"start": {"line": 649, "character": 12}, "end": {"line": 649, "character": 19}}, "detail": "feature = np.concatenate(feature_list, axis=1)", "children": []}, {"name": "label", "kind": 13, "range": {"start": {"line": 651, "character": 12}, "end": {"line": 651, "character": 88}}, "selectionRange": {"start": {"line": 651, "character": 12}, "end": {"line": 651, "character": 17}}, "detail": "label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 661, "character": 8}, "end": {"line": 661, "character": 84}}, "selectionRange": {"start": {"line": 661, "character": 8}, "end": {"line": 661, "character": 19}}, "detail": "file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\")", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 665, "character": 0}, "end": {"line": 665, "character": 52}}, "selectionRange": {"start": {"line": 665, "character": 0}, "end": {"line": 665, "character": 11}}, "detail": "file_handle = open('rename_selected_drug_list', 'w')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 666, "character": 0}, "end": {"line": 668, "character": 0}}, "selectionRange": {"start": {"line": 666, "character": 4}, "end": {"line": 666, "character": 8}}, "detail": "for drug in rename_selected_drug_list: file_handle.writelines(drug+ '\\n')", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 686, "character": 0}, "end": {"line": 686, "character": 13}}, "selectionRange": {"start": {"line": 686, "character": 7}, "end": {"line": 686, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cell_line_loc", "kind": 13, "range": {"start": {"line": 692, "character": 0}, "end": {"line": 692, "character": 84}}, "selectionRange": {"start": {"line": 692, "character": 0}, "end": {"line": 692, "character": 13}}, "detail": "cell_line_loc = '/cellar/users/samsonfong/Projects/tcrp-v2/from-ma/cell_line_lists/'", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 698, "character": 0}, "end": {"line": 700, "character": 0}}, "selectionRange": {"start": {"line": 698, "character": 53}, "end": {"line": 698, "character": 54}}, "detail": "with open('/data/drug_feature/KU-55933/KU', 'rb') as f: tmap= pickle.load(f)", "children": []}, {"name": "tmap", "kind": 13, "range": {"start": {"line": 699, "character": 4}, "end": {"line": 699, "character": 24}}, "selectionRange": {"start": {"line": 699, "character": 4}, "end": {"line": 699, "character": 8}}, "detail": "tmap= pickle.load(f)", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 717, "character": 0}, "end": {"line": 717, "character": 68}}, "selectionRange": {"start": {"line": 717, "character": 0}, "end": {"line": 717, "character": 1}}, "detail": "f = np.load('/data/drug_feature/KU-55933/lung_KU-55933_feature.npy')", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 14, "result": [{"title": "Inline variable", "kind": "refactor.inline", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///root/capsule/code/process_merged.py", "version": 1}, "edits": [{"range": {"start": {"line": 228, "character": 12}, "end": {"line": 229, "character": 12}}, "newText": ""}, {"range": {"start": {"line": 244, "character": 8}, "end": {"line": 244, "character": 23}}, "newText": "({})"}, {"range": {"start": {"line": 246, "character": 12}, "end": {"line": 246, "character": 27}}, "newText": "({})"}, {"range": {"start": {"line": 251, "character": 16}, "end": {"line": 251, "character": 31}}, "newText": "({})"}, {"range": {"start": {"line": 411, "character": 25}, "end": {"line": 411, "character": 40}}, "newText": "({})"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 15, "result": [{"name": "matplotlib", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 17}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 17}}, "detail": "module matplotlib", "children": []}, {"name": "os", "kind": 2, "range": {"start": {"line": 10, "character": 0}, "end": {"line": 10, "character": 9}}, "selectionRange": {"start": {"line": 10, "character": 7}, "end": {"line": 10, "character": 9}}, "detail": "module os", "children": []}, {"name": "pd", "kind": 2, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 11, "character": 19}}, "selectionRange": {"start": {"line": 11, "character": 17}, "end": {"line": 11, "character": 19}}, "detail": "module pd", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 12, "character": 0}, "end": {"line": 12, "character": 18}}, "selectionRange": {"start": {"line": 12, "character": 16}, "end": {"line": 12, "character": 18}}, "detail": "module np", "children": []}, {"name": "sys", "kind": 2, "range": {"start": {"line": 13, "character": 0}, "end": {"line": 13, "character": 10}}, "selectionRange": {"start": {"line": 13, "character": 7}, "end": {"line": 13, "character": 10}}, "detail": "module sys", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 14, "character": 0}, "end": {"line": 14, "character": 13}}, "selectionRange": {"start": {"line": 14, "character": 7}, "end": {"line": 14, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cdist", "kind": 12, "range": {"start": {"line": 15, "character": 0}, "end": {"line": 15, "character": 40}}, "selectionRange": {"start": {"line": 15, "character": 35}, "end": {"line": 15, "character": 40}}, "detail": "def cdist", "children": []}, {"name": "math", "kind": 2, "range": {"start": {"line": 16, "character": 0}, "end": {"line": 16, "character": 11}}, "selectionRange": {"start": {"line": 16, "character": 7}, "end": {"line": 16, "character": 11}}, "detail": "module math", "children": []}, {"name": "nx", "kind": 2, "range": {"start": {"line": 17, "character": 0}, "end": {"line": 17, "character": 21}}, "selectionRange": {"start": {"line": 17, "character": 19}, "end": {"line": 17, "character": 21}}, "detail": "module nx", "children": []}, {"name": "nxacc", "kind": 2, "range": {"start": {"line": 18, "character": 0}, "end": {"line": 18, "character": 56}}, "selectionRange": {"start": {"line": 18, "character": 51}, "end": {"line": 18, "character": 56}}, "detail": "module nxacc", "children": []}, {"name": "nxadag", "kind": 2, "range": {"start": {"line": 19, "character": 0}, "end": {"line": 19, "character": 40}}, "selectionRange": {"start": {"line": 19, "character": 34}, "end": {"line": 19, "character": 40}}, "detail": "module nxadag", "children": []}, {"name": "plt", "kind": 2, "range": {"start": {"line": 20, "character": 0}, "end": {"line": 20, "character": 31}}, "selectionRange": {"start": {"line": 20, "character": 28}, "end": {"line": 20, "character": 31}}, "detail": "module plt", "children": []}, {"name": "sns", "kind": 2, "range": {"start": {"line": 21, "character": 0}, "end": {"line": 21, "character": 21}}, "selectionRange": {"start": {"line": 21, "character": 18}, "end": {"line": 21, "character": 21}}, "detail": "module sns", "children": []}, {"name": "itertools", "kind": 2, "range": {"start": {"line": 22, "character": 0}, "end": {"line": 22, "character": 16}}, "selectionRange": {"start": {"line": 22, "character": 7}, "end": {"line": 22, "character": 16}}, "detail": "module itertools", "children": []}, {"name": "mygene", "kind": 2, "range": {"start": {"line": 23, "character": 0}, "end": {"line": 23, "character": 13}}, "selectionRange": {"start": {"line": 23, "character": 7}, "end": {"line": 23, "character": 13}}, "detail": "module mygene", "children": []}, {"name": "re", "kind": 2, "range": {"start": {"line": 24, "character": 0}, "end": {"line": 24, "character": 9}}, "selectionRange": {"start": {"line": 24, "character": 7}, "end": {"line": 24, "character": 9}}, "detail": "module re", "children": []}, {"name": "selected_exp_gene_list", "kind": 13, "range": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 95}}, "selectionRange": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 22}}, "detail": "selected_exp_gene_list = pd.read_csv(\"/data/common_exp_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "selected_mut_gene_list", "kind": 13, "range": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 95}}, "selectionRange": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 22}}, "detail": "selected_mut_gene_list = pd.read_csv(\"/data/common_mut_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "load_network", "kind": 12, "range": {"start": {"line": 37, "character": 0}, "end": {"line": 65, "character": 28}}, "selectionRange": {"start": {"line": 37, "character": 4}, "end": {"line": 37, "character": 16}}, "detail": "def load_network", "children": []}, {"name": "load_name_space", "kind": 12, "range": {"start": {"line": 67, "character": 0}, "end": {"line": 79, "character": 21}}, "selectionRange": {"start": {"line": 67, "character": 4}, "end": {"line": 67, "character": 19}}, "detail": "def load_name_space", "children": []}, {"name": "list2index", "kind": 12, "range": {"start": {"line": 81, "character": 0}, "end": {"line": 88, "character": 41}}, "selectionRange": {"start": {"line": 81, "character": 4}, "end": {"line": 81, "character": 14}}, "detail": "def list2index", "children": []}, {"name": "PDTC_data_file", "kind": 13, "range": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 30}}, "selectionRange": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 14}}, "detail": "PDTC_data_file = '/data/PTDC/'", "children": []}, {"name": "PDTC_exp_data_file", "kind": 13, "range": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 60}}, "selectionRange": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 18}}, "detail": "PDTC_exp_data_file = PDTC_data_file + 'ExpressionModels.tsv'", "children": []}, {"name": "PDTC_drug_cell_line_file", "kind": 13, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 72}}, "selectionRange": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 24}}, "detail": "PDTC_drug_cell_line_file = PDTC_data_file + 'DrugResponsesAUCModels.tsv'", "children": []}, {"name": "PDTC_mutation_data_file", "kind": 13, "range": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 59}}, "selectionRange": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 23}}, "detail": "PDTC_mutation_data_file = PDTC_data_file + 'SNVsModels.tsv'", "children": []}, {"name": "PDTC_drug_target_file", "kind": 13, "range": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 47}}, "selectionRange": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 21}}, "detail": "PDTC_drug_target_file ='/data/drug_targets.tsv'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 37}}, "selectionRange": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 46}}, "selectionRange": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "data_file", "kind": 13, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 25}}, "selectionRange": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 9}}, "detail": "data_file = '/data/GDSC/'", "children": []}, {"name": "new_network_file", "kind": 13, "range": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 27}}, "selectionRange": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 16}}, "detail": "new_network_file = '/data/'", "children": []}, {"name": "exp_data_file", "kind": 13, "range": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 61}}, "selectionRange": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 13}}, "detail": "exp_data_file = data_file + 'Cell_line_RMA_proc_basalExp.txt'", "children": []}, {"name": "drug_cell_line_file", "kind": 13, "range": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 64}}, "selectionRange": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 19}}, "detail": "drug_cell_line_file = data_file + 'v17_fitted_dose_response.csv'", "children": []}, {"name": "cell_line_detail_file", "kind": 13, "range": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 60}}, "selectionRange": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 21}}, "detail": "cell_line_detail_file = data_file + 'Cell_Lines_Details.csv'", "children": []}, {"name": "mutation_data_file", "kind": 13, "range": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 51}}, "selectionRange": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 18}}, "detail": "mutation_data_file = data_file + 'WES_variants.csv'", "children": []}, {"name": "drug_target_file", "kind": 13, "range": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 42}}, "selectionRange": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 16}}, "detail": "drug_target_file ='/data/drug_targets.tsv'", "children": []}, {"name": "feature_folder", "kind": 13, "range": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 27}}, "selectionRange": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 14}}, "detail": "feature_folder = 'feature/'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 37}}, "selectionRange": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 46}}, "selectionRange": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 58}}, "selectionRange": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 6}}, "detail": "exp_df = pd.read_csv(exp_data_file, sep='\\t', index_col=0)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 21}}, "selectionRange": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 6}}, "detail": "exp_df = exp_df.T[1:]", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 56}}, "selectionRange": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 6}}, "detail": "exp_df = exp_df.rename(columns={np.nan: 'NO_GENE_NAME'})", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 43}}, "selectionRange": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 6}}, "detail": "exp_df = exp_df.drop('NO_GENE_NAME',axis=1)", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 138, "character": 0}, "end": {"line": 140, "character": 26}}, "selectionRange": {"start": {"line": 138, "character": 4}, "end": {"line": 138, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 142, "character": 0}, "end": {"line": 142, "character": 44}}, "selectionRange": {"start": {"line": 142, "character": 7}, "end": {"line": 142, "character": 12}}, "detail": "exp_df.index = exp_df.index.map(stripNumber)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 40}}, "selectionRange": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 6}}, "detail": "exp_df = exp_df.groupby(level=0).first()", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 39}}, "selectionRange": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 6}}, "detail": "exp_df = exp_df[selected_exp_gene_list]", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 36}}, "selectionRange": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 48}}, "selectionRange": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 78}}, "selectionRange": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 11}}, "detail": "PDTC_exp_df = pd.read_csv(PDTC_exp_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 31}}, "selectionRange": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df.T[1:]", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 160, "character": 0}, "end": {"line": 162, "character": 26}}, "selectionRange": {"start": {"line": 160, "character": 4}, "end": {"line": 160, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 49}}, "selectionRange": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df[selected_exp_gene_list]", "children": []}, {"name": "PDTC_exp_gene_list", "kind": 13, "range": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 46}}, "selectionRange": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 18}}, "detail": "PDTC_exp_gene_list = list(PDTC_exp_df.columns)", "children": []}, {"name": "PDTC_exp_cell_line_list", "kind": 13, "range": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 58}}, "selectionRange": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 23}}, "detail": "PDTC_exp_cell_line_list = list(PDTC_exp_df.index.unique())", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 40}}, "selectionRange": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 6}}, "detail": "exp_df = pd.concat([exp_df,PDTC_exp_df])", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 36}}, "selectionRange": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 48}}, "selectionRange": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "maf", "kind": 13, "range": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 69}}, "selectionRange": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 3}}, "detail": "maf = pd.read_csv(mutation_data_file, sep=',', index_col=0).fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 75}}, "selectionRange": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 11}}, "detail": "mutation_df = maf.groupby(['COSMIC_ID', 'Gene']).size().unstack().fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 49}}, "selectionRange": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 11}}, "detail": "mutation_df = mutation_df[selected_mut_gene_list]", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 46}}, "selectionRange": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 58}}, "selectionRange": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "PDTC_maf", "kind": 13, "range": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 80}}, "selectionRange": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 8}}, "detail": "PDTC_maf = pd.read_csv(PDTC_mutation_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 61}}, "selectionRange": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_maf.replace(to_replace=\"NO\",value=0.0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 82}}, "selectionRange": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_mutation_df.replace(to_replace=\"chr*\",value=1.0,regex=True)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 47}}, "selectionRange": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df.transpose()", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 59}}, "selectionRange": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df[selected_mut_gene_list]", "children": []}, {"name": "PDTC_mutation_gene_list", "kind": 13, "range": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 56}}, "selectionRange": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 23}}, "detail": "PDTC_mutation_gene_list = list(PDTC_mutation_df.columns)", "children": []}, {"name": "PDTC_mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 68}}, "selectionRange": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 28}}, "detail": "PDTC_mutation_cell_line_list = list(PDTC_mutation_df.index.unique())", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 55}}, "selectionRange": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 11}}, "detail": "mutation_df = pd.concat([mutation_df,PDTC_mutation_df])", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 46}}, "selectionRange": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 58}}, "selectionRange": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 36}}, "selectionRange": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 11}}, "detail": "file_handle = open(drug_target_file)", "children": []}, {"name": "drug_target_map", "kind": 13, "range": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 20}}, "selectionRange": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 15}}, "detail": "drug_target_map = {}", "children": []}, {"name": "drug_target_list", "kind": 13, "range": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 21}}, "selectionRange": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 16}}, "detail": "drug_target_list = []", "children": []}, {"name": "line", "kind": 13, "range": {"start": {"line": 230, "character": 0}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 230, "character": 4}, "end": {"line": 230, "character": 8}}, "detail": "for line in file_handle: new_line = line.rstrip().split(\"\\t\") drug = new_line[0] target_list=new_line[1].split(',') if drug != \"Drug\": target_list_str = \"\" for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\" drug = drug.strip() drug_target_map[drug] = [] if ',' not in target_list_str: drug_target_map[drug].append(target_list_str.strip()) drug_target_list.append(target_list_str.strip()) else: target_list = target_list_str.split(',') for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "new_line", "kind": 13, "range": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 40}}, "selectionRange": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 12}}, "detail": "new_line = line.rstrip().split(\"\\t\")", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 22}}, "selectionRange": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 8}}, "detail": "drug = new_line[0]", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 38}}, "selectionRange": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 15}}, "detail": "target_list=new_line[1].split(',')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 28}}, "selectionRange": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 23}}, "detail": "target_list_str = \"\"", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 237, "character": 8}, "end": {"line": 242, "character": 0}}, "selectionRange": {"start": {"line": 237, "character": 12}, "end": {"line": 237, "character": 13}}, "detail": "for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 65}}, "selectionRange": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 71}}, "selectionRange": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 27}}, "selectionRange": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 12}}, "detail": "drug = drug.strip()", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 52}}, "selectionRange": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 23}}, "detail": "target_list = target_list_str.split(',')", "children": []}, {"name": "target", "kind": 13, "range": {"start": {"line": 250, "character": 12}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 250, "character": 16}, "end": {"line": 250, "character": 22}}, "detail": "for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "drugs_legend", "kind": 13, "range": {"start": {"line": 261, "character": 0}, "end": {"line": 261, "character": 85}}, "selectionRange": {"start": {"line": 261, "character": 0}, "end": {"line": 261, "character": 12}}, "detail": "drugs_legend = pd.read_csv('/data/GDSC/Screened_Compounds.csv', sep=',', index_col=0)", "children": []}, {"name": "drug2id_mapping", "kind": 13, "range": {"start": {"line": 263, "character": 0}, "end": {"line": 263, "character": 20}}, "selectionRange": {"start": {"line": 263, "character": 0}, "end": {"line": 263, "character": 15}}, "detail": "drug2id_mapping = {}", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 265, "character": 0}, "end": {"line": 268, "character": 0}}, "selectionRange": {"start": {"line": 265, "character": 4}, "end": {"line": 265, "character": 9}}, "detail": "for index in list(drugs_legend.index) : drug_name = drugs_legend.loc[index,'Drug Name'] drug2id_mapping[ drug_name ] = index", "children": []}, {"name": "drug_name", "kind": 13, "range": {"start": {"line": 266, "character": 4}, "end": {"line": 266, "character": 51}}, "selectionRange": {"start": {"line": 266, "character": 4}, "end": {"line": 266, "character": 13}}, "detail": "drug_name = drugs_legend.loc[index,'Drug Name']", "children": []}, {"name": "valid_gene_list", "kind": 13, "range": {"start": {"line": 273, "character": 0}, "end": {"line": 273, "character": 92}}, "selectionRange": {"start": {"line": 273, "character": 0}, "end": {"line": 273, "character": 15}}, "detail": "valid_gene_list = list(set(drug_target_list) | set(exp_gene_list) | set(mutation_gene_list))", "children": []}, {"name": "network_list", "kind": 13, "range": {"start": {"line": 279, "character": 0}, "end": {"line": 279, "character": 82}}, "selectionRange": {"start": {"line": 279, "character": 0}, "end": {"line": 279, "character": 12}}, "detail": "network_list = [new_network_file+inbiomap_file, new_network_file+pathwaycomm_file]", "children": []}, {"name": "gene_neighbor_map", "kind": 13, "range": {"start": {"line": 280, "character": 0}, "end": {"line": 280, "character": 64}}, "selectionRange": {"start": {"line": 280, "character": 0}, "end": {"line": 280, "character": 17}}, "detail": "gene_neighbor_map = load_network(network_list, valid_gene_list)", "children": []}, {"name": "gene_name_df", "kind": 13, "range": {"start": {"line": 286, "character": 0}, "end": {"line": 286, "character": 89}}, "selectionRange": {"start": {"line": 286, "character": 0}, "end": {"line": 286, "character": 12}}, "detail": "gene_name_df = pd.read_table('/data/HUGO_protein-coding_gene.tsv',index_col=25, sep='\\t')", "children": []}, {"name": "gene_name_map", "kind": 13, "range": {"start": {"line": 292, "character": 0}, "end": {"line": 292, "character": 18}}, "selectionRange": {"start": {"line": 292, "character": 0}, "end": {"line": 292, "character": 13}}, "detail": "gene_name_map = {}", "children": []}, {"name": "uniprot_gene", "kind": 13, "range": {"start": {"line": 294, "character": 0}, "end": {"line": 303, "character": 0}}, "selectionRange": {"start": {"line": 294, "character": 4}, "end": {"line": 294, "character": 16}}, "detail": "for uniprot_gene in gene_name_df.index: if isinstance(uniprot_gene, type('aaa')) == False: continue if isinstance(gene_name_df.loc[uniprot_gene, 'symbol'], type('aaa')) == False: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol'][0] else: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 308, "character": 0}, "end": {"line": 308, "character": 76}}, "selectionRange": {"start": {"line": 308, "character": 0}, "end": {"line": 308, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "uniprot_gene_set", "kind": 13, "range": {"start": {"line": 310, "character": 0}, "end": {"line": 310, "character": 24}}, "selectionRange": {"start": {"line": 310, "character": 0}, "end": {"line": 310, "character": 16}}, "detail": "uniprot_gene_set = set()", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 312, "character": 0}, "end": {"line": 321, "character": 0}}, "selectionRange": {"start": {"line": 312, "character": 4}, "end": {"line": 312, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 317, "character": 4}, "end": {"line": 317, "character": 74}}, "selectionRange": {"start": {"line": 317, "character": 4}, "end": {"line": 317, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 319, "character": 4}, "end": {"line": 321, "character": 0}}, "selectionRange": {"start": {"line": 319, "character": 8}, "end": {"line": 319, "character": 12}}, "detail": "for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "query_gene_set", "kind": 13, "range": {"start": {"line": 324, "character": 0}, "end": {"line": 324, "character": 19}}, "selectionRange": {"start": {"line": 324, "character": 0}, "end": {"line": 324, "character": 14}}, "detail": "query_gene_set = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 326, "character": 0}, "end": {"line": 329, "character": 0}}, "selectionRange": {"start": {"line": 326, "character": 4}, "end": {"line": 326, "character": 8}}, "detail": "for gene in uniprot_gene_set: if gene not in gene_name_map: query_gene_set.append(gene)", "children": []}, {"name": "query_gene_list", "kind": 13, "range": {"start": {"line": 332, "character": 0}, "end": {"line": 332, "character": 38}}, "selectionRange": {"start": {"line": 332, "character": 0}, "end": {"line": 332, "character": 15}}, "detail": "query_gene_list = list(query_gene_set)", "children": []}, {"name": "mg", "kind": 13, "range": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 24}}, "selectionRange": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 2}}, "detail": "mg = mygene.MyGeneInfo()", "children": []}, {"name": "out", "kind": 13, "range": {"start": {"line": 335, "character": 0}, "end": {"line": 335, "character": 87}}, "selectionRange": {"start": {"line": 335, "character": 0}, "end": {"line": 335, "character": 3}}, "detail": "out = mg.querymany(query_gene_list, scopes='uniprot', fields='symbol', species='human')", "children": []}, {"name": "not_found_gene_list", "kind": 13, "range": {"start": {"line": 337, "character": 0}, "end": {"line": 337, "character": 24}}, "selectionRange": {"start": {"line": 337, "character": 0}, "end": {"line": 337, "character": 19}}, "detail": "not_found_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 339, "character": 0}, "end": {"line": 344, "character": 0}}, "selectionRange": {"start": {"line": 339, "character": 4}, "end": {"line": 339, "character": 5}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 339, "character": 0}, "end": {"line": 344, "character": 0}}, "selectionRange": {"start": {"line": 339, "character": 7}, "end": {"line": 339, "character": 11}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 351, "character": 0}, "end": {"line": 351, "character": 76}}, "selectionRange": {"start": {"line": 351, "character": 0}, "end": {"line": 351, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 353, "character": 0}, "end": {"line": 375, "character": 0}}, "selectionRange": {"start": {"line": 353, "character": 4}, "end": {"line": 353, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') complex_symbol_list = [] for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] ) for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 358, "character": 4}, "end": {"line": 358, "character": 74}}, "selectionRange": {"start": {"line": 358, "character": 4}, "end": {"line": 358, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "complex_symbol_list", "kind": 13, "range": {"start": {"line": 360, "character": 4}, "end": {"line": 360, "character": 28}}, "selectionRange": {"start": {"line": 360, "character": 4}, "end": {"line": 360, "character": 23}}, "detail": "complex_symbol_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 362, "character": 4}, "end": {"line": 365, "character": 0}}, "selectionRange": {"start": {"line": 362, "character": 8}, "end": {"line": 362, "character": 12}}, "detail": "for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] )", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 366, "character": 4}, "end": {"line": 375, "character": 0}}, "selectionRange": {"start": {"line": 366, "character": 8}, "end": {"line": 366, "character": 13}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 366, "character": 4}, "end": {"line": 375, "character": 0}}, "selectionRange": {"start": {"line": 366, "character": 15}, "end": {"line": 366, "character": 20}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene_exp_neighbor_map", "kind": 13, "range": {"start": {"line": 380, "character": 0}, "end": {"line": 380, "character": 26}}, "selectionRange": {"start": {"line": 380, "character": 0}, "end": {"line": 380, "character": 21}}, "detail": "gene_exp_neighbor_map = {}", "children": []}, {"name": "exp_matrix", "kind": 13, "range": {"start": {"line": 381, "character": 0}, "end": {"line": 381, "character": 26}}, "selectionRange": {"start": {"line": 381, "character": 0}, "end": {"line": 381, "character": 10}}, "detail": "exp_matrix = exp_df.values", "children": []}, {"name": "P", "kind": 13, "range": {"start": {"line": 383, "character": 0}, "end": {"line": 383, "character": 79}}, "selectionRange": {"start": {"line": 383, "character": 0}, "end": {"line": 383, "character": 1}}, "detail": "P = 1 - cdist(np.transpose(exp_matrix), np.transpose(exp_matrix),'correlation')", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 385, "character": 0}, "end": {"line": 399, "character": 0}}, "selectionRange": {"start": {"line": 385, "character": 4}, "end": {"line": 385, "character": 5}}, "detail": "for i in range(len(exp_gene_list)): gene1 = exp_gene_list[i] gene_exp_neighbor_map[gene1] = set() for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2) if gene1 not in gene_exp_neighbor_map[gene1]: print (gene1, 'not in itself?', P[i,i])", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 387, "character": 4}, "end": {"line": 387, "character": 28}}, "selectionRange": {"start": {"line": 387, "character": 4}, "end": {"line": 387, "character": 9}}, "detail": "gene1 = exp_gene_list[i]", "children": []}, {"name": "j", "kind": 13, "range": {"start": {"line": 390, "character": 4}, "end": {"line": 396, "character": 0}}, "selectionRange": {"start": {"line": 390, "character": 8}, "end": {"line": 390, "character": 9}}, "detail": "for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 392, "character": 8}, "end": {"line": 392, "character": 32}}, "selectionRange": {"start": {"line": 392, "character": 8}, "end": {"line": 392, "character": 13}}, "detail": "gene2 = exp_gene_list[j]", "children": []}, {"name": "drug_feature_list", "kind": 13, "range": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 22}}, "selectionRange": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 17}}, "detail": "drug_feature_list = []", "children": []}, {"name": "drug_neighbor_map", "kind": 13, "range": {"start": {"line": 408, "character": 0}, "end": {"line": 408, "character": 22}}, "selectionRange": {"start": {"line": 408, "character": 0}, "end": {"line": 408, "character": 17}}, "detail": "drug_neighbor_map = {}", "children": []}, {"name": "selected_drug_list", "kind": 13, "range": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 23}}, "selectionRange": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 18}}, "detail": "selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 411, "character": 0}, "end": {"line": 428, "character": 0}}, "selectionRange": {"start": {"line": 411, "character": 4}, "end": {"line": 411, "character": 8}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 411, "character": 0}, "end": {"line": 428, "character": 0}}, "selectionRange": {"start": {"line": 411, "character": 10}, "end": {"line": 411, "character": 21}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 414, "character": 8}, "end": {"line": 424, "character": 0}}, "selectionRange": {"start": {"line": 414, "character": 12}, "end": {"line": 414, "character": 16}}, "detail": "for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene]", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 442, "character": 0}, "end": {"line": 442, "character": 52}}, "selectionRange": {"start": {"line": 442, "character": 0}, "end": {"line": 442, "character": 5}}, "detail": "drugs = pd.read_csv(drug_cell_line_file,index_col=2)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 443, "character": 0}, "end": {"line": 443, "character": 93}}, "selectionRange": {"start": {"line": 443, "character": 0}, "end": {"line": 443, "character": 5}}, "detail": "drugs = drugs.drop([\"DATASET_VERSION\",\"IC50_RESULTS_ID\",\"MAX_CONC_MICROMOLAR\",\"RMSE\"],axis=1)", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 444, "character": 0}, "end": {"line": 444, "character": 49}}, "selectionRange": {"start": {"line": 444, "character": 0}, "end": {"line": 444, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 446, "character": 0}, "end": {"line": 446, "character": 28}}, "selectionRange": {"start": {"line": 446, "character": 0}, "end": {"line": 446, "character": 9}}, "detail": "drug_list = drugs[\"DRUG_ID\"]", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 447, "character": 0}, "end": {"line": 447, "character": 16}}, "selectionRange": {"start": {"line": 447, "character": 0}, "end": {"line": 447, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 457, "character": 0}, "end": {"line": 457, "character": 71}}, "selectionRange": {"start": {"line": 457, "character": 0}, "end": {"line": 457, "character": 10}}, "detail": "PDTC_drugs = pd.read_csv(PDTC_drug_cell_line_file,sep='\\t',index_col=0)", "children": []}, {"name": "PDTC_drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 458, "character": 0}, "end": {"line": 458, "character": 59}}, "selectionRange": {"start": {"line": 458, "character": 0}, "end": {"line": 458, "character": 25}}, "detail": "PDTC_drugs_cell_line_list = list(PDTC_drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 460, "character": 0}, "end": {"line": 460, "character": 39}}, "selectionRange": {"start": {"line": 460, "character": 0}, "end": {"line": 460, "character": 9}}, "detail": "drug_list = PDTC_drugs[\"Drug\"].tolist()", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 461, "character": 0}, "end": {"line": 461, "character": 16}}, "selectionRange": {"start": {"line": 461, "character": 0}, "end": {"line": 461, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 462, "character": 0}, "end": {"line": 467, "character": 0}}, "selectionRange": {"start": {"line": 462, "character": 4}, "end": {"line": 462, "character": 5}}, "detail": "for i in drug_list: if i in drug2id_mapping.keys(): new_drug_id.append(drug2id_mapping[i]) else: new_drug_id.append(0)", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 84}}, "selectionRange": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 10}}, "detail": "PDTC_drugs = PDTC_drugs.drop([\"Drug\",\"iC50\",\"D1_CONC\",\"D5_CONC\",\"perc.iC50\"],axis=1)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 477, "character": 0}, "end": {"line": 477, "character": 37}}, "selectionRange": {"start": {"line": 477, "character": 0}, "end": {"line": 477, "character": 5}}, "detail": "drugs = pd.concat([drugs,PDTC_drugs])", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 49}}, "selectionRange": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "cell_line_list", "kind": 13, "range": {"start": {"line": 490, "character": 0}, "end": {"line": 490, "character": 102}}, "selectionRange": {"start": {"line": 490, "character": 0}, "end": {"line": 490, "character": 14}}, "detail": "cell_line_list = list(set(drugs_cell_line_list)&set(exp_cell_line_list)&set(mutation_cell_line_list) )", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 497, "character": 0}, "end": {"line": 497, "character": 66}}, "selectionRange": {"start": {"line": 497, "character": 0}, "end": {"line": 497, "character": 16}}, "detail": "cell_line_legend = pd.read_csv(cell_line_detail_file, index_col=1)", "children": []}, {"name": "PDTC_cell_line", "kind": 13, "range": {"start": {"line": 498, "character": 0}, "end": {"line": 498, "character": 206}}, "selectionRange": {"start": {"line": 498, "character": 0}, "end": {"line": 498, "character": 14}}, "detail": "PDTC_cell_line = pd.DataFrame({'Line': [\"BRCA\"]*len(PDTC_exp_cell_line_list), 'Site':[\"PDTC\"]*len(PDTC_exp_cell_line_list),\"Histology\":[\"breast\"]*len(PDTC_exp_cell_line_list)},index=PDTC_exp_cell_line_list)", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 499, "character": 0}, "end": {"line": 499, "character": 63}}, "selectionRange": {"start": {"line": 499, "character": 0}, "end": {"line": 499, "character": 16}}, "detail": "cell_line_legend = pd.concat([cell_line_legend,PDTC_cell_line])", "children": []}, {"name": "tissue_map", "kind": 13, "range": {"start": {"line": 502, "character": 0}, "end": {"line": 502, "character": 15}}, "selectionRange": {"start": {"line": 502, "character": 0}, "end": {"line": 502, "character": 10}}, "detail": "tissue_map = {}", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 504, "character": 0}, "end": {"line": 512, "character": 0}}, "selectionRange": {"start": {"line": 504, "character": 4}, "end": {"line": 504, "character": 13}}, "detail": "for cell_line in cell_line_list: tissue = cell_line_legend.loc[cell_line,'Site'] if tissue not in tissue_map: tissue_map[tissue] = [] tissue_map[tissue].append(cell_line)", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 506, "character": 4}, "end": {"line": 506, "character": 51}}, "selectionRange": {"start": {"line": 506, "character": 4}, "end": {"line": 506, "character": 10}}, "detail": "tissue = cell_line_legend.loc[cell_line,'Site']", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 513, "character": 0}, "end": {"line": 513, "character": 23}}, "selectionRange": {"start": {"line": 513, "character": 0}, "end": {"line": 513, "character": 19}}, "detail": "large_tissue_number = 0", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 514, "character": 0}, "end": {"line": 520, "character": 0}}, "selectionRange": {"start": {"line": 514, "character": 4}, "end": {"line": 514, "character": 10}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 514, "character": 0}, "end": {"line": 520, "character": 0}}, "selectionRange": {"start": {"line": 514, "character": 12}, "end": {"line": 514, "character": 21}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 517, "character": 8}, "end": {"line": 517, "character": 32}}, "selectionRange": {"start": {"line": 517, "character": 8}, "end": {"line": 517, "character": 27}}, "detail": "large_tissue_number += 1", "children": []}, {"name": "new_exp_gene_list", "kind": 13, "range": {"start": {"line": 540, "character": 0}, "end": {"line": 540, "character": 22}}, "selectionRange": {"start": {"line": 540, "character": 0}, "end": {"line": 540, "character": 17}}, "detail": "new_exp_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 541, "character": 0}, "end": {"line": 544, "character": 0}}, "selectionRange": {"start": {"line": 541, "character": 4}, "end": {"line": 541, "character": 5}}, "detail": "for i in exp_gene_list: if i in valid_gene_list: new_exp_gene_list.append(i)", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 549, "character": 0}, "end": {"line": 549, "character": 41}}, "selectionRange": {"start": {"line": 549, "character": 0}, "end": {"line": 549, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 550, "character": 0}, "end": {"line": 550, "character": 38}}, "selectionRange": {"start": {"line": 550, "character": 0}, "end": {"line": 550, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 551, "character": 0}, "end": {"line": 551, "character": 72}}, "selectionRange": {"start": {"line": 551, "character": 0}, "end": {"line": 551, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 553, "character": 0}, "end": {"line": 553, "character": 43}}, "selectionRange": {"start": {"line": 553, "character": 0}, "end": {"line": 553, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 554, "character": 0}, "end": {"line": 554, "character": 68}}, "selectionRange": {"start": {"line": 554, "character": 0}, "end": {"line": 554, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 561, "character": 0}, "end": {"line": 561, "character": 58}}, "selectionRange": {"start": {"line": 561, "character": 0}, "end": {"line": 561, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 562, "character": 0}, "end": {"line": 562, "character": 68}}, "selectionRange": {"start": {"line": 562, "character": 0}, "end": {"line": 562, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "new_data_file", "kind": 13, "range": {"start": {"line": 571, "character": 0}, "end": {"line": 571, "character": 18}}, "selectionRange": {"start": {"line": 571, "character": 0}, "end": {"line": 571, "character": 13}}, "detail": "new_data_file = ''", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 41}}, "selectionRange": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 38}}, "selectionRange": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 72}}, "selectionRange": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 43}}, "selectionRange": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 68}}, "selectionRange": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 58}}, "selectionRange": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 68}}, "selectionRange": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "rename_selected_drug_list", "kind": 13, "range": {"start": {"line": 592, "character": 0}, "end": {"line": 592, "character": 30}}, "selectionRange": {"start": {"line": 592, "character": 0}, "end": {"line": 592, "character": 25}}, "detail": "rename_selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 594, "character": 0}, "end": {"line": 664, "character": 0}}, "selectionRange": {"start": {"line": 594, "character": 4}, "end": {"line": 594, "character": 8}}, "detail": "for drug in selected_drug_list: print(drug) if drug not in drug2id_mapping: print('drug name wrong', drug) else: cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]] feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) ) feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) ) print(len(feature_exp_gene_list) + len(feature_mut_gene_list)) if len(feature_exp_gene_list) + len(feature_mut_gene_list) == 0: continue feature_description = [] drug_tissue_map = {} drug = drug.replace(' ','_') rename_selected_drug_list.append(drug) if drug == 'Nutlin-3a_(-)': drug = 'Nutlin-3a' drug_folder = '/data/merged/drug_feature/' + drug + '/' if not os.path.exists(drug_folder): os.makedirs(drug_folder) for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description)) file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\") pickle.dump(drug_tissue_map,file_handle) file_handle.close()", "children": []}, {"name": "cell_line_drug_matrix", "kind": 13, "range": {"start": {"line": 602, "character": 8}, "end": {"line": 602, "character": 84}}, "selectionRange": {"start": {"line": 602, "character": 8}, "end": {"line": 602, "character": 29}}, "detail": "cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]]", "children": []}, {"name": "feature_exp_gene_list", "kind": 13, "range": {"start": {"line": 607, "character": 8}, "end": {"line": 607, "character": 98}}, "selectionRange": {"start": {"line": 607, "character": 8}, "end": {"line": 607, "character": 29}}, "detail": "feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) )", "children": []}, {"name": "feature_mut_gene_list", "kind": 13, "range": {"start": {"line": 608, "character": 8}, "end": {"line": 608, "character": 98}}, "selectionRange": {"start": {"line": 608, "character": 8}, "end": {"line": 608, "character": 29}}, "detail": "feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) )", "children": []}, {"name": "feature_description", "kind": 13, "range": {"start": {"line": 612, "character": 8}, "end": {"line": 612, "character": 32}}, "selectionRange": {"start": {"line": 612, "character": 8}, "end": {"line": 612, "character": 27}}, "detail": "feature_description = []", "children": []}, {"name": "drug_tissue_map", "kind": 13, "range": {"start": {"line": 614, "character": 8}, "end": {"line": 614, "character": 28}}, "selectionRange": {"start": {"line": 614, "character": 8}, "end": {"line": 614, "character": 23}}, "detail": "drug_tissue_map = {}", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 616, "character": 8}, "end": {"line": 616, "character": 36}}, "selectionRange": {"start": {"line": 616, "character": 8}, "end": {"line": 616, "character": 12}}, "detail": "drug = drug.replace(' ','_')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 622, "character": 12}, "end": {"line": 622, "character": 30}}, "selectionRange": {"start": {"line": 622, "character": 12}, "end": {"line": 622, "character": 16}}, "detail": "drug = 'Nutlin-3a'", "children": []}, {"name": "drug_folder", "kind": 13, "range": {"start": {"line": 624, "character": 8}, "end": {"line": 624, "character": 63}}, "selectionRange": {"start": {"line": 624, "character": 8}, "end": {"line": 624, "character": 19}}, "detail": "drug_folder = '/data/merged/drug_feature/' + drug + '/'", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 630, "character": 8}, "end": {"line": 660, "character": 0}}, "selectionRange": {"start": {"line": 630, "character": 12}, "end": {"line": 630, "character": 18}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "tissue_cell_line_list", "kind": 13, "range": {"start": {"line": 630, "character": 8}, "end": {"line": 660, "character": 0}}, "selectionRange": {"start": {"line": 630, "character": 20}, "end": {"line": 630, "character": 41}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 633, "character": 12}, "end": {"line": 633, "character": 103}}, "selectionRange": {"start": {"line": 633, "character": 12}, "end": {"line": 633, "character": 35}}, "detail": "drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list )", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 634, "character": 12}, "end": {"line": 634, "character": 67}}, "selectionRange": {"start": {"line": 634, "character": 12}, "end": {"line": 634, "character": 35}}, "detail": "drug_specific_cell_line = list(drug_specific_cell_line)", "children": []}, {"name": "feature_list", "kind": 13, "range": {"start": {"line": 637, "character": 12}, "end": {"line": 637, "character": 29}}, "selectionRange": {"start": {"line": 637, "character": 12}, "end": {"line": 637, "character": 24}}, "detail": "feature_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 641, "character": 16}, "end": {"line": 643, "character": 0}}, "selectionRange": {"start": {"line": 641, "character": 20}, "end": {"line": 641, "character": 24}}, "detail": "for gene in feature_exp_gene_list: feature_description.append(gene+'_expression')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 646, "character": 16}, "end": {"line": 648, "character": 0}}, "selectionRange": {"start": {"line": 646, "character": 20}, "end": {"line": 646, "character": 24}}, "detail": "for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation')", "children": []}, {"name": "feature", "kind": 13, "range": {"start": {"line": 649, "character": 12}, "end": {"line": 649, "character": 58}}, "selectionRange": {"start": {"line": 649, "character": 12}, "end": {"line": 649, "character": 19}}, "detail": "feature = np.concatenate(feature_list, axis=1)", "children": []}, {"name": "label", "kind": 13, "range": {"start": {"line": 651, "character": 12}, "end": {"line": 651, "character": 88}}, "selectionRange": {"start": {"line": 651, "character": 12}, "end": {"line": 651, "character": 17}}, "detail": "label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 661, "character": 8}, "end": {"line": 661, "character": 84}}, "selectionRange": {"start": {"line": 661, "character": 8}, "end": {"line": 661, "character": 19}}, "detail": "file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\")", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 665, "character": 0}, "end": {"line": 665, "character": 52}}, "selectionRange": {"start": {"line": 665, "character": 0}, "end": {"line": 665, "character": 11}}, "detail": "file_handle = open('rename_selected_drug_list', 'w')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 666, "character": 0}, "end": {"line": 668, "character": 0}}, "selectionRange": {"start": {"line": 666, "character": 4}, "end": {"line": 666, "character": 8}}, "detail": "for drug in rename_selected_drug_list: file_handle.writelines(drug+ '\\n')", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 686, "character": 0}, "end": {"line": 686, "character": 13}}, "selectionRange": {"start": {"line": 686, "character": 7}, "end": {"line": 686, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cell_line_loc", "kind": 13, "range": {"start": {"line": 692, "character": 0}, "end": {"line": 692, "character": 84}}, "selectionRange": {"start": {"line": 692, "character": 0}, "end": {"line": 692, "character": 13}}, "detail": "cell_line_loc = '/cellar/users/samsonfong/Projects/tcrp-v2/from-ma/cell_line_lists/'", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 698, "character": 0}, "end": {"line": 700, "character": 0}}, "selectionRange": {"start": {"line": 698, "character": 53}, "end": {"line": 698, "character": 54}}, "detail": "with open('/data/drug_feature/KU-55933/KU', 'rb') as f: tmap= pickle.load(f)", "children": []}, {"name": "tmap", "kind": 13, "range": {"start": {"line": 699, "character": 4}, "end": {"line": 699, "character": 24}}, "selectionRange": {"start": {"line": 699, "character": 4}, "end": {"line": 699, "character": 8}}, "detail": "tmap= pickle.load(f)", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 717, "character": 0}, "end": {"line": 717, "character": 68}}, "selectionRange": {"start": {"line": 717, "character": 0}, "end": {"line": 717, "character": 1}}, "detail": "f = np.load('/data/drug_feature/KU-55933/lung_KU-55933_feature.npy')", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 16, "result": [{"title": "Inline variable", "kind": "refactor.inline", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///root/capsule/code/process_merged.py", "version": 1}, "edits": [{"range": {"start": {"line": 229, "character": 0}, "end": {"line": 230, "character": 0}}, "newText": ""}, {"range": {"start": {"line": 247, "character": 12}, "end": {"line": 247, "character": 28}}, "newText": "([])"}, {"range": {"start": {"line": 252, "character": 16}, "end": {"line": 252, "character": 32}}, "newText": "([])"}, {"range": {"start": {"line": 273, "character": 27}, "end": {"line": 273, "character": 43}}, "newText": "[]"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 17, "result": [{"name": "matplotlib", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 17}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 17}}, "detail": "module matplotlib", "children": []}, {"name": "os", "kind": 2, "range": {"start": {"line": 10, "character": 0}, "end": {"line": 10, "character": 9}}, "selectionRange": {"start": {"line": 10, "character": 7}, "end": {"line": 10, "character": 9}}, "detail": "module os", "children": []}, {"name": "pd", "kind": 2, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 11, "character": 19}}, "selectionRange": {"start": {"line": 11, "character": 17}, "end": {"line": 11, "character": 19}}, "detail": "module pd", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 12, "character": 0}, "end": {"line": 12, "character": 18}}, "selectionRange": {"start": {"line": 12, "character": 16}, "end": {"line": 12, "character": 18}}, "detail": "module np", "children": []}, {"name": "sys", "kind": 2, "range": {"start": {"line": 13, "character": 0}, "end": {"line": 13, "character": 10}}, "selectionRange": {"start": {"line": 13, "character": 7}, "end": {"line": 13, "character": 10}}, "detail": "module sys", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 14, "character": 0}, "end": {"line": 14, "character": 13}}, "selectionRange": {"start": {"line": 14, "character": 7}, "end": {"line": 14, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cdist", "kind": 12, "range": {"start": {"line": 15, "character": 0}, "end": {"line": 15, "character": 40}}, "selectionRange": {"start": {"line": 15, "character": 35}, "end": {"line": 15, "character": 40}}, "detail": "def cdist", "children": []}, {"name": "math", "kind": 2, "range": {"start": {"line": 16, "character": 0}, "end": {"line": 16, "character": 11}}, "selectionRange": {"start": {"line": 16, "character": 7}, "end": {"line": 16, "character": 11}}, "detail": "module math", "children": []}, {"name": "nx", "kind": 2, "range": {"start": {"line": 17, "character": 0}, "end": {"line": 17, "character": 21}}, "selectionRange": {"start": {"line": 17, "character": 19}, "end": {"line": 17, "character": 21}}, "detail": "module nx", "children": []}, {"name": "nxacc", "kind": 2, "range": {"start": {"line": 18, "character": 0}, "end": {"line": 18, "character": 56}}, "selectionRange": {"start": {"line": 18, "character": 51}, "end": {"line": 18, "character": 56}}, "detail": "module nxacc", "children": []}, {"name": "nxadag", "kind": 2, "range": {"start": {"line": 19, "character": 0}, "end": {"line": 19, "character": 40}}, "selectionRange": {"start": {"line": 19, "character": 34}, "end": {"line": 19, "character": 40}}, "detail": "module nxadag", "children": []}, {"name": "plt", "kind": 2, "range": {"start": {"line": 20, "character": 0}, "end": {"line": 20, "character": 31}}, "selectionRange": {"start": {"line": 20, "character": 28}, "end": {"line": 20, "character": 31}}, "detail": "module plt", "children": []}, {"name": "sns", "kind": 2, "range": {"start": {"line": 21, "character": 0}, "end": {"line": 21, "character": 21}}, "selectionRange": {"start": {"line": 21, "character": 18}, "end": {"line": 21, "character": 21}}, "detail": "module sns", "children": []}, {"name": "itertools", "kind": 2, "range": {"start": {"line": 22, "character": 0}, "end": {"line": 22, "character": 16}}, "selectionRange": {"start": {"line": 22, "character": 7}, "end": {"line": 22, "character": 16}}, "detail": "module itertools", "children": []}, {"name": "mygene", "kind": 2, "range": {"start": {"line": 23, "character": 0}, "end": {"line": 23, "character": 13}}, "selectionRange": {"start": {"line": 23, "character": 7}, "end": {"line": 23, "character": 13}}, "detail": "module mygene", "children": []}, {"name": "re", "kind": 2, "range": {"start": {"line": 24, "character": 0}, "end": {"line": 24, "character": 9}}, "selectionRange": {"start": {"line": 24, "character": 7}, "end": {"line": 24, "character": 9}}, "detail": "module re", "children": []}, {"name": "selected_exp_gene_list", "kind": 13, "range": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 95}}, "selectionRange": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 22}}, "detail": "selected_exp_gene_list = pd.read_csv(\"/data/common_exp_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "selected_mut_gene_list", "kind": 13, "range": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 95}}, "selectionRange": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 22}}, "detail": "selected_mut_gene_list = pd.read_csv(\"/data/common_mut_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "load_network", "kind": 12, "range": {"start": {"line": 37, "character": 0}, "end": {"line": 65, "character": 28}}, "selectionRange": {"start": {"line": 37, "character": 4}, "end": {"line": 37, "character": 16}}, "detail": "def load_network", "children": []}, {"name": "load_name_space", "kind": 12, "range": {"start": {"line": 67, "character": 0}, "end": {"line": 79, "character": 21}}, "selectionRange": {"start": {"line": 67, "character": 4}, "end": {"line": 67, "character": 19}}, "detail": "def load_name_space", "children": []}, {"name": "list2index", "kind": 12, "range": {"start": {"line": 81, "character": 0}, "end": {"line": 88, "character": 41}}, "selectionRange": {"start": {"line": 81, "character": 4}, "end": {"line": 81, "character": 14}}, "detail": "def list2index", "children": []}, {"name": "PDTC_data_file", "kind": 13, "range": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 30}}, "selectionRange": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 14}}, "detail": "PDTC_data_file = '/data/PTDC/'", "children": []}, {"name": "PDTC_exp_data_file", "kind": 13, "range": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 60}}, "selectionRange": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 18}}, "detail": "PDTC_exp_data_file = PDTC_data_file + 'ExpressionModels.tsv'", "children": []}, {"name": "PDTC_drug_cell_line_file", "kind": 13, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 72}}, "selectionRange": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 24}}, "detail": "PDTC_drug_cell_line_file = PDTC_data_file + 'DrugResponsesAUCModels.tsv'", "children": []}, {"name": "PDTC_mutation_data_file", "kind": 13, "range": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 59}}, "selectionRange": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 23}}, "detail": "PDTC_mutation_data_file = PDTC_data_file + 'SNVsModels.tsv'", "children": []}, {"name": "PDTC_drug_target_file", "kind": 13, "range": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 47}}, "selectionRange": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 21}}, "detail": "PDTC_drug_target_file ='/data/drug_targets.tsv'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 37}}, "selectionRange": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 46}}, "selectionRange": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "data_file", "kind": 13, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 25}}, "selectionRange": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 9}}, "detail": "data_file = '/data/GDSC/'", "children": []}, {"name": "new_network_file", "kind": 13, "range": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 27}}, "selectionRange": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 16}}, "detail": "new_network_file = '/data/'", "children": []}, {"name": "exp_data_file", "kind": 13, "range": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 61}}, "selectionRange": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 13}}, "detail": "exp_data_file = data_file + 'Cell_line_RMA_proc_basalExp.txt'", "children": []}, {"name": "drug_cell_line_file", "kind": 13, "range": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 64}}, "selectionRange": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 19}}, "detail": "drug_cell_line_file = data_file + 'v17_fitted_dose_response.csv'", "children": []}, {"name": "cell_line_detail_file", "kind": 13, "range": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 60}}, "selectionRange": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 21}}, "detail": "cell_line_detail_file = data_file + 'Cell_Lines_Details.csv'", "children": []}, {"name": "mutation_data_file", "kind": 13, "range": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 51}}, "selectionRange": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 18}}, "detail": "mutation_data_file = data_file + 'WES_variants.csv'", "children": []}, {"name": "drug_target_file", "kind": 13, "range": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 42}}, "selectionRange": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 16}}, "detail": "drug_target_file ='/data/drug_targets.tsv'", "children": []}, {"name": "feature_folder", "kind": 13, "range": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 27}}, "selectionRange": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 14}}, "detail": "feature_folder = 'feature/'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 37}}, "selectionRange": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 46}}, "selectionRange": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 58}}, "selectionRange": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 6}}, "detail": "exp_df = pd.read_csv(exp_data_file, sep='\\t', index_col=0)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 21}}, "selectionRange": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 6}}, "detail": "exp_df = exp_df.T[1:]", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 56}}, "selectionRange": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 6}}, "detail": "exp_df = exp_df.rename(columns={np.nan: 'NO_GENE_NAME'})", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 43}}, "selectionRange": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 6}}, "detail": "exp_df = exp_df.drop('NO_GENE_NAME',axis=1)", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 138, "character": 0}, "end": {"line": 140, "character": 26}}, "selectionRange": {"start": {"line": 138, "character": 4}, "end": {"line": 138, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 142, "character": 0}, "end": {"line": 142, "character": 44}}, "selectionRange": {"start": {"line": 142, "character": 7}, "end": {"line": 142, "character": 12}}, "detail": "exp_df.index = exp_df.index.map(stripNumber)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 40}}, "selectionRange": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 6}}, "detail": "exp_df = exp_df.groupby(level=0).first()", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 39}}, "selectionRange": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 6}}, "detail": "exp_df = exp_df[selected_exp_gene_list]", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 36}}, "selectionRange": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 48}}, "selectionRange": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 78}}, "selectionRange": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 11}}, "detail": "PDTC_exp_df = pd.read_csv(PDTC_exp_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 31}}, "selectionRange": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df.T[1:]", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 160, "character": 0}, "end": {"line": 162, "character": 26}}, "selectionRange": {"start": {"line": 160, "character": 4}, "end": {"line": 160, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 49}}, "selectionRange": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df[selected_exp_gene_list]", "children": []}, {"name": "PDTC_exp_gene_list", "kind": 13, "range": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 46}}, "selectionRange": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 18}}, "detail": "PDTC_exp_gene_list = list(PDTC_exp_df.columns)", "children": []}, {"name": "PDTC_exp_cell_line_list", "kind": 13, "range": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 58}}, "selectionRange": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 23}}, "detail": "PDTC_exp_cell_line_list = list(PDTC_exp_df.index.unique())", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 40}}, "selectionRange": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 6}}, "detail": "exp_df = pd.concat([exp_df,PDTC_exp_df])", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 36}}, "selectionRange": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 48}}, "selectionRange": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "maf", "kind": 13, "range": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 69}}, "selectionRange": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 3}}, "detail": "maf = pd.read_csv(mutation_data_file, sep=',', index_col=0).fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 75}}, "selectionRange": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 11}}, "detail": "mutation_df = maf.groupby(['COSMIC_ID', 'Gene']).size().unstack().fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 49}}, "selectionRange": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 11}}, "detail": "mutation_df = mutation_df[selected_mut_gene_list]", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 46}}, "selectionRange": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 58}}, "selectionRange": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "PDTC_maf", "kind": 13, "range": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 80}}, "selectionRange": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 8}}, "detail": "PDTC_maf = pd.read_csv(PDTC_mutation_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 61}}, "selectionRange": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_maf.replace(to_replace=\"NO\",value=0.0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 82}}, "selectionRange": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_mutation_df.replace(to_replace=\"chr*\",value=1.0,regex=True)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 47}}, "selectionRange": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df.transpose()", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 59}}, "selectionRange": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df[selected_mut_gene_list]", "children": []}, {"name": "PDTC_mutation_gene_list", "kind": 13, "range": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 56}}, "selectionRange": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 23}}, "detail": "PDTC_mutation_gene_list = list(PDTC_mutation_df.columns)", "children": []}, {"name": "PDTC_mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 68}}, "selectionRange": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 28}}, "detail": "PDTC_mutation_cell_line_list = list(PDTC_mutation_df.index.unique())", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 55}}, "selectionRange": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 11}}, "detail": "mutation_df = pd.concat([mutation_df,PDTC_mutation_df])", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 46}}, "selectionRange": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 58}}, "selectionRange": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 36}}, "selectionRange": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 11}}, "detail": "file_handle = open(drug_target_file)", "children": []}, {"name": "drug_target_map", "kind": 13, "range": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 20}}, "selectionRange": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 15}}, "detail": "drug_target_map = {}", "children": []}, {"name": "drug_target_list", "kind": 13, "range": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 21}}, "selectionRange": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 16}}, "detail": "drug_target_list = []", "children": []}, {"name": "line", "kind": 13, "range": {"start": {"line": 230, "character": 0}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 230, "character": 4}, "end": {"line": 230, "character": 8}}, "detail": "for line in file_handle: new_line = line.rstrip().split(\"\\t\") drug = new_line[0] target_list=new_line[1].split(',') if drug != \"Drug\": target_list_str = \"\" for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\" drug = drug.strip() drug_target_map[drug] = [] if ',' not in target_list_str: drug_target_map[drug].append(target_list_str.strip()) drug_target_list.append(target_list_str.strip()) else: target_list = target_list_str.split(',') for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "new_line", "kind": 13, "range": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 40}}, "selectionRange": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 12}}, "detail": "new_line = line.rstrip().split(\"\\t\")", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 22}}, "selectionRange": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 8}}, "detail": "drug = new_line[0]", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 38}}, "selectionRange": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 15}}, "detail": "target_list=new_line[1].split(',')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 28}}, "selectionRange": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 23}}, "detail": "target_list_str = \"\"", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 237, "character": 8}, "end": {"line": 242, "character": 0}}, "selectionRange": {"start": {"line": 237, "character": 12}, "end": {"line": 237, "character": 13}}, "detail": "for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 65}}, "selectionRange": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 71}}, "selectionRange": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 27}}, "selectionRange": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 12}}, "detail": "drug = drug.strip()", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 52}}, "selectionRange": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 23}}, "detail": "target_list = target_list_str.split(',')", "children": []}, {"name": "target", "kind": 13, "range": {"start": {"line": 250, "character": 12}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 250, "character": 16}, "end": {"line": 250, "character": 22}}, "detail": "for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "drugs_legend", "kind": 13, "range": {"start": {"line": 261, "character": 0}, "end": {"line": 261, "character": 85}}, "selectionRange": {"start": {"line": 261, "character": 0}, "end": {"line": 261, "character": 12}}, "detail": "drugs_legend = pd.read_csv('/data/GDSC/Screened_Compounds.csv', sep=',', index_col=0)", "children": []}, {"name": "drug2id_mapping", "kind": 13, "range": {"start": {"line": 263, "character": 0}, "end": {"line": 263, "character": 20}}, "selectionRange": {"start": {"line": 263, "character": 0}, "end": {"line": 263, "character": 15}}, "detail": "drug2id_mapping = {}", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 265, "character": 0}, "end": {"line": 268, "character": 0}}, "selectionRange": {"start": {"line": 265, "character": 4}, "end": {"line": 265, "character": 9}}, "detail": "for index in list(drugs_legend.index) : drug_name = drugs_legend.loc[index,'Drug Name'] drug2id_mapping[ drug_name ] = index", "children": []}, {"name": "drug_name", "kind": 13, "range": {"start": {"line": 266, "character": 4}, "end": {"line": 266, "character": 51}}, "selectionRange": {"start": {"line": 266, "character": 4}, "end": {"line": 266, "character": 13}}, "detail": "drug_name = drugs_legend.loc[index,'Drug Name']", "children": []}, {"name": "valid_gene_list", "kind": 13, "range": {"start": {"line": 273, "character": 0}, "end": {"line": 273, "character": 92}}, "selectionRange": {"start": {"line": 273, "character": 0}, "end": {"line": 273, "character": 15}}, "detail": "valid_gene_list = list(set(drug_target_list) | set(exp_gene_list) | set(mutation_gene_list))", "children": []}, {"name": "network_list", "kind": 13, "range": {"start": {"line": 279, "character": 0}, "end": {"line": 279, "character": 82}}, "selectionRange": {"start": {"line": 279, "character": 0}, "end": {"line": 279, "character": 12}}, "detail": "network_list = [new_network_file+inbiomap_file, new_network_file+pathwaycomm_file]", "children": []}, {"name": "gene_neighbor_map", "kind": 13, "range": {"start": {"line": 280, "character": 0}, "end": {"line": 280, "character": 64}}, "selectionRange": {"start": {"line": 280, "character": 0}, "end": {"line": 280, "character": 17}}, "detail": "gene_neighbor_map = load_network(network_list, valid_gene_list)", "children": []}, {"name": "gene_name_df", "kind": 13, "range": {"start": {"line": 286, "character": 0}, "end": {"line": 286, "character": 89}}, "selectionRange": {"start": {"line": 286, "character": 0}, "end": {"line": 286, "character": 12}}, "detail": "gene_name_df = pd.read_table('/data/HUGO_protein-coding_gene.tsv',index_col=25, sep='\\t')", "children": []}, {"name": "gene_name_map", "kind": 13, "range": {"start": {"line": 292, "character": 0}, "end": {"line": 292, "character": 18}}, "selectionRange": {"start": {"line": 292, "character": 0}, "end": {"line": 292, "character": 13}}, "detail": "gene_name_map = {}", "children": []}, {"name": "uniprot_gene", "kind": 13, "range": {"start": {"line": 294, "character": 0}, "end": {"line": 303, "character": 0}}, "selectionRange": {"start": {"line": 294, "character": 4}, "end": {"line": 294, "character": 16}}, "detail": "for uniprot_gene in gene_name_df.index: if isinstance(uniprot_gene, type('aaa')) == False: continue if isinstance(gene_name_df.loc[uniprot_gene, 'symbol'], type('aaa')) == False: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol'][0] else: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 308, "character": 0}, "end": {"line": 308, "character": 76}}, "selectionRange": {"start": {"line": 308, "character": 0}, "end": {"line": 308, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "uniprot_gene_set", "kind": 13, "range": {"start": {"line": 310, "character": 0}, "end": {"line": 310, "character": 24}}, "selectionRange": {"start": {"line": 310, "character": 0}, "end": {"line": 310, "character": 16}}, "detail": "uniprot_gene_set = set()", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 312, "character": 0}, "end": {"line": 321, "character": 0}}, "selectionRange": {"start": {"line": 312, "character": 4}, "end": {"line": 312, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 317, "character": 4}, "end": {"line": 317, "character": 74}}, "selectionRange": {"start": {"line": 317, "character": 4}, "end": {"line": 317, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 319, "character": 4}, "end": {"line": 321, "character": 0}}, "selectionRange": {"start": {"line": 319, "character": 8}, "end": {"line": 319, "character": 12}}, "detail": "for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "query_gene_set", "kind": 13, "range": {"start": {"line": 324, "character": 0}, "end": {"line": 324, "character": 19}}, "selectionRange": {"start": {"line": 324, "character": 0}, "end": {"line": 324, "character": 14}}, "detail": "query_gene_set = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 326, "character": 0}, "end": {"line": 329, "character": 0}}, "selectionRange": {"start": {"line": 326, "character": 4}, "end": {"line": 326, "character": 8}}, "detail": "for gene in uniprot_gene_set: if gene not in gene_name_map: query_gene_set.append(gene)", "children": []}, {"name": "query_gene_list", "kind": 13, "range": {"start": {"line": 332, "character": 0}, "end": {"line": 332, "character": 38}}, "selectionRange": {"start": {"line": 332, "character": 0}, "end": {"line": 332, "character": 15}}, "detail": "query_gene_list = list(query_gene_set)", "children": []}, {"name": "mg", "kind": 13, "range": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 24}}, "selectionRange": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 2}}, "detail": "mg = mygene.MyGeneInfo()", "children": []}, {"name": "out", "kind": 13, "range": {"start": {"line": 335, "character": 0}, "end": {"line": 335, "character": 87}}, "selectionRange": {"start": {"line": 335, "character": 0}, "end": {"line": 335, "character": 3}}, "detail": "out = mg.querymany(query_gene_list, scopes='uniprot', fields='symbol', species='human')", "children": []}, {"name": "not_found_gene_list", "kind": 13, "range": {"start": {"line": 337, "character": 0}, "end": {"line": 337, "character": 24}}, "selectionRange": {"start": {"line": 337, "character": 0}, "end": {"line": 337, "character": 19}}, "detail": "not_found_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 339, "character": 0}, "end": {"line": 344, "character": 0}}, "selectionRange": {"start": {"line": 339, "character": 4}, "end": {"line": 339, "character": 5}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 339, "character": 0}, "end": {"line": 344, "character": 0}}, "selectionRange": {"start": {"line": 339, "character": 7}, "end": {"line": 339, "character": 11}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 351, "character": 0}, "end": {"line": 351, "character": 76}}, "selectionRange": {"start": {"line": 351, "character": 0}, "end": {"line": 351, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 353, "character": 0}, "end": {"line": 375, "character": 0}}, "selectionRange": {"start": {"line": 353, "character": 4}, "end": {"line": 353, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') complex_symbol_list = [] for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] ) for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 358, "character": 4}, "end": {"line": 358, "character": 74}}, "selectionRange": {"start": {"line": 358, "character": 4}, "end": {"line": 358, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "complex_symbol_list", "kind": 13, "range": {"start": {"line": 360, "character": 4}, "end": {"line": 360, "character": 28}}, "selectionRange": {"start": {"line": 360, "character": 4}, "end": {"line": 360, "character": 23}}, "detail": "complex_symbol_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 362, "character": 4}, "end": {"line": 365, "character": 0}}, "selectionRange": {"start": {"line": 362, "character": 8}, "end": {"line": 362, "character": 12}}, "detail": "for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] )", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 366, "character": 4}, "end": {"line": 375, "character": 0}}, "selectionRange": {"start": {"line": 366, "character": 8}, "end": {"line": 366, "character": 13}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 366, "character": 4}, "end": {"line": 375, "character": 0}}, "selectionRange": {"start": {"line": 366, "character": 15}, "end": {"line": 366, "character": 20}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene_exp_neighbor_map", "kind": 13, "range": {"start": {"line": 380, "character": 0}, "end": {"line": 380, "character": 26}}, "selectionRange": {"start": {"line": 380, "character": 0}, "end": {"line": 380, "character": 21}}, "detail": "gene_exp_neighbor_map = {}", "children": []}, {"name": "exp_matrix", "kind": 13, "range": {"start": {"line": 381, "character": 0}, "end": {"line": 381, "character": 26}}, "selectionRange": {"start": {"line": 381, "character": 0}, "end": {"line": 381, "character": 10}}, "detail": "exp_matrix = exp_df.values", "children": []}, {"name": "P", "kind": 13, "range": {"start": {"line": 383, "character": 0}, "end": {"line": 383, "character": 79}}, "selectionRange": {"start": {"line": 383, "character": 0}, "end": {"line": 383, "character": 1}}, "detail": "P = 1 - cdist(np.transpose(exp_matrix), np.transpose(exp_matrix),'correlation')", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 385, "character": 0}, "end": {"line": 399, "character": 0}}, "selectionRange": {"start": {"line": 385, "character": 4}, "end": {"line": 385, "character": 5}}, "detail": "for i in range(len(exp_gene_list)): gene1 = exp_gene_list[i] gene_exp_neighbor_map[gene1] = set() for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2) if gene1 not in gene_exp_neighbor_map[gene1]: print (gene1, 'not in itself?', P[i,i])", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 387, "character": 4}, "end": {"line": 387, "character": 28}}, "selectionRange": {"start": {"line": 387, "character": 4}, "end": {"line": 387, "character": 9}}, "detail": "gene1 = exp_gene_list[i]", "children": []}, {"name": "j", "kind": 13, "range": {"start": {"line": 390, "character": 4}, "end": {"line": 396, "character": 0}}, "selectionRange": {"start": {"line": 390, "character": 8}, "end": {"line": 390, "character": 9}}, "detail": "for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 392, "character": 8}, "end": {"line": 392, "character": 32}}, "selectionRange": {"start": {"line": 392, "character": 8}, "end": {"line": 392, "character": 13}}, "detail": "gene2 = exp_gene_list[j]", "children": []}, {"name": "drug_feature_list", "kind": 13, "range": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 22}}, "selectionRange": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 17}}, "detail": "drug_feature_list = []", "children": []}, {"name": "drug_neighbor_map", "kind": 13, "range": {"start": {"line": 408, "character": 0}, "end": {"line": 408, "character": 22}}, "selectionRange": {"start": {"line": 408, "character": 0}, "end": {"line": 408, "character": 17}}, "detail": "drug_neighbor_map = {}", "children": []}, {"name": "selected_drug_list", "kind": 13, "range": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 23}}, "selectionRange": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 18}}, "detail": "selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 411, "character": 0}, "end": {"line": 428, "character": 0}}, "selectionRange": {"start": {"line": 411, "character": 4}, "end": {"line": 411, "character": 8}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 411, "character": 0}, "end": {"line": 428, "character": 0}}, "selectionRange": {"start": {"line": 411, "character": 10}, "end": {"line": 411, "character": 21}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 414, "character": 8}, "end": {"line": 424, "character": 0}}, "selectionRange": {"start": {"line": 414, "character": 12}, "end": {"line": 414, "character": 16}}, "detail": "for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene]", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 442, "character": 0}, "end": {"line": 442, "character": 52}}, "selectionRange": {"start": {"line": 442, "character": 0}, "end": {"line": 442, "character": 5}}, "detail": "drugs = pd.read_csv(drug_cell_line_file,index_col=2)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 443, "character": 0}, "end": {"line": 443, "character": 93}}, "selectionRange": {"start": {"line": 443, "character": 0}, "end": {"line": 443, "character": 5}}, "detail": "drugs = drugs.drop([\"DATASET_VERSION\",\"IC50_RESULTS_ID\",\"MAX_CONC_MICROMOLAR\",\"RMSE\"],axis=1)", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 444, "character": 0}, "end": {"line": 444, "character": 49}}, "selectionRange": {"start": {"line": 444, "character": 0}, "end": {"line": 444, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 446, "character": 0}, "end": {"line": 446, "character": 28}}, "selectionRange": {"start": {"line": 446, "character": 0}, "end": {"line": 446, "character": 9}}, "detail": "drug_list = drugs[\"DRUG_ID\"]", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 447, "character": 0}, "end": {"line": 447, "character": 16}}, "selectionRange": {"start": {"line": 447, "character": 0}, "end": {"line": 447, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 457, "character": 0}, "end": {"line": 457, "character": 71}}, "selectionRange": {"start": {"line": 457, "character": 0}, "end": {"line": 457, "character": 10}}, "detail": "PDTC_drugs = pd.read_csv(PDTC_drug_cell_line_file,sep='\\t',index_col=0)", "children": []}, {"name": "PDTC_drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 458, "character": 0}, "end": {"line": 458, "character": 59}}, "selectionRange": {"start": {"line": 458, "character": 0}, "end": {"line": 458, "character": 25}}, "detail": "PDTC_drugs_cell_line_list = list(PDTC_drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 460, "character": 0}, "end": {"line": 460, "character": 39}}, "selectionRange": {"start": {"line": 460, "character": 0}, "end": {"line": 460, "character": 9}}, "detail": "drug_list = PDTC_drugs[\"Drug\"].tolist()", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 461, "character": 0}, "end": {"line": 461, "character": 16}}, "selectionRange": {"start": {"line": 461, "character": 0}, "end": {"line": 461, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 462, "character": 0}, "end": {"line": 467, "character": 0}}, "selectionRange": {"start": {"line": 462, "character": 4}, "end": {"line": 462, "character": 5}}, "detail": "for i in drug_list: if i in drug2id_mapping.keys(): new_drug_id.append(drug2id_mapping[i]) else: new_drug_id.append(0)", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 84}}, "selectionRange": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 10}}, "detail": "PDTC_drugs = PDTC_drugs.drop([\"Drug\",\"iC50\",\"D1_CONC\",\"D5_CONC\",\"perc.iC50\"],axis=1)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 477, "character": 0}, "end": {"line": 477, "character": 37}}, "selectionRange": {"start": {"line": 477, "character": 0}, "end": {"line": 477, "character": 5}}, "detail": "drugs = pd.concat([drugs,PDTC_drugs])", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 49}}, "selectionRange": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "cell_line_list", "kind": 13, "range": {"start": {"line": 490, "character": 0}, "end": {"line": 490, "character": 102}}, "selectionRange": {"start": {"line": 490, "character": 0}, "end": {"line": 490, "character": 14}}, "detail": "cell_line_list = list(set(drugs_cell_line_list)&set(exp_cell_line_list)&set(mutation_cell_line_list) )", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 497, "character": 0}, "end": {"line": 497, "character": 66}}, "selectionRange": {"start": {"line": 497, "character": 0}, "end": {"line": 497, "character": 16}}, "detail": "cell_line_legend = pd.read_csv(cell_line_detail_file, index_col=1)", "children": []}, {"name": "PDTC_cell_line", "kind": 13, "range": {"start": {"line": 498, "character": 0}, "end": {"line": 498, "character": 206}}, "selectionRange": {"start": {"line": 498, "character": 0}, "end": {"line": 498, "character": 14}}, "detail": "PDTC_cell_line = pd.DataFrame({'Line': [\"BRCA\"]*len(PDTC_exp_cell_line_list), 'Site':[\"PDTC\"]*len(PDTC_exp_cell_line_list),\"Histology\":[\"breast\"]*len(PDTC_exp_cell_line_list)},index=PDTC_exp_cell_line_list)", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 499, "character": 0}, "end": {"line": 499, "character": 63}}, "selectionRange": {"start": {"line": 499, "character": 0}, "end": {"line": 499, "character": 16}}, "detail": "cell_line_legend = pd.concat([cell_line_legend,PDTC_cell_line])", "children": []}, {"name": "tissue_map", "kind": 13, "range": {"start": {"line": 502, "character": 0}, "end": {"line": 502, "character": 15}}, "selectionRange": {"start": {"line": 502, "character": 0}, "end": {"line": 502, "character": 10}}, "detail": "tissue_map = {}", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 504, "character": 0}, "end": {"line": 512, "character": 0}}, "selectionRange": {"start": {"line": 504, "character": 4}, "end": {"line": 504, "character": 13}}, "detail": "for cell_line in cell_line_list: tissue = cell_line_legend.loc[cell_line,'Site'] if tissue not in tissue_map: tissue_map[tissue] = [] tissue_map[tissue].append(cell_line)", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 506, "character": 4}, "end": {"line": 506, "character": 51}}, "selectionRange": {"start": {"line": 506, "character": 4}, "end": {"line": 506, "character": 10}}, "detail": "tissue = cell_line_legend.loc[cell_line,'Site']", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 513, "character": 0}, "end": {"line": 513, "character": 23}}, "selectionRange": {"start": {"line": 513, "character": 0}, "end": {"line": 513, "character": 19}}, "detail": "large_tissue_number = 0", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 514, "character": 0}, "end": {"line": 520, "character": 0}}, "selectionRange": {"start": {"line": 514, "character": 4}, "end": {"line": 514, "character": 10}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 514, "character": 0}, "end": {"line": 520, "character": 0}}, "selectionRange": {"start": {"line": 514, "character": 12}, "end": {"line": 514, "character": 21}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 517, "character": 8}, "end": {"line": 517, "character": 32}}, "selectionRange": {"start": {"line": 517, "character": 8}, "end": {"line": 517, "character": 27}}, "detail": "large_tissue_number += 1", "children": []}, {"name": "new_exp_gene_list", "kind": 13, "range": {"start": {"line": 540, "character": 0}, "end": {"line": 540, "character": 22}}, "selectionRange": {"start": {"line": 540, "character": 0}, "end": {"line": 540, "character": 17}}, "detail": "new_exp_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 541, "character": 0}, "end": {"line": 544, "character": 0}}, "selectionRange": {"start": {"line": 541, "character": 4}, "end": {"line": 541, "character": 5}}, "detail": "for i in exp_gene_list: if i in valid_gene_list: new_exp_gene_list.append(i)", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 549, "character": 0}, "end": {"line": 549, "character": 41}}, "selectionRange": {"start": {"line": 549, "character": 0}, "end": {"line": 549, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 550, "character": 0}, "end": {"line": 550, "character": 38}}, "selectionRange": {"start": {"line": 550, "character": 0}, "end": {"line": 550, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 551, "character": 0}, "end": {"line": 551, "character": 72}}, "selectionRange": {"start": {"line": 551, "character": 0}, "end": {"line": 551, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 553, "character": 0}, "end": {"line": 553, "character": 43}}, "selectionRange": {"start": {"line": 553, "character": 0}, "end": {"line": 553, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 554, "character": 0}, "end": {"line": 554, "character": 68}}, "selectionRange": {"start": {"line": 554, "character": 0}, "end": {"line": 554, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 561, "character": 0}, "end": {"line": 561, "character": 58}}, "selectionRange": {"start": {"line": 561, "character": 0}, "end": {"line": 561, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 562, "character": 0}, "end": {"line": 562, "character": 68}}, "selectionRange": {"start": {"line": 562, "character": 0}, "end": {"line": 562, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "new_data_file", "kind": 13, "range": {"start": {"line": 571, "character": 0}, "end": {"line": 571, "character": 18}}, "selectionRange": {"start": {"line": 571, "character": 0}, "end": {"line": 571, "character": 13}}, "detail": "new_data_file = ''", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 41}}, "selectionRange": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 38}}, "selectionRange": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 72}}, "selectionRange": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 43}}, "selectionRange": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 68}}, "selectionRange": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 58}}, "selectionRange": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 68}}, "selectionRange": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "rename_selected_drug_list", "kind": 13, "range": {"start": {"line": 592, "character": 0}, "end": {"line": 592, "character": 30}}, "selectionRange": {"start": {"line": 592, "character": 0}, "end": {"line": 592, "character": 25}}, "detail": "rename_selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 594, "character": 0}, "end": {"line": 664, "character": 0}}, "selectionRange": {"start": {"line": 594, "character": 4}, "end": {"line": 594, "character": 8}}, "detail": "for drug in selected_drug_list: print(drug) if drug not in drug2id_mapping: print('drug name wrong', drug) else: cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]] feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) ) feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) ) print(len(feature_exp_gene_list) + len(feature_mut_gene_list)) if len(feature_exp_gene_list) + len(feature_mut_gene_list) == 0: continue feature_description = [] drug_tissue_map = {} drug = drug.replace(' ','_') rename_selected_drug_list.append(drug) if drug == 'Nutlin-3a_(-)': drug = 'Nutlin-3a' drug_folder = '/data/merged/drug_feature/' + drug + '/' if not os.path.exists(drug_folder): os.makedirs(drug_folder) for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description)) file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\") pickle.dump(drug_tissue_map,file_handle) file_handle.close()", "children": []}, {"name": "cell_line_drug_matrix", "kind": 13, "range": {"start": {"line": 602, "character": 8}, "end": {"line": 602, "character": 84}}, "selectionRange": {"start": {"line": 602, "character": 8}, "end": {"line": 602, "character": 29}}, "detail": "cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]]", "children": []}, {"name": "feature_exp_gene_list", "kind": 13, "range": {"start": {"line": 607, "character": 8}, "end": {"line": 607, "character": 98}}, "selectionRange": {"start": {"line": 607, "character": 8}, "end": {"line": 607, "character": 29}}, "detail": "feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) )", "children": []}, {"name": "feature_mut_gene_list", "kind": 13, "range": {"start": {"line": 608, "character": 8}, "end": {"line": 608, "character": 98}}, "selectionRange": {"start": {"line": 608, "character": 8}, "end": {"line": 608, "character": 29}}, "detail": "feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) )", "children": []}, {"name": "feature_description", "kind": 13, "range": {"start": {"line": 612, "character": 8}, "end": {"line": 612, "character": 32}}, "selectionRange": {"start": {"line": 612, "character": 8}, "end": {"line": 612, "character": 27}}, "detail": "feature_description = []", "children": []}, {"name": "drug_tissue_map", "kind": 13, "range": {"start": {"line": 614, "character": 8}, "end": {"line": 614, "character": 28}}, "selectionRange": {"start": {"line": 614, "character": 8}, "end": {"line": 614, "character": 23}}, "detail": "drug_tissue_map = {}", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 616, "character": 8}, "end": {"line": 616, "character": 36}}, "selectionRange": {"start": {"line": 616, "character": 8}, "end": {"line": 616, "character": 12}}, "detail": "drug = drug.replace(' ','_')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 622, "character": 12}, "end": {"line": 622, "character": 30}}, "selectionRange": {"start": {"line": 622, "character": 12}, "end": {"line": 622, "character": 16}}, "detail": "drug = 'Nutlin-3a'", "children": []}, {"name": "drug_folder", "kind": 13, "range": {"start": {"line": 624, "character": 8}, "end": {"line": 624, "character": 63}}, "selectionRange": {"start": {"line": 624, "character": 8}, "end": {"line": 624, "character": 19}}, "detail": "drug_folder = '/data/merged/drug_feature/' + drug + '/'", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 630, "character": 8}, "end": {"line": 660, "character": 0}}, "selectionRange": {"start": {"line": 630, "character": 12}, "end": {"line": 630, "character": 18}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "tissue_cell_line_list", "kind": 13, "range": {"start": {"line": 630, "character": 8}, "end": {"line": 660, "character": 0}}, "selectionRange": {"start": {"line": 630, "character": 20}, "end": {"line": 630, "character": 41}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 633, "character": 12}, "end": {"line": 633, "character": 103}}, "selectionRange": {"start": {"line": 633, "character": 12}, "end": {"line": 633, "character": 35}}, "detail": "drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list )", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 634, "character": 12}, "end": {"line": 634, "character": 67}}, "selectionRange": {"start": {"line": 634, "character": 12}, "end": {"line": 634, "character": 35}}, "detail": "drug_specific_cell_line = list(drug_specific_cell_line)", "children": []}, {"name": "feature_list", "kind": 13, "range": {"start": {"line": 637, "character": 12}, "end": {"line": 637, "character": 29}}, "selectionRange": {"start": {"line": 637, "character": 12}, "end": {"line": 637, "character": 24}}, "detail": "feature_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 641, "character": 16}, "end": {"line": 643, "character": 0}}, "selectionRange": {"start": {"line": 641, "character": 20}, "end": {"line": 641, "character": 24}}, "detail": "for gene in feature_exp_gene_list: feature_description.append(gene+'_expression')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 646, "character": 16}, "end": {"line": 648, "character": 0}}, "selectionRange": {"start": {"line": 646, "character": 20}, "end": {"line": 646, "character": 24}}, "detail": "for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation')", "children": []}, {"name": "feature", "kind": 13, "range": {"start": {"line": 649, "character": 12}, "end": {"line": 649, "character": 58}}, "selectionRange": {"start": {"line": 649, "character": 12}, "end": {"line": 649, "character": 19}}, "detail": "feature = np.concatenate(feature_list, axis=1)", "children": []}, {"name": "label", "kind": 13, "range": {"start": {"line": 651, "character": 12}, "end": {"line": 651, "character": 88}}, "selectionRange": {"start": {"line": 651, "character": 12}, "end": {"line": 651, "character": 17}}, "detail": "label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 661, "character": 8}, "end": {"line": 661, "character": 84}}, "selectionRange": {"start": {"line": 661, "character": 8}, "end": {"line": 661, "character": 19}}, "detail": "file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\")", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 665, "character": 0}, "end": {"line": 665, "character": 52}}, "selectionRange": {"start": {"line": 665, "character": 0}, "end": {"line": 665, "character": 11}}, "detail": "file_handle = open('rename_selected_drug_list', 'w')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 666, "character": 0}, "end": {"line": 668, "character": 0}}, "selectionRange": {"start": {"line": 666, "character": 4}, "end": {"line": 666, "character": 8}}, "detail": "for drug in rename_selected_drug_list: file_handle.writelines(drug+ '\\n')", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 686, "character": 0}, "end": {"line": 686, "character": 13}}, "selectionRange": {"start": {"line": 686, "character": 7}, "end": {"line": 686, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cell_line_loc", "kind": 13, "range": {"start": {"line": 692, "character": 0}, "end": {"line": 692, "character": 84}}, "selectionRange": {"start": {"line": 692, "character": 0}, "end": {"line": 692, "character": 13}}, "detail": "cell_line_loc = '/cellar/users/samsonfong/Projects/tcrp-v2/from-ma/cell_line_lists/'", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 698, "character": 0}, "end": {"line": 700, "character": 0}}, "selectionRange": {"start": {"line": 698, "character": 53}, "end": {"line": 698, "character": 54}}, "detail": "with open('/data/drug_feature/KU-55933/KU', 'rb') as f: tmap= pickle.load(f)", "children": []}, {"name": "tmap", "kind": 13, "range": {"start": {"line": 699, "character": 4}, "end": {"line": 699, "character": 24}}, "selectionRange": {"start": {"line": 699, "character": 4}, "end": {"line": 699, "character": 8}}, "detail": "tmap= pickle.load(f)", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 717, "character": 0}, "end": {"line": 717, "character": 68}}, "selectionRange": {"start": {"line": 717, "character": 0}, "end": {"line": 717, "character": 1}}, "detail": "f = np.load('/data/drug_feature/KU-55933/lung_KU-55933_feature.npy')", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 18, "result": [{"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///root/capsule/code/process_merged.py", "version": 1}, "edits": [{"range": {"start": {"line": 230, "character": 0}, "end": {"line": 230, "character": 0}}, "newText": "def jls_extract_def():\n    "}, {"range": {"start": {"line": 232, "character": 0}, "end": {"line": 232, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 233, "character": 0}, "end": {"line": 233, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 235, "character": 4}, "end": {"line": 235, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 237, "character": 8}, "end": {"line": 237, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 238, "character": 12}, "end": {"line": 238, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 16}}, "newText": "    "}, {"range": {"start": {"line": 240, "character": 12}, "end": {"line": 240, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 241, "character": 0}, "end": {"line": 241, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 242, "character": 8}, "end": {"line": 244, "character": 0}}, "newText": "    drug = drug.strip()\n    \n    "}, {"range": {"start": {"line": 245, "character": 8}, "end": {"line": 245, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 246, "character": 12}, "end": {"line": 246, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 247, "character": 12}, "end": {"line": 248, "character": 0}}, "newText": "    drug_target_list.append(target_list_str.strip())\n    "}, {"range": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 250, "character": 12}, "end": {"line": 250, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 251, "character": 16}, "end": {"line": 251, "character": 16}}, "newText": "    "}, {"range": {"start": {"line": 252, "character": 16}, "end": {"line": 252, "character": 54}}, "newText": "    drug_target_list.append(target.strip())\n    return i, drug, target_list\n\n\ni, drug, target_list = jls_extract_def("}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 19, "result": [{"name": "matplotlib", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 17}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 17}}, "detail": "module matplotlib", "children": []}, {"name": "os", "kind": 2, "range": {"start": {"line": 10, "character": 0}, "end": {"line": 10, "character": 9}}, "selectionRange": {"start": {"line": 10, "character": 7}, "end": {"line": 10, "character": 9}}, "detail": "module os", "children": []}, {"name": "pd", "kind": 2, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 11, "character": 19}}, "selectionRange": {"start": {"line": 11, "character": 17}, "end": {"line": 11, "character": 19}}, "detail": "module pd", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 12, "character": 0}, "end": {"line": 12, "character": 18}}, "selectionRange": {"start": {"line": 12, "character": 16}, "end": {"line": 12, "character": 18}}, "detail": "module np", "children": []}, {"name": "sys", "kind": 2, "range": {"start": {"line": 13, "character": 0}, "end": {"line": 13, "character": 10}}, "selectionRange": {"start": {"line": 13, "character": 7}, "end": {"line": 13, "character": 10}}, "detail": "module sys", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 14, "character": 0}, "end": {"line": 14, "character": 13}}, "selectionRange": {"start": {"line": 14, "character": 7}, "end": {"line": 14, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cdist", "kind": 12, "range": {"start": {"line": 15, "character": 0}, "end": {"line": 15, "character": 40}}, "selectionRange": {"start": {"line": 15, "character": 35}, "end": {"line": 15, "character": 40}}, "detail": "def cdist", "children": []}, {"name": "math", "kind": 2, "range": {"start": {"line": 16, "character": 0}, "end": {"line": 16, "character": 11}}, "selectionRange": {"start": {"line": 16, "character": 7}, "end": {"line": 16, "character": 11}}, "detail": "module math", "children": []}, {"name": "nx", "kind": 2, "range": {"start": {"line": 17, "character": 0}, "end": {"line": 17, "character": 21}}, "selectionRange": {"start": {"line": 17, "character": 19}, "end": {"line": 17, "character": 21}}, "detail": "module nx", "children": []}, {"name": "nxacc", "kind": 2, "range": {"start": {"line": 18, "character": 0}, "end": {"line": 18, "character": 56}}, "selectionRange": {"start": {"line": 18, "character": 51}, "end": {"line": 18, "character": 56}}, "detail": "module nxacc", "children": []}, {"name": "nxadag", "kind": 2, "range": {"start": {"line": 19, "character": 0}, "end": {"line": 19, "character": 40}}, "selectionRange": {"start": {"line": 19, "character": 34}, "end": {"line": 19, "character": 40}}, "detail": "module nxadag", "children": []}, {"name": "plt", "kind": 2, "range": {"start": {"line": 20, "character": 0}, "end": {"line": 20, "character": 31}}, "selectionRange": {"start": {"line": 20, "character": 28}, "end": {"line": 20, "character": 31}}, "detail": "module plt", "children": []}, {"name": "sns", "kind": 2, "range": {"start": {"line": 21, "character": 0}, "end": {"line": 21, "character": 21}}, "selectionRange": {"start": {"line": 21, "character": 18}, "end": {"line": 21, "character": 21}}, "detail": "module sns", "children": []}, {"name": "itertools", "kind": 2, "range": {"start": {"line": 22, "character": 0}, "end": {"line": 22, "character": 16}}, "selectionRange": {"start": {"line": 22, "character": 7}, "end": {"line": 22, "character": 16}}, "detail": "module itertools", "children": []}, {"name": "mygene", "kind": 2, "range": {"start": {"line": 23, "character": 0}, "end": {"line": 23, "character": 13}}, "selectionRange": {"start": {"line": 23, "character": 7}, "end": {"line": 23, "character": 13}}, "detail": "module mygene", "children": []}, {"name": "re", "kind": 2, "range": {"start": {"line": 24, "character": 0}, "end": {"line": 24, "character": 9}}, "selectionRange": {"start": {"line": 24, "character": 7}, "end": {"line": 24, "character": 9}}, "detail": "module re", "children": []}, {"name": "selected_exp_gene_list", "kind": 13, "range": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 95}}, "selectionRange": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 22}}, "detail": "selected_exp_gene_list = pd.read_csv(\"/data/common_exp_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "selected_mut_gene_list", "kind": 13, "range": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 95}}, "selectionRange": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 22}}, "detail": "selected_mut_gene_list = pd.read_csv(\"/data/common_mut_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "load_network", "kind": 12, "range": {"start": {"line": 37, "character": 0}, "end": {"line": 65, "character": 28}}, "selectionRange": {"start": {"line": 37, "character": 4}, "end": {"line": 37, "character": 16}}, "detail": "def load_network", "children": []}, {"name": "load_name_space", "kind": 12, "range": {"start": {"line": 67, "character": 0}, "end": {"line": 79, "character": 21}}, "selectionRange": {"start": {"line": 67, "character": 4}, "end": {"line": 67, "character": 19}}, "detail": "def load_name_space", "children": []}, {"name": "list2index", "kind": 12, "range": {"start": {"line": 81, "character": 0}, "end": {"line": 88, "character": 41}}, "selectionRange": {"start": {"line": 81, "character": 4}, "end": {"line": 81, "character": 14}}, "detail": "def list2index", "children": []}, {"name": "PDTC_data_file", "kind": 13, "range": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 30}}, "selectionRange": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 14}}, "detail": "PDTC_data_file = '/data/PTDC/'", "children": []}, {"name": "PDTC_exp_data_file", "kind": 13, "range": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 60}}, "selectionRange": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 18}}, "detail": "PDTC_exp_data_file = PDTC_data_file + 'ExpressionModels.tsv'", "children": []}, {"name": "PDTC_drug_cell_line_file", "kind": 13, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 72}}, "selectionRange": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 24}}, "detail": "PDTC_drug_cell_line_file = PDTC_data_file + 'DrugResponsesAUCModels.tsv'", "children": []}, {"name": "PDTC_mutation_data_file", "kind": 13, "range": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 59}}, "selectionRange": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 23}}, "detail": "PDTC_mutation_data_file = PDTC_data_file + 'SNVsModels.tsv'", "children": []}, {"name": "PDTC_drug_target_file", "kind": 13, "range": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 47}}, "selectionRange": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 21}}, "detail": "PDTC_drug_target_file ='/data/drug_targets.tsv'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 37}}, "selectionRange": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 46}}, "selectionRange": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "data_file", "kind": 13, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 25}}, "selectionRange": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 9}}, "detail": "data_file = '/data/GDSC/'", "children": []}, {"name": "new_network_file", "kind": 13, "range": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 27}}, "selectionRange": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 16}}, "detail": "new_network_file = '/data/'", "children": []}, {"name": "exp_data_file", "kind": 13, "range": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 61}}, "selectionRange": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 13}}, "detail": "exp_data_file = data_file + 'Cell_line_RMA_proc_basalExp.txt'", "children": []}, {"name": "drug_cell_line_file", "kind": 13, "range": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 64}}, "selectionRange": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 19}}, "detail": "drug_cell_line_file = data_file + 'v17_fitted_dose_response.csv'", "children": []}, {"name": "cell_line_detail_file", "kind": 13, "range": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 60}}, "selectionRange": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 21}}, "detail": "cell_line_detail_file = data_file + 'Cell_Lines_Details.csv'", "children": []}, {"name": "mutation_data_file", "kind": 13, "range": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 51}}, "selectionRange": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 18}}, "detail": "mutation_data_file = data_file + 'WES_variants.csv'", "children": []}, {"name": "drug_target_file", "kind": 13, "range": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 42}}, "selectionRange": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 16}}, "detail": "drug_target_file ='/data/drug_targets.tsv'", "children": []}, {"name": "feature_folder", "kind": 13, "range": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 27}}, "selectionRange": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 14}}, "detail": "feature_folder = 'feature/'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 37}}, "selectionRange": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 46}}, "selectionRange": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 58}}, "selectionRange": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 6}}, "detail": "exp_df = pd.read_csv(exp_data_file, sep='\\t', index_col=0)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 21}}, "selectionRange": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 6}}, "detail": "exp_df = exp_df.T[1:]", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 56}}, "selectionRange": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 6}}, "detail": "exp_df = exp_df.rename(columns={np.nan: 'NO_GENE_NAME'})", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 43}}, "selectionRange": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 6}}, "detail": "exp_df = exp_df.drop('NO_GENE_NAME',axis=1)", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 138, "character": 0}, "end": {"line": 140, "character": 26}}, "selectionRange": {"start": {"line": 138, "character": 4}, "end": {"line": 138, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 142, "character": 0}, "end": {"line": 142, "character": 44}}, "selectionRange": {"start": {"line": 142, "character": 7}, "end": {"line": 142, "character": 12}}, "detail": "exp_df.index = exp_df.index.map(stripNumber)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 40}}, "selectionRange": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 6}}, "detail": "exp_df = exp_df.groupby(level=0).first()", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 39}}, "selectionRange": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 6}}, "detail": "exp_df = exp_df[selected_exp_gene_list]", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 36}}, "selectionRange": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 48}}, "selectionRange": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 78}}, "selectionRange": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 11}}, "detail": "PDTC_exp_df = pd.read_csv(PDTC_exp_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 31}}, "selectionRange": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df.T[1:]", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 160, "character": 0}, "end": {"line": 162, "character": 26}}, "selectionRange": {"start": {"line": 160, "character": 4}, "end": {"line": 160, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 49}}, "selectionRange": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df[selected_exp_gene_list]", "children": []}, {"name": "PDTC_exp_gene_list", "kind": 13, "range": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 46}}, "selectionRange": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 18}}, "detail": "PDTC_exp_gene_list = list(PDTC_exp_df.columns)", "children": []}, {"name": "PDTC_exp_cell_line_list", "kind": 13, "range": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 58}}, "selectionRange": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 23}}, "detail": "PDTC_exp_cell_line_list = list(PDTC_exp_df.index.unique())", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 40}}, "selectionRange": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 6}}, "detail": "exp_df = pd.concat([exp_df,PDTC_exp_df])", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 36}}, "selectionRange": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 48}}, "selectionRange": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "maf", "kind": 13, "range": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 69}}, "selectionRange": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 3}}, "detail": "maf = pd.read_csv(mutation_data_file, sep=',', index_col=0).fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 75}}, "selectionRange": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 11}}, "detail": "mutation_df = maf.groupby(['COSMIC_ID', 'Gene']).size().unstack().fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 49}}, "selectionRange": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 11}}, "detail": "mutation_df = mutation_df[selected_mut_gene_list]", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 46}}, "selectionRange": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 58}}, "selectionRange": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "PDTC_maf", "kind": 13, "range": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 80}}, "selectionRange": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 8}}, "detail": "PDTC_maf = pd.read_csv(PDTC_mutation_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 61}}, "selectionRange": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_maf.replace(to_replace=\"NO\",value=0.0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 82}}, "selectionRange": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_mutation_df.replace(to_replace=\"chr*\",value=1.0,regex=True)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 47}}, "selectionRange": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df.transpose()", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 59}}, "selectionRange": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df[selected_mut_gene_list]", "children": []}, {"name": "PDTC_mutation_gene_list", "kind": 13, "range": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 56}}, "selectionRange": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 23}}, "detail": "PDTC_mutation_gene_list = list(PDTC_mutation_df.columns)", "children": []}, {"name": "PDTC_mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 68}}, "selectionRange": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 28}}, "detail": "PDTC_mutation_cell_line_list = list(PDTC_mutation_df.index.unique())", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 55}}, "selectionRange": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 11}}, "detail": "mutation_df = pd.concat([mutation_df,PDTC_mutation_df])", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 46}}, "selectionRange": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 58}}, "selectionRange": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 36}}, "selectionRange": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 11}}, "detail": "file_handle = open(drug_target_file)", "children": []}, {"name": "drug_target_map", "kind": 13, "range": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 20}}, "selectionRange": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 15}}, "detail": "drug_target_map = {}", "children": []}, {"name": "drug_target_list", "kind": 13, "range": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 21}}, "selectionRange": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 16}}, "detail": "drug_target_list = []", "children": []}, {"name": "line", "kind": 13, "range": {"start": {"line": 230, "character": 0}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 230, "character": 4}, "end": {"line": 230, "character": 8}}, "detail": "for line in file_handle: new_line = line.rstrip().split(\"\\t\") drug = new_line[0] target_list=new_line[1].split(',') if drug != \"Drug\": target_list_str = \"\" for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\" drug = drug.strip() drug_target_map[drug] = [] if ',' not in target_list_str: drug_target_map[drug].append(target_list_str.strip()) drug_target_list.append(target_list_str.strip()) else: target_list = target_list_str.split(',') for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "new_line", "kind": 13, "range": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 40}}, "selectionRange": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 12}}, "detail": "new_line = line.rstrip().split(\"\\t\")", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 22}}, "selectionRange": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 8}}, "detail": "drug = new_line[0]", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 38}}, "selectionRange": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 15}}, "detail": "target_list=new_line[1].split(',')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 28}}, "selectionRange": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 23}}, "detail": "target_list_str = \"\"", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 237, "character": 8}, "end": {"line": 242, "character": 0}}, "selectionRange": {"start": {"line": 237, "character": 12}, "end": {"line": 237, "character": 13}}, "detail": "for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 65}}, "selectionRange": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 71}}, "selectionRange": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 27}}, "selectionRange": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 12}}, "detail": "drug = drug.strip()", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 52}}, "selectionRange": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 23}}, "detail": "target_list = target_list_str.split(',')", "children": []}, {"name": "target", "kind": 13, "range": {"start": {"line": 250, "character": 12}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 250, "character": 16}, "end": {"line": 250, "character": 22}}, "detail": "for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "drugs_legend", "kind": 13, "range": {"start": {"line": 261, "character": 0}, "end": {"line": 261, "character": 85}}, "selectionRange": {"start": {"line": 261, "character": 0}, "end": {"line": 261, "character": 12}}, "detail": "drugs_legend = pd.read_csv('/data/GDSC/Screened_Compounds.csv', sep=',', index_col=0)", "children": []}, {"name": "drug2id_mapping", "kind": 13, "range": {"start": {"line": 263, "character": 0}, "end": {"line": 263, "character": 20}}, "selectionRange": {"start": {"line": 263, "character": 0}, "end": {"line": 263, "character": 15}}, "detail": "drug2id_mapping = {}", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 265, "character": 0}, "end": {"line": 268, "character": 0}}, "selectionRange": {"start": {"line": 265, "character": 4}, "end": {"line": 265, "character": 9}}, "detail": "for index in list(drugs_legend.index) : drug_name = drugs_legend.loc[index,'Drug Name'] drug2id_mapping[ drug_name ] = index", "children": []}, {"name": "drug_name", "kind": 13, "range": {"start": {"line": 266, "character": 4}, "end": {"line": 266, "character": 51}}, "selectionRange": {"start": {"line": 266, "character": 4}, "end": {"line": 266, "character": 13}}, "detail": "drug_name = drugs_legend.loc[index,'Drug Name']", "children": []}, {"name": "valid_gene_list", "kind": 13, "range": {"start": {"line": 273, "character": 0}, "end": {"line": 273, "character": 92}}, "selectionRange": {"start": {"line": 273, "character": 0}, "end": {"line": 273, "character": 15}}, "detail": "valid_gene_list = list(set(drug_target_list) | set(exp_gene_list) | set(mutation_gene_list))", "children": []}, {"name": "network_list", "kind": 13, "range": {"start": {"line": 279, "character": 0}, "end": {"line": 279, "character": 82}}, "selectionRange": {"start": {"line": 279, "character": 0}, "end": {"line": 279, "character": 12}}, "detail": "network_list = [new_network_file+inbiomap_file, new_network_file+pathwaycomm_file]", "children": []}, {"name": "gene_neighbor_map", "kind": 13, "range": {"start": {"line": 280, "character": 0}, "end": {"line": 280, "character": 64}}, "selectionRange": {"start": {"line": 280, "character": 0}, "end": {"line": 280, "character": 17}}, "detail": "gene_neighbor_map = load_network(network_list, valid_gene_list)", "children": []}, {"name": "gene_name_df", "kind": 13, "range": {"start": {"line": 286, "character": 0}, "end": {"line": 286, "character": 89}}, "selectionRange": {"start": {"line": 286, "character": 0}, "end": {"line": 286, "character": 12}}, "detail": "gene_name_df = pd.read_table('/data/HUGO_protein-coding_gene.tsv',index_col=25, sep='\\t')", "children": []}, {"name": "gene_name_map", "kind": 13, "range": {"start": {"line": 292, "character": 0}, "end": {"line": 292, "character": 18}}, "selectionRange": {"start": {"line": 292, "character": 0}, "end": {"line": 292, "character": 13}}, "detail": "gene_name_map = {}", "children": []}, {"name": "uniprot_gene", "kind": 13, "range": {"start": {"line": 294, "character": 0}, "end": {"line": 303, "character": 0}}, "selectionRange": {"start": {"line": 294, "character": 4}, "end": {"line": 294, "character": 16}}, "detail": "for uniprot_gene in gene_name_df.index: if isinstance(uniprot_gene, type('aaa')) == False: continue if isinstance(gene_name_df.loc[uniprot_gene, 'symbol'], type('aaa')) == False: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol'][0] else: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 308, "character": 0}, "end": {"line": 308, "character": 76}}, "selectionRange": {"start": {"line": 308, "character": 0}, "end": {"line": 308, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "uniprot_gene_set", "kind": 13, "range": {"start": {"line": 310, "character": 0}, "end": {"line": 310, "character": 24}}, "selectionRange": {"start": {"line": 310, "character": 0}, "end": {"line": 310, "character": 16}}, "detail": "uniprot_gene_set = set()", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 312, "character": 0}, "end": {"line": 321, "character": 0}}, "selectionRange": {"start": {"line": 312, "character": 4}, "end": {"line": 312, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 317, "character": 4}, "end": {"line": 317, "character": 74}}, "selectionRange": {"start": {"line": 317, "character": 4}, "end": {"line": 317, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 319, "character": 4}, "end": {"line": 321, "character": 0}}, "selectionRange": {"start": {"line": 319, "character": 8}, "end": {"line": 319, "character": 12}}, "detail": "for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "query_gene_set", "kind": 13, "range": {"start": {"line": 324, "character": 0}, "end": {"line": 324, "character": 19}}, "selectionRange": {"start": {"line": 324, "character": 0}, "end": {"line": 324, "character": 14}}, "detail": "query_gene_set = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 326, "character": 0}, "end": {"line": 329, "character": 0}}, "selectionRange": {"start": {"line": 326, "character": 4}, "end": {"line": 326, "character": 8}}, "detail": "for gene in uniprot_gene_set: if gene not in gene_name_map: query_gene_set.append(gene)", "children": []}, {"name": "query_gene_list", "kind": 13, "range": {"start": {"line": 332, "character": 0}, "end": {"line": 332, "character": 38}}, "selectionRange": {"start": {"line": 332, "character": 0}, "end": {"line": 332, "character": 15}}, "detail": "query_gene_list = list(query_gene_set)", "children": []}, {"name": "mg", "kind": 13, "range": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 24}}, "selectionRange": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 2}}, "detail": "mg = mygene.MyGeneInfo()", "children": []}, {"name": "out", "kind": 13, "range": {"start": {"line": 335, "character": 0}, "end": {"line": 335, "character": 87}}, "selectionRange": {"start": {"line": 335, "character": 0}, "end": {"line": 335, "character": 3}}, "detail": "out = mg.querymany(query_gene_list, scopes='uniprot', fields='symbol', species='human')", "children": []}, {"name": "not_found_gene_list", "kind": 13, "range": {"start": {"line": 337, "character": 0}, "end": {"line": 337, "character": 24}}, "selectionRange": {"start": {"line": 337, "character": 0}, "end": {"line": 337, "character": 19}}, "detail": "not_found_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 339, "character": 0}, "end": {"line": 344, "character": 0}}, "selectionRange": {"start": {"line": 339, "character": 4}, "end": {"line": 339, "character": 5}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 339, "character": 0}, "end": {"line": 344, "character": 0}}, "selectionRange": {"start": {"line": 339, "character": 7}, "end": {"line": 339, "character": 11}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 351, "character": 0}, "end": {"line": 351, "character": 76}}, "selectionRange": {"start": {"line": 351, "character": 0}, "end": {"line": 351, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 353, "character": 0}, "end": {"line": 375, "character": 0}}, "selectionRange": {"start": {"line": 353, "character": 4}, "end": {"line": 353, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') complex_symbol_list = [] for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] ) for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 358, "character": 4}, "end": {"line": 358, "character": 74}}, "selectionRange": {"start": {"line": 358, "character": 4}, "end": {"line": 358, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "complex_symbol_list", "kind": 13, "range": {"start": {"line": 360, "character": 4}, "end": {"line": 360, "character": 28}}, "selectionRange": {"start": {"line": 360, "character": 4}, "end": {"line": 360, "character": 23}}, "detail": "complex_symbol_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 362, "character": 4}, "end": {"line": 365, "character": 0}}, "selectionRange": {"start": {"line": 362, "character": 8}, "end": {"line": 362, "character": 12}}, "detail": "for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] )", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 366, "character": 4}, "end": {"line": 375, "character": 0}}, "selectionRange": {"start": {"line": 366, "character": 8}, "end": {"line": 366, "character": 13}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 366, "character": 4}, "end": {"line": 375, "character": 0}}, "selectionRange": {"start": {"line": 366, "character": 15}, "end": {"line": 366, "character": 20}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene_exp_neighbor_map", "kind": 13, "range": {"start": {"line": 380, "character": 0}, "end": {"line": 380, "character": 26}}, "selectionRange": {"start": {"line": 380, "character": 0}, "end": {"line": 380, "character": 21}}, "detail": "gene_exp_neighbor_map = {}", "children": []}, {"name": "exp_matrix", "kind": 13, "range": {"start": {"line": 381, "character": 0}, "end": {"line": 381, "character": 26}}, "selectionRange": {"start": {"line": 381, "character": 0}, "end": {"line": 381, "character": 10}}, "detail": "exp_matrix = exp_df.values", "children": []}, {"name": "P", "kind": 13, "range": {"start": {"line": 383, "character": 0}, "end": {"line": 383, "character": 79}}, "selectionRange": {"start": {"line": 383, "character": 0}, "end": {"line": 383, "character": 1}}, "detail": "P = 1 - cdist(np.transpose(exp_matrix), np.transpose(exp_matrix),'correlation')", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 385, "character": 0}, "end": {"line": 399, "character": 0}}, "selectionRange": {"start": {"line": 385, "character": 4}, "end": {"line": 385, "character": 5}}, "detail": "for i in range(len(exp_gene_list)): gene1 = exp_gene_list[i] gene_exp_neighbor_map[gene1] = set() for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2) if gene1 not in gene_exp_neighbor_map[gene1]: print (gene1, 'not in itself?', P[i,i])", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 387, "character": 4}, "end": {"line": 387, "character": 28}}, "selectionRange": {"start": {"line": 387, "character": 4}, "end": {"line": 387, "character": 9}}, "detail": "gene1 = exp_gene_list[i]", "children": []}, {"name": "j", "kind": 13, "range": {"start": {"line": 390, "character": 4}, "end": {"line": 396, "character": 0}}, "selectionRange": {"start": {"line": 390, "character": 8}, "end": {"line": 390, "character": 9}}, "detail": "for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 392, "character": 8}, "end": {"line": 392, "character": 32}}, "selectionRange": {"start": {"line": 392, "character": 8}, "end": {"line": 392, "character": 13}}, "detail": "gene2 = exp_gene_list[j]", "children": []}, {"name": "drug_feature_list", "kind": 13, "range": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 22}}, "selectionRange": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 17}}, "detail": "drug_feature_list = []", "children": []}, {"name": "drug_neighbor_map", "kind": 13, "range": {"start": {"line": 408, "character": 0}, "end": {"line": 408, "character": 22}}, "selectionRange": {"start": {"line": 408, "character": 0}, "end": {"line": 408, "character": 17}}, "detail": "drug_neighbor_map = {}", "children": []}, {"name": "selected_drug_list", "kind": 13, "range": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 23}}, "selectionRange": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 18}}, "detail": "selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 411, "character": 0}, "end": {"line": 428, "character": 0}}, "selectionRange": {"start": {"line": 411, "character": 4}, "end": {"line": 411, "character": 8}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 411, "character": 0}, "end": {"line": 428, "character": 0}}, "selectionRange": {"start": {"line": 411, "character": 10}, "end": {"line": 411, "character": 21}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 414, "character": 8}, "end": {"line": 424, "character": 0}}, "selectionRange": {"start": {"line": 414, "character": 12}, "end": {"line": 414, "character": 16}}, "detail": "for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene]", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 442, "character": 0}, "end": {"line": 442, "character": 52}}, "selectionRange": {"start": {"line": 442, "character": 0}, "end": {"line": 442, "character": 5}}, "detail": "drugs = pd.read_csv(drug_cell_line_file,index_col=2)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 443, "character": 0}, "end": {"line": 443, "character": 93}}, "selectionRange": {"start": {"line": 443, "character": 0}, "end": {"line": 443, "character": 5}}, "detail": "drugs = drugs.drop([\"DATASET_VERSION\",\"IC50_RESULTS_ID\",\"MAX_CONC_MICROMOLAR\",\"RMSE\"],axis=1)", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 444, "character": 0}, "end": {"line": 444, "character": 49}}, "selectionRange": {"start": {"line": 444, "character": 0}, "end": {"line": 444, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 446, "character": 0}, "end": {"line": 446, "character": 28}}, "selectionRange": {"start": {"line": 446, "character": 0}, "end": {"line": 446, "character": 9}}, "detail": "drug_list = drugs[\"DRUG_ID\"]", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 447, "character": 0}, "end": {"line": 447, "character": 16}}, "selectionRange": {"start": {"line": 447, "character": 0}, "end": {"line": 447, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 457, "character": 0}, "end": {"line": 457, "character": 71}}, "selectionRange": {"start": {"line": 457, "character": 0}, "end": {"line": 457, "character": 10}}, "detail": "PDTC_drugs = pd.read_csv(PDTC_drug_cell_line_file,sep='\\t',index_col=0)", "children": []}, {"name": "PDTC_drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 458, "character": 0}, "end": {"line": 458, "character": 59}}, "selectionRange": {"start": {"line": 458, "character": 0}, "end": {"line": 458, "character": 25}}, "detail": "PDTC_drugs_cell_line_list = list(PDTC_drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 460, "character": 0}, "end": {"line": 460, "character": 39}}, "selectionRange": {"start": {"line": 460, "character": 0}, "end": {"line": 460, "character": 9}}, "detail": "drug_list = PDTC_drugs[\"Drug\"].tolist()", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 461, "character": 0}, "end": {"line": 461, "character": 16}}, "selectionRange": {"start": {"line": 461, "character": 0}, "end": {"line": 461, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 462, "character": 0}, "end": {"line": 467, "character": 0}}, "selectionRange": {"start": {"line": 462, "character": 4}, "end": {"line": 462, "character": 5}}, "detail": "for i in drug_list: if i in drug2id_mapping.keys(): new_drug_id.append(drug2id_mapping[i]) else: new_drug_id.append(0)", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 84}}, "selectionRange": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 10}}, "detail": "PDTC_drugs = PDTC_drugs.drop([\"Drug\",\"iC50\",\"D1_CONC\",\"D5_CONC\",\"perc.iC50\"],axis=1)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 477, "character": 0}, "end": {"line": 477, "character": 37}}, "selectionRange": {"start": {"line": 477, "character": 0}, "end": {"line": 477, "character": 5}}, "detail": "drugs = pd.concat([drugs,PDTC_drugs])", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 49}}, "selectionRange": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "cell_line_list", "kind": 13, "range": {"start": {"line": 490, "character": 0}, "end": {"line": 490, "character": 102}}, "selectionRange": {"start": {"line": 490, "character": 0}, "end": {"line": 490, "character": 14}}, "detail": "cell_line_list = list(set(drugs_cell_line_list)&set(exp_cell_line_list)&set(mutation_cell_line_list) )", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 497, "character": 0}, "end": {"line": 497, "character": 66}}, "selectionRange": {"start": {"line": 497, "character": 0}, "end": {"line": 497, "character": 16}}, "detail": "cell_line_legend = pd.read_csv(cell_line_detail_file, index_col=1)", "children": []}, {"name": "PDTC_cell_line", "kind": 13, "range": {"start": {"line": 498, "character": 0}, "end": {"line": 498, "character": 206}}, "selectionRange": {"start": {"line": 498, "character": 0}, "end": {"line": 498, "character": 14}}, "detail": "PDTC_cell_line = pd.DataFrame({'Line': [\"BRCA\"]*len(PDTC_exp_cell_line_list), 'Site':[\"PDTC\"]*len(PDTC_exp_cell_line_list),\"Histology\":[\"breast\"]*len(PDTC_exp_cell_line_list)},index=PDTC_exp_cell_line_list)", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 499, "character": 0}, "end": {"line": 499, "character": 63}}, "selectionRange": {"start": {"line": 499, "character": 0}, "end": {"line": 499, "character": 16}}, "detail": "cell_line_legend = pd.concat([cell_line_legend,PDTC_cell_line])", "children": []}, {"name": "tissue_map", "kind": 13, "range": {"start": {"line": 502, "character": 0}, "end": {"line": 502, "character": 15}}, "selectionRange": {"start": {"line": 502, "character": 0}, "end": {"line": 502, "character": 10}}, "detail": "tissue_map = {}", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 504, "character": 0}, "end": {"line": 512, "character": 0}}, "selectionRange": {"start": {"line": 504, "character": 4}, "end": {"line": 504, "character": 13}}, "detail": "for cell_line in cell_line_list: tissue = cell_line_legend.loc[cell_line,'Site'] if tissue not in tissue_map: tissue_map[tissue] = [] tissue_map[tissue].append(cell_line)", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 506, "character": 4}, "end": {"line": 506, "character": 51}}, "selectionRange": {"start": {"line": 506, "character": 4}, "end": {"line": 506, "character": 10}}, "detail": "tissue = cell_line_legend.loc[cell_line,'Site']", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 513, "character": 0}, "end": {"line": 513, "character": 23}}, "selectionRange": {"start": {"line": 513, "character": 0}, "end": {"line": 513, "character": 19}}, "detail": "large_tissue_number = 0", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 514, "character": 0}, "end": {"line": 520, "character": 0}}, "selectionRange": {"start": {"line": 514, "character": 4}, "end": {"line": 514, "character": 10}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 514, "character": 0}, "end": {"line": 520, "character": 0}}, "selectionRange": {"start": {"line": 514, "character": 12}, "end": {"line": 514, "character": 21}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 517, "character": 8}, "end": {"line": 517, "character": 32}}, "selectionRange": {"start": {"line": 517, "character": 8}, "end": {"line": 517, "character": 27}}, "detail": "large_tissue_number += 1", "children": []}, {"name": "new_exp_gene_list", "kind": 13, "range": {"start": {"line": 540, "character": 0}, "end": {"line": 540, "character": 22}}, "selectionRange": {"start": {"line": 540, "character": 0}, "end": {"line": 540, "character": 17}}, "detail": "new_exp_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 541, "character": 0}, "end": {"line": 544, "character": 0}}, "selectionRange": {"start": {"line": 541, "character": 4}, "end": {"line": 541, "character": 5}}, "detail": "for i in exp_gene_list: if i in valid_gene_list: new_exp_gene_list.append(i)", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 549, "character": 0}, "end": {"line": 549, "character": 41}}, "selectionRange": {"start": {"line": 549, "character": 0}, "end": {"line": 549, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 550, "character": 0}, "end": {"line": 550, "character": 38}}, "selectionRange": {"start": {"line": 550, "character": 0}, "end": {"line": 550, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 551, "character": 0}, "end": {"line": 551, "character": 72}}, "selectionRange": {"start": {"line": 551, "character": 0}, "end": {"line": 551, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 553, "character": 0}, "end": {"line": 553, "character": 43}}, "selectionRange": {"start": {"line": 553, "character": 0}, "end": {"line": 553, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 554, "character": 0}, "end": {"line": 554, "character": 68}}, "selectionRange": {"start": {"line": 554, "character": 0}, "end": {"line": 554, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 561, "character": 0}, "end": {"line": 561, "character": 58}}, "selectionRange": {"start": {"line": 561, "character": 0}, "end": {"line": 561, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 562, "character": 0}, "end": {"line": 562, "character": 68}}, "selectionRange": {"start": {"line": 562, "character": 0}, "end": {"line": 562, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "new_data_file", "kind": 13, "range": {"start": {"line": 571, "character": 0}, "end": {"line": 571, "character": 18}}, "selectionRange": {"start": {"line": 571, "character": 0}, "end": {"line": 571, "character": 13}}, "detail": "new_data_file = ''", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 41}}, "selectionRange": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 38}}, "selectionRange": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 72}}, "selectionRange": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 43}}, "selectionRange": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 68}}, "selectionRange": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 58}}, "selectionRange": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 68}}, "selectionRange": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "rename_selected_drug_list", "kind": 13, "range": {"start": {"line": 592, "character": 0}, "end": {"line": 592, "character": 30}}, "selectionRange": {"start": {"line": 592, "character": 0}, "end": {"line": 592, "character": 25}}, "detail": "rename_selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 594, "character": 0}, "end": {"line": 664, "character": 0}}, "selectionRange": {"start": {"line": 594, "character": 4}, "end": {"line": 594, "character": 8}}, "detail": "for drug in selected_drug_list: print(drug) if drug not in drug2id_mapping: print('drug name wrong', drug) else: cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]] feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) ) feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) ) print(len(feature_exp_gene_list) + len(feature_mut_gene_list)) if len(feature_exp_gene_list) + len(feature_mut_gene_list) == 0: continue feature_description = [] drug_tissue_map = {} drug = drug.replace(' ','_') rename_selected_drug_list.append(drug) if drug == 'Nutlin-3a_(-)': drug = 'Nutlin-3a' drug_folder = '/data/merged/drug_feature/' + drug + '/' if not os.path.exists(drug_folder): os.makedirs(drug_folder) for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description)) file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\") pickle.dump(drug_tissue_map,file_handle) file_handle.close()", "children": []}, {"name": "cell_line_drug_matrix", "kind": 13, "range": {"start": {"line": 602, "character": 8}, "end": {"line": 602, "character": 84}}, "selectionRange": {"start": {"line": 602, "character": 8}, "end": {"line": 602, "character": 29}}, "detail": "cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]]", "children": []}, {"name": "feature_exp_gene_list", "kind": 13, "range": {"start": {"line": 607, "character": 8}, "end": {"line": 607, "character": 98}}, "selectionRange": {"start": {"line": 607, "character": 8}, "end": {"line": 607, "character": 29}}, "detail": "feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) )", "children": []}, {"name": "feature_mut_gene_list", "kind": 13, "range": {"start": {"line": 608, "character": 8}, "end": {"line": 608, "character": 98}}, "selectionRange": {"start": {"line": 608, "character": 8}, "end": {"line": 608, "character": 29}}, "detail": "feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) )", "children": []}, {"name": "feature_description", "kind": 13, "range": {"start": {"line": 612, "character": 8}, "end": {"line": 612, "character": 32}}, "selectionRange": {"start": {"line": 612, "character": 8}, "end": {"line": 612, "character": 27}}, "detail": "feature_description = []", "children": []}, {"name": "drug_tissue_map", "kind": 13, "range": {"start": {"line": 614, "character": 8}, "end": {"line": 614, "character": 28}}, "selectionRange": {"start": {"line": 614, "character": 8}, "end": {"line": 614, "character": 23}}, "detail": "drug_tissue_map = {}", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 616, "character": 8}, "end": {"line": 616, "character": 36}}, "selectionRange": {"start": {"line": 616, "character": 8}, "end": {"line": 616, "character": 12}}, "detail": "drug = drug.replace(' ','_')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 622, "character": 12}, "end": {"line": 622, "character": 30}}, "selectionRange": {"start": {"line": 622, "character": 12}, "end": {"line": 622, "character": 16}}, "detail": "drug = 'Nutlin-3a'", "children": []}, {"name": "drug_folder", "kind": 13, "range": {"start": {"line": 624, "character": 8}, "end": {"line": 624, "character": 63}}, "selectionRange": {"start": {"line": 624, "character": 8}, "end": {"line": 624, "character": 19}}, "detail": "drug_folder = '/data/merged/drug_feature/' + drug + '/'", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 630, "character": 8}, "end": {"line": 660, "character": 0}}, "selectionRange": {"start": {"line": 630, "character": 12}, "end": {"line": 630, "character": 18}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "tissue_cell_line_list", "kind": 13, "range": {"start": {"line": 630, "character": 8}, "end": {"line": 660, "character": 0}}, "selectionRange": {"start": {"line": 630, "character": 20}, "end": {"line": 630, "character": 41}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 633, "character": 12}, "end": {"line": 633, "character": 103}}, "selectionRange": {"start": {"line": 633, "character": 12}, "end": {"line": 633, "character": 35}}, "detail": "drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list )", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 634, "character": 12}, "end": {"line": 634, "character": 67}}, "selectionRange": {"start": {"line": 634, "character": 12}, "end": {"line": 634, "character": 35}}, "detail": "drug_specific_cell_line = list(drug_specific_cell_line)", "children": []}, {"name": "feature_list", "kind": 13, "range": {"start": {"line": 637, "character": 12}, "end": {"line": 637, "character": 29}}, "selectionRange": {"start": {"line": 637, "character": 12}, "end": {"line": 637, "character": 24}}, "detail": "feature_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 641, "character": 16}, "end": {"line": 643, "character": 0}}, "selectionRange": {"start": {"line": 641, "character": 20}, "end": {"line": 641, "character": 24}}, "detail": "for gene in feature_exp_gene_list: feature_description.append(gene+'_expression')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 646, "character": 16}, "end": {"line": 648, "character": 0}}, "selectionRange": {"start": {"line": 646, "character": 20}, "end": {"line": 646, "character": 24}}, "detail": "for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation')", "children": []}, {"name": "feature", "kind": 13, "range": {"start": {"line": 649, "character": 12}, "end": {"line": 649, "character": 58}}, "selectionRange": {"start": {"line": 649, "character": 12}, "end": {"line": 649, "character": 19}}, "detail": "feature = np.concatenate(feature_list, axis=1)", "children": []}, {"name": "label", "kind": 13, "range": {"start": {"line": 651, "character": 12}, "end": {"line": 651, "character": 88}}, "selectionRange": {"start": {"line": 651, "character": 12}, "end": {"line": 651, "character": 17}}, "detail": "label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 661, "character": 8}, "end": {"line": 661, "character": 84}}, "selectionRange": {"start": {"line": 661, "character": 8}, "end": {"line": 661, "character": 19}}, "detail": "file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\")", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 665, "character": 0}, "end": {"line": 665, "character": 52}}, "selectionRange": {"start": {"line": 665, "character": 0}, "end": {"line": 665, "character": 11}}, "detail": "file_handle = open('rename_selected_drug_list', 'w')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 666, "character": 0}, "end": {"line": 668, "character": 0}}, "selectionRange": {"start": {"line": 666, "character": 4}, "end": {"line": 666, "character": 8}}, "detail": "for drug in rename_selected_drug_list: file_handle.writelines(drug+ '\\n')", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 686, "character": 0}, "end": {"line": 686, "character": 13}}, "selectionRange": {"start": {"line": 686, "character": 7}, "end": {"line": 686, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cell_line_loc", "kind": 13, "range": {"start": {"line": 692, "character": 0}, "end": {"line": 692, "character": 84}}, "selectionRange": {"start": {"line": 692, "character": 0}, "end": {"line": 692, "character": 13}}, "detail": "cell_line_loc = '/cellar/users/samsonfong/Projects/tcrp-v2/from-ma/cell_line_lists/'", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 698, "character": 0}, "end": {"line": 700, "character": 0}}, "selectionRange": {"start": {"line": 698, "character": 53}, "end": {"line": 698, "character": 54}}, "detail": "with open('/data/drug_feature/KU-55933/KU', 'rb') as f: tmap= pickle.load(f)", "children": []}, {"name": "tmap", "kind": 13, "range": {"start": {"line": 699, "character": 4}, "end": {"line": 699, "character": 24}}, "selectionRange": {"start": {"line": 699, "character": 4}, "end": {"line": 699, "character": 8}}, "detail": "tmap= pickle.load(f)", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 717, "character": 0}, "end": {"line": 717, "character": 68}}, "selectionRange": {"start": {"line": 717, "character": 0}, "end": {"line": 717, "character": 1}}, "detail": "f = np.load('/data/drug_feature/KU-55933/lung_KU-55933_feature.npy')", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 20, "result": [{"title": "Inline variable", "kind": "refactor.inline", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///root/capsule/code/process_merged.py", "version": 1}, "edits": [{"range": {"start": {"line": 261, "character": 0}, "end": {"line": 261, "character": 15}}, "newText": "\ndrug2id_mapping = {}\n\nfor index in list(("}, {"range": {"start": {"line": 261, "character": 85}, "end": {"line": 265, "character": 30}}, "newText": ")"}, {"range": {"start": {"line": 266, "character": 16}, "end": {"line": 266, "character": 28}}, "newText": "(pd.read_csv('/data/GDSC/Screened_Compounds.csv', sep=',', index_col=0))"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 21, "result": [{"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///root/capsule/code/process_merged.py", "version": 1}, "edits": [{"range": {"start": {"line": 228, "character": 1}, "end": {"line": 228, "character": 1}}, "newText": "ef jls_extract_def():\n    d"}, {"range": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 230, "character": 0}, "end": {"line": 230, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 232, "character": 0}, "end": {"line": 232, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 233, "character": 0}, "end": {"line": 233, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 235, "character": 4}, "end": {"line": 235, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 237, "character": 8}, "end": {"line": 237, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 238, "character": 12}, "end": {"line": 238, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 16}}, "newText": "    "}, {"range": {"start": {"line": 240, "character": 12}, "end": {"line": 240, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 241, "character": 0}, "end": {"line": 241, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 242, "character": 8}, "end": {"line": 244, "character": 0}}, "newText": "    drug = drug.strip()\n    \n    "}, {"range": {"start": {"line": 245, "character": 8}, "end": {"line": 245, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 246, "character": 12}, "end": {"line": 246, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 247, "character": 12}, "end": {"line": 248, "character": 0}}, "newText": "    drug_target_list.append(target_list_str.strip())\n    "}, {"range": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 250, "character": 12}, "end": {"line": 250, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 251, "character": 16}, "end": {"line": 251, "character": 16}}, "newText": "    "}, {"range": {"start": {"line": 252, "character": 16}, "end": {"line": 253, "character": 0}}, "newText": "    drug_target_list.append(target.strip())\n    \n    return drug_target_list, i, drug_target_map, drug, target_list\n\n\ndrug_target_list, i, drug_target_map, drug, target_list = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 22, "result": [{"uri": "file:///root/capsule/code/process_merged.py", "range": {"start": {"line": 244, "character": 8}, "end": {"line": 244, "character": 23}}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 23, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 24, "result": [{"uri": "file:///root/capsule/code/process_merged.py", "range": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 31}}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///root/capsule/code/process_merged.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 25, "result": [{"name": "matplotlib", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 17}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 17}}, "detail": "module matplotlib", "children": []}, {"name": "os", "kind": 2, "range": {"start": {"line": 10, "character": 0}, "end": {"line": 10, "character": 9}}, "selectionRange": {"start": {"line": 10, "character": 7}, "end": {"line": 10, "character": 9}}, "detail": "module os", "children": []}, {"name": "pd", "kind": 2, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 11, "character": 19}}, "selectionRange": {"start": {"line": 11, "character": 17}, "end": {"line": 11, "character": 19}}, "detail": "module pd", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 12, "character": 0}, "end": {"line": 12, "character": 18}}, "selectionRange": {"start": {"line": 12, "character": 16}, "end": {"line": 12, "character": 18}}, "detail": "module np", "children": []}, {"name": "sys", "kind": 2, "range": {"start": {"line": 13, "character": 0}, "end": {"line": 13, "character": 10}}, "selectionRange": {"start": {"line": 13, "character": 7}, "end": {"line": 13, "character": 10}}, "detail": "module sys", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 14, "character": 0}, "end": {"line": 14, "character": 13}}, "selectionRange": {"start": {"line": 14, "character": 7}, "end": {"line": 14, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cdist", "kind": 12, "range": {"start": {"line": 15, "character": 0}, "end": {"line": 15, "character": 40}}, "selectionRange": {"start": {"line": 15, "character": 35}, "end": {"line": 15, "character": 40}}, "detail": "def cdist", "children": []}, {"name": "math", "kind": 2, "range": {"start": {"line": 16, "character": 0}, "end": {"line": 16, "character": 11}}, "selectionRange": {"start": {"line": 16, "character": 7}, "end": {"line": 16, "character": 11}}, "detail": "module math", "children": []}, {"name": "nx", "kind": 2, "range": {"start": {"line": 17, "character": 0}, "end": {"line": 17, "character": 21}}, "selectionRange": {"start": {"line": 17, "character": 19}, "end": {"line": 17, "character": 21}}, "detail": "module nx", "children": []}, {"name": "nxacc", "kind": 2, "range": {"start": {"line": 18, "character": 0}, "end": {"line": 18, "character": 56}}, "selectionRange": {"start": {"line": 18, "character": 51}, "end": {"line": 18, "character": 56}}, "detail": "module nxacc", "children": []}, {"name": "nxadag", "kind": 2, "range": {"start": {"line": 19, "character": 0}, "end": {"line": 19, "character": 40}}, "selectionRange": {"start": {"line": 19, "character": 34}, "end": {"line": 19, "character": 40}}, "detail": "module nxadag", "children": []}, {"name": "plt", "kind": 2, "range": {"start": {"line": 20, "character": 0}, "end": {"line": 20, "character": 31}}, "selectionRange": {"start": {"line": 20, "character": 28}, "end": {"line": 20, "character": 31}}, "detail": "module plt", "children": []}, {"name": "sns", "kind": 2, "range": {"start": {"line": 21, "character": 0}, "end": {"line": 21, "character": 21}}, "selectionRange": {"start": {"line": 21, "character": 18}, "end": {"line": 21, "character": 21}}, "detail": "module sns", "children": []}, {"name": "itertools", "kind": 2, "range": {"start": {"line": 22, "character": 0}, "end": {"line": 22, "character": 16}}, "selectionRange": {"start": {"line": 22, "character": 7}, "end": {"line": 22, "character": 16}}, "detail": "module itertools", "children": []}, {"name": "mygene", "kind": 2, "range": {"start": {"line": 23, "character": 0}, "end": {"line": 23, "character": 13}}, "selectionRange": {"start": {"line": 23, "character": 7}, "end": {"line": 23, "character": 13}}, "detail": "module mygene", "children": []}, {"name": "re", "kind": 2, "range": {"start": {"line": 24, "character": 0}, "end": {"line": 24, "character": 9}}, "selectionRange": {"start": {"line": 24, "character": 7}, "end": {"line": 24, "character": 9}}, "detail": "module re", "children": []}, {"name": "selected_exp_gene_list", "kind": 13, "range": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 95}}, "selectionRange": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 22}}, "detail": "selected_exp_gene_list = pd.read_csv(\"/data/common_exp_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "selected_mut_gene_list", "kind": 13, "range": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 95}}, "selectionRange": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 22}}, "detail": "selected_mut_gene_list = pd.read_csv(\"/data/common_mut_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "load_network", "kind": 12, "range": {"start": {"line": 37, "character": 0}, "end": {"line": 65, "character": 28}}, "selectionRange": {"start": {"line": 37, "character": 4}, "end": {"line": 37, "character": 16}}, "detail": "def load_network", "children": []}, {"name": "load_name_space", "kind": 12, "range": {"start": {"line": 67, "character": 0}, "end": {"line": 79, "character": 21}}, "selectionRange": {"start": {"line": 67, "character": 4}, "end": {"line": 67, "character": 19}}, "detail": "def load_name_space", "children": []}, {"name": "list2index", "kind": 12, "range": {"start": {"line": 81, "character": 0}, "end": {"line": 88, "character": 41}}, "selectionRange": {"start": {"line": 81, "character": 4}, "end": {"line": 81, "character": 14}}, "detail": "def list2index", "children": []}, {"name": "PDTC_data_file", "kind": 13, "range": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 30}}, "selectionRange": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 14}}, "detail": "PDTC_data_file = '/data/PTDC/'", "children": []}, {"name": "PDTC_exp_data_file", "kind": 13, "range": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 60}}, "selectionRange": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 18}}, "detail": "PDTC_exp_data_file = PDTC_data_file + 'ExpressionModels.tsv'", "children": []}, {"name": "PDTC_drug_cell_line_file", "kind": 13, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 72}}, "selectionRange": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 24}}, "detail": "PDTC_drug_cell_line_file = PDTC_data_file + 'DrugResponsesAUCModels.tsv'", "children": []}, {"name": "PDTC_mutation_data_file", "kind": 13, "range": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 59}}, "selectionRange": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 23}}, "detail": "PDTC_mutation_data_file = PDTC_data_file + 'SNVsModels.tsv'", "children": []}, {"name": "PDTC_drug_target_file", "kind": 13, "range": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 47}}, "selectionRange": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 21}}, "detail": "PDTC_drug_target_file ='/data/drug_targets.tsv'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 37}}, "selectionRange": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 46}}, "selectionRange": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "data_file", "kind": 13, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 25}}, "selectionRange": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 9}}, "detail": "data_file = '/data/GDSC/'", "children": []}, {"name": "new_network_file", "kind": 13, "range": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 27}}, "selectionRange": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 16}}, "detail": "new_network_file = '/data/'", "children": []}, {"name": "exp_data_file", "kind": 13, "range": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 61}}, "selectionRange": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 13}}, "detail": "exp_data_file = data_file + 'Cell_line_RMA_proc_basalExp.txt'", "children": []}, {"name": "drug_cell_line_file", "kind": 13, "range": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 64}}, "selectionRange": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 19}}, "detail": "drug_cell_line_file = data_file + 'v17_fitted_dose_response.csv'", "children": []}, {"name": "cell_line_detail_file", "kind": 13, "range": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 60}}, "selectionRange": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 21}}, "detail": "cell_line_detail_file = data_file + 'Cell_Lines_Details.csv'", "children": []}, {"name": "mutation_data_file", "kind": 13, "range": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 51}}, "selectionRange": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 18}}, "detail": "mutation_data_file = data_file + 'WES_variants.csv'", "children": []}, {"name": "drug_target_file", "kind": 13, "range": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 42}}, "selectionRange": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 16}}, "detail": "drug_target_file ='/data/drug_targets.tsv'", "children": []}, {"name": "feature_folder", "kind": 13, "range": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 27}}, "selectionRange": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 14}}, "detail": "feature_folder = 'feature/'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 37}}, "selectionRange": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 46}}, "selectionRange": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 58}}, "selectionRange": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 6}}, "detail": "exp_df = pd.read_csv(exp_data_file, sep='\\t', index_col=0)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 21}}, "selectionRange": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 6}}, "detail": "exp_df = exp_df.T[1:]", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 56}}, "selectionRange": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 6}}, "detail": "exp_df = exp_df.rename(columns={np.nan: 'NO_GENE_NAME'})", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 43}}, "selectionRange": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 6}}, "detail": "exp_df = exp_df.drop('NO_GENE_NAME',axis=1)", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 138, "character": 0}, "end": {"line": 140, "character": 26}}, "selectionRange": {"start": {"line": 138, "character": 4}, "end": {"line": 138, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 142, "character": 0}, "end": {"line": 142, "character": 44}}, "selectionRange": {"start": {"line": 142, "character": 7}, "end": {"line": 142, "character": 12}}, "detail": "exp_df.index = exp_df.index.map(stripNumber)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 40}}, "selectionRange": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 6}}, "detail": "exp_df = exp_df.groupby(level=0).first()", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 39}}, "selectionRange": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 6}}, "detail": "exp_df = exp_df[selected_exp_gene_list]", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 36}}, "selectionRange": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 48}}, "selectionRange": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 78}}, "selectionRange": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 11}}, "detail": "PDTC_exp_df = pd.read_csv(PDTC_exp_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 31}}, "selectionRange": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df.T[1:]", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 160, "character": 0}, "end": {"line": 162, "character": 26}}, "selectionRange": {"start": {"line": 160, "character": 4}, "end": {"line": 160, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 49}}, "selectionRange": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df[selected_exp_gene_list]", "children": []}, {"name": "PDTC_exp_gene_list", "kind": 13, "range": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 46}}, "selectionRange": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 18}}, "detail": "PDTC_exp_gene_list = list(PDTC_exp_df.columns)", "children": []}, {"name": "PDTC_exp_cell_line_list", "kind": 13, "range": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 58}}, "selectionRange": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 23}}, "detail": "PDTC_exp_cell_line_list = list(PDTC_exp_df.index.unique())", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 40}}, "selectionRange": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 6}}, "detail": "exp_df = pd.concat([exp_df,PDTC_exp_df])", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 36}}, "selectionRange": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 48}}, "selectionRange": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "maf", "kind": 13, "range": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 69}}, "selectionRange": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 3}}, "detail": "maf = pd.read_csv(mutation_data_file, sep=',', index_col=0).fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 75}}, "selectionRange": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 11}}, "detail": "mutation_df = maf.groupby(['COSMIC_ID', 'Gene']).size().unstack().fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 49}}, "selectionRange": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 11}}, "detail": "mutation_df = mutation_df[selected_mut_gene_list]", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 46}}, "selectionRange": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 58}}, "selectionRange": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "PDTC_maf", "kind": 13, "range": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 80}}, "selectionRange": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 8}}, "detail": "PDTC_maf = pd.read_csv(PDTC_mutation_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 61}}, "selectionRange": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_maf.replace(to_replace=\"NO\",value=0.0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 82}}, "selectionRange": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_mutation_df.replace(to_replace=\"chr*\",value=1.0,regex=True)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 47}}, "selectionRange": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df.transpose()", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 59}}, "selectionRange": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df[selected_mut_gene_list]", "children": []}, {"name": "PDTC_mutation_gene_list", "kind": 13, "range": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 56}}, "selectionRange": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 23}}, "detail": "PDTC_mutation_gene_list = list(PDTC_mutation_df.columns)", "children": []}, {"name": "PDTC_mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 68}}, "selectionRange": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 28}}, "detail": "PDTC_mutation_cell_line_list = list(PDTC_mutation_df.index.unique())", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 55}}, "selectionRange": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 11}}, "detail": "mutation_df = pd.concat([mutation_df,PDTC_mutation_df])", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 46}}, "selectionRange": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 58}}, "selectionRange": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 36}}, "selectionRange": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 11}}, "detail": "file_handle = open(drug_target_file)", "children": []}, {"name": "drug_target_map", "kind": 13, "range": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 20}}, "selectionRange": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 15}}, "detail": "drug_target_map = {}", "children": []}, {"name": "drug_target_list", "kind": 13, "range": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 21}}, "selectionRange": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 16}}, "detail": "drug_target_list = []", "children": []}, {"name": "line", "kind": 13, "range": {"start": {"line": 230, "character": 0}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 230, "character": 4}, "end": {"line": 230, "character": 8}}, "detail": "for line in file_handle: new_line = line.rstrip().split(\"\\t\") drug = new_line[0] target_list=new_line[1].split(',') if drug != \"Drug\": target_list_str = \"\" for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\" drug = drug.strip() drug_target_map[drug] = [] if ',' not in target_list_str: drug_target_map[drug].append(target_list_str.strip()) drug_target_list.append(target_list_str.strip()) else: target_list = target_list_str.split(',') for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "new_line", "kind": 13, "range": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 40}}, "selectionRange": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 12}}, "detail": "new_line = line.rstrip().split(\"\\t\")", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 22}}, "selectionRange": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 8}}, "detail": "drug = new_line[0]", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 38}}, "selectionRange": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 15}}, "detail": "target_list=new_line[1].split(',')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 28}}, "selectionRange": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 23}}, "detail": "target_list_str = \"\"", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 237, "character": 8}, "end": {"line": 242, "character": 0}}, "selectionRange": {"start": {"line": 237, "character": 12}, "end": {"line": 237, "character": 13}}, "detail": "for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 65}}, "selectionRange": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 71}}, "selectionRange": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 27}}, "selectionRange": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 12}}, "detail": "drug = drug.strip()", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 52}}, "selectionRange": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 23}}, "detail": "target_list = target_list_str.split(',')", "children": []}, {"name": "target", "kind": 13, "range": {"start": {"line": 250, "character": 12}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 250, "character": 16}, "end": {"line": 250, "character": 22}}, "detail": "for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "drug_target_map", "kind": 13, "range": {"start": {"line": 257, "character": 0}, "end": {"line": 257, "character": 20}}, "selectionRange": {"start": {"line": 257, "character": 0}, "end": {"line": 257, "character": 15}}, "detail": "drug_target_map = {}", "children": []}, {"name": "drug_target_list", "kind": 13, "range": {"start": {"line": 258, "character": 0}, "end": {"line": 258, "character": 21}}, "selectionRange": {"start": {"line": 258, "character": 0}, "end": {"line": 258, "character": 16}}, "detail": "drug_target_list = []", "children": []}, {"name": "line", "kind": 13, "range": {"start": {"line": 259, "character": 0}, "end": {"line": 282, "character": 0}}, "selectionRange": {"start": {"line": 259, "character": 4}, "end": {"line": 259, "character": 8}}, "detail": "for line in file_handle: new_line = line.rstrip().split(\"\\t\") drug = new_line[0] target_list=new_line[1].split(',') if drug != \"Drug\": target_list_str = \"\" for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\" drug = drug.strip() drug_target_map[drug] = [] if ',' not in target_list_str: drug_target_map[drug].append(target_list_str.strip()) drug_target_list.append(target_list_str.strip()) else: target_list = target_list_str.split(',') for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "new_line", "kind": 13, "range": {"start": {"line": 261, "character": 4}, "end": {"line": 261, "character": 40}}, "selectionRange": {"start": {"line": 261, "character": 4}, "end": {"line": 261, "character": 12}}, "detail": "new_line = line.rstrip().split(\"\\t\")", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 262, "character": 4}, "end": {"line": 262, "character": 22}}, "selectionRange": {"start": {"line": 262, "character": 4}, "end": {"line": 262, "character": 8}}, "detail": "drug = new_line[0]", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 263, "character": 4}, "end": {"line": 263, "character": 38}}, "selectionRange": {"start": {"line": 263, "character": 4}, "end": {"line": 263, "character": 15}}, "detail": "target_list=new_line[1].split(',')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 265, "character": 8}, "end": {"line": 265, "character": 28}}, "selectionRange": {"start": {"line": 265, "character": 8}, "end": {"line": 265, "character": 23}}, "detail": "target_list_str = \"\"", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 266, "character": 8}, "end": {"line": 271, "character": 0}}, "selectionRange": {"start": {"line": 266, "character": 12}, "end": {"line": 266, "character": 13}}, "detail": "for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 268, "character": 16}, "end": {"line": 268, "character": 65}}, "selectionRange": {"start": {"line": 268, "character": 16}, "end": {"line": 268, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 270, "character": 16}, "end": {"line": 270, "character": 71}}, "selectionRange": {"start": {"line": 270, "character": 16}, "end": {"line": 270, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 271, "character": 8}, "end": {"line": 271, "character": 27}}, "selectionRange": {"start": {"line": 271, "character": 8}, "end": {"line": 271, "character": 12}}, "detail": "drug = drug.strip()", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 278, "character": 12}, "end": {"line": 278, "character": 52}}, "selectionRange": {"start": {"line": 278, "character": 12}, "end": {"line": 278, "character": 23}}, "detail": "target_list = target_list_str.split(',')", "children": []}, {"name": "target", "kind": 13, "range": {"start": {"line": 279, "character": 12}, "end": {"line": 282, "character": 0}}, "selectionRange": {"start": {"line": 279, "character": 16}, "end": {"line": 279, "character": 22}}, "detail": "for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "drugs_legend", "kind": 13, "range": {"start": {"line": 286, "character": 0}, "end": {"line": 286, "character": 85}}, "selectionRange": {"start": {"line": 286, "character": 0}, "end": {"line": 286, "character": 12}}, "detail": "drugs_legend = pd.read_csv('/data/GDSC/Screened_Compounds.csv', sep=',', index_col=0)", "children": []}, {"name": "drug2id_mapping", "kind": 13, "range": {"start": {"line": 288, "character": 0}, "end": {"line": 288, "character": 20}}, "selectionRange": {"start": {"line": 288, "character": 0}, "end": {"line": 288, "character": 15}}, "detail": "drug2id_mapping = {}", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 290, "character": 0}, "end": {"line": 293, "character": 0}}, "selectionRange": {"start": {"line": 290, "character": 4}, "end": {"line": 290, "character": 9}}, "detail": "for index in list(drugs_legend.index) : drug_name = drugs_legend.loc[index,'Drug Name'] drug2id_mapping[ drug_name ] = index", "children": []}, {"name": "drug_name", "kind": 13, "range": {"start": {"line": 291, "character": 4}, "end": {"line": 291, "character": 51}}, "selectionRange": {"start": {"line": 291, "character": 4}, "end": {"line": 291, "character": 13}}, "detail": "drug_name = drugs_legend.loc[index,'Drug Name']", "children": []}, {"name": "valid_gene_list", "kind": 13, "range": {"start": {"line": 298, "character": 0}, "end": {"line": 298, "character": 92}}, "selectionRange": {"start": {"line": 298, "character": 0}, "end": {"line": 298, "character": 15}}, "detail": "valid_gene_list = list(set(drug_target_list) | set(exp_gene_list) | set(mutation_gene_list))", "children": []}, {"name": "network_list", "kind": 13, "range": {"start": {"line": 304, "character": 0}, "end": {"line": 304, "character": 82}}, "selectionRange": {"start": {"line": 304, "character": 0}, "end": {"line": 304, "character": 12}}, "detail": "network_list = [new_network_file+inbiomap_file, new_network_file+pathwaycomm_file]", "children": []}, {"name": "gene_neighbor_map", "kind": 13, "range": {"start": {"line": 305, "character": 0}, "end": {"line": 305, "character": 64}}, "selectionRange": {"start": {"line": 305, "character": 0}, "end": {"line": 305, "character": 17}}, "detail": "gene_neighbor_map = load_network(network_list, valid_gene_list)", "children": []}, {"name": "gene_name_df", "kind": 13, "range": {"start": {"line": 311, "character": 0}, "end": {"line": 311, "character": 89}}, "selectionRange": {"start": {"line": 311, "character": 0}, "end": {"line": 311, "character": 12}}, "detail": "gene_name_df = pd.read_table('/data/HUGO_protein-coding_gene.tsv',index_col=25, sep='\\t')", "children": []}, {"name": "gene_name_map", "kind": 13, "range": {"start": {"line": 317, "character": 0}, "end": {"line": 317, "character": 18}}, "selectionRange": {"start": {"line": 317, "character": 0}, "end": {"line": 317, "character": 13}}, "detail": "gene_name_map = {}", "children": []}, {"name": "uniprot_gene", "kind": 13, "range": {"start": {"line": 319, "character": 0}, "end": {"line": 328, "character": 0}}, "selectionRange": {"start": {"line": 319, "character": 4}, "end": {"line": 319, "character": 16}}, "detail": "for uniprot_gene in gene_name_df.index: if isinstance(uniprot_gene, type('aaa')) == False: continue if isinstance(gene_name_df.loc[uniprot_gene, 'symbol'], type('aaa')) == False: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol'][0] else: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 333, "character": 0}, "end": {"line": 333, "character": 76}}, "selectionRange": {"start": {"line": 333, "character": 0}, "end": {"line": 333, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "uniprot_gene_set", "kind": 13, "range": {"start": {"line": 335, "character": 0}, "end": {"line": 335, "character": 24}}, "selectionRange": {"start": {"line": 335, "character": 0}, "end": {"line": 335, "character": 16}}, "detail": "uniprot_gene_set = set()", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 337, "character": 0}, "end": {"line": 346, "character": 0}}, "selectionRange": {"start": {"line": 337, "character": 4}, "end": {"line": 337, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 342, "character": 4}, "end": {"line": 342, "character": 74}}, "selectionRange": {"start": {"line": 342, "character": 4}, "end": {"line": 342, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 344, "character": 4}, "end": {"line": 346, "character": 0}}, "selectionRange": {"start": {"line": 344, "character": 8}, "end": {"line": 344, "character": 12}}, "detail": "for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "query_gene_set", "kind": 13, "range": {"start": {"line": 349, "character": 0}, "end": {"line": 349, "character": 19}}, "selectionRange": {"start": {"line": 349, "character": 0}, "end": {"line": 349, "character": 14}}, "detail": "query_gene_set = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 351, "character": 0}, "end": {"line": 354, "character": 0}}, "selectionRange": {"start": {"line": 351, "character": 4}, "end": {"line": 351, "character": 8}}, "detail": "for gene in uniprot_gene_set: if gene not in gene_name_map: query_gene_set.append(gene)", "children": []}, {"name": "query_gene_list", "kind": 13, "range": {"start": {"line": 357, "character": 0}, "end": {"line": 357, "character": 38}}, "selectionRange": {"start": {"line": 357, "character": 0}, "end": {"line": 357, "character": 15}}, "detail": "query_gene_list = list(query_gene_set)", "children": []}, {"name": "mg", "kind": 13, "range": {"start": {"line": 359, "character": 0}, "end": {"line": 359, "character": 24}}, "selectionRange": {"start": {"line": 359, "character": 0}, "end": {"line": 359, "character": 2}}, "detail": "mg = mygene.MyGeneInfo()", "children": []}, {"name": "out", "kind": 13, "range": {"start": {"line": 360, "character": 0}, "end": {"line": 360, "character": 87}}, "selectionRange": {"start": {"line": 360, "character": 0}, "end": {"line": 360, "character": 3}}, "detail": "out = mg.querymany(query_gene_list, scopes='uniprot', fields='symbol', species='human')", "children": []}, {"name": "not_found_gene_list", "kind": 13, "range": {"start": {"line": 362, "character": 0}, "end": {"line": 362, "character": 24}}, "selectionRange": {"start": {"line": 362, "character": 0}, "end": {"line": 362, "character": 19}}, "detail": "not_found_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 364, "character": 0}, "end": {"line": 369, "character": 0}}, "selectionRange": {"start": {"line": 364, "character": 4}, "end": {"line": 364, "character": 5}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 364, "character": 0}, "end": {"line": 369, "character": 0}}, "selectionRange": {"start": {"line": 364, "character": 7}, "end": {"line": 364, "character": 11}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 376, "character": 0}, "end": {"line": 376, "character": 76}}, "selectionRange": {"start": {"line": 376, "character": 0}, "end": {"line": 376, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 378, "character": 0}, "end": {"line": 400, "character": 0}}, "selectionRange": {"start": {"line": 378, "character": 4}, "end": {"line": 378, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') complex_symbol_list = [] for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] ) for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 383, "character": 4}, "end": {"line": 383, "character": 74}}, "selectionRange": {"start": {"line": 383, "character": 4}, "end": {"line": 383, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "complex_symbol_list", "kind": 13, "range": {"start": {"line": 385, "character": 4}, "end": {"line": 385, "character": 28}}, "selectionRange": {"start": {"line": 385, "character": 4}, "end": {"line": 385, "character": 23}}, "detail": "complex_symbol_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 387, "character": 4}, "end": {"line": 390, "character": 0}}, "selectionRange": {"start": {"line": 387, "character": 8}, "end": {"line": 387, "character": 12}}, "detail": "for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] )", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 391, "character": 4}, "end": {"line": 400, "character": 0}}, "selectionRange": {"start": {"line": 391, "character": 8}, "end": {"line": 391, "character": 13}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 391, "character": 4}, "end": {"line": 400, "character": 0}}, "selectionRange": {"start": {"line": 391, "character": 15}, "end": {"line": 391, "character": 20}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene_exp_neighbor_map", "kind": 13, "range": {"start": {"line": 405, "character": 0}, "end": {"line": 405, "character": 26}}, "selectionRange": {"start": {"line": 405, "character": 0}, "end": {"line": 405, "character": 21}}, "detail": "gene_exp_neighbor_map = {}", "children": []}, {"name": "exp_matrix", "kind": 13, "range": {"start": {"line": 406, "character": 0}, "end": {"line": 406, "character": 26}}, "selectionRange": {"start": {"line": 406, "character": 0}, "end": {"line": 406, "character": 10}}, "detail": "exp_matrix = exp_df.values", "children": []}, {"name": "P", "kind": 13, "range": {"start": {"line": 408, "character": 0}, "end": {"line": 408, "character": 79}}, "selectionRange": {"start": {"line": 408, "character": 0}, "end": {"line": 408, "character": 1}}, "detail": "P = 1 - cdist(np.transpose(exp_matrix), np.transpose(exp_matrix),'correlation')", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 410, "character": 0}, "end": {"line": 424, "character": 0}}, "selectionRange": {"start": {"line": 410, "character": 4}, "end": {"line": 410, "character": 5}}, "detail": "for i in range(len(exp_gene_list)): gene1 = exp_gene_list[i] gene_exp_neighbor_map[gene1] = set() for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2) if gene1 not in gene_exp_neighbor_map[gene1]: print (gene1, 'not in itself?', P[i,i])", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 412, "character": 4}, "end": {"line": 412, "character": 28}}, "selectionRange": {"start": {"line": 412, "character": 4}, "end": {"line": 412, "character": 9}}, "detail": "gene1 = exp_gene_list[i]", "children": []}, {"name": "j", "kind": 13, "range": {"start": {"line": 415, "character": 4}, "end": {"line": 421, "character": 0}}, "selectionRange": {"start": {"line": 415, "character": 8}, "end": {"line": 415, "character": 9}}, "detail": "for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 417, "character": 8}, "end": {"line": 417, "character": 32}}, "selectionRange": {"start": {"line": 417, "character": 8}, "end": {"line": 417, "character": 13}}, "detail": "gene2 = exp_gene_list[j]", "children": []}, {"name": "drug_feature_list", "kind": 13, "range": {"start": {"line": 432, "character": 0}, "end": {"line": 432, "character": 22}}, "selectionRange": {"start": {"line": 432, "character": 0}, "end": {"line": 432, "character": 17}}, "detail": "drug_feature_list = []", "children": []}, {"name": "drug_neighbor_map", "kind": 13, "range": {"start": {"line": 433, "character": 0}, "end": {"line": 433, "character": 22}}, "selectionRange": {"start": {"line": 433, "character": 0}, "end": {"line": 433, "character": 17}}, "detail": "drug_neighbor_map = {}", "children": []}, {"name": "selected_drug_list", "kind": 13, "range": {"start": {"line": 434, "character": 0}, "end": {"line": 434, "character": 23}}, "selectionRange": {"start": {"line": 434, "character": 0}, "end": {"line": 434, "character": 18}}, "detail": "selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 436, "character": 0}, "end": {"line": 453, "character": 0}}, "selectionRange": {"start": {"line": 436, "character": 4}, "end": {"line": 436, "character": 8}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 436, "character": 0}, "end": {"line": 453, "character": 0}}, "selectionRange": {"start": {"line": 436, "character": 10}, "end": {"line": 436, "character": 21}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 439, "character": 8}, "end": {"line": 449, "character": 0}}, "selectionRange": {"start": {"line": 439, "character": 12}, "end": {"line": 439, "character": 16}}, "detail": "for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene]", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 467, "character": 0}, "end": {"line": 467, "character": 52}}, "selectionRange": {"start": {"line": 467, "character": 0}, "end": {"line": 467, "character": 5}}, "detail": "drugs = pd.read_csv(drug_cell_line_file,index_col=2)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 468, "character": 0}, "end": {"line": 468, "character": 93}}, "selectionRange": {"start": {"line": 468, "character": 0}, "end": {"line": 468, "character": 5}}, "detail": "drugs = drugs.drop([\"DATASET_VERSION\",\"IC50_RESULTS_ID\",\"MAX_CONC_MICROMOLAR\",\"RMSE\"],axis=1)", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 49}}, "selectionRange": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 471, "character": 0}, "end": {"line": 471, "character": 28}}, "selectionRange": {"start": {"line": 471, "character": 0}, "end": {"line": 471, "character": 9}}, "detail": "drug_list = drugs[\"DRUG_ID\"]", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 472, "character": 0}, "end": {"line": 472, "character": 16}}, "selectionRange": {"start": {"line": 472, "character": 0}, "end": {"line": 472, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 482, "character": 0}, "end": {"line": 482, "character": 71}}, "selectionRange": {"start": {"line": 482, "character": 0}, "end": {"line": 482, "character": 10}}, "detail": "PDTC_drugs = pd.read_csv(PDTC_drug_cell_line_file,sep='\\t',index_col=0)", "children": []}, {"name": "PDTC_drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 483, "character": 0}, "end": {"line": 483, "character": 59}}, "selectionRange": {"start": {"line": 483, "character": 0}, "end": {"line": 483, "character": 25}}, "detail": "PDTC_drugs_cell_line_list = list(PDTC_drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 485, "character": 0}, "end": {"line": 485, "character": 39}}, "selectionRange": {"start": {"line": 485, "character": 0}, "end": {"line": 485, "character": 9}}, "detail": "drug_list = PDTC_drugs[\"Drug\"].tolist()", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 486, "character": 0}, "end": {"line": 486, "character": 16}}, "selectionRange": {"start": {"line": 486, "character": 0}, "end": {"line": 486, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 487, "character": 0}, "end": {"line": 492, "character": 0}}, "selectionRange": {"start": {"line": 487, "character": 4}, "end": {"line": 487, "character": 5}}, "detail": "for i in drug_list: if i in drug2id_mapping.keys(): new_drug_id.append(drug2id_mapping[i]) else: new_drug_id.append(0)", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 494, "character": 0}, "end": {"line": 494, "character": 84}}, "selectionRange": {"start": {"line": 494, "character": 0}, "end": {"line": 494, "character": 10}}, "detail": "PDTC_drugs = PDTC_drugs.drop([\"Drug\",\"iC50\",\"D1_CONC\",\"D5_CONC\",\"perc.iC50\"],axis=1)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 502, "character": 0}, "end": {"line": 502, "character": 37}}, "selectionRange": {"start": {"line": 502, "character": 0}, "end": {"line": 502, "character": 5}}, "detail": "drugs = pd.concat([drugs,PDTC_drugs])", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 509, "character": 0}, "end": {"line": 509, "character": 49}}, "selectionRange": {"start": {"line": 509, "character": 0}, "end": {"line": 509, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "cell_line_list", "kind": 13, "range": {"start": {"line": 515, "character": 0}, "end": {"line": 515, "character": 102}}, "selectionRange": {"start": {"line": 515, "character": 0}, "end": {"line": 515, "character": 14}}, "detail": "cell_line_list = list(set(drugs_cell_line_list)&set(exp_cell_line_list)&set(mutation_cell_line_list) )", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 522, "character": 0}, "end": {"line": 522, "character": 66}}, "selectionRange": {"start": {"line": 522, "character": 0}, "end": {"line": 522, "character": 16}}, "detail": "cell_line_legend = pd.read_csv(cell_line_detail_file, index_col=1)", "children": []}, {"name": "PDTC_cell_line", "kind": 13, "range": {"start": {"line": 523, "character": 0}, "end": {"line": 523, "character": 206}}, "selectionRange": {"start": {"line": 523, "character": 0}, "end": {"line": 523, "character": 14}}, "detail": "PDTC_cell_line = pd.DataFrame({'Line': [\"BRCA\"]*len(PDTC_exp_cell_line_list), 'Site':[\"PDTC\"]*len(PDTC_exp_cell_line_list),\"Histology\":[\"breast\"]*len(PDTC_exp_cell_line_list)},index=PDTC_exp_cell_line_list)", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 524, "character": 0}, "end": {"line": 524, "character": 63}}, "selectionRange": {"start": {"line": 524, "character": 0}, "end": {"line": 524, "character": 16}}, "detail": "cell_line_legend = pd.concat([cell_line_legend,PDTC_cell_line])", "children": []}, {"name": "tissue_map", "kind": 13, "range": {"start": {"line": 527, "character": 0}, "end": {"line": 527, "character": 15}}, "selectionRange": {"start": {"line": 527, "character": 0}, "end": {"line": 527, "character": 10}}, "detail": "tissue_map = {}", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 529, "character": 0}, "end": {"line": 537, "character": 0}}, "selectionRange": {"start": {"line": 529, "character": 4}, "end": {"line": 529, "character": 13}}, "detail": "for cell_line in cell_line_list: tissue = cell_line_legend.loc[cell_line,'Site'] if tissue not in tissue_map: tissue_map[tissue] = [] tissue_map[tissue].append(cell_line)", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 531, "character": 4}, "end": {"line": 531, "character": 51}}, "selectionRange": {"start": {"line": 531, "character": 4}, "end": {"line": 531, "character": 10}}, "detail": "tissue = cell_line_legend.loc[cell_line,'Site']", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 538, "character": 0}, "end": {"line": 538, "character": 23}}, "selectionRange": {"start": {"line": 538, "character": 0}, "end": {"line": 538, "character": 19}}, "detail": "large_tissue_number = 0", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 539, "character": 0}, "end": {"line": 545, "character": 0}}, "selectionRange": {"start": {"line": 539, "character": 4}, "end": {"line": 539, "character": 10}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 539, "character": 0}, "end": {"line": 545, "character": 0}}, "selectionRange": {"start": {"line": 539, "character": 12}, "end": {"line": 539, "character": 21}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 542, "character": 8}, "end": {"line": 542, "character": 32}}, "selectionRange": {"start": {"line": 542, "character": 8}, "end": {"line": 542, "character": 27}}, "detail": "large_tissue_number += 1", "children": []}, {"name": "new_exp_gene_list", "kind": 13, "range": {"start": {"line": 565, "character": 0}, "end": {"line": 565, "character": 22}}, "selectionRange": {"start": {"line": 565, "character": 0}, "end": {"line": 565, "character": 17}}, "detail": "new_exp_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 566, "character": 0}, "end": {"line": 569, "character": 0}}, "selectionRange": {"start": {"line": 566, "character": 4}, "end": {"line": 566, "character": 5}}, "detail": "for i in exp_gene_list: if i in valid_gene_list: new_exp_gene_list.append(i)", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 574, "character": 0}, "end": {"line": 574, "character": 41}}, "selectionRange": {"start": {"line": 574, "character": 0}, "end": {"line": 574, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 38}}, "selectionRange": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 72}}, "selectionRange": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 578, "character": 0}, "end": {"line": 578, "character": 43}}, "selectionRange": {"start": {"line": 578, "character": 0}, "end": {"line": 578, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 68}}, "selectionRange": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 586, "character": 0}, "end": {"line": 586, "character": 58}}, "selectionRange": {"start": {"line": 586, "character": 0}, "end": {"line": 586, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 68}}, "selectionRange": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "new_data_file", "kind": 13, "range": {"start": {"line": 596, "character": 0}, "end": {"line": 596, "character": 18}}, "selectionRange": {"start": {"line": 596, "character": 0}, "end": {"line": 596, "character": 13}}, "detail": "new_data_file = ''", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 600, "character": 0}, "end": {"line": 600, "character": 41}}, "selectionRange": {"start": {"line": 600, "character": 0}, "end": {"line": 600, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 601, "character": 0}, "end": {"line": 601, "character": 38}}, "selectionRange": {"start": {"line": 601, "character": 0}, "end": {"line": 601, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 602, "character": 0}, "end": {"line": 602, "character": 72}}, "selectionRange": {"start": {"line": 602, "character": 0}, "end": {"line": 602, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 604, "character": 0}, "end": {"line": 604, "character": 43}}, "selectionRange": {"start": {"line": 604, "character": 0}, "end": {"line": 604, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 605, "character": 0}, "end": {"line": 605, "character": 68}}, "selectionRange": {"start": {"line": 605, "character": 0}, "end": {"line": 605, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 612, "character": 0}, "end": {"line": 612, "character": 58}}, "selectionRange": {"start": {"line": 612, "character": 0}, "end": {"line": 612, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 613, "character": 0}, "end": {"line": 613, "character": 68}}, "selectionRange": {"start": {"line": 613, "character": 0}, "end": {"line": 613, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "rename_selected_drug_list", "kind": 13, "range": {"start": {"line": 617, "character": 0}, "end": {"line": 617, "character": 30}}, "selectionRange": {"start": {"line": 617, "character": 0}, "end": {"line": 617, "character": 25}}, "detail": "rename_selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 619, "character": 0}, "end": {"line": 689, "character": 0}}, "selectionRange": {"start": {"line": 619, "character": 4}, "end": {"line": 619, "character": 8}}, "detail": "for drug in selected_drug_list: print(drug) if drug not in drug2id_mapping: print('drug name wrong', drug) else: cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]] feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) ) feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) ) print(len(feature_exp_gene_list) + len(feature_mut_gene_list)) if len(feature_exp_gene_list) + len(feature_mut_gene_list) == 0: continue feature_description = [] drug_tissue_map = {} drug = drug.replace(' ','_') rename_selected_drug_list.append(drug) if drug == 'Nutlin-3a_(-)': drug = 'Nutlin-3a' drug_folder = '/data/merged/drug_feature/' + drug + '/' if not os.path.exists(drug_folder): os.makedirs(drug_folder) for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description)) file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\") pickle.dump(drug_tissue_map,file_handle) file_handle.close()", "children": []}, {"name": "cell_line_drug_matrix", "kind": 13, "range": {"start": {"line": 627, "character": 8}, "end": {"line": 627, "character": 84}}, "selectionRange": {"start": {"line": 627, "character": 8}, "end": {"line": 627, "character": 29}}, "detail": "cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]]", "children": []}, {"name": "feature_exp_gene_list", "kind": 13, "range": {"start": {"line": 632, "character": 8}, "end": {"line": 632, "character": 98}}, "selectionRange": {"start": {"line": 632, "character": 8}, "end": {"line": 632, "character": 29}}, "detail": "feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) )", "children": []}, {"name": "feature_mut_gene_list", "kind": 13, "range": {"start": {"line": 633, "character": 8}, "end": {"line": 633, "character": 98}}, "selectionRange": {"start": {"line": 633, "character": 8}, "end": {"line": 633, "character": 29}}, "detail": "feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) )", "children": []}, {"name": "feature_description", "kind": 13, "range": {"start": {"line": 637, "character": 8}, "end": {"line": 637, "character": 32}}, "selectionRange": {"start": {"line": 637, "character": 8}, "end": {"line": 637, "character": 27}}, "detail": "feature_description = []", "children": []}, {"name": "drug_tissue_map", "kind": 13, "range": {"start": {"line": 639, "character": 8}, "end": {"line": 639, "character": 28}}, "selectionRange": {"start": {"line": 639, "character": 8}, "end": {"line": 639, "character": 23}}, "detail": "drug_tissue_map = {}", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 641, "character": 8}, "end": {"line": 641, "character": 36}}, "selectionRange": {"start": {"line": 641, "character": 8}, "end": {"line": 641, "character": 12}}, "detail": "drug = drug.replace(' ','_')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 647, "character": 12}, "end": {"line": 647, "character": 30}}, "selectionRange": {"start": {"line": 647, "character": 12}, "end": {"line": 647, "character": 16}}, "detail": "drug = 'Nutlin-3a'", "children": []}, {"name": "drug_folder", "kind": 13, "range": {"start": {"line": 649, "character": 8}, "end": {"line": 649, "character": 63}}, "selectionRange": {"start": {"line": 649, "character": 8}, "end": {"line": 649, "character": 19}}, "detail": "drug_folder = '/data/merged/drug_feature/' + drug + '/'", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 655, "character": 8}, "end": {"line": 685, "character": 0}}, "selectionRange": {"start": {"line": 655, "character": 12}, "end": {"line": 655, "character": 18}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "tissue_cell_line_list", "kind": 13, "range": {"start": {"line": 655, "character": 8}, "end": {"line": 685, "character": 0}}, "selectionRange": {"start": {"line": 655, "character": 20}, "end": {"line": 655, "character": 41}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 658, "character": 12}, "end": {"line": 658, "character": 103}}, "selectionRange": {"start": {"line": 658, "character": 12}, "end": {"line": 658, "character": 35}}, "detail": "drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list )", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 659, "character": 12}, "end": {"line": 659, "character": 67}}, "selectionRange": {"start": {"line": 659, "character": 12}, "end": {"line": 659, "character": 35}}, "detail": "drug_specific_cell_line = list(drug_specific_cell_line)", "children": []}, {"name": "feature_list", "kind": 13, "range": {"start": {"line": 662, "character": 12}, "end": {"line": 662, "character": 29}}, "selectionRange": {"start": {"line": 662, "character": 12}, "end": {"line": 662, "character": 24}}, "detail": "feature_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 666, "character": 16}, "end": {"line": 668, "character": 0}}, "selectionRange": {"start": {"line": 666, "character": 20}, "end": {"line": 666, "character": 24}}, "detail": "for gene in feature_exp_gene_list: feature_description.append(gene+'_expression')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 671, "character": 16}, "end": {"line": 673, "character": 0}}, "selectionRange": {"start": {"line": 671, "character": 20}, "end": {"line": 671, "character": 24}}, "detail": "for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation')", "children": []}, {"name": "feature", "kind": 13, "range": {"start": {"line": 674, "character": 12}, "end": {"line": 674, "character": 58}}, "selectionRange": {"start": {"line": 674, "character": 12}, "end": {"line": 674, "character": 19}}, "detail": "feature = np.concatenate(feature_list, axis=1)", "children": []}, {"name": "label", "kind": 13, "range": {"start": {"line": 676, "character": 12}, "end": {"line": 676, "character": 88}}, "selectionRange": {"start": {"line": 676, "character": 12}, "end": {"line": 676, "character": 17}}, "detail": "label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 686, "character": 8}, "end": {"line": 686, "character": 84}}, "selectionRange": {"start": {"line": 686, "character": 8}, "end": {"line": 686, "character": 19}}, "detail": "file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\")", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 690, "character": 0}, "end": {"line": 690, "character": 52}}, "selectionRange": {"start": {"line": 690, "character": 0}, "end": {"line": 690, "character": 11}}, "detail": "file_handle = open('rename_selected_drug_list', 'w')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 691, "character": 0}, "end": {"line": 693, "character": 0}}, "selectionRange": {"start": {"line": 691, "character": 4}, "end": {"line": 691, "character": 8}}, "detail": "for drug in rename_selected_drug_list: file_handle.writelines(drug+ '\\n')", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 711, "character": 0}, "end": {"line": 711, "character": 13}}, "selectionRange": {"start": {"line": 711, "character": 7}, "end": {"line": 711, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cell_line_loc", "kind": 13, "range": {"start": {"line": 717, "character": 0}, "end": {"line": 717, "character": 84}}, "selectionRange": {"start": {"line": 717, "character": 0}, "end": {"line": 717, "character": 13}}, "detail": "cell_line_loc = '/cellar/users/samsonfong/Projects/tcrp-v2/from-ma/cell_line_lists/'", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 723, "character": 0}, "end": {"line": 725, "character": 0}}, "selectionRange": {"start": {"line": 723, "character": 53}, "end": {"line": 723, "character": 54}}, "detail": "with open('/data/drug_feature/KU-55933/KU', 'rb') as f: tmap= pickle.load(f)", "children": []}, {"name": "tmap", "kind": 13, "range": {"start": {"line": 724, "character": 4}, "end": {"line": 724, "character": 24}}, "selectionRange": {"start": {"line": 724, "character": 4}, "end": {"line": 724, "character": 8}}, "detail": "tmap= pickle.load(f)", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 742, "character": 0}, "end": {"line": 742, "character": 68}}, "selectionRange": {"start": {"line": 742, "character": 0}, "end": {"line": 742, "character": 1}}, "detail": "f = np.load('/data/drug_feature/KU-55933/lung_KU-55933_feature.npy')", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///root/capsule/code/process_merged.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 26, "result": [{"uri": "file:///root/capsule/code/process_merged.py", "range": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 11}}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 27, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///root/capsule/code/process_merged.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 28, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 29, "result": [{"name": "matplotlib", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 17}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 17}}, "detail": "module matplotlib", "children": []}, {"name": "os", "kind": 2, "range": {"start": {"line": 10, "character": 0}, "end": {"line": 10, "character": 9}}, "selectionRange": {"start": {"line": 10, "character": 7}, "end": {"line": 10, "character": 9}}, "detail": "module os", "children": []}, {"name": "pd", "kind": 2, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 11, "character": 19}}, "selectionRange": {"start": {"line": 11, "character": 17}, "end": {"line": 11, "character": 19}}, "detail": "module pd", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 12, "character": 0}, "end": {"line": 12, "character": 18}}, "selectionRange": {"start": {"line": 12, "character": 16}, "end": {"line": 12, "character": 18}}, "detail": "module np", "children": []}, {"name": "sys", "kind": 2, "range": {"start": {"line": 13, "character": 0}, "end": {"line": 13, "character": 10}}, "selectionRange": {"start": {"line": 13, "character": 7}, "end": {"line": 13, "character": 10}}, "detail": "module sys", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 14, "character": 0}, "end": {"line": 14, "character": 13}}, "selectionRange": {"start": {"line": 14, "character": 7}, "end": {"line": 14, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cdist", "kind": 12, "range": {"start": {"line": 15, "character": 0}, "end": {"line": 15, "character": 40}}, "selectionRange": {"start": {"line": 15, "character": 35}, "end": {"line": 15, "character": 40}}, "detail": "def cdist", "children": []}, {"name": "math", "kind": 2, "range": {"start": {"line": 16, "character": 0}, "end": {"line": 16, "character": 11}}, "selectionRange": {"start": {"line": 16, "character": 7}, "end": {"line": 16, "character": 11}}, "detail": "module math", "children": []}, {"name": "nx", "kind": 2, "range": {"start": {"line": 17, "character": 0}, "end": {"line": 17, "character": 21}}, "selectionRange": {"start": {"line": 17, "character": 19}, "end": {"line": 17, "character": 21}}, "detail": "module nx", "children": []}, {"name": "nxacc", "kind": 2, "range": {"start": {"line": 18, "character": 0}, "end": {"line": 18, "character": 56}}, "selectionRange": {"start": {"line": 18, "character": 51}, "end": {"line": 18, "character": 56}}, "detail": "module nxacc", "children": []}, {"name": "nxadag", "kind": 2, "range": {"start": {"line": 19, "character": 0}, "end": {"line": 19, "character": 40}}, "selectionRange": {"start": {"line": 19, "character": 34}, "end": {"line": 19, "character": 40}}, "detail": "module nxadag", "children": []}, {"name": "plt", "kind": 2, "range": {"start": {"line": 20, "character": 0}, "end": {"line": 20, "character": 31}}, "selectionRange": {"start": {"line": 20, "character": 28}, "end": {"line": 20, "character": 31}}, "detail": "module plt", "children": []}, {"name": "sns", "kind": 2, "range": {"start": {"line": 21, "character": 0}, "end": {"line": 21, "character": 21}}, "selectionRange": {"start": {"line": 21, "character": 18}, "end": {"line": 21, "character": 21}}, "detail": "module sns", "children": []}, {"name": "itertools", "kind": 2, "range": {"start": {"line": 22, "character": 0}, "end": {"line": 22, "character": 16}}, "selectionRange": {"start": {"line": 22, "character": 7}, "end": {"line": 22, "character": 16}}, "detail": "module itertools", "children": []}, {"name": "mygene", "kind": 2, "range": {"start": {"line": 23, "character": 0}, "end": {"line": 23, "character": 13}}, "selectionRange": {"start": {"line": 23, "character": 7}, "end": {"line": 23, "character": 13}}, "detail": "module mygene", "children": []}, {"name": "re", "kind": 2, "range": {"start": {"line": 24, "character": 0}, "end": {"line": 24, "character": 9}}, "selectionRange": {"start": {"line": 24, "character": 7}, "end": {"line": 24, "character": 9}}, "detail": "module re", "children": []}, {"name": "selected_exp_gene_list", "kind": 13, "range": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 95}}, "selectionRange": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 22}}, "detail": "selected_exp_gene_list = pd.read_csv(\"/data/common_exp_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "selected_mut_gene_list", "kind": 13, "range": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 95}}, "selectionRange": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 22}}, "detail": "selected_mut_gene_list = pd.read_csv(\"/data/common_mut_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "load_network", "kind": 12, "range": {"start": {"line": 37, "character": 0}, "end": {"line": 65, "character": 28}}, "selectionRange": {"start": {"line": 37, "character": 4}, "end": {"line": 37, "character": 16}}, "detail": "def load_network", "children": []}, {"name": "load_name_space", "kind": 12, "range": {"start": {"line": 67, "character": 0}, "end": {"line": 79, "character": 21}}, "selectionRange": {"start": {"line": 67, "character": 4}, "end": {"line": 67, "character": 19}}, "detail": "def load_name_space", "children": []}, {"name": "list2index", "kind": 12, "range": {"start": {"line": 81, "character": 0}, "end": {"line": 88, "character": 41}}, "selectionRange": {"start": {"line": 81, "character": 4}, "end": {"line": 81, "character": 14}}, "detail": "def list2index", "children": []}, {"name": "PDTC_data_file", "kind": 13, "range": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 30}}, "selectionRange": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 14}}, "detail": "PDTC_data_file = '/data/PTDC/'", "children": []}, {"name": "PDTC_exp_data_file", "kind": 13, "range": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 60}}, "selectionRange": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 18}}, "detail": "PDTC_exp_data_file = PDTC_data_file + 'ExpressionModels.tsv'", "children": []}, {"name": "PDTC_drug_cell_line_file", "kind": 13, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 72}}, "selectionRange": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 24}}, "detail": "PDTC_drug_cell_line_file = PDTC_data_file + 'DrugResponsesAUCModels.tsv'", "children": []}, {"name": "PDTC_mutation_data_file", "kind": 13, "range": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 59}}, "selectionRange": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 23}}, "detail": "PDTC_mutation_data_file = PDTC_data_file + 'SNVsModels.tsv'", "children": []}, {"name": "PDTC_drug_target_file", "kind": 13, "range": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 47}}, "selectionRange": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 21}}, "detail": "PDTC_drug_target_file ='/data/drug_targets.tsv'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 37}}, "selectionRange": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 46}}, "selectionRange": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "data_file", "kind": 13, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 25}}, "selectionRange": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 9}}, "detail": "data_file = '/data/GDSC/'", "children": []}, {"name": "new_network_file", "kind": 13, "range": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 27}}, "selectionRange": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 16}}, "detail": "new_network_file = '/data/'", "children": []}, {"name": "exp_data_file", "kind": 13, "range": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 61}}, "selectionRange": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 13}}, "detail": "exp_data_file = data_file + 'Cell_line_RMA_proc_basalExp.txt'", "children": []}, {"name": "drug_cell_line_file", "kind": 13, "range": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 64}}, "selectionRange": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 19}}, "detail": "drug_cell_line_file = data_file + 'v17_fitted_dose_response.csv'", "children": []}, {"name": "cell_line_detail_file", "kind": 13, "range": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 60}}, "selectionRange": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 21}}, "detail": "cell_line_detail_file = data_file + 'Cell_Lines_Details.csv'", "children": []}, {"name": "mutation_data_file", "kind": 13, "range": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 51}}, "selectionRange": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 18}}, "detail": "mutation_data_file = data_file + 'WES_variants.csv'", "children": []}, {"name": "drug_target_file", "kind": 13, "range": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 42}}, "selectionRange": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 16}}, "detail": "drug_target_file ='/data/drug_targets.tsv'", "children": []}, {"name": "feature_folder", "kind": 13, "range": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 27}}, "selectionRange": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 14}}, "detail": "feature_folder = 'feature/'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 37}}, "selectionRange": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 46}}, "selectionRange": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 58}}, "selectionRange": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 6}}, "detail": "exp_df = pd.read_csv(exp_data_file, sep='\\t', index_col=0)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 21}}, "selectionRange": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 6}}, "detail": "exp_df = exp_df.T[1:]", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 56}}, "selectionRange": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 6}}, "detail": "exp_df = exp_df.rename(columns={np.nan: 'NO_GENE_NAME'})", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 43}}, "selectionRange": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 6}}, "detail": "exp_df = exp_df.drop('NO_GENE_NAME',axis=1)", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 138, "character": 0}, "end": {"line": 140, "character": 26}}, "selectionRange": {"start": {"line": 138, "character": 4}, "end": {"line": 138, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 142, "character": 0}, "end": {"line": 142, "character": 44}}, "selectionRange": {"start": {"line": 142, "character": 7}, "end": {"line": 142, "character": 12}}, "detail": "exp_df.index = exp_df.index.map(stripNumber)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 40}}, "selectionRange": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 6}}, "detail": "exp_df = exp_df.groupby(level=0).first()", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 39}}, "selectionRange": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 6}}, "detail": "exp_df = exp_df[selected_exp_gene_list]", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 36}}, "selectionRange": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 48}}, "selectionRange": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 78}}, "selectionRange": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 11}}, "detail": "PDTC_exp_df = pd.read_csv(PDTC_exp_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 31}}, "selectionRange": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df.T[1:]", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 160, "character": 0}, "end": {"line": 162, "character": 26}}, "selectionRange": {"start": {"line": 160, "character": 4}, "end": {"line": 160, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 49}}, "selectionRange": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df[selected_exp_gene_list]", "children": []}, {"name": "PDTC_exp_gene_list", "kind": 13, "range": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 46}}, "selectionRange": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 18}}, "detail": "PDTC_exp_gene_list = list(PDTC_exp_df.columns)", "children": []}, {"name": "PDTC_exp_cell_line_list", "kind": 13, "range": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 58}}, "selectionRange": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 23}}, "detail": "PDTC_exp_cell_line_list = list(PDTC_exp_df.index.unique())", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 40}}, "selectionRange": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 6}}, "detail": "exp_df = pd.concat([exp_df,PDTC_exp_df])", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 36}}, "selectionRange": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 48}}, "selectionRange": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "maf", "kind": 13, "range": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 69}}, "selectionRange": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 3}}, "detail": "maf = pd.read_csv(mutation_data_file, sep=',', index_col=0).fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 75}}, "selectionRange": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 11}}, "detail": "mutation_df = maf.groupby(['COSMIC_ID', 'Gene']).size().unstack().fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 49}}, "selectionRange": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 11}}, "detail": "mutation_df = mutation_df[selected_mut_gene_list]", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 46}}, "selectionRange": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 58}}, "selectionRange": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "PDTC_maf", "kind": 13, "range": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 80}}, "selectionRange": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 8}}, "detail": "PDTC_maf = pd.read_csv(PDTC_mutation_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 61}}, "selectionRange": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_maf.replace(to_replace=\"NO\",value=0.0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 82}}, "selectionRange": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_mutation_df.replace(to_replace=\"chr*\",value=1.0,regex=True)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 47}}, "selectionRange": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df.transpose()", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 59}}, "selectionRange": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df[selected_mut_gene_list]", "children": []}, {"name": "PDTC_mutation_gene_list", "kind": 13, "range": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 56}}, "selectionRange": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 23}}, "detail": "PDTC_mutation_gene_list = list(PDTC_mutation_df.columns)", "children": []}, {"name": "PDTC_mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 68}}, "selectionRange": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 28}}, "detail": "PDTC_mutation_cell_line_list = list(PDTC_mutation_df.index.unique())", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 55}}, "selectionRange": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 11}}, "detail": "mutation_df = pd.concat([mutation_df,PDTC_mutation_df])", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 46}}, "selectionRange": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 58}}, "selectionRange": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 36}}, "selectionRange": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 11}}, "detail": "file_handle = open(drug_target_file)", "children": []}, {"name": "drug_target_map", "kind": 13, "range": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 20}}, "selectionRange": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 15}}, "detail": "drug_target_map = {}", "children": []}, {"name": "drug_target_list", "kind": 13, "range": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 21}}, "selectionRange": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 16}}, "detail": "drug_target_list = []", "children": []}, {"name": "line", "kind": 13, "range": {"start": {"line": 230, "character": 0}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 230, "character": 4}, "end": {"line": 230, "character": 8}}, "detail": "for line in file_handle: new_line = line.rstrip().split(\"\\t\") drug = new_line[0] target_list=new_line[1].split(',') if drug != \"Drug\": target_list_str = \"\" for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\" drug = drug.strip() drug_target_map[drug] = [] if ',' not in target_list_str: drug_target_map[drug].append(target_list_str.strip()) drug_target_list.append(target_list_str.strip()) else: target_list = target_list_str.split(',') for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "new_line", "kind": 13, "range": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 40}}, "selectionRange": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 12}}, "detail": "new_line = line.rstrip().split(\"\\t\")", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 22}}, "selectionRange": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 8}}, "detail": "drug = new_line[0]", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 38}}, "selectionRange": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 15}}, "detail": "target_list=new_line[1].split(',')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 28}}, "selectionRange": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 23}}, "detail": "target_list_str = \"\"", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 237, "character": 8}, "end": {"line": 242, "character": 0}}, "selectionRange": {"start": {"line": 237, "character": 12}, "end": {"line": 237, "character": 13}}, "detail": "for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 65}}, "selectionRange": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 71}}, "selectionRange": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 27}}, "selectionRange": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 12}}, "detail": "drug = drug.strip()", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 52}}, "selectionRange": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 23}}, "detail": "target_list = target_list_str.split(',')", "children": []}, {"name": "target", "kind": 13, "range": {"start": {"line": 250, "character": 12}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 250, "character": 16}, "end": {"line": 250, "character": 22}}, "detail": "for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "drugs_legend", "kind": 13, "range": {"start": {"line": 261, "character": 0}, "end": {"line": 261, "character": 85}}, "selectionRange": {"start": {"line": 261, "character": 0}, "end": {"line": 261, "character": 12}}, "detail": "drugs_legend = pd.read_csv('/data/GDSC/Screened_Compounds.csv', sep=',', index_col=0)", "children": []}, {"name": "drug2id_mapping", "kind": 13, "range": {"start": {"line": 263, "character": 0}, "end": {"line": 263, "character": 20}}, "selectionRange": {"start": {"line": 263, "character": 0}, "end": {"line": 263, "character": 15}}, "detail": "drug2id_mapping = {}", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 265, "character": 0}, "end": {"line": 268, "character": 0}}, "selectionRange": {"start": {"line": 265, "character": 4}, "end": {"line": 265, "character": 9}}, "detail": "for index in list(drugs_legend.index) : drug_name = drugs_legend.loc[index,'Drug Name'] drug2id_mapping[ drug_name ] = index", "children": []}, {"name": "drug_name", "kind": 13, "range": {"start": {"line": 266, "character": 4}, "end": {"line": 266, "character": 51}}, "selectionRange": {"start": {"line": 266, "character": 4}, "end": {"line": 266, "character": 13}}, "detail": "drug_name = drugs_legend.loc[index,'Drug Name']", "children": []}, {"name": "valid_gene_list", "kind": 13, "range": {"start": {"line": 273, "character": 0}, "end": {"line": 273, "character": 92}}, "selectionRange": {"start": {"line": 273, "character": 0}, "end": {"line": 273, "character": 15}}, "detail": "valid_gene_list = list(set(drug_target_list) | set(exp_gene_list) | set(mutation_gene_list))", "children": []}, {"name": "network_list", "kind": 13, "range": {"start": {"line": 279, "character": 0}, "end": {"line": 279, "character": 82}}, "selectionRange": {"start": {"line": 279, "character": 0}, "end": {"line": 279, "character": 12}}, "detail": "network_list = [new_network_file+inbiomap_file, new_network_file+pathwaycomm_file]", "children": []}, {"name": "gene_neighbor_map", "kind": 13, "range": {"start": {"line": 280, "character": 0}, "end": {"line": 280, "character": 64}}, "selectionRange": {"start": {"line": 280, "character": 0}, "end": {"line": 280, "character": 17}}, "detail": "gene_neighbor_map = load_network(network_list, valid_gene_list)", "children": []}, {"name": "gene_name_df", "kind": 13, "range": {"start": {"line": 286, "character": 0}, "end": {"line": 286, "character": 89}}, "selectionRange": {"start": {"line": 286, "character": 0}, "end": {"line": 286, "character": 12}}, "detail": "gene_name_df = pd.read_table('/data/HUGO_protein-coding_gene.tsv',index_col=25, sep='\\t')", "children": []}, {"name": "gene_name_map", "kind": 13, "range": {"start": {"line": 292, "character": 0}, "end": {"line": 292, "character": 18}}, "selectionRange": {"start": {"line": 292, "character": 0}, "end": {"line": 292, "character": 13}}, "detail": "gene_name_map = {}", "children": []}, {"name": "uniprot_gene", "kind": 13, "range": {"start": {"line": 294, "character": 0}, "end": {"line": 303, "character": 0}}, "selectionRange": {"start": {"line": 294, "character": 4}, "end": {"line": 294, "character": 16}}, "detail": "for uniprot_gene in gene_name_df.index: if isinstance(uniprot_gene, type('aaa')) == False: continue if isinstance(gene_name_df.loc[uniprot_gene, 'symbol'], type('aaa')) == False: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol'][0] else: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 308, "character": 0}, "end": {"line": 308, "character": 76}}, "selectionRange": {"start": {"line": 308, "character": 0}, "end": {"line": 308, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "uniprot_gene_set", "kind": 13, "range": {"start": {"line": 310, "character": 0}, "end": {"line": 310, "character": 24}}, "selectionRange": {"start": {"line": 310, "character": 0}, "end": {"line": 310, "character": 16}}, "detail": "uniprot_gene_set = set()", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 312, "character": 0}, "end": {"line": 321, "character": 0}}, "selectionRange": {"start": {"line": 312, "character": 4}, "end": {"line": 312, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 317, "character": 4}, "end": {"line": 317, "character": 74}}, "selectionRange": {"start": {"line": 317, "character": 4}, "end": {"line": 317, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 319, "character": 4}, "end": {"line": 321, "character": 0}}, "selectionRange": {"start": {"line": 319, "character": 8}, "end": {"line": 319, "character": 12}}, "detail": "for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "query_gene_set", "kind": 13, "range": {"start": {"line": 324, "character": 0}, "end": {"line": 324, "character": 19}}, "selectionRange": {"start": {"line": 324, "character": 0}, "end": {"line": 324, "character": 14}}, "detail": "query_gene_set = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 326, "character": 0}, "end": {"line": 329, "character": 0}}, "selectionRange": {"start": {"line": 326, "character": 4}, "end": {"line": 326, "character": 8}}, "detail": "for gene in uniprot_gene_set: if gene not in gene_name_map: query_gene_set.append(gene)", "children": []}, {"name": "query_gene_list", "kind": 13, "range": {"start": {"line": 332, "character": 0}, "end": {"line": 332, "character": 38}}, "selectionRange": {"start": {"line": 332, "character": 0}, "end": {"line": 332, "character": 15}}, "detail": "query_gene_list = list(query_gene_set)", "children": []}, {"name": "mg", "kind": 13, "range": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 24}}, "selectionRange": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 2}}, "detail": "mg = mygene.MyGeneInfo()", "children": []}, {"name": "out", "kind": 13, "range": {"start": {"line": 335, "character": 0}, "end": {"line": 335, "character": 87}}, "selectionRange": {"start": {"line": 335, "character": 0}, "end": {"line": 335, "character": 3}}, "detail": "out = mg.querymany(query_gene_list, scopes='uniprot', fields='symbol', species='human')", "children": []}, {"name": "not_found_gene_list", "kind": 13, "range": {"start": {"line": 337, "character": 0}, "end": {"line": 337, "character": 24}}, "selectionRange": {"start": {"line": 337, "character": 0}, "end": {"line": 337, "character": 19}}, "detail": "not_found_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 339, "character": 0}, "end": {"line": 344, "character": 0}}, "selectionRange": {"start": {"line": 339, "character": 4}, "end": {"line": 339, "character": 5}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 339, "character": 0}, "end": {"line": 344, "character": 0}}, "selectionRange": {"start": {"line": 339, "character": 7}, "end": {"line": 339, "character": 11}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 351, "character": 0}, "end": {"line": 351, "character": 76}}, "selectionRange": {"start": {"line": 351, "character": 0}, "end": {"line": 351, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 353, "character": 0}, "end": {"line": 375, "character": 0}}, "selectionRange": {"start": {"line": 353, "character": 4}, "end": {"line": 353, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') complex_symbol_list = [] for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] ) for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 358, "character": 4}, "end": {"line": 358, "character": 74}}, "selectionRange": {"start": {"line": 358, "character": 4}, "end": {"line": 358, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "complex_symbol_list", "kind": 13, "range": {"start": {"line": 360, "character": 4}, "end": {"line": 360, "character": 28}}, "selectionRange": {"start": {"line": 360, "character": 4}, "end": {"line": 360, "character": 23}}, "detail": "complex_symbol_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 362, "character": 4}, "end": {"line": 365, "character": 0}}, "selectionRange": {"start": {"line": 362, "character": 8}, "end": {"line": 362, "character": 12}}, "detail": "for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] )", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 366, "character": 4}, "end": {"line": 375, "character": 0}}, "selectionRange": {"start": {"line": 366, "character": 8}, "end": {"line": 366, "character": 13}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 366, "character": 4}, "end": {"line": 375, "character": 0}}, "selectionRange": {"start": {"line": 366, "character": 15}, "end": {"line": 366, "character": 20}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene_exp_neighbor_map", "kind": 13, "range": {"start": {"line": 380, "character": 0}, "end": {"line": 380, "character": 26}}, "selectionRange": {"start": {"line": 380, "character": 0}, "end": {"line": 380, "character": 21}}, "detail": "gene_exp_neighbor_map = {}", "children": []}, {"name": "exp_matrix", "kind": 13, "range": {"start": {"line": 381, "character": 0}, "end": {"line": 381, "character": 26}}, "selectionRange": {"start": {"line": 381, "character": 0}, "end": {"line": 381, "character": 10}}, "detail": "exp_matrix = exp_df.values", "children": []}, {"name": "P", "kind": 13, "range": {"start": {"line": 383, "character": 0}, "end": {"line": 383, "character": 79}}, "selectionRange": {"start": {"line": 383, "character": 0}, "end": {"line": 383, "character": 1}}, "detail": "P = 1 - cdist(np.transpose(exp_matrix), np.transpose(exp_matrix),'correlation')", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 385, "character": 0}, "end": {"line": 399, "character": 0}}, "selectionRange": {"start": {"line": 385, "character": 4}, "end": {"line": 385, "character": 5}}, "detail": "for i in range(len(exp_gene_list)): gene1 = exp_gene_list[i] gene_exp_neighbor_map[gene1] = set() for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2) if gene1 not in gene_exp_neighbor_map[gene1]: print (gene1, 'not in itself?', P[i,i])", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 387, "character": 4}, "end": {"line": 387, "character": 28}}, "selectionRange": {"start": {"line": 387, "character": 4}, "end": {"line": 387, "character": 9}}, "detail": "gene1 = exp_gene_list[i]", "children": []}, {"name": "j", "kind": 13, "range": {"start": {"line": 390, "character": 4}, "end": {"line": 396, "character": 0}}, "selectionRange": {"start": {"line": 390, "character": 8}, "end": {"line": 390, "character": 9}}, "detail": "for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 392, "character": 8}, "end": {"line": 392, "character": 32}}, "selectionRange": {"start": {"line": 392, "character": 8}, "end": {"line": 392, "character": 13}}, "detail": "gene2 = exp_gene_list[j]", "children": []}, {"name": "drug_feature_list", "kind": 13, "range": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 22}}, "selectionRange": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 17}}, "detail": "drug_feature_list = []", "children": []}, {"name": "drug_neighbor_map", "kind": 13, "range": {"start": {"line": 408, "character": 0}, "end": {"line": 408, "character": 22}}, "selectionRange": {"start": {"line": 408, "character": 0}, "end": {"line": 408, "character": 17}}, "detail": "drug_neighbor_map = {}", "children": []}, {"name": "selected_drug_list", "kind": 13, "range": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 23}}, "selectionRange": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 18}}, "detail": "selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 411, "character": 0}, "end": {"line": 428, "character": 0}}, "selectionRange": {"start": {"line": 411, "character": 4}, "end": {"line": 411, "character": 8}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 411, "character": 0}, "end": {"line": 428, "character": 0}}, "selectionRange": {"start": {"line": 411, "character": 10}, "end": {"line": 411, "character": 21}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 414, "character": 8}, "end": {"line": 424, "character": 0}}, "selectionRange": {"start": {"line": 414, "character": 12}, "end": {"line": 414, "character": 16}}, "detail": "for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene]", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 442, "character": 0}, "end": {"line": 442, "character": 52}}, "selectionRange": {"start": {"line": 442, "character": 0}, "end": {"line": 442, "character": 5}}, "detail": "drugs = pd.read_csv(drug_cell_line_file,index_col=2)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 443, "character": 0}, "end": {"line": 443, "character": 93}}, "selectionRange": {"start": {"line": 443, "character": 0}, "end": {"line": 443, "character": 5}}, "detail": "drugs = drugs.drop([\"DATASET_VERSION\",\"IC50_RESULTS_ID\",\"MAX_CONC_MICROMOLAR\",\"RMSE\"],axis=1)", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 444, "character": 0}, "end": {"line": 444, "character": 49}}, "selectionRange": {"start": {"line": 444, "character": 0}, "end": {"line": 444, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 446, "character": 0}, "end": {"line": 446, "character": 28}}, "selectionRange": {"start": {"line": 446, "character": 0}, "end": {"line": 446, "character": 9}}, "detail": "drug_list = drugs[\"DRUG_ID\"]", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 447, "character": 0}, "end": {"line": 447, "character": 16}}, "selectionRange": {"start": {"line": 447, "character": 0}, "end": {"line": 447, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 457, "character": 0}, "end": {"line": 457, "character": 71}}, "selectionRange": {"start": {"line": 457, "character": 0}, "end": {"line": 457, "character": 10}}, "detail": "PDTC_drugs = pd.read_csv(PDTC_drug_cell_line_file,sep='\\t',index_col=0)", "children": []}, {"name": "PDTC_drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 458, "character": 0}, "end": {"line": 458, "character": 59}}, "selectionRange": {"start": {"line": 458, "character": 0}, "end": {"line": 458, "character": 25}}, "detail": "PDTC_drugs_cell_line_list = list(PDTC_drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 460, "character": 0}, "end": {"line": 460, "character": 39}}, "selectionRange": {"start": {"line": 460, "character": 0}, "end": {"line": 460, "character": 9}}, "detail": "drug_list = PDTC_drugs[\"Drug\"].tolist()", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 461, "character": 0}, "end": {"line": 461, "character": 16}}, "selectionRange": {"start": {"line": 461, "character": 0}, "end": {"line": 461, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 462, "character": 0}, "end": {"line": 467, "character": 0}}, "selectionRange": {"start": {"line": 462, "character": 4}, "end": {"line": 462, "character": 5}}, "detail": "for i in drug_list: if i in drug2id_mapping.keys(): new_drug_id.append(drug2id_mapping[i]) else: new_drug_id.append(0)", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 84}}, "selectionRange": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 10}}, "detail": "PDTC_drugs = PDTC_drugs.drop([\"Drug\",\"iC50\",\"D1_CONC\",\"D5_CONC\",\"perc.iC50\"],axis=1)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 477, "character": 0}, "end": {"line": 477, "character": 37}}, "selectionRange": {"start": {"line": 477, "character": 0}, "end": {"line": 477, "character": 5}}, "detail": "drugs = pd.concat([drugs,PDTC_drugs])", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 49}}, "selectionRange": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "cell_line_list", "kind": 13, "range": {"start": {"line": 490, "character": 0}, "end": {"line": 490, "character": 102}}, "selectionRange": {"start": {"line": 490, "character": 0}, "end": {"line": 490, "character": 14}}, "detail": "cell_line_list = list(set(drugs_cell_line_list)&set(exp_cell_line_list)&set(mutation_cell_line_list) )", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 497, "character": 0}, "end": {"line": 497, "character": 66}}, "selectionRange": {"start": {"line": 497, "character": 0}, "end": {"line": 497, "character": 16}}, "detail": "cell_line_legend = pd.read_csv(cell_line_detail_file, index_col=1)", "children": []}, {"name": "PDTC_cell_line", "kind": 13, "range": {"start": {"line": 498, "character": 0}, "end": {"line": 498, "character": 206}}, "selectionRange": {"start": {"line": 498, "character": 0}, "end": {"line": 498, "character": 14}}, "detail": "PDTC_cell_line = pd.DataFrame({'Line': [\"BRCA\"]*len(PDTC_exp_cell_line_list), 'Site':[\"PDTC\"]*len(PDTC_exp_cell_line_list),\"Histology\":[\"breast\"]*len(PDTC_exp_cell_line_list)},index=PDTC_exp_cell_line_list)", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 499, "character": 0}, "end": {"line": 499, "character": 63}}, "selectionRange": {"start": {"line": 499, "character": 0}, "end": {"line": 499, "character": 16}}, "detail": "cell_line_legend = pd.concat([cell_line_legend,PDTC_cell_line])", "children": []}, {"name": "tissue_map", "kind": 13, "range": {"start": {"line": 502, "character": 0}, "end": {"line": 502, "character": 15}}, "selectionRange": {"start": {"line": 502, "character": 0}, "end": {"line": 502, "character": 10}}, "detail": "tissue_map = {}", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 504, "character": 0}, "end": {"line": 512, "character": 0}}, "selectionRange": {"start": {"line": 504, "character": 4}, "end": {"line": 504, "character": 13}}, "detail": "for cell_line in cell_line_list: tissue = cell_line_legend.loc[cell_line,'Site'] if tissue not in tissue_map: tissue_map[tissue] = [] tissue_map[tissue].append(cell_line)", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 506, "character": 4}, "end": {"line": 506, "character": 51}}, "selectionRange": {"start": {"line": 506, "character": 4}, "end": {"line": 506, "character": 10}}, "detail": "tissue = cell_line_legend.loc[cell_line,'Site']", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 513, "character": 0}, "end": {"line": 513, "character": 23}}, "selectionRange": {"start": {"line": 513, "character": 0}, "end": {"line": 513, "character": 19}}, "detail": "large_tissue_number = 0", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 514, "character": 0}, "end": {"line": 520, "character": 0}}, "selectionRange": {"start": {"line": 514, "character": 4}, "end": {"line": 514, "character": 10}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 514, "character": 0}, "end": {"line": 520, "character": 0}}, "selectionRange": {"start": {"line": 514, "character": 12}, "end": {"line": 514, "character": 21}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 517, "character": 8}, "end": {"line": 517, "character": 32}}, "selectionRange": {"start": {"line": 517, "character": 8}, "end": {"line": 517, "character": 27}}, "detail": "large_tissue_number += 1", "children": []}, {"name": "new_exp_gene_list", "kind": 13, "range": {"start": {"line": 540, "character": 0}, "end": {"line": 540, "character": 22}}, "selectionRange": {"start": {"line": 540, "character": 0}, "end": {"line": 540, "character": 17}}, "detail": "new_exp_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 541, "character": 0}, "end": {"line": 544, "character": 0}}, "selectionRange": {"start": {"line": 541, "character": 4}, "end": {"line": 541, "character": 5}}, "detail": "for i in exp_gene_list: if i in valid_gene_list: new_exp_gene_list.append(i)", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 549, "character": 0}, "end": {"line": 549, "character": 41}}, "selectionRange": {"start": {"line": 549, "character": 0}, "end": {"line": 549, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 550, "character": 0}, "end": {"line": 550, "character": 38}}, "selectionRange": {"start": {"line": 550, "character": 0}, "end": {"line": 550, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 551, "character": 0}, "end": {"line": 551, "character": 72}}, "selectionRange": {"start": {"line": 551, "character": 0}, "end": {"line": 551, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 553, "character": 0}, "end": {"line": 553, "character": 43}}, "selectionRange": {"start": {"line": 553, "character": 0}, "end": {"line": 553, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 554, "character": 0}, "end": {"line": 554, "character": 68}}, "selectionRange": {"start": {"line": 554, "character": 0}, "end": {"line": 554, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 561, "character": 0}, "end": {"line": 561, "character": 58}}, "selectionRange": {"start": {"line": 561, "character": 0}, "end": {"line": 561, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 562, "character": 0}, "end": {"line": 562, "character": 68}}, "selectionRange": {"start": {"line": 562, "character": 0}, "end": {"line": 562, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "new_data_file", "kind": 13, "range": {"start": {"line": 571, "character": 0}, "end": {"line": 571, "character": 18}}, "selectionRange": {"start": {"line": 571, "character": 0}, "end": {"line": 571, "character": 13}}, "detail": "new_data_file = ''", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 41}}, "selectionRange": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 38}}, "selectionRange": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 72}}, "selectionRange": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 43}}, "selectionRange": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 68}}, "selectionRange": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 58}}, "selectionRange": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 68}}, "selectionRange": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "rename_selected_drug_list", "kind": 13, "range": {"start": {"line": 592, "character": 0}, "end": {"line": 592, "character": 30}}, "selectionRange": {"start": {"line": 592, "character": 0}, "end": {"line": 592, "character": 25}}, "detail": "rename_selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 594, "character": 0}, "end": {"line": 664, "character": 0}}, "selectionRange": {"start": {"line": 594, "character": 4}, "end": {"line": 594, "character": 8}}, "detail": "for drug in selected_drug_list: print(drug) if drug not in drug2id_mapping: print('drug name wrong', drug) else: cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]] feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) ) feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) ) print(len(feature_exp_gene_list) + len(feature_mut_gene_list)) if len(feature_exp_gene_list) + len(feature_mut_gene_list) == 0: continue feature_description = [] drug_tissue_map = {} drug = drug.replace(' ','_') rename_selected_drug_list.append(drug) if drug == 'Nutlin-3a_(-)': drug = 'Nutlin-3a' drug_folder = '/data/merged/drug_feature/' + drug + '/' if not os.path.exists(drug_folder): os.makedirs(drug_folder) for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description)) file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\") pickle.dump(drug_tissue_map,file_handle) file_handle.close()", "children": []}, {"name": "cell_line_drug_matrix", "kind": 13, "range": {"start": {"line": 602, "character": 8}, "end": {"line": 602, "character": 84}}, "selectionRange": {"start": {"line": 602, "character": 8}, "end": {"line": 602, "character": 29}}, "detail": "cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]]", "children": []}, {"name": "feature_exp_gene_list", "kind": 13, "range": {"start": {"line": 607, "character": 8}, "end": {"line": 607, "character": 98}}, "selectionRange": {"start": {"line": 607, "character": 8}, "end": {"line": 607, "character": 29}}, "detail": "feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) )", "children": []}, {"name": "feature_mut_gene_list", "kind": 13, "range": {"start": {"line": 608, "character": 8}, "end": {"line": 608, "character": 98}}, "selectionRange": {"start": {"line": 608, "character": 8}, "end": {"line": 608, "character": 29}}, "detail": "feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) )", "children": []}, {"name": "feature_description", "kind": 13, "range": {"start": {"line": 612, "character": 8}, "end": {"line": 612, "character": 32}}, "selectionRange": {"start": {"line": 612, "character": 8}, "end": {"line": 612, "character": 27}}, "detail": "feature_description = []", "children": []}, {"name": "drug_tissue_map", "kind": 13, "range": {"start": {"line": 614, "character": 8}, "end": {"line": 614, "character": 28}}, "selectionRange": {"start": {"line": 614, "character": 8}, "end": {"line": 614, "character": 23}}, "detail": "drug_tissue_map = {}", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 616, "character": 8}, "end": {"line": 616, "character": 36}}, "selectionRange": {"start": {"line": 616, "character": 8}, "end": {"line": 616, "character": 12}}, "detail": "drug = drug.replace(' ','_')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 622, "character": 12}, "end": {"line": 622, "character": 30}}, "selectionRange": {"start": {"line": 622, "character": 12}, "end": {"line": 622, "character": 16}}, "detail": "drug = 'Nutlin-3a'", "children": []}, {"name": "drug_folder", "kind": 13, "range": {"start": {"line": 624, "character": 8}, "end": {"line": 624, "character": 63}}, "selectionRange": {"start": {"line": 624, "character": 8}, "end": {"line": 624, "character": 19}}, "detail": "drug_folder = '/data/merged/drug_feature/' + drug + '/'", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 630, "character": 8}, "end": {"line": 660, "character": 0}}, "selectionRange": {"start": {"line": 630, "character": 12}, "end": {"line": 630, "character": 18}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "tissue_cell_line_list", "kind": 13, "range": {"start": {"line": 630, "character": 8}, "end": {"line": 660, "character": 0}}, "selectionRange": {"start": {"line": 630, "character": 20}, "end": {"line": 630, "character": 41}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 633, "character": 12}, "end": {"line": 633, "character": 103}}, "selectionRange": {"start": {"line": 633, "character": 12}, "end": {"line": 633, "character": 35}}, "detail": "drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list )", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 634, "character": 12}, "end": {"line": 634, "character": 67}}, "selectionRange": {"start": {"line": 634, "character": 12}, "end": {"line": 634, "character": 35}}, "detail": "drug_specific_cell_line = list(drug_specific_cell_line)", "children": []}, {"name": "feature_list", "kind": 13, "range": {"start": {"line": 637, "character": 12}, "end": {"line": 637, "character": 29}}, "selectionRange": {"start": {"line": 637, "character": 12}, "end": {"line": 637, "character": 24}}, "detail": "feature_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 641, "character": 16}, "end": {"line": 643, "character": 0}}, "selectionRange": {"start": {"line": 641, "character": 20}, "end": {"line": 641, "character": 24}}, "detail": "for gene in feature_exp_gene_list: feature_description.append(gene+'_expression')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 646, "character": 16}, "end": {"line": 648, "character": 0}}, "selectionRange": {"start": {"line": 646, "character": 20}, "end": {"line": 646, "character": 24}}, "detail": "for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation')", "children": []}, {"name": "feature", "kind": 13, "range": {"start": {"line": 649, "character": 12}, "end": {"line": 649, "character": 58}}, "selectionRange": {"start": {"line": 649, "character": 12}, "end": {"line": 649, "character": 19}}, "detail": "feature = np.concatenate(feature_list, axis=1)", "children": []}, {"name": "label", "kind": 13, "range": {"start": {"line": 651, "character": 12}, "end": {"line": 651, "character": 88}}, "selectionRange": {"start": {"line": 651, "character": 12}, "end": {"line": 651, "character": 17}}, "detail": "label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 661, "character": 8}, "end": {"line": 661, "character": 84}}, "selectionRange": {"start": {"line": 661, "character": 8}, "end": {"line": 661, "character": 19}}, "detail": "file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\")", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 665, "character": 0}, "end": {"line": 665, "character": 52}}, "selectionRange": {"start": {"line": 665, "character": 0}, "end": {"line": 665, "character": 11}}, "detail": "file_handle = open('rename_selected_drug_list', 'w')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 666, "character": 0}, "end": {"line": 668, "character": 0}}, "selectionRange": {"start": {"line": 666, "character": 4}, "end": {"line": 666, "character": 8}}, "detail": "for drug in rename_selected_drug_list: file_handle.writelines(drug+ '\\n')", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 686, "character": 0}, "end": {"line": 686, "character": 13}}, "selectionRange": {"start": {"line": 686, "character": 7}, "end": {"line": 686, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cell_line_loc", "kind": 13, "range": {"start": {"line": 692, "character": 0}, "end": {"line": 692, "character": 84}}, "selectionRange": {"start": {"line": 692, "character": 0}, "end": {"line": 692, "character": 13}}, "detail": "cell_line_loc = '/cellar/users/samsonfong/Projects/tcrp-v2/from-ma/cell_line_lists/'", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 698, "character": 0}, "end": {"line": 700, "character": 0}}, "selectionRange": {"start": {"line": 698, "character": 53}, "end": {"line": 698, "character": 54}}, "detail": "with open('/data/drug_feature/KU-55933/KU', 'rb') as f: tmap= pickle.load(f)", "children": []}, {"name": "tmap", "kind": 13, "range": {"start": {"line": 699, "character": 4}, "end": {"line": 699, "character": 24}}, "selectionRange": {"start": {"line": 699, "character": 4}, "end": {"line": 699, "character": 8}}, "detail": "tmap= pickle.load(f)", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 717, "character": 0}, "end": {"line": 717, "character": 68}}, "selectionRange": {"start": {"line": 717, "character": 0}, "end": {"line": 717, "character": 1}}, "detail": "f = np.load('/data/drug_feature/KU-55933/lung_KU-55933_feature.npy')", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///root/capsule/code/process_merged.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 30, "result": [{"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///root/capsule/code/process_merged.py", "version": 3}, "edits": [{"range": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 0}}, "newText": "def jls_extract_def():\n    "}, {"range": {"start": {"line": 227, "character": 0}, "end": {"line": 228, "character": 0}}, "newText": "    \n    "}, {"range": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 230, "character": 0}, "end": {"line": 230, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 232, "character": 0}, "end": {"line": 232, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 233, "character": 0}, "end": {"line": 233, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 235, "character": 4}, "end": {"line": 235, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 237, "character": 8}, "end": {"line": 237, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 238, "character": 12}, "end": {"line": 238, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 16}}, "newText": "    "}, {"range": {"start": {"line": 240, "character": 12}, "end": {"line": 240, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 241, "character": 0}, "end": {"line": 241, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 242, "character": 8}, "end": {"line": 244, "character": 0}}, "newText": "    drug = drug.strip()\n    \n    "}, {"range": {"start": {"line": 245, "character": 8}, "end": {"line": 245, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 246, "character": 12}, "end": {"line": 246, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 247, "character": 12}, "end": {"line": 248, "character": 0}}, "newText": "    drug_target_list.append(target_list_str.strip())\n    "}, {"range": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 250, "character": 12}, "end": {"line": 250, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 251, "character": 16}, "end": {"line": 251, "character": 16}}, "newText": "    "}, {"range": {"start": {"line": 252, "character": 16}, "end": {"line": 252, "character": 54}}, "newText": "    drug_target_list.append(target.strip())\n    return drug_target_list, i, drug_target_map, drug, target_list, file_handle\n\n\ndrug_target_list, i, drug_target_map, drug, target_list, file_handle = jls_extract_def("}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 31, "result": [{"uri": "file:///root/capsule/code/process_merged.py", "range": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 11}}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 32, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 33, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 34, "result": [{"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///root/capsule/code/process_merged.py", "version": 3}, "edits": [{"range": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 0}}, "newText": "def jls_extract_def():\n    "}, {"range": {"start": {"line": 227, "character": 0}, "end": {"line": 228, "character": 0}}, "newText": "    \n    "}, {"range": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 230, "character": 0}, "end": {"line": 230, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 232, "character": 0}, "end": {"line": 232, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 233, "character": 0}, "end": {"line": 233, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 235, "character": 4}, "end": {"line": 235, "character": 4}}, "newText": "    "}, {"range": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 237, "character": 8}, "end": {"line": 237, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 238, "character": 12}, "end": {"line": 238, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 16}}, "newText": "    "}, {"range": {"start": {"line": 240, "character": 12}, "end": {"line": 240, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 241, "character": 0}, "end": {"line": 241, "character": 0}}, "newText": "    "}, {"range": {"start": {"line": 242, "character": 8}, "end": {"line": 244, "character": 0}}, "newText": "    drug = drug.strip()\n    \n    "}, {"range": {"start": {"line": 245, "character": 8}, "end": {"line": 245, "character": 8}}, "newText": "    "}, {"range": {"start": {"line": 246, "character": 12}, "end": {"line": 246, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 247, "character": 12}, "end": {"line": 248, "character": 0}}, "newText": "    drug_target_list.append(target_list_str.strip())\n    "}, {"range": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 250, "character": 12}, "end": {"line": 250, "character": 12}}, "newText": "    "}, {"range": {"start": {"line": 251, "character": 16}, "end": {"line": 251, "character": 16}}, "newText": "    "}, {"range": {"start": {"line": 252, "character": 16}, "end": {"line": 252, "character": 54}}, "newText": "    drug_target_list.append(target.strip())\n    return drug_target_list, i, drug_target_map, drug, target_list, file_handle\n\n\ndrug_target_list, i, drug_target_map, drug, target_list, file_handle = jls_extract_def("}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///root/capsule/code/process_merged.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 35, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 36, "result": [{"name": "matplotlib", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 17}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 17}}, "detail": "module matplotlib", "children": []}, {"name": "os", "kind": 2, "range": {"start": {"line": 10, "character": 0}, "end": {"line": 10, "character": 9}}, "selectionRange": {"start": {"line": 10, "character": 7}, "end": {"line": 10, "character": 9}}, "detail": "module os", "children": []}, {"name": "pd", "kind": 2, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 11, "character": 19}}, "selectionRange": {"start": {"line": 11, "character": 17}, "end": {"line": 11, "character": 19}}, "detail": "module pd", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 12, "character": 0}, "end": {"line": 12, "character": 18}}, "selectionRange": {"start": {"line": 12, "character": 16}, "end": {"line": 12, "character": 18}}, "detail": "module np", "children": []}, {"name": "sys", "kind": 2, "range": {"start": {"line": 13, "character": 0}, "end": {"line": 13, "character": 10}}, "selectionRange": {"start": {"line": 13, "character": 7}, "end": {"line": 13, "character": 10}}, "detail": "module sys", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 14, "character": 0}, "end": {"line": 14, "character": 13}}, "selectionRange": {"start": {"line": 14, "character": 7}, "end": {"line": 14, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cdist", "kind": 12, "range": {"start": {"line": 15, "character": 0}, "end": {"line": 15, "character": 40}}, "selectionRange": {"start": {"line": 15, "character": 35}, "end": {"line": 15, "character": 40}}, "detail": "def cdist", "children": []}, {"name": "math", "kind": 2, "range": {"start": {"line": 16, "character": 0}, "end": {"line": 16, "character": 11}}, "selectionRange": {"start": {"line": 16, "character": 7}, "end": {"line": 16, "character": 11}}, "detail": "module math", "children": []}, {"name": "nx", "kind": 2, "range": {"start": {"line": 17, "character": 0}, "end": {"line": 17, "character": 21}}, "selectionRange": {"start": {"line": 17, "character": 19}, "end": {"line": 17, "character": 21}}, "detail": "module nx", "children": []}, {"name": "nxacc", "kind": 2, "range": {"start": {"line": 18, "character": 0}, "end": {"line": 18, "character": 56}}, "selectionRange": {"start": {"line": 18, "character": 51}, "end": {"line": 18, "character": 56}}, "detail": "module nxacc", "children": []}, {"name": "nxadag", "kind": 2, "range": {"start": {"line": 19, "character": 0}, "end": {"line": 19, "character": 40}}, "selectionRange": {"start": {"line": 19, "character": 34}, "end": {"line": 19, "character": 40}}, "detail": "module nxadag", "children": []}, {"name": "plt", "kind": 2, "range": {"start": {"line": 20, "character": 0}, "end": {"line": 20, "character": 31}}, "selectionRange": {"start": {"line": 20, "character": 28}, "end": {"line": 20, "character": 31}}, "detail": "module plt", "children": []}, {"name": "sns", "kind": 2, "range": {"start": {"line": 21, "character": 0}, "end": {"line": 21, "character": 21}}, "selectionRange": {"start": {"line": 21, "character": 18}, "end": {"line": 21, "character": 21}}, "detail": "module sns", "children": []}, {"name": "itertools", "kind": 2, "range": {"start": {"line": 22, "character": 0}, "end": {"line": 22, "character": 16}}, "selectionRange": {"start": {"line": 22, "character": 7}, "end": {"line": 22, "character": 16}}, "detail": "module itertools", "children": []}, {"name": "mygene", "kind": 2, "range": {"start": {"line": 23, "character": 0}, "end": {"line": 23, "character": 13}}, "selectionRange": {"start": {"line": 23, "character": 7}, "end": {"line": 23, "character": 13}}, "detail": "module mygene", "children": []}, {"name": "re", "kind": 2, "range": {"start": {"line": 24, "character": 0}, "end": {"line": 24, "character": 9}}, "selectionRange": {"start": {"line": 24, "character": 7}, "end": {"line": 24, "character": 9}}, "detail": "module re", "children": []}, {"name": "selected_exp_gene_list", "kind": 13, "range": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 95}}, "selectionRange": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 22}}, "detail": "selected_exp_gene_list = pd.read_csv(\"/data/common_exp_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "selected_mut_gene_list", "kind": 13, "range": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 95}}, "selectionRange": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 22}}, "detail": "selected_mut_gene_list = pd.read_csv(\"/data/common_mut_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "load_network", "kind": 12, "range": {"start": {"line": 37, "character": 0}, "end": {"line": 65, "character": 28}}, "selectionRange": {"start": {"line": 37, "character": 4}, "end": {"line": 37, "character": 16}}, "detail": "def load_network", "children": []}, {"name": "load_name_space", "kind": 12, "range": {"start": {"line": 67, "character": 0}, "end": {"line": 79, "character": 21}}, "selectionRange": {"start": {"line": 67, "character": 4}, "end": {"line": 67, "character": 19}}, "detail": "def load_name_space", "children": []}, {"name": "list2index", "kind": 12, "range": {"start": {"line": 81, "character": 0}, "end": {"line": 88, "character": 41}}, "selectionRange": {"start": {"line": 81, "character": 4}, "end": {"line": 81, "character": 14}}, "detail": "def list2index", "children": []}, {"name": "PDTC_data_file", "kind": 13, "range": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 30}}, "selectionRange": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 14}}, "detail": "PDTC_data_file = '/data/PTDC/'", "children": []}, {"name": "PDTC_exp_data_file", "kind": 13, "range": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 60}}, "selectionRange": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 18}}, "detail": "PDTC_exp_data_file = PDTC_data_file + 'ExpressionModels.tsv'", "children": []}, {"name": "PDTC_drug_cell_line_file", "kind": 13, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 72}}, "selectionRange": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 24}}, "detail": "PDTC_drug_cell_line_file = PDTC_data_file + 'DrugResponsesAUCModels.tsv'", "children": []}, {"name": "PDTC_mutation_data_file", "kind": 13, "range": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 59}}, "selectionRange": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 23}}, "detail": "PDTC_mutation_data_file = PDTC_data_file + 'SNVsModels.tsv'", "children": []}, {"name": "PDTC_drug_target_file", "kind": 13, "range": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 47}}, "selectionRange": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 21}}, "detail": "PDTC_drug_target_file ='/data/drug_targets.tsv'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 37}}, "selectionRange": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 46}}, "selectionRange": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "data_file", "kind": 13, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 25}}, "selectionRange": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 9}}, "detail": "data_file = '/data/GDSC/'", "children": []}, {"name": "new_network_file", "kind": 13, "range": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 27}}, "selectionRange": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 16}}, "detail": "new_network_file = '/data/'", "children": []}, {"name": "exp_data_file", "kind": 13, "range": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 61}}, "selectionRange": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 13}}, "detail": "exp_data_file = data_file + 'Cell_line_RMA_proc_basalExp.txt'", "children": []}, {"name": "drug_cell_line_file", "kind": 13, "range": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 64}}, "selectionRange": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 19}}, "detail": "drug_cell_line_file = data_file + 'v17_fitted_dose_response.csv'", "children": []}, {"name": "cell_line_detail_file", "kind": 13, "range": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 60}}, "selectionRange": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 21}}, "detail": "cell_line_detail_file = data_file + 'Cell_Lines_Details.csv'", "children": []}, {"name": "mutation_data_file", "kind": 13, "range": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 51}}, "selectionRange": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 18}}, "detail": "mutation_data_file = data_file + 'WES_variants.csv'", "children": []}, {"name": "drug_target_file", "kind": 13, "range": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 42}}, "selectionRange": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 16}}, "detail": "drug_target_file ='/data/drug_targets.tsv'", "children": []}, {"name": "feature_folder", "kind": 13, "range": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 27}}, "selectionRange": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 14}}, "detail": "feature_folder = 'feature/'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 37}}, "selectionRange": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 46}}, "selectionRange": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 58}}, "selectionRange": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 6}}, "detail": "exp_df = pd.read_csv(exp_data_file, sep='\\t', index_col=0)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 21}}, "selectionRange": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 6}}, "detail": "exp_df = exp_df.T[1:]", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 56}}, "selectionRange": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 6}}, "detail": "exp_df = exp_df.rename(columns={np.nan: 'NO_GENE_NAME'})", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 43}}, "selectionRange": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 6}}, "detail": "exp_df = exp_df.drop('NO_GENE_NAME',axis=1)", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 138, "character": 0}, "end": {"line": 140, "character": 26}}, "selectionRange": {"start": {"line": 138, "character": 4}, "end": {"line": 138, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 142, "character": 0}, "end": {"line": 142, "character": 44}}, "selectionRange": {"start": {"line": 142, "character": 7}, "end": {"line": 142, "character": 12}}, "detail": "exp_df.index = exp_df.index.map(stripNumber)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 40}}, "selectionRange": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 6}}, "detail": "exp_df = exp_df.groupby(level=0).first()", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 39}}, "selectionRange": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 6}}, "detail": "exp_df = exp_df[selected_exp_gene_list]", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 36}}, "selectionRange": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 48}}, "selectionRange": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 78}}, "selectionRange": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 11}}, "detail": "PDTC_exp_df = pd.read_csv(PDTC_exp_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 31}}, "selectionRange": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df.T[1:]", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 160, "character": 0}, "end": {"line": 162, "character": 26}}, "selectionRange": {"start": {"line": 160, "character": 4}, "end": {"line": 160, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 49}}, "selectionRange": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df[selected_exp_gene_list]", "children": []}, {"name": "PDTC_exp_gene_list", "kind": 13, "range": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 46}}, "selectionRange": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 18}}, "detail": "PDTC_exp_gene_list = list(PDTC_exp_df.columns)", "children": []}, {"name": "PDTC_exp_cell_line_list", "kind": 13, "range": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 58}}, "selectionRange": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 23}}, "detail": "PDTC_exp_cell_line_list = list(PDTC_exp_df.index.unique())", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 40}}, "selectionRange": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 6}}, "detail": "exp_df = pd.concat([exp_df,PDTC_exp_df])", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 36}}, "selectionRange": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 48}}, "selectionRange": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "maf", "kind": 13, "range": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 69}}, "selectionRange": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 3}}, "detail": "maf = pd.read_csv(mutation_data_file, sep=',', index_col=0).fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 75}}, "selectionRange": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 11}}, "detail": "mutation_df = maf.groupby(['COSMIC_ID', 'Gene']).size().unstack().fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 49}}, "selectionRange": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 11}}, "detail": "mutation_df = mutation_df[selected_mut_gene_list]", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 46}}, "selectionRange": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 58}}, "selectionRange": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "PDTC_maf", "kind": 13, "range": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 80}}, "selectionRange": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 8}}, "detail": "PDTC_maf = pd.read_csv(PDTC_mutation_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 61}}, "selectionRange": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_maf.replace(to_replace=\"NO\",value=0.0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 82}}, "selectionRange": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_mutation_df.replace(to_replace=\"chr*\",value=1.0,regex=True)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 47}}, "selectionRange": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df.transpose()", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 59}}, "selectionRange": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df[selected_mut_gene_list]", "children": []}, {"name": "PDTC_mutation_gene_list", "kind": 13, "range": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 56}}, "selectionRange": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 23}}, "detail": "PDTC_mutation_gene_list = list(PDTC_mutation_df.columns)", "children": []}, {"name": "PDTC_mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 68}}, "selectionRange": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 28}}, "detail": "PDTC_mutation_cell_line_list = list(PDTC_mutation_df.index.unique())", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 55}}, "selectionRange": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 11}}, "detail": "mutation_df = pd.concat([mutation_df,PDTC_mutation_df])", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 46}}, "selectionRange": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 58}}, "selectionRange": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 36}}, "selectionRange": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 11}}, "detail": "file_handle = open(drug_target_file)", "children": []}, {"name": "drug_target_map", "kind": 13, "range": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 20}}, "selectionRange": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 15}}, "detail": "drug_target_map = {}", "children": []}, {"name": "drug_target_list", "kind": 13, "range": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 21}}, "selectionRange": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 16}}, "detail": "drug_target_list = []", "children": []}, {"name": "line", "kind": 13, "range": {"start": {"line": 230, "character": 0}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 230, "character": 4}, "end": {"line": 230, "character": 8}}, "detail": "for line in file_handle: new_line = line.rstrip().split(\"\\t\") drug = new_line[0] target_list=new_line[1].split(',') if drug != \"Drug\": target_list_str = \"\" for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\" drug = drug.strip() drug_target_map[drug] = [] if ',' not in target_list_str: drug_target_map[drug].append(target_list_str.strip()) drug_target_list.append(target_list_str.strip()) else: target_list = target_list_str.split(',') for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "new_line", "kind": 13, "range": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 40}}, "selectionRange": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 12}}, "detail": "new_line = line.rstrip().split(\"\\t\")", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 22}}, "selectionRange": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 8}}, "detail": "drug = new_line[0]", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 38}}, "selectionRange": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 15}}, "detail": "target_list=new_line[1].split(',')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 28}}, "selectionRange": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 23}}, "detail": "target_list_str = \"\"", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 237, "character": 8}, "end": {"line": 242, "character": 0}}, "selectionRange": {"start": {"line": 237, "character": 12}, "end": {"line": 237, "character": 13}}, "detail": "for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 65}}, "selectionRange": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 71}}, "selectionRange": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 27}}, "selectionRange": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 12}}, "detail": "drug = drug.strip()", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 52}}, "selectionRange": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 23}}, "detail": "target_list = target_list_str.split(',')", "children": []}, {"name": "target", "kind": 13, "range": {"start": {"line": 250, "character": 12}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 250, "character": 16}, "end": {"line": 250, "character": 22}}, "detail": "for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 257, "character": 0}, "end": {"line": 257, "character": 36}}, "selectionRange": {"start": {"line": 257, "character": 0}, "end": {"line": 257, "character": 11}}, "detail": "file_handle = open(drug_target_file)", "children": []}, {"name": "drug_target_map", "kind": 13, "range": {"start": {"line": 259, "character": 0}, "end": {"line": 259, "character": 20}}, "selectionRange": {"start": {"line": 259, "character": 0}, "end": {"line": 259, "character": 15}}, "detail": "drug_target_map = {}", "children": []}, {"name": "drug_target_list", "kind": 13, "range": {"start": {"line": 260, "character": 0}, "end": {"line": 260, "character": 21}}, "selectionRange": {"start": {"line": 260, "character": 0}, "end": {"line": 260, "character": 16}}, "detail": "drug_target_list = []", "children": []}, {"name": "line", "kind": 13, "range": {"start": {"line": 261, "character": 0}, "end": {"line": 284, "character": 0}}, "selectionRange": {"start": {"line": 261, "character": 4}, "end": {"line": 261, "character": 8}}, "detail": "for line in file_handle: new_line = line.rstrip().split(\"\\t\") drug = new_line[0] target_list=new_line[1].split(',') if drug != \"Drug\": target_list_str = \"\" for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\" drug = drug.strip() drug_target_map[drug] = [] if ',' not in target_list_str: drug_target_map[drug].append(target_list_str.strip()) drug_target_list.append(target_list_str.strip()) else: target_list = target_list_str.split(',') for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "new_line", "kind": 13, "range": {"start": {"line": 263, "character": 4}, "end": {"line": 263, "character": 40}}, "selectionRange": {"start": {"line": 263, "character": 4}, "end": {"line": 263, "character": 12}}, "detail": "new_line = line.rstrip().split(\"\\t\")", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 264, "character": 4}, "end": {"line": 264, "character": 22}}, "selectionRange": {"start": {"line": 264, "character": 4}, "end": {"line": 264, "character": 8}}, "detail": "drug = new_line[0]", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 265, "character": 4}, "end": {"line": 265, "character": 38}}, "selectionRange": {"start": {"line": 265, "character": 4}, "end": {"line": 265, "character": 15}}, "detail": "target_list=new_line[1].split(',')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 267, "character": 8}, "end": {"line": 267, "character": 28}}, "selectionRange": {"start": {"line": 267, "character": 8}, "end": {"line": 267, "character": 23}}, "detail": "target_list_str = \"\"", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 268, "character": 8}, "end": {"line": 273, "character": 0}}, "selectionRange": {"start": {"line": 268, "character": 12}, "end": {"line": 268, "character": 13}}, "detail": "for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 270, "character": 16}, "end": {"line": 270, "character": 65}}, "selectionRange": {"start": {"line": 270, "character": 16}, "end": {"line": 270, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 272, "character": 16}, "end": {"line": 272, "character": 71}}, "selectionRange": {"start": {"line": 272, "character": 16}, "end": {"line": 272, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 273, "character": 8}, "end": {"line": 273, "character": 27}}, "selectionRange": {"start": {"line": 273, "character": 8}, "end": {"line": 273, "character": 12}}, "detail": "drug = drug.strip()", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 280, "character": 12}, "end": {"line": 280, "character": 52}}, "selectionRange": {"start": {"line": 280, "character": 12}, "end": {"line": 280, "character": 23}}, "detail": "target_list = target_list_str.split(',')", "children": []}, {"name": "target", "kind": 13, "range": {"start": {"line": 281, "character": 12}, "end": {"line": 284, "character": 0}}, "selectionRange": {"start": {"line": 281, "character": 16}, "end": {"line": 281, "character": 22}}, "detail": "for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "drugs_legend", "kind": 13, "range": {"start": {"line": 287, "character": 0}, "end": {"line": 287, "character": 85}}, "selectionRange": {"start": {"line": 287, "character": 0}, "end": {"line": 287, "character": 12}}, "detail": "drugs_legend = pd.read_csv('/data/GDSC/Screened_Compounds.csv', sep=',', index_col=0)", "children": []}, {"name": "drug2id_mapping", "kind": 13, "range": {"start": {"line": 289, "character": 0}, "end": {"line": 289, "character": 20}}, "selectionRange": {"start": {"line": 289, "character": 0}, "end": {"line": 289, "character": 15}}, "detail": "drug2id_mapping = {}", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 291, "character": 0}, "end": {"line": 294, "character": 0}}, "selectionRange": {"start": {"line": 291, "character": 4}, "end": {"line": 291, "character": 9}}, "detail": "for index in list(drugs_legend.index) : drug_name = drugs_legend.loc[index,'Drug Name'] drug2id_mapping[ drug_name ] = index", "children": []}, {"name": "drug_name", "kind": 13, "range": {"start": {"line": 292, "character": 4}, "end": {"line": 292, "character": 51}}, "selectionRange": {"start": {"line": 292, "character": 4}, "end": {"line": 292, "character": 13}}, "detail": "drug_name = drugs_legend.loc[index,'Drug Name']", "children": []}, {"name": "valid_gene_list", "kind": 13, "range": {"start": {"line": 299, "character": 0}, "end": {"line": 299, "character": 92}}, "selectionRange": {"start": {"line": 299, "character": 0}, "end": {"line": 299, "character": 15}}, "detail": "valid_gene_list = list(set(drug_target_list) | set(exp_gene_list) | set(mutation_gene_list))", "children": []}, {"name": "network_list", "kind": 13, "range": {"start": {"line": 305, "character": 0}, "end": {"line": 305, "character": 82}}, "selectionRange": {"start": {"line": 305, "character": 0}, "end": {"line": 305, "character": 12}}, "detail": "network_list = [new_network_file+inbiomap_file, new_network_file+pathwaycomm_file]", "children": []}, {"name": "gene_neighbor_map", "kind": 13, "range": {"start": {"line": 306, "character": 0}, "end": {"line": 306, "character": 64}}, "selectionRange": {"start": {"line": 306, "character": 0}, "end": {"line": 306, "character": 17}}, "detail": "gene_neighbor_map = load_network(network_list, valid_gene_list)", "children": []}, {"name": "gene_name_df", "kind": 13, "range": {"start": {"line": 312, "character": 0}, "end": {"line": 312, "character": 89}}, "selectionRange": {"start": {"line": 312, "character": 0}, "end": {"line": 312, "character": 12}}, "detail": "gene_name_df = pd.read_table('/data/HUGO_protein-coding_gene.tsv',index_col=25, sep='\\t')", "children": []}, {"name": "gene_name_map", "kind": 13, "range": {"start": {"line": 318, "character": 0}, "end": {"line": 318, "character": 18}}, "selectionRange": {"start": {"line": 318, "character": 0}, "end": {"line": 318, "character": 13}}, "detail": "gene_name_map = {}", "children": []}, {"name": "uniprot_gene", "kind": 13, "range": {"start": {"line": 320, "character": 0}, "end": {"line": 329, "character": 0}}, "selectionRange": {"start": {"line": 320, "character": 4}, "end": {"line": 320, "character": 16}}, "detail": "for uniprot_gene in gene_name_df.index: if isinstance(uniprot_gene, type('aaa')) == False: continue if isinstance(gene_name_df.loc[uniprot_gene, 'symbol'], type('aaa')) == False: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol'][0] else: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 76}}, "selectionRange": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "uniprot_gene_set", "kind": 13, "range": {"start": {"line": 336, "character": 0}, "end": {"line": 336, "character": 24}}, "selectionRange": {"start": {"line": 336, "character": 0}, "end": {"line": 336, "character": 16}}, "detail": "uniprot_gene_set = set()", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 338, "character": 0}, "end": {"line": 347, "character": 0}}, "selectionRange": {"start": {"line": 338, "character": 4}, "end": {"line": 338, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 343, "character": 4}, "end": {"line": 343, "character": 74}}, "selectionRange": {"start": {"line": 343, "character": 4}, "end": {"line": 343, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 345, "character": 4}, "end": {"line": 347, "character": 0}}, "selectionRange": {"start": {"line": 345, "character": 8}, "end": {"line": 345, "character": 12}}, "detail": "for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "query_gene_set", "kind": 13, "range": {"start": {"line": 350, "character": 0}, "end": {"line": 350, "character": 19}}, "selectionRange": {"start": {"line": 350, "character": 0}, "end": {"line": 350, "character": 14}}, "detail": "query_gene_set = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 352, "character": 0}, "end": {"line": 355, "character": 0}}, "selectionRange": {"start": {"line": 352, "character": 4}, "end": {"line": 352, "character": 8}}, "detail": "for gene in uniprot_gene_set: if gene not in gene_name_map: query_gene_set.append(gene)", "children": []}, {"name": "query_gene_list", "kind": 13, "range": {"start": {"line": 358, "character": 0}, "end": {"line": 358, "character": 38}}, "selectionRange": {"start": {"line": 358, "character": 0}, "end": {"line": 358, "character": 15}}, "detail": "query_gene_list = list(query_gene_set)", "children": []}, {"name": "mg", "kind": 13, "range": {"start": {"line": 360, "character": 0}, "end": {"line": 360, "character": 24}}, "selectionRange": {"start": {"line": 360, "character": 0}, "end": {"line": 360, "character": 2}}, "detail": "mg = mygene.MyGeneInfo()", "children": []}, {"name": "out", "kind": 13, "range": {"start": {"line": 361, "character": 0}, "end": {"line": 361, "character": 87}}, "selectionRange": {"start": {"line": 361, "character": 0}, "end": {"line": 361, "character": 3}}, "detail": "out = mg.querymany(query_gene_list, scopes='uniprot', fields='symbol', species='human')", "children": []}, {"name": "not_found_gene_list", "kind": 13, "range": {"start": {"line": 363, "character": 0}, "end": {"line": 363, "character": 24}}, "selectionRange": {"start": {"line": 363, "character": 0}, "end": {"line": 363, "character": 19}}, "detail": "not_found_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 365, "character": 0}, "end": {"line": 370, "character": 0}}, "selectionRange": {"start": {"line": 365, "character": 4}, "end": {"line": 365, "character": 5}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 365, "character": 0}, "end": {"line": 370, "character": 0}}, "selectionRange": {"start": {"line": 365, "character": 7}, "end": {"line": 365, "character": 11}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 377, "character": 0}, "end": {"line": 377, "character": 76}}, "selectionRange": {"start": {"line": 377, "character": 0}, "end": {"line": 377, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 379, "character": 0}, "end": {"line": 401, "character": 0}}, "selectionRange": {"start": {"line": 379, "character": 4}, "end": {"line": 379, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') complex_symbol_list = [] for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] ) for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 384, "character": 4}, "end": {"line": 384, "character": 74}}, "selectionRange": {"start": {"line": 384, "character": 4}, "end": {"line": 384, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "complex_symbol_list", "kind": 13, "range": {"start": {"line": 386, "character": 4}, "end": {"line": 386, "character": 28}}, "selectionRange": {"start": {"line": 386, "character": 4}, "end": {"line": 386, "character": 23}}, "detail": "complex_symbol_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 388, "character": 4}, "end": {"line": 391, "character": 0}}, "selectionRange": {"start": {"line": 388, "character": 8}, "end": {"line": 388, "character": 12}}, "detail": "for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] )", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 392, "character": 4}, "end": {"line": 401, "character": 0}}, "selectionRange": {"start": {"line": 392, "character": 8}, "end": {"line": 392, "character": 13}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 392, "character": 4}, "end": {"line": 401, "character": 0}}, "selectionRange": {"start": {"line": 392, "character": 15}, "end": {"line": 392, "character": 20}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene_exp_neighbor_map", "kind": 13, "range": {"start": {"line": 406, "character": 0}, "end": {"line": 406, "character": 26}}, "selectionRange": {"start": {"line": 406, "character": 0}, "end": {"line": 406, "character": 21}}, "detail": "gene_exp_neighbor_map = {}", "children": []}, {"name": "exp_matrix", "kind": 13, "range": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 26}}, "selectionRange": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 10}}, "detail": "exp_matrix = exp_df.values", "children": []}, {"name": "P", "kind": 13, "range": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 79}}, "selectionRange": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 1}}, "detail": "P = 1 - cdist(np.transpose(exp_matrix), np.transpose(exp_matrix),'correlation')", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 411, "character": 0}, "end": {"line": 425, "character": 0}}, "selectionRange": {"start": {"line": 411, "character": 4}, "end": {"line": 411, "character": 5}}, "detail": "for i in range(len(exp_gene_list)): gene1 = exp_gene_list[i] gene_exp_neighbor_map[gene1] = set() for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2) if gene1 not in gene_exp_neighbor_map[gene1]: print (gene1, 'not in itself?', P[i,i])", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 413, "character": 4}, "end": {"line": 413, "character": 28}}, "selectionRange": {"start": {"line": 413, "character": 4}, "end": {"line": 413, "character": 9}}, "detail": "gene1 = exp_gene_list[i]", "children": []}, {"name": "j", "kind": 13, "range": {"start": {"line": 416, "character": 4}, "end": {"line": 422, "character": 0}}, "selectionRange": {"start": {"line": 416, "character": 8}, "end": {"line": 416, "character": 9}}, "detail": "for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 418, "character": 8}, "end": {"line": 418, "character": 32}}, "selectionRange": {"start": {"line": 418, "character": 8}, "end": {"line": 418, "character": 13}}, "detail": "gene2 = exp_gene_list[j]", "children": []}, {"name": "drug_feature_list", "kind": 13, "range": {"start": {"line": 433, "character": 0}, "end": {"line": 433, "character": 22}}, "selectionRange": {"start": {"line": 433, "character": 0}, "end": {"line": 433, "character": 17}}, "detail": "drug_feature_list = []", "children": []}, {"name": "drug_neighbor_map", "kind": 13, "range": {"start": {"line": 434, "character": 0}, "end": {"line": 434, "character": 22}}, "selectionRange": {"start": {"line": 434, "character": 0}, "end": {"line": 434, "character": 17}}, "detail": "drug_neighbor_map = {}", "children": []}, {"name": "selected_drug_list", "kind": 13, "range": {"start": {"line": 435, "character": 0}, "end": {"line": 435, "character": 23}}, "selectionRange": {"start": {"line": 435, "character": 0}, "end": {"line": 435, "character": 18}}, "detail": "selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 437, "character": 0}, "end": {"line": 454, "character": 0}}, "selectionRange": {"start": {"line": 437, "character": 4}, "end": {"line": 437, "character": 8}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 437, "character": 0}, "end": {"line": 454, "character": 0}}, "selectionRange": {"start": {"line": 437, "character": 10}, "end": {"line": 437, "character": 21}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 440, "character": 8}, "end": {"line": 450, "character": 0}}, "selectionRange": {"start": {"line": 440, "character": 12}, "end": {"line": 440, "character": 16}}, "detail": "for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene]", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 468, "character": 0}, "end": {"line": 468, "character": 52}}, "selectionRange": {"start": {"line": 468, "character": 0}, "end": {"line": 468, "character": 5}}, "detail": "drugs = pd.read_csv(drug_cell_line_file,index_col=2)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 93}}, "selectionRange": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 5}}, "detail": "drugs = drugs.drop([\"DATASET_VERSION\",\"IC50_RESULTS_ID\",\"MAX_CONC_MICROMOLAR\",\"RMSE\"],axis=1)", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 470, "character": 0}, "end": {"line": 470, "character": 49}}, "selectionRange": {"start": {"line": 470, "character": 0}, "end": {"line": 470, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 472, "character": 0}, "end": {"line": 472, "character": 28}}, "selectionRange": {"start": {"line": 472, "character": 0}, "end": {"line": 472, "character": 9}}, "detail": "drug_list = drugs[\"DRUG_ID\"]", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 473, "character": 0}, "end": {"line": 473, "character": 16}}, "selectionRange": {"start": {"line": 473, "character": 0}, "end": {"line": 473, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 483, "character": 0}, "end": {"line": 483, "character": 71}}, "selectionRange": {"start": {"line": 483, "character": 0}, "end": {"line": 483, "character": 10}}, "detail": "PDTC_drugs = pd.read_csv(PDTC_drug_cell_line_file,sep='\\t',index_col=0)", "children": []}, {"name": "PDTC_drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 59}}, "selectionRange": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 25}}, "detail": "PDTC_drugs_cell_line_list = list(PDTC_drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 486, "character": 0}, "end": {"line": 486, "character": 39}}, "selectionRange": {"start": {"line": 486, "character": 0}, "end": {"line": 486, "character": 9}}, "detail": "drug_list = PDTC_drugs[\"Drug\"].tolist()", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 487, "character": 0}, "end": {"line": 487, "character": 16}}, "selectionRange": {"start": {"line": 487, "character": 0}, "end": {"line": 487, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 488, "character": 0}, "end": {"line": 493, "character": 0}}, "selectionRange": {"start": {"line": 488, "character": 4}, "end": {"line": 488, "character": 5}}, "detail": "for i in drug_list: if i in drug2id_mapping.keys(): new_drug_id.append(drug2id_mapping[i]) else: new_drug_id.append(0)", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 495, "character": 0}, "end": {"line": 495, "character": 84}}, "selectionRange": {"start": {"line": 495, "character": 0}, "end": {"line": 495, "character": 10}}, "detail": "PDTC_drugs = PDTC_drugs.drop([\"Drug\",\"iC50\",\"D1_CONC\",\"D5_CONC\",\"perc.iC50\"],axis=1)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 503, "character": 0}, "end": {"line": 503, "character": 37}}, "selectionRange": {"start": {"line": 503, "character": 0}, "end": {"line": 503, "character": 5}}, "detail": "drugs = pd.concat([drugs,PDTC_drugs])", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 510, "character": 0}, "end": {"line": 510, "character": 49}}, "selectionRange": {"start": {"line": 510, "character": 0}, "end": {"line": 510, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "cell_line_list", "kind": 13, "range": {"start": {"line": 516, "character": 0}, "end": {"line": 516, "character": 102}}, "selectionRange": {"start": {"line": 516, "character": 0}, "end": {"line": 516, "character": 14}}, "detail": "cell_line_list = list(set(drugs_cell_line_list)&set(exp_cell_line_list)&set(mutation_cell_line_list) )", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 523, "character": 0}, "end": {"line": 523, "character": 66}}, "selectionRange": {"start": {"line": 523, "character": 0}, "end": {"line": 523, "character": 16}}, "detail": "cell_line_legend = pd.read_csv(cell_line_detail_file, index_col=1)", "children": []}, {"name": "PDTC_cell_line", "kind": 13, "range": {"start": {"line": 524, "character": 0}, "end": {"line": 524, "character": 206}}, "selectionRange": {"start": {"line": 524, "character": 0}, "end": {"line": 524, "character": 14}}, "detail": "PDTC_cell_line = pd.DataFrame({'Line': [\"BRCA\"]*len(PDTC_exp_cell_line_list), 'Site':[\"PDTC\"]*len(PDTC_exp_cell_line_list),\"Histology\":[\"breast\"]*len(PDTC_exp_cell_line_list)},index=PDTC_exp_cell_line_list)", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 525, "character": 0}, "end": {"line": 525, "character": 63}}, "selectionRange": {"start": {"line": 525, "character": 0}, "end": {"line": 525, "character": 16}}, "detail": "cell_line_legend = pd.concat([cell_line_legend,PDTC_cell_line])", "children": []}, {"name": "tissue_map", "kind": 13, "range": {"start": {"line": 528, "character": 0}, "end": {"line": 528, "character": 15}}, "selectionRange": {"start": {"line": 528, "character": 0}, "end": {"line": 528, "character": 10}}, "detail": "tissue_map = {}", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 530, "character": 0}, "end": {"line": 538, "character": 0}}, "selectionRange": {"start": {"line": 530, "character": 4}, "end": {"line": 530, "character": 13}}, "detail": "for cell_line in cell_line_list: tissue = cell_line_legend.loc[cell_line,'Site'] if tissue not in tissue_map: tissue_map[tissue] = [] tissue_map[tissue].append(cell_line)", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 532, "character": 4}, "end": {"line": 532, "character": 51}}, "selectionRange": {"start": {"line": 532, "character": 4}, "end": {"line": 532, "character": 10}}, "detail": "tissue = cell_line_legend.loc[cell_line,'Site']", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 539, "character": 0}, "end": {"line": 539, "character": 23}}, "selectionRange": {"start": {"line": 539, "character": 0}, "end": {"line": 539, "character": 19}}, "detail": "large_tissue_number = 0", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 540, "character": 0}, "end": {"line": 546, "character": 0}}, "selectionRange": {"start": {"line": 540, "character": 4}, "end": {"line": 540, "character": 10}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 540, "character": 0}, "end": {"line": 546, "character": 0}}, "selectionRange": {"start": {"line": 540, "character": 12}, "end": {"line": 540, "character": 21}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 543, "character": 8}, "end": {"line": 543, "character": 32}}, "selectionRange": {"start": {"line": 543, "character": 8}, "end": {"line": 543, "character": 27}}, "detail": "large_tissue_number += 1", "children": []}, {"name": "new_exp_gene_list", "kind": 13, "range": {"start": {"line": 566, "character": 0}, "end": {"line": 566, "character": 22}}, "selectionRange": {"start": {"line": 566, "character": 0}, "end": {"line": 566, "character": 17}}, "detail": "new_exp_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 567, "character": 0}, "end": {"line": 570, "character": 0}}, "selectionRange": {"start": {"line": 567, "character": 4}, "end": {"line": 567, "character": 5}}, "detail": "for i in exp_gene_list: if i in valid_gene_list: new_exp_gene_list.append(i)", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 41}}, "selectionRange": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 38}}, "selectionRange": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 72}}, "selectionRange": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 43}}, "selectionRange": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 68}}, "selectionRange": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 58}}, "selectionRange": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 68}}, "selectionRange": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "new_data_file", "kind": 13, "range": {"start": {"line": 597, "character": 0}, "end": {"line": 597, "character": 18}}, "selectionRange": {"start": {"line": 597, "character": 0}, "end": {"line": 597, "character": 13}}, "detail": "new_data_file = ''", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 601, "character": 0}, "end": {"line": 601, "character": 41}}, "selectionRange": {"start": {"line": 601, "character": 0}, "end": {"line": 601, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 602, "character": 0}, "end": {"line": 602, "character": 38}}, "selectionRange": {"start": {"line": 602, "character": 0}, "end": {"line": 602, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 603, "character": 0}, "end": {"line": 603, "character": 72}}, "selectionRange": {"start": {"line": 603, "character": 0}, "end": {"line": 603, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 605, "character": 0}, "end": {"line": 605, "character": 43}}, "selectionRange": {"start": {"line": 605, "character": 0}, "end": {"line": 605, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 606, "character": 0}, "end": {"line": 606, "character": 68}}, "selectionRange": {"start": {"line": 606, "character": 0}, "end": {"line": 606, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 613, "character": 0}, "end": {"line": 613, "character": 58}}, "selectionRange": {"start": {"line": 613, "character": 0}, "end": {"line": 613, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 614, "character": 0}, "end": {"line": 614, "character": 68}}, "selectionRange": {"start": {"line": 614, "character": 0}, "end": {"line": 614, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "rename_selected_drug_list", "kind": 13, "range": {"start": {"line": 618, "character": 0}, "end": {"line": 618, "character": 30}}, "selectionRange": {"start": {"line": 618, "character": 0}, "end": {"line": 618, "character": 25}}, "detail": "rename_selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 620, "character": 0}, "end": {"line": 690, "character": 0}}, "selectionRange": {"start": {"line": 620, "character": 4}, "end": {"line": 620, "character": 8}}, "detail": "for drug in selected_drug_list: print(drug) if drug not in drug2id_mapping: print('drug name wrong', drug) else: cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]] feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) ) feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) ) print(len(feature_exp_gene_list) + len(feature_mut_gene_list)) if len(feature_exp_gene_list) + len(feature_mut_gene_list) == 0: continue feature_description = [] drug_tissue_map = {} drug = drug.replace(' ','_') rename_selected_drug_list.append(drug) if drug == 'Nutlin-3a_(-)': drug = 'Nutlin-3a' drug_folder = '/data/merged/drug_feature/' + drug + '/' if not os.path.exists(drug_folder): os.makedirs(drug_folder) for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description)) file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\") pickle.dump(drug_tissue_map,file_handle) file_handle.close()", "children": []}, {"name": "cell_line_drug_matrix", "kind": 13, "range": {"start": {"line": 628, "character": 8}, "end": {"line": 628, "character": 84}}, "selectionRange": {"start": {"line": 628, "character": 8}, "end": {"line": 628, "character": 29}}, "detail": "cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]]", "children": []}, {"name": "feature_exp_gene_list", "kind": 13, "range": {"start": {"line": 633, "character": 8}, "end": {"line": 633, "character": 98}}, "selectionRange": {"start": {"line": 633, "character": 8}, "end": {"line": 633, "character": 29}}, "detail": "feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) )", "children": []}, {"name": "feature_mut_gene_list", "kind": 13, "range": {"start": {"line": 634, "character": 8}, "end": {"line": 634, "character": 98}}, "selectionRange": {"start": {"line": 634, "character": 8}, "end": {"line": 634, "character": 29}}, "detail": "feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) )", "children": []}, {"name": "feature_description", "kind": 13, "range": {"start": {"line": 638, "character": 8}, "end": {"line": 638, "character": 32}}, "selectionRange": {"start": {"line": 638, "character": 8}, "end": {"line": 638, "character": 27}}, "detail": "feature_description = []", "children": []}, {"name": "drug_tissue_map", "kind": 13, "range": {"start": {"line": 640, "character": 8}, "end": {"line": 640, "character": 28}}, "selectionRange": {"start": {"line": 640, "character": 8}, "end": {"line": 640, "character": 23}}, "detail": "drug_tissue_map = {}", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 642, "character": 8}, "end": {"line": 642, "character": 36}}, "selectionRange": {"start": {"line": 642, "character": 8}, "end": {"line": 642, "character": 12}}, "detail": "drug = drug.replace(' ','_')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 648, "character": 12}, "end": {"line": 648, "character": 30}}, "selectionRange": {"start": {"line": 648, "character": 12}, "end": {"line": 648, "character": 16}}, "detail": "drug = 'Nutlin-3a'", "children": []}, {"name": "drug_folder", "kind": 13, "range": {"start": {"line": 650, "character": 8}, "end": {"line": 650, "character": 63}}, "selectionRange": {"start": {"line": 650, "character": 8}, "end": {"line": 650, "character": 19}}, "detail": "drug_folder = '/data/merged/drug_feature/' + drug + '/'", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 656, "character": 8}, "end": {"line": 686, "character": 0}}, "selectionRange": {"start": {"line": 656, "character": 12}, "end": {"line": 656, "character": 18}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "tissue_cell_line_list", "kind": 13, "range": {"start": {"line": 656, "character": 8}, "end": {"line": 686, "character": 0}}, "selectionRange": {"start": {"line": 656, "character": 20}, "end": {"line": 656, "character": 41}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 659, "character": 12}, "end": {"line": 659, "character": 103}}, "selectionRange": {"start": {"line": 659, "character": 12}, "end": {"line": 659, "character": 35}}, "detail": "drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list )", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 660, "character": 12}, "end": {"line": 660, "character": 67}}, "selectionRange": {"start": {"line": 660, "character": 12}, "end": {"line": 660, "character": 35}}, "detail": "drug_specific_cell_line = list(drug_specific_cell_line)", "children": []}, {"name": "feature_list", "kind": 13, "range": {"start": {"line": 663, "character": 12}, "end": {"line": 663, "character": 29}}, "selectionRange": {"start": {"line": 663, "character": 12}, "end": {"line": 663, "character": 24}}, "detail": "feature_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 667, "character": 16}, "end": {"line": 669, "character": 0}}, "selectionRange": {"start": {"line": 667, "character": 20}, "end": {"line": 667, "character": 24}}, "detail": "for gene in feature_exp_gene_list: feature_description.append(gene+'_expression')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 672, "character": 16}, "end": {"line": 674, "character": 0}}, "selectionRange": {"start": {"line": 672, "character": 20}, "end": {"line": 672, "character": 24}}, "detail": "for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation')", "children": []}, {"name": "feature", "kind": 13, "range": {"start": {"line": 675, "character": 12}, "end": {"line": 675, "character": 58}}, "selectionRange": {"start": {"line": 675, "character": 12}, "end": {"line": 675, "character": 19}}, "detail": "feature = np.concatenate(feature_list, axis=1)", "children": []}, {"name": "label", "kind": 13, "range": {"start": {"line": 677, "character": 12}, "end": {"line": 677, "character": 88}}, "selectionRange": {"start": {"line": 677, "character": 12}, "end": {"line": 677, "character": 17}}, "detail": "label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 687, "character": 8}, "end": {"line": 687, "character": 84}}, "selectionRange": {"start": {"line": 687, "character": 8}, "end": {"line": 687, "character": 19}}, "detail": "file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\")", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 691, "character": 0}, "end": {"line": 691, "character": 52}}, "selectionRange": {"start": {"line": 691, "character": 0}, "end": {"line": 691, "character": 11}}, "detail": "file_handle = open('rename_selected_drug_list', 'w')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 692, "character": 0}, "end": {"line": 694, "character": 0}}, "selectionRange": {"start": {"line": 692, "character": 4}, "end": {"line": 692, "character": 8}}, "detail": "for drug in rename_selected_drug_list: file_handle.writelines(drug+ '\\n')", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 712, "character": 0}, "end": {"line": 712, "character": 13}}, "selectionRange": {"start": {"line": 712, "character": 7}, "end": {"line": 712, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cell_line_loc", "kind": 13, "range": {"start": {"line": 718, "character": 0}, "end": {"line": 718, "character": 84}}, "selectionRange": {"start": {"line": 718, "character": 0}, "end": {"line": 718, "character": 13}}, "detail": "cell_line_loc = '/cellar/users/samsonfong/Projects/tcrp-v2/from-ma/cell_line_lists/'", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 724, "character": 0}, "end": {"line": 726, "character": 0}}, "selectionRange": {"start": {"line": 724, "character": 53}, "end": {"line": 724, "character": 54}}, "detail": "with open('/data/drug_feature/KU-55933/KU', 'rb') as f: tmap= pickle.load(f)", "children": []}, {"name": "tmap", "kind": 13, "range": {"start": {"line": 725, "character": 4}, "end": {"line": 725, "character": 24}}, "selectionRange": {"start": {"line": 725, "character": 4}, "end": {"line": 725, "character": 8}}, "detail": "tmap= pickle.load(f)", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 743, "character": 0}, "end": {"line": 743, "character": 68}}, "selectionRange": {"start": {"line": 743, "character": 0}, "end": {"line": 743, "character": 1}}, "detail": "f = np.load('/data/drug_feature/KU-55933/lung_KU-55933_feature.npy')", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///root/capsule/code/process_merged.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 37, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 38, "result": [{"name": "matplotlib", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 17}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 17}}, "detail": "module matplotlib", "children": []}, {"name": "os", "kind": 2, "range": {"start": {"line": 10, "character": 0}, "end": {"line": 10, "character": 9}}, "selectionRange": {"start": {"line": 10, "character": 7}, "end": {"line": 10, "character": 9}}, "detail": "module os", "children": []}, {"name": "pd", "kind": 2, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 11, "character": 19}}, "selectionRange": {"start": {"line": 11, "character": 17}, "end": {"line": 11, "character": 19}}, "detail": "module pd", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 12, "character": 0}, "end": {"line": 12, "character": 18}}, "selectionRange": {"start": {"line": 12, "character": 16}, "end": {"line": 12, "character": 18}}, "detail": "module np", "children": []}, {"name": "sys", "kind": 2, "range": {"start": {"line": 13, "character": 0}, "end": {"line": 13, "character": 10}}, "selectionRange": {"start": {"line": 13, "character": 7}, "end": {"line": 13, "character": 10}}, "detail": "module sys", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 14, "character": 0}, "end": {"line": 14, "character": 13}}, "selectionRange": {"start": {"line": 14, "character": 7}, "end": {"line": 14, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cdist", "kind": 12, "range": {"start": {"line": 15, "character": 0}, "end": {"line": 15, "character": 40}}, "selectionRange": {"start": {"line": 15, "character": 35}, "end": {"line": 15, "character": 40}}, "detail": "def cdist", "children": []}, {"name": "math", "kind": 2, "range": {"start": {"line": 16, "character": 0}, "end": {"line": 16, "character": 11}}, "selectionRange": {"start": {"line": 16, "character": 7}, "end": {"line": 16, "character": 11}}, "detail": "module math", "children": []}, {"name": "nx", "kind": 2, "range": {"start": {"line": 17, "character": 0}, "end": {"line": 17, "character": 21}}, "selectionRange": {"start": {"line": 17, "character": 19}, "end": {"line": 17, "character": 21}}, "detail": "module nx", "children": []}, {"name": "nxacc", "kind": 2, "range": {"start": {"line": 18, "character": 0}, "end": {"line": 18, "character": 56}}, "selectionRange": {"start": {"line": 18, "character": 51}, "end": {"line": 18, "character": 56}}, "detail": "module nxacc", "children": []}, {"name": "nxadag", "kind": 2, "range": {"start": {"line": 19, "character": 0}, "end": {"line": 19, "character": 40}}, "selectionRange": {"start": {"line": 19, "character": 34}, "end": {"line": 19, "character": 40}}, "detail": "module nxadag", "children": []}, {"name": "plt", "kind": 2, "range": {"start": {"line": 20, "character": 0}, "end": {"line": 20, "character": 31}}, "selectionRange": {"start": {"line": 20, "character": 28}, "end": {"line": 20, "character": 31}}, "detail": "module plt", "children": []}, {"name": "sns", "kind": 2, "range": {"start": {"line": 21, "character": 0}, "end": {"line": 21, "character": 21}}, "selectionRange": {"start": {"line": 21, "character": 18}, "end": {"line": 21, "character": 21}}, "detail": "module sns", "children": []}, {"name": "itertools", "kind": 2, "range": {"start": {"line": 22, "character": 0}, "end": {"line": 22, "character": 16}}, "selectionRange": {"start": {"line": 22, "character": 7}, "end": {"line": 22, "character": 16}}, "detail": "module itertools", "children": []}, {"name": "mygene", "kind": 2, "range": {"start": {"line": 23, "character": 0}, "end": {"line": 23, "character": 13}}, "selectionRange": {"start": {"line": 23, "character": 7}, "end": {"line": 23, "character": 13}}, "detail": "module mygene", "children": []}, {"name": "re", "kind": 2, "range": {"start": {"line": 24, "character": 0}, "end": {"line": 24, "character": 9}}, "selectionRange": {"start": {"line": 24, "character": 7}, "end": {"line": 24, "character": 9}}, "detail": "module re", "children": []}, {"name": "selected_exp_gene_list", "kind": 13, "range": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 95}}, "selectionRange": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 22}}, "detail": "selected_exp_gene_list = pd.read_csv(\"/data/common_exp_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "selected_mut_gene_list", "kind": 13, "range": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 95}}, "selectionRange": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 22}}, "detail": "selected_mut_gene_list = pd.read_csv(\"/data/common_mut_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "load_network", "kind": 12, "range": {"start": {"line": 37, "character": 0}, "end": {"line": 65, "character": 28}}, "selectionRange": {"start": {"line": 37, "character": 4}, "end": {"line": 37, "character": 16}}, "detail": "def load_network", "children": []}, {"name": "load_name_space", "kind": 12, "range": {"start": {"line": 67, "character": 0}, "end": {"line": 79, "character": 21}}, "selectionRange": {"start": {"line": 67, "character": 4}, "end": {"line": 67, "character": 19}}, "detail": "def load_name_space", "children": []}, {"name": "list2index", "kind": 12, "range": {"start": {"line": 81, "character": 0}, "end": {"line": 88, "character": 41}}, "selectionRange": {"start": {"line": 81, "character": 4}, "end": {"line": 81, "character": 14}}, "detail": "def list2index", "children": []}, {"name": "PDTC_data_file", "kind": 13, "range": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 30}}, "selectionRange": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 14}}, "detail": "PDTC_data_file = '/data/PTDC/'", "children": []}, {"name": "PDTC_exp_data_file", "kind": 13, "range": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 60}}, "selectionRange": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 18}}, "detail": "PDTC_exp_data_file = PDTC_data_file + 'ExpressionModels.tsv'", "children": []}, {"name": "PDTC_drug_cell_line_file", "kind": 13, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 72}}, "selectionRange": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 24}}, "detail": "PDTC_drug_cell_line_file = PDTC_data_file + 'DrugResponsesAUCModels.tsv'", "children": []}, {"name": "PDTC_mutation_data_file", "kind": 13, "range": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 59}}, "selectionRange": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 23}}, "detail": "PDTC_mutation_data_file = PDTC_data_file + 'SNVsModels.tsv'", "children": []}, {"name": "PDTC_drug_target_file", "kind": 13, "range": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 47}}, "selectionRange": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 21}}, "detail": "PDTC_drug_target_file ='/data/drug_targets.tsv'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 37}}, "selectionRange": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 46}}, "selectionRange": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "data_file", "kind": 13, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 25}}, "selectionRange": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 9}}, "detail": "data_file = '/data/GDSC/'", "children": []}, {"name": "new_network_file", "kind": 13, "range": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 27}}, "selectionRange": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 16}}, "detail": "new_network_file = '/data/'", "children": []}, {"name": "exp_data_file", "kind": 13, "range": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 61}}, "selectionRange": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 13}}, "detail": "exp_data_file = data_file + 'Cell_line_RMA_proc_basalExp.txt'", "children": []}, {"name": "drug_cell_line_file", "kind": 13, "range": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 64}}, "selectionRange": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 19}}, "detail": "drug_cell_line_file = data_file + 'v17_fitted_dose_response.csv'", "children": []}, {"name": "cell_line_detail_file", "kind": 13, "range": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 60}}, "selectionRange": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 21}}, "detail": "cell_line_detail_file = data_file + 'Cell_Lines_Details.csv'", "children": []}, {"name": "mutation_data_file", "kind": 13, "range": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 51}}, "selectionRange": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 18}}, "detail": "mutation_data_file = data_file + 'WES_variants.csv'", "children": []}, {"name": "drug_target_file", "kind": 13, "range": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 42}}, "selectionRange": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 16}}, "detail": "drug_target_file ='/data/drug_targets.tsv'", "children": []}, {"name": "feature_folder", "kind": 13, "range": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 27}}, "selectionRange": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 14}}, "detail": "feature_folder = 'feature/'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 37}}, "selectionRange": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 46}}, "selectionRange": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 58}}, "selectionRange": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 6}}, "detail": "exp_df = pd.read_csv(exp_data_file, sep='\\t', index_col=0)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 21}}, "selectionRange": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 6}}, "detail": "exp_df = exp_df.T[1:]", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 56}}, "selectionRange": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 6}}, "detail": "exp_df = exp_df.rename(columns={np.nan: 'NO_GENE_NAME'})", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 43}}, "selectionRange": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 6}}, "detail": "exp_df = exp_df.drop('NO_GENE_NAME',axis=1)", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 138, "character": 0}, "end": {"line": 140, "character": 26}}, "selectionRange": {"start": {"line": 138, "character": 4}, "end": {"line": 138, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 142, "character": 0}, "end": {"line": 142, "character": 44}}, "selectionRange": {"start": {"line": 142, "character": 7}, "end": {"line": 142, "character": 12}}, "detail": "exp_df.index = exp_df.index.map(stripNumber)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 40}}, "selectionRange": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 6}}, "detail": "exp_df = exp_df.groupby(level=0).first()", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 39}}, "selectionRange": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 6}}, "detail": "exp_df = exp_df[selected_exp_gene_list]", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 36}}, "selectionRange": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 48}}, "selectionRange": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 78}}, "selectionRange": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 11}}, "detail": "PDTC_exp_df = pd.read_csv(PDTC_exp_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 31}}, "selectionRange": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df.T[1:]", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 160, "character": 0}, "end": {"line": 162, "character": 26}}, "selectionRange": {"start": {"line": 160, "character": 4}, "end": {"line": 160, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 49}}, "selectionRange": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df[selected_exp_gene_list]", "children": []}, {"name": "PDTC_exp_gene_list", "kind": 13, "range": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 46}}, "selectionRange": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 18}}, "detail": "PDTC_exp_gene_list = list(PDTC_exp_df.columns)", "children": []}, {"name": "PDTC_exp_cell_line_list", "kind": 13, "range": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 58}}, "selectionRange": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 23}}, "detail": "PDTC_exp_cell_line_list = list(PDTC_exp_df.index.unique())", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 40}}, "selectionRange": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 6}}, "detail": "exp_df = pd.concat([exp_df,PDTC_exp_df])", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 36}}, "selectionRange": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 48}}, "selectionRange": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "maf", "kind": 13, "range": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 69}}, "selectionRange": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 3}}, "detail": "maf = pd.read_csv(mutation_data_file, sep=',', index_col=0).fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 75}}, "selectionRange": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 11}}, "detail": "mutation_df = maf.groupby(['COSMIC_ID', 'Gene']).size().unstack().fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 49}}, "selectionRange": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 11}}, "detail": "mutation_df = mutation_df[selected_mut_gene_list]", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 46}}, "selectionRange": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 58}}, "selectionRange": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "PDTC_maf", "kind": 13, "range": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 80}}, "selectionRange": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 8}}, "detail": "PDTC_maf = pd.read_csv(PDTC_mutation_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 61}}, "selectionRange": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_maf.replace(to_replace=\"NO\",value=0.0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 82}}, "selectionRange": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_mutation_df.replace(to_replace=\"chr*\",value=1.0,regex=True)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 47}}, "selectionRange": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df.transpose()", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 59}}, "selectionRange": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df[selected_mut_gene_list]", "children": []}, {"name": "PDTC_mutation_gene_list", "kind": 13, "range": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 56}}, "selectionRange": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 23}}, "detail": "PDTC_mutation_gene_list = list(PDTC_mutation_df.columns)", "children": []}, {"name": "PDTC_mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 68}}, "selectionRange": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 28}}, "detail": "PDTC_mutation_cell_line_list = list(PDTC_mutation_df.index.unique())", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 55}}, "selectionRange": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 11}}, "detail": "mutation_df = pd.concat([mutation_df,PDTC_mutation_df])", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 46}}, "selectionRange": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 58}}, "selectionRange": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 36}}, "selectionRange": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 11}}, "detail": "file_handle = open(drug_target_file)", "children": []}, {"name": "drug_target_map", "kind": 13, "range": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 20}}, "selectionRange": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 15}}, "detail": "drug_target_map = {}", "children": []}, {"name": "drug_target_list", "kind": 13, "range": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 21}}, "selectionRange": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 16}}, "detail": "drug_target_list = []", "children": []}, {"name": "line", "kind": 13, "range": {"start": {"line": 230, "character": 0}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 230, "character": 4}, "end": {"line": 230, "character": 8}}, "detail": "for line in file_handle: new_line = line.rstrip().split(\"\\t\") drug = new_line[0] target_list=new_line[1].split(',') if drug != \"Drug\": target_list_str = \"\" for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\" drug = drug.strip() drug_target_map[drug] = [] if ',' not in target_list_str: drug_target_map[drug].append(target_list_str.strip()) drug_target_list.append(target_list_str.strip()) else: target_list = target_list_str.split(',') for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "new_line", "kind": 13, "range": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 40}}, "selectionRange": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 12}}, "detail": "new_line = line.rstrip().split(\"\\t\")", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 22}}, "selectionRange": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 8}}, "detail": "drug = new_line[0]", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 38}}, "selectionRange": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 15}}, "detail": "target_list=new_line[1].split(',')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 28}}, "selectionRange": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 23}}, "detail": "target_list_str = \"\"", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 237, "character": 8}, "end": {"line": 242, "character": 0}}, "selectionRange": {"start": {"line": 237, "character": 12}, "end": {"line": 237, "character": 13}}, "detail": "for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 65}}, "selectionRange": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 71}}, "selectionRange": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 27}}, "selectionRange": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 12}}, "detail": "drug = drug.strip()", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 52}}, "selectionRange": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 23}}, "detail": "target_list = target_list_str.split(',')", "children": []}, {"name": "target", "kind": 13, "range": {"start": {"line": 250, "character": 12}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 250, "character": 16}, "end": {"line": 250, "character": 22}}, "detail": "for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 257, "character": 0}, "end": {"line": 257, "character": 36}}, "selectionRange": {"start": {"line": 257, "character": 0}, "end": {"line": 257, "character": 11}}, "detail": "file_handle = open(drug_target_file)", "children": []}, {"name": "drug_target_map", "kind": 13, "range": {"start": {"line": 259, "character": 0}, "end": {"line": 259, "character": 20}}, "selectionRange": {"start": {"line": 259, "character": 0}, "end": {"line": 259, "character": 15}}, "detail": "drug_target_map = {}", "children": []}, {"name": "drug_target_list", "kind": 13, "range": {"start": {"line": 260, "character": 0}, "end": {"line": 260, "character": 21}}, "selectionRange": {"start": {"line": 260, "character": 0}, "end": {"line": 260, "character": 16}}, "detail": "drug_target_list = []", "children": []}, {"name": "line", "kind": 13, "range": {"start": {"line": 261, "character": 0}, "end": {"line": 284, "character": 0}}, "selectionRange": {"start": {"line": 261, "character": 4}, "end": {"line": 261, "character": 8}}, "detail": "for line in file_handle: new_line = line.rstrip().split(\"\\t\") drug = new_line[0] target_list=new_line[1].split(',') if drug != \"Drug\": target_list_str = \"\" for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\" drug = drug.strip() drug_target_map[drug] = [] if ',' not in target_list_str: drug_target_map[drug].append(target_list_str.strip()) drug_target_list.append(target_list_str.strip()) else: target_list = target_list_str.split(',') for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "new_line", "kind": 13, "range": {"start": {"line": 263, "character": 4}, "end": {"line": 263, "character": 40}}, "selectionRange": {"start": {"line": 263, "character": 4}, "end": {"line": 263, "character": 12}}, "detail": "new_line = line.rstrip().split(\"\\t\")", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 264, "character": 4}, "end": {"line": 264, "character": 22}}, "selectionRange": {"start": {"line": 264, "character": 4}, "end": {"line": 264, "character": 8}}, "detail": "drug = new_line[0]", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 265, "character": 4}, "end": {"line": 265, "character": 38}}, "selectionRange": {"start": {"line": 265, "character": 4}, "end": {"line": 265, "character": 15}}, "detail": "target_list=new_line[1].split(',')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 267, "character": 8}, "end": {"line": 267, "character": 28}}, "selectionRange": {"start": {"line": 267, "character": 8}, "end": {"line": 267, "character": 23}}, "detail": "target_list_str = \"\"", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 268, "character": 8}, "end": {"line": 273, "character": 0}}, "selectionRange": {"start": {"line": 268, "character": 12}, "end": {"line": 268, "character": 13}}, "detail": "for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 270, "character": 16}, "end": {"line": 270, "character": 65}}, "selectionRange": {"start": {"line": 270, "character": 16}, "end": {"line": 270, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 272, "character": 16}, "end": {"line": 272, "character": 71}}, "selectionRange": {"start": {"line": 272, "character": 16}, "end": {"line": 272, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 273, "character": 8}, "end": {"line": 273, "character": 27}}, "selectionRange": {"start": {"line": 273, "character": 8}, "end": {"line": 273, "character": 12}}, "detail": "drug = drug.strip()", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 280, "character": 12}, "end": {"line": 280, "character": 52}}, "selectionRange": {"start": {"line": 280, "character": 12}, "end": {"line": 280, "character": 23}}, "detail": "target_list = target_list_str.split(',')", "children": []}, {"name": "target", "kind": 13, "range": {"start": {"line": 281, "character": 12}, "end": {"line": 284, "character": 0}}, "selectionRange": {"start": {"line": 281, "character": 16}, "end": {"line": 281, "character": 22}}, "detail": "for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "drugs_legend", "kind": 13, "range": {"start": {"line": 287, "character": 0}, "end": {"line": 287, "character": 85}}, "selectionRange": {"start": {"line": 287, "character": 0}, "end": {"line": 287, "character": 12}}, "detail": "drugs_legend = pd.read_csv('/data/GDSC/Screened_Compounds.csv', sep=',', index_col=0)", "children": []}, {"name": "drug2id_mapping", "kind": 13, "range": {"start": {"line": 289, "character": 0}, "end": {"line": 289, "character": 20}}, "selectionRange": {"start": {"line": 289, "character": 0}, "end": {"line": 289, "character": 15}}, "detail": "drug2id_mapping = {}", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 291, "character": 0}, "end": {"line": 294, "character": 0}}, "selectionRange": {"start": {"line": 291, "character": 4}, "end": {"line": 291, "character": 9}}, "detail": "for index in list(drugs_legend.index) : drug_name = drugs_legend.loc[index,'Drug Name'] drug2id_mapping[ drug_name ] = index", "children": []}, {"name": "drug_name", "kind": 13, "range": {"start": {"line": 292, "character": 4}, "end": {"line": 292, "character": 51}}, "selectionRange": {"start": {"line": 292, "character": 4}, "end": {"line": 292, "character": 13}}, "detail": "drug_name = drugs_legend.loc[index,'Drug Name']", "children": []}, {"name": "valid_gene_list", "kind": 13, "range": {"start": {"line": 299, "character": 0}, "end": {"line": 299, "character": 92}}, "selectionRange": {"start": {"line": 299, "character": 0}, "end": {"line": 299, "character": 15}}, "detail": "valid_gene_list = list(set(drug_target_list) | set(exp_gene_list) | set(mutation_gene_list))", "children": []}, {"name": "network_list", "kind": 13, "range": {"start": {"line": 305, "character": 0}, "end": {"line": 305, "character": 82}}, "selectionRange": {"start": {"line": 305, "character": 0}, "end": {"line": 305, "character": 12}}, "detail": "network_list = [new_network_file+inbiomap_file, new_network_file+pathwaycomm_file]", "children": []}, {"name": "gene_neighbor_map", "kind": 13, "range": {"start": {"line": 306, "character": 0}, "end": {"line": 306, "character": 64}}, "selectionRange": {"start": {"line": 306, "character": 0}, "end": {"line": 306, "character": 17}}, "detail": "gene_neighbor_map = load_network(network_list, valid_gene_list)", "children": []}, {"name": "gene_name_df", "kind": 13, "range": {"start": {"line": 312, "character": 0}, "end": {"line": 312, "character": 89}}, "selectionRange": {"start": {"line": 312, "character": 0}, "end": {"line": 312, "character": 12}}, "detail": "gene_name_df = pd.read_table('/data/HUGO_protein-coding_gene.tsv',index_col=25, sep='\\t')", "children": []}, {"name": "gene_name_map", "kind": 13, "range": {"start": {"line": 318, "character": 0}, "end": {"line": 318, "character": 18}}, "selectionRange": {"start": {"line": 318, "character": 0}, "end": {"line": 318, "character": 13}}, "detail": "gene_name_map = {}", "children": []}, {"name": "uniprot_gene", "kind": 13, "range": {"start": {"line": 320, "character": 0}, "end": {"line": 329, "character": 0}}, "selectionRange": {"start": {"line": 320, "character": 4}, "end": {"line": 320, "character": 16}}, "detail": "for uniprot_gene in gene_name_df.index: if isinstance(uniprot_gene, type('aaa')) == False: continue if isinstance(gene_name_df.loc[uniprot_gene, 'symbol'], type('aaa')) == False: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol'][0] else: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 76}}, "selectionRange": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "uniprot_gene_set", "kind": 13, "range": {"start": {"line": 336, "character": 0}, "end": {"line": 336, "character": 24}}, "selectionRange": {"start": {"line": 336, "character": 0}, "end": {"line": 336, "character": 16}}, "detail": "uniprot_gene_set = set()", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 338, "character": 0}, "end": {"line": 347, "character": 0}}, "selectionRange": {"start": {"line": 338, "character": 4}, "end": {"line": 338, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 343, "character": 4}, "end": {"line": 343, "character": 74}}, "selectionRange": {"start": {"line": 343, "character": 4}, "end": {"line": 343, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 345, "character": 4}, "end": {"line": 347, "character": 0}}, "selectionRange": {"start": {"line": 345, "character": 8}, "end": {"line": 345, "character": 12}}, "detail": "for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "query_gene_set", "kind": 13, "range": {"start": {"line": 350, "character": 0}, "end": {"line": 350, "character": 19}}, "selectionRange": {"start": {"line": 350, "character": 0}, "end": {"line": 350, "character": 14}}, "detail": "query_gene_set = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 352, "character": 0}, "end": {"line": 355, "character": 0}}, "selectionRange": {"start": {"line": 352, "character": 4}, "end": {"line": 352, "character": 8}}, "detail": "for gene in uniprot_gene_set: if gene not in gene_name_map: query_gene_set.append(gene)", "children": []}, {"name": "query_gene_list", "kind": 13, "range": {"start": {"line": 358, "character": 0}, "end": {"line": 358, "character": 38}}, "selectionRange": {"start": {"line": 358, "character": 0}, "end": {"line": 358, "character": 15}}, "detail": "query_gene_list = list(query_gene_set)", "children": []}, {"name": "mg", "kind": 13, "range": {"start": {"line": 360, "character": 0}, "end": {"line": 360, "character": 24}}, "selectionRange": {"start": {"line": 360, "character": 0}, "end": {"line": 360, "character": 2}}, "detail": "mg = mygene.MyGeneInfo()", "children": []}, {"name": "out", "kind": 13, "range": {"start": {"line": 361, "character": 0}, "end": {"line": 361, "character": 87}}, "selectionRange": {"start": {"line": 361, "character": 0}, "end": {"line": 361, "character": 3}}, "detail": "out = mg.querymany(query_gene_list, scopes='uniprot', fields='symbol', species='human')", "children": []}, {"name": "not_found_gene_list", "kind": 13, "range": {"start": {"line": 363, "character": 0}, "end": {"line": 363, "character": 24}}, "selectionRange": {"start": {"line": 363, "character": 0}, "end": {"line": 363, "character": 19}}, "detail": "not_found_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 365, "character": 0}, "end": {"line": 370, "character": 0}}, "selectionRange": {"start": {"line": 365, "character": 4}, "end": {"line": 365, "character": 5}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 365, "character": 0}, "end": {"line": 370, "character": 0}}, "selectionRange": {"start": {"line": 365, "character": 7}, "end": {"line": 365, "character": 11}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 377, "character": 0}, "end": {"line": 377, "character": 76}}, "selectionRange": {"start": {"line": 377, "character": 0}, "end": {"line": 377, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 379, "character": 0}, "end": {"line": 401, "character": 0}}, "selectionRange": {"start": {"line": 379, "character": 4}, "end": {"line": 379, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') complex_symbol_list = [] for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] ) for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 384, "character": 4}, "end": {"line": 384, "character": 74}}, "selectionRange": {"start": {"line": 384, "character": 4}, "end": {"line": 384, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "complex_symbol_list", "kind": 13, "range": {"start": {"line": 386, "character": 4}, "end": {"line": 386, "character": 28}}, "selectionRange": {"start": {"line": 386, "character": 4}, "end": {"line": 386, "character": 23}}, "detail": "complex_symbol_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 388, "character": 4}, "end": {"line": 391, "character": 0}}, "selectionRange": {"start": {"line": 388, "character": 8}, "end": {"line": 388, "character": 12}}, "detail": "for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] )", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 392, "character": 4}, "end": {"line": 401, "character": 0}}, "selectionRange": {"start": {"line": 392, "character": 8}, "end": {"line": 392, "character": 13}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 392, "character": 4}, "end": {"line": 401, "character": 0}}, "selectionRange": {"start": {"line": 392, "character": 15}, "end": {"line": 392, "character": 20}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene_exp_neighbor_map", "kind": 13, "range": {"start": {"line": 406, "character": 0}, "end": {"line": 406, "character": 26}}, "selectionRange": {"start": {"line": 406, "character": 0}, "end": {"line": 406, "character": 21}}, "detail": "gene_exp_neighbor_map = {}", "children": []}, {"name": "exp_matrix", "kind": 13, "range": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 26}}, "selectionRange": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 10}}, "detail": "exp_matrix = exp_df.values", "children": []}, {"name": "P", "kind": 13, "range": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 79}}, "selectionRange": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 1}}, "detail": "P = 1 - cdist(np.transpose(exp_matrix), np.transpose(exp_matrix),'correlation')", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 411, "character": 0}, "end": {"line": 425, "character": 0}}, "selectionRange": {"start": {"line": 411, "character": 4}, "end": {"line": 411, "character": 5}}, "detail": "for i in range(len(exp_gene_list)): gene1 = exp_gene_list[i] gene_exp_neighbor_map[gene1] = set() for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2) if gene1 not in gene_exp_neighbor_map[gene1]: print (gene1, 'not in itself?', P[i,i])", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 413, "character": 4}, "end": {"line": 413, "character": 28}}, "selectionRange": {"start": {"line": 413, "character": 4}, "end": {"line": 413, "character": 9}}, "detail": "gene1 = exp_gene_list[i]", "children": []}, {"name": "j", "kind": 13, "range": {"start": {"line": 416, "character": 4}, "end": {"line": 422, "character": 0}}, "selectionRange": {"start": {"line": 416, "character": 8}, "end": {"line": 416, "character": 9}}, "detail": "for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 418, "character": 8}, "end": {"line": 418, "character": 32}}, "selectionRange": {"start": {"line": 418, "character": 8}, "end": {"line": 418, "character": 13}}, "detail": "gene2 = exp_gene_list[j]", "children": []}, {"name": "drug_feature_list", "kind": 13, "range": {"start": {"line": 433, "character": 0}, "end": {"line": 433, "character": 22}}, "selectionRange": {"start": {"line": 433, "character": 0}, "end": {"line": 433, "character": 17}}, "detail": "drug_feature_list = []", "children": []}, {"name": "drug_neighbor_map", "kind": 13, "range": {"start": {"line": 434, "character": 0}, "end": {"line": 434, "character": 22}}, "selectionRange": {"start": {"line": 434, "character": 0}, "end": {"line": 434, "character": 17}}, "detail": "drug_neighbor_map = {}", "children": []}, {"name": "selected_drug_list", "kind": 13, "range": {"start": {"line": 435, "character": 0}, "end": {"line": 435, "character": 23}}, "selectionRange": {"start": {"line": 435, "character": 0}, "end": {"line": 435, "character": 18}}, "detail": "selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 437, "character": 0}, "end": {"line": 454, "character": 0}}, "selectionRange": {"start": {"line": 437, "character": 4}, "end": {"line": 437, "character": 8}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 437, "character": 0}, "end": {"line": 454, "character": 0}}, "selectionRange": {"start": {"line": 437, "character": 10}, "end": {"line": 437, "character": 21}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 440, "character": 8}, "end": {"line": 450, "character": 0}}, "selectionRange": {"start": {"line": 440, "character": 12}, "end": {"line": 440, "character": 16}}, "detail": "for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene]", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 468, "character": 0}, "end": {"line": 468, "character": 52}}, "selectionRange": {"start": {"line": 468, "character": 0}, "end": {"line": 468, "character": 5}}, "detail": "drugs = pd.read_csv(drug_cell_line_file,index_col=2)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 93}}, "selectionRange": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 5}}, "detail": "drugs = drugs.drop([\"DATASET_VERSION\",\"IC50_RESULTS_ID\",\"MAX_CONC_MICROMOLAR\",\"RMSE\"],axis=1)", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 470, "character": 0}, "end": {"line": 470, "character": 49}}, "selectionRange": {"start": {"line": 470, "character": 0}, "end": {"line": 470, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 472, "character": 0}, "end": {"line": 472, "character": 28}}, "selectionRange": {"start": {"line": 472, "character": 0}, "end": {"line": 472, "character": 9}}, "detail": "drug_list = drugs[\"DRUG_ID\"]", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 473, "character": 0}, "end": {"line": 473, "character": 16}}, "selectionRange": {"start": {"line": 473, "character": 0}, "end": {"line": 473, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 483, "character": 0}, "end": {"line": 483, "character": 71}}, "selectionRange": {"start": {"line": 483, "character": 0}, "end": {"line": 483, "character": 10}}, "detail": "PDTC_drugs = pd.read_csv(PDTC_drug_cell_line_file,sep='\\t',index_col=0)", "children": []}, {"name": "PDTC_drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 59}}, "selectionRange": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 25}}, "detail": "PDTC_drugs_cell_line_list = list(PDTC_drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 486, "character": 0}, "end": {"line": 486, "character": 39}}, "selectionRange": {"start": {"line": 486, "character": 0}, "end": {"line": 486, "character": 9}}, "detail": "drug_list = PDTC_drugs[\"Drug\"].tolist()", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 487, "character": 0}, "end": {"line": 487, "character": 16}}, "selectionRange": {"start": {"line": 487, "character": 0}, "end": {"line": 487, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 488, "character": 0}, "end": {"line": 493, "character": 0}}, "selectionRange": {"start": {"line": 488, "character": 4}, "end": {"line": 488, "character": 5}}, "detail": "for i in drug_list: if i in drug2id_mapping.keys(): new_drug_id.append(drug2id_mapping[i]) else: new_drug_id.append(0)", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 495, "character": 0}, "end": {"line": 495, "character": 84}}, "selectionRange": {"start": {"line": 495, "character": 0}, "end": {"line": 495, "character": 10}}, "detail": "PDTC_drugs = PDTC_drugs.drop([\"Drug\",\"iC50\",\"D1_CONC\",\"D5_CONC\",\"perc.iC50\"],axis=1)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 503, "character": 0}, "end": {"line": 503, "character": 37}}, "selectionRange": {"start": {"line": 503, "character": 0}, "end": {"line": 503, "character": 5}}, "detail": "drugs = pd.concat([drugs,PDTC_drugs])", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 510, "character": 0}, "end": {"line": 510, "character": 49}}, "selectionRange": {"start": {"line": 510, "character": 0}, "end": {"line": 510, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "cell_line_list", "kind": 13, "range": {"start": {"line": 516, "character": 0}, "end": {"line": 516, "character": 102}}, "selectionRange": {"start": {"line": 516, "character": 0}, "end": {"line": 516, "character": 14}}, "detail": "cell_line_list = list(set(drugs_cell_line_list)&set(exp_cell_line_list)&set(mutation_cell_line_list) )", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 523, "character": 0}, "end": {"line": 523, "character": 66}}, "selectionRange": {"start": {"line": 523, "character": 0}, "end": {"line": 523, "character": 16}}, "detail": "cell_line_legend = pd.read_csv(cell_line_detail_file, index_col=1)", "children": []}, {"name": "PDTC_cell_line", "kind": 13, "range": {"start": {"line": 524, "character": 0}, "end": {"line": 524, "character": 206}}, "selectionRange": {"start": {"line": 524, "character": 0}, "end": {"line": 524, "character": 14}}, "detail": "PDTC_cell_line = pd.DataFrame({'Line': [\"BRCA\"]*len(PDTC_exp_cell_line_list), 'Site':[\"PDTC\"]*len(PDTC_exp_cell_line_list),\"Histology\":[\"breast\"]*len(PDTC_exp_cell_line_list)},index=PDTC_exp_cell_line_list)", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 525, "character": 0}, "end": {"line": 525, "character": 63}}, "selectionRange": {"start": {"line": 525, "character": 0}, "end": {"line": 525, "character": 16}}, "detail": "cell_line_legend = pd.concat([cell_line_legend,PDTC_cell_line])", "children": []}, {"name": "tissue_map", "kind": 13, "range": {"start": {"line": 528, "character": 0}, "end": {"line": 528, "character": 15}}, "selectionRange": {"start": {"line": 528, "character": 0}, "end": {"line": 528, "character": 10}}, "detail": "tissue_map = {}", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 530, "character": 0}, "end": {"line": 538, "character": 0}}, "selectionRange": {"start": {"line": 530, "character": 4}, "end": {"line": 530, "character": 13}}, "detail": "for cell_line in cell_line_list: tissue = cell_line_legend.loc[cell_line,'Site'] if tissue not in tissue_map: tissue_map[tissue] = [] tissue_map[tissue].append(cell_line)", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 532, "character": 4}, "end": {"line": 532, "character": 51}}, "selectionRange": {"start": {"line": 532, "character": 4}, "end": {"line": 532, "character": 10}}, "detail": "tissue = cell_line_legend.loc[cell_line,'Site']", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 539, "character": 0}, "end": {"line": 539, "character": 23}}, "selectionRange": {"start": {"line": 539, "character": 0}, "end": {"line": 539, "character": 19}}, "detail": "large_tissue_number = 0", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 540, "character": 0}, "end": {"line": 546, "character": 0}}, "selectionRange": {"start": {"line": 540, "character": 4}, "end": {"line": 540, "character": 10}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 540, "character": 0}, "end": {"line": 546, "character": 0}}, "selectionRange": {"start": {"line": 540, "character": 12}, "end": {"line": 540, "character": 21}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 543, "character": 8}, "end": {"line": 543, "character": 32}}, "selectionRange": {"start": {"line": 543, "character": 8}, "end": {"line": 543, "character": 27}}, "detail": "large_tissue_number += 1", "children": []}, {"name": "new_exp_gene_list", "kind": 13, "range": {"start": {"line": 566, "character": 0}, "end": {"line": 566, "character": 22}}, "selectionRange": {"start": {"line": 566, "character": 0}, "end": {"line": 566, "character": 17}}, "detail": "new_exp_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 567, "character": 0}, "end": {"line": 570, "character": 0}}, "selectionRange": {"start": {"line": 567, "character": 4}, "end": {"line": 567, "character": 5}}, "detail": "for i in exp_gene_list: if i in valid_gene_list: new_exp_gene_list.append(i)", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 41}}, "selectionRange": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 38}}, "selectionRange": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 72}}, "selectionRange": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 43}}, "selectionRange": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 68}}, "selectionRange": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 58}}, "selectionRange": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 68}}, "selectionRange": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "new_data_file", "kind": 13, "range": {"start": {"line": 597, "character": 0}, "end": {"line": 597, "character": 18}}, "selectionRange": {"start": {"line": 597, "character": 0}, "end": {"line": 597, "character": 13}}, "detail": "new_data_file = ''", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 601, "character": 0}, "end": {"line": 601, "character": 41}}, "selectionRange": {"start": {"line": 601, "character": 0}, "end": {"line": 601, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 602, "character": 0}, "end": {"line": 602, "character": 38}}, "selectionRange": {"start": {"line": 602, "character": 0}, "end": {"line": 602, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 603, "character": 0}, "end": {"line": 603, "character": 72}}, "selectionRange": {"start": {"line": 603, "character": 0}, "end": {"line": 603, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 605, "character": 0}, "end": {"line": 605, "character": 43}}, "selectionRange": {"start": {"line": 605, "character": 0}, "end": {"line": 605, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 606, "character": 0}, "end": {"line": 606, "character": 68}}, "selectionRange": {"start": {"line": 606, "character": 0}, "end": {"line": 606, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 613, "character": 0}, "end": {"line": 613, "character": 58}}, "selectionRange": {"start": {"line": 613, "character": 0}, "end": {"line": 613, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 614, "character": 0}, "end": {"line": 614, "character": 68}}, "selectionRange": {"start": {"line": 614, "character": 0}, "end": {"line": 614, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "rename_selected_drug_list", "kind": 13, "range": {"start": {"line": 618, "character": 0}, "end": {"line": 618, "character": 30}}, "selectionRange": {"start": {"line": 618, "character": 0}, "end": {"line": 618, "character": 25}}, "detail": "rename_selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 620, "character": 0}, "end": {"line": 690, "character": 0}}, "selectionRange": {"start": {"line": 620, "character": 4}, "end": {"line": 620, "character": 8}}, "detail": "for drug in selected_drug_list: print(drug) if drug not in drug2id_mapping: print('drug name wrong', drug) else: cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]] feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) ) feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) ) print(len(feature_exp_gene_list) + len(feature_mut_gene_list)) if len(feature_exp_gene_list) + len(feature_mut_gene_list) == 0: continue feature_description = [] drug_tissue_map = {} drug = drug.replace(' ','_') rename_selected_drug_list.append(drug) if drug == 'Nutlin-3a_(-)': drug = 'Nutlin-3a' drug_folder = '/data/merged/drug_feature/' + drug + '/' if not os.path.exists(drug_folder): os.makedirs(drug_folder) for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description)) file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\") pickle.dump(drug_tissue_map,file_handle) file_handle.close()", "children": []}, {"name": "cell_line_drug_matrix", "kind": 13, "range": {"start": {"line": 628, "character": 8}, "end": {"line": 628, "character": 84}}, "selectionRange": {"start": {"line": 628, "character": 8}, "end": {"line": 628, "character": 29}}, "detail": "cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]]", "children": []}, {"name": "feature_exp_gene_list", "kind": 13, "range": {"start": {"line": 633, "character": 8}, "end": {"line": 633, "character": 98}}, "selectionRange": {"start": {"line": 633, "character": 8}, "end": {"line": 633, "character": 29}}, "detail": "feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) )", "children": []}, {"name": "feature_mut_gene_list", "kind": 13, "range": {"start": {"line": 634, "character": 8}, "end": {"line": 634, "character": 98}}, "selectionRange": {"start": {"line": 634, "character": 8}, "end": {"line": 634, "character": 29}}, "detail": "feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) )", "children": []}, {"name": "feature_description", "kind": 13, "range": {"start": {"line": 638, "character": 8}, "end": {"line": 638, "character": 32}}, "selectionRange": {"start": {"line": 638, "character": 8}, "end": {"line": 638, "character": 27}}, "detail": "feature_description = []", "children": []}, {"name": "drug_tissue_map", "kind": 13, "range": {"start": {"line": 640, "character": 8}, "end": {"line": 640, "character": 28}}, "selectionRange": {"start": {"line": 640, "character": 8}, "end": {"line": 640, "character": 23}}, "detail": "drug_tissue_map = {}", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 642, "character": 8}, "end": {"line": 642, "character": 36}}, "selectionRange": {"start": {"line": 642, "character": 8}, "end": {"line": 642, "character": 12}}, "detail": "drug = drug.replace(' ','_')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 648, "character": 12}, "end": {"line": 648, "character": 30}}, "selectionRange": {"start": {"line": 648, "character": 12}, "end": {"line": 648, "character": 16}}, "detail": "drug = 'Nutlin-3a'", "children": []}, {"name": "drug_folder", "kind": 13, "range": {"start": {"line": 650, "character": 8}, "end": {"line": 650, "character": 63}}, "selectionRange": {"start": {"line": 650, "character": 8}, "end": {"line": 650, "character": 19}}, "detail": "drug_folder = '/data/merged/drug_feature/' + drug + '/'", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 656, "character": 8}, "end": {"line": 686, "character": 0}}, "selectionRange": {"start": {"line": 656, "character": 12}, "end": {"line": 656, "character": 18}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "tissue_cell_line_list", "kind": 13, "range": {"start": {"line": 656, "character": 8}, "end": {"line": 686, "character": 0}}, "selectionRange": {"start": {"line": 656, "character": 20}, "end": {"line": 656, "character": 41}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 659, "character": 12}, "end": {"line": 659, "character": 103}}, "selectionRange": {"start": {"line": 659, "character": 12}, "end": {"line": 659, "character": 35}}, "detail": "drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list )", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 660, "character": 12}, "end": {"line": 660, "character": 67}}, "selectionRange": {"start": {"line": 660, "character": 12}, "end": {"line": 660, "character": 35}}, "detail": "drug_specific_cell_line = list(drug_specific_cell_line)", "children": []}, {"name": "feature_list", "kind": 13, "range": {"start": {"line": 663, "character": 12}, "end": {"line": 663, "character": 29}}, "selectionRange": {"start": {"line": 663, "character": 12}, "end": {"line": 663, "character": 24}}, "detail": "feature_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 667, "character": 16}, "end": {"line": 669, "character": 0}}, "selectionRange": {"start": {"line": 667, "character": 20}, "end": {"line": 667, "character": 24}}, "detail": "for gene in feature_exp_gene_list: feature_description.append(gene+'_expression')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 672, "character": 16}, "end": {"line": 674, "character": 0}}, "selectionRange": {"start": {"line": 672, "character": 20}, "end": {"line": 672, "character": 24}}, "detail": "for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation')", "children": []}, {"name": "feature", "kind": 13, "range": {"start": {"line": 675, "character": 12}, "end": {"line": 675, "character": 58}}, "selectionRange": {"start": {"line": 675, "character": 12}, "end": {"line": 675, "character": 19}}, "detail": "feature = np.concatenate(feature_list, axis=1)", "children": []}, {"name": "label", "kind": 13, "range": {"start": {"line": 677, "character": 12}, "end": {"line": 677, "character": 88}}, "selectionRange": {"start": {"line": 677, "character": 12}, "end": {"line": 677, "character": 17}}, "detail": "label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 687, "character": 8}, "end": {"line": 687, "character": 84}}, "selectionRange": {"start": {"line": 687, "character": 8}, "end": {"line": 687, "character": 19}}, "detail": "file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\")", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 691, "character": 0}, "end": {"line": 691, "character": 52}}, "selectionRange": {"start": {"line": 691, "character": 0}, "end": {"line": 691, "character": 11}}, "detail": "file_handle = open('rename_selected_drug_list', 'w')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 692, "character": 0}, "end": {"line": 694, "character": 0}}, "selectionRange": {"start": {"line": 692, "character": 4}, "end": {"line": 692, "character": 8}}, "detail": "for drug in rename_selected_drug_list: file_handle.writelines(drug+ '\\n')", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 712, "character": 0}, "end": {"line": 712, "character": 13}}, "selectionRange": {"start": {"line": 712, "character": 7}, "end": {"line": 712, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cell_line_loc", "kind": 13, "range": {"start": {"line": 718, "character": 0}, "end": {"line": 718, "character": 84}}, "selectionRange": {"start": {"line": 718, "character": 0}, "end": {"line": 718, "character": 13}}, "detail": "cell_line_loc = '/cellar/users/samsonfong/Projects/tcrp-v2/from-ma/cell_line_lists/'", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 724, "character": 0}, "end": {"line": 726, "character": 0}}, "selectionRange": {"start": {"line": 724, "character": 53}, "end": {"line": 724, "character": 54}}, "detail": "with open('/data/drug_feature/KU-55933/KU', 'rb') as f: tmap= pickle.load(f)", "children": []}, {"name": "tmap", "kind": 13, "range": {"start": {"line": 725, "character": 4}, "end": {"line": 725, "character": 24}}, "selectionRange": {"start": {"line": 725, "character": 4}, "end": {"line": 725, "character": 8}}, "detail": "tmap= pickle.load(f)", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 743, "character": 0}, "end": {"line": 743, "character": 68}}, "selectionRange": {"start": {"line": 743, "character": 0}, "end": {"line": 743, "character": 1}}, "detail": "f = np.load('/data/drug_feature/KU-55933/lung_KU-55933_feature.npy')", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///root/capsule/code/process_merged.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 39, "result": [{"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///root/capsule/code/process_merged.py", "version": 2}, "edits": [{"range": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 0}}, "newText": "def jls_extract_def():\n    "}, {"range": {"start": {"line": 227, "character": 0}, "end": {"line": 227, "character": 0}}, "newText": "    \n    return file_handle\n\n\nfile_handle = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 40, "result": [{"name": "matplotlib", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 17}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 17}}, "detail": "module matplotlib", "children": []}, {"name": "os", "kind": 2, "range": {"start": {"line": 10, "character": 0}, "end": {"line": 10, "character": 9}}, "selectionRange": {"start": {"line": 10, "character": 7}, "end": {"line": 10, "character": 9}}, "detail": "module os", "children": []}, {"name": "pd", "kind": 2, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 11, "character": 19}}, "selectionRange": {"start": {"line": 11, "character": 17}, "end": {"line": 11, "character": 19}}, "detail": "module pd", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 12, "character": 0}, "end": {"line": 12, "character": 18}}, "selectionRange": {"start": {"line": 12, "character": 16}, "end": {"line": 12, "character": 18}}, "detail": "module np", "children": []}, {"name": "sys", "kind": 2, "range": {"start": {"line": 13, "character": 0}, "end": {"line": 13, "character": 10}}, "selectionRange": {"start": {"line": 13, "character": 7}, "end": {"line": 13, "character": 10}}, "detail": "module sys", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 14, "character": 0}, "end": {"line": 14, "character": 13}}, "selectionRange": {"start": {"line": 14, "character": 7}, "end": {"line": 14, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cdist", "kind": 12, "range": {"start": {"line": 15, "character": 0}, "end": {"line": 15, "character": 40}}, "selectionRange": {"start": {"line": 15, "character": 35}, "end": {"line": 15, "character": 40}}, "detail": "def cdist", "children": []}, {"name": "math", "kind": 2, "range": {"start": {"line": 16, "character": 0}, "end": {"line": 16, "character": 11}}, "selectionRange": {"start": {"line": 16, "character": 7}, "end": {"line": 16, "character": 11}}, "detail": "module math", "children": []}, {"name": "nx", "kind": 2, "range": {"start": {"line": 17, "character": 0}, "end": {"line": 17, "character": 21}}, "selectionRange": {"start": {"line": 17, "character": 19}, "end": {"line": 17, "character": 21}}, "detail": "module nx", "children": []}, {"name": "nxacc", "kind": 2, "range": {"start": {"line": 18, "character": 0}, "end": {"line": 18, "character": 56}}, "selectionRange": {"start": {"line": 18, "character": 51}, "end": {"line": 18, "character": 56}}, "detail": "module nxacc", "children": []}, {"name": "nxadag", "kind": 2, "range": {"start": {"line": 19, "character": 0}, "end": {"line": 19, "character": 40}}, "selectionRange": {"start": {"line": 19, "character": 34}, "end": {"line": 19, "character": 40}}, "detail": "module nxadag", "children": []}, {"name": "plt", "kind": 2, "range": {"start": {"line": 20, "character": 0}, "end": {"line": 20, "character": 31}}, "selectionRange": {"start": {"line": 20, "character": 28}, "end": {"line": 20, "character": 31}}, "detail": "module plt", "children": []}, {"name": "sns", "kind": 2, "range": {"start": {"line": 21, "character": 0}, "end": {"line": 21, "character": 21}}, "selectionRange": {"start": {"line": 21, "character": 18}, "end": {"line": 21, "character": 21}}, "detail": "module sns", "children": []}, {"name": "itertools", "kind": 2, "range": {"start": {"line": 22, "character": 0}, "end": {"line": 22, "character": 16}}, "selectionRange": {"start": {"line": 22, "character": 7}, "end": {"line": 22, "character": 16}}, "detail": "module itertools", "children": []}, {"name": "mygene", "kind": 2, "range": {"start": {"line": 23, "character": 0}, "end": {"line": 23, "character": 13}}, "selectionRange": {"start": {"line": 23, "character": 7}, "end": {"line": 23, "character": 13}}, "detail": "module mygene", "children": []}, {"name": "re", "kind": 2, "range": {"start": {"line": 24, "character": 0}, "end": {"line": 24, "character": 9}}, "selectionRange": {"start": {"line": 24, "character": 7}, "end": {"line": 24, "character": 9}}, "detail": "module re", "children": []}, {"name": "selected_exp_gene_list", "kind": 13, "range": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 95}}, "selectionRange": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 22}}, "detail": "selected_exp_gene_list = pd.read_csv(\"/data/common_exp_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "selected_mut_gene_list", "kind": 13, "range": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 95}}, "selectionRange": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 22}}, "detail": "selected_mut_gene_list = pd.read_csv(\"/data/common_mut_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "load_network", "kind": 12, "range": {"start": {"line": 37, "character": 0}, "end": {"line": 65, "character": 28}}, "selectionRange": {"start": {"line": 37, "character": 4}, "end": {"line": 37, "character": 16}}, "detail": "def load_network", "children": []}, {"name": "load_name_space", "kind": 12, "range": {"start": {"line": 67, "character": 0}, "end": {"line": 79, "character": 21}}, "selectionRange": {"start": {"line": 67, "character": 4}, "end": {"line": 67, "character": 19}}, "detail": "def load_name_space", "children": []}, {"name": "list2index", "kind": 12, "range": {"start": {"line": 81, "character": 0}, "end": {"line": 88, "character": 41}}, "selectionRange": {"start": {"line": 81, "character": 4}, "end": {"line": 81, "character": 14}}, "detail": "def list2index", "children": []}, {"name": "PDTC_data_file", "kind": 13, "range": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 30}}, "selectionRange": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 14}}, "detail": "PDTC_data_file = '/data/PTDC/'", "children": []}, {"name": "PDTC_exp_data_file", "kind": 13, "range": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 60}}, "selectionRange": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 18}}, "detail": "PDTC_exp_data_file = PDTC_data_file + 'ExpressionModels.tsv'", "children": []}, {"name": "PDTC_drug_cell_line_file", "kind": 13, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 72}}, "selectionRange": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 24}}, "detail": "PDTC_drug_cell_line_file = PDTC_data_file + 'DrugResponsesAUCModels.tsv'", "children": []}, {"name": "PDTC_mutation_data_file", "kind": 13, "range": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 59}}, "selectionRange": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 23}}, "detail": "PDTC_mutation_data_file = PDTC_data_file + 'SNVsModels.tsv'", "children": []}, {"name": "PDTC_drug_target_file", "kind": 13, "range": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 47}}, "selectionRange": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 21}}, "detail": "PDTC_drug_target_file ='/data/drug_targets.tsv'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 37}}, "selectionRange": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 46}}, "selectionRange": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "data_file", "kind": 13, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 25}}, "selectionRange": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 9}}, "detail": "data_file = '/data/GDSC/'", "children": []}, {"name": "new_network_file", "kind": 13, "range": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 27}}, "selectionRange": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 16}}, "detail": "new_network_file = '/data/'", "children": []}, {"name": "exp_data_file", "kind": 13, "range": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 61}}, "selectionRange": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 13}}, "detail": "exp_data_file = data_file + 'Cell_line_RMA_proc_basalExp.txt'", "children": []}, {"name": "drug_cell_line_file", "kind": 13, "range": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 64}}, "selectionRange": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 19}}, "detail": "drug_cell_line_file = data_file + 'v17_fitted_dose_response.csv'", "children": []}, {"name": "cell_line_detail_file", "kind": 13, "range": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 60}}, "selectionRange": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 21}}, "detail": "cell_line_detail_file = data_file + 'Cell_Lines_Details.csv'", "children": []}, {"name": "mutation_data_file", "kind": 13, "range": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 51}}, "selectionRange": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 18}}, "detail": "mutation_data_file = data_file + 'WES_variants.csv'", "children": []}, {"name": "drug_target_file", "kind": 13, "range": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 42}}, "selectionRange": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 16}}, "detail": "drug_target_file ='/data/drug_targets.tsv'", "children": []}, {"name": "feature_folder", "kind": 13, "range": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 27}}, "selectionRange": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 14}}, "detail": "feature_folder = 'feature/'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 37}}, "selectionRange": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 46}}, "selectionRange": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 58}}, "selectionRange": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 6}}, "detail": "exp_df = pd.read_csv(exp_data_file, sep='\\t', index_col=0)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 21}}, "selectionRange": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 6}}, "detail": "exp_df = exp_df.T[1:]", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 56}}, "selectionRange": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 6}}, "detail": "exp_df = exp_df.rename(columns={np.nan: 'NO_GENE_NAME'})", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 43}}, "selectionRange": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 6}}, "detail": "exp_df = exp_df.drop('NO_GENE_NAME',axis=1)", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 138, "character": 0}, "end": {"line": 140, "character": 26}}, "selectionRange": {"start": {"line": 138, "character": 4}, "end": {"line": 138, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 142, "character": 0}, "end": {"line": 142, "character": 44}}, "selectionRange": {"start": {"line": 142, "character": 7}, "end": {"line": 142, "character": 12}}, "detail": "exp_df.index = exp_df.index.map(stripNumber)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 40}}, "selectionRange": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 6}}, "detail": "exp_df = exp_df.groupby(level=0).first()", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 39}}, "selectionRange": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 6}}, "detail": "exp_df = exp_df[selected_exp_gene_list]", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 36}}, "selectionRange": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 48}}, "selectionRange": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 78}}, "selectionRange": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 11}}, "detail": "PDTC_exp_df = pd.read_csv(PDTC_exp_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 31}}, "selectionRange": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df.T[1:]", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 160, "character": 0}, "end": {"line": 162, "character": 26}}, "selectionRange": {"start": {"line": 160, "character": 4}, "end": {"line": 160, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 49}}, "selectionRange": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df[selected_exp_gene_list]", "children": []}, {"name": "PDTC_exp_gene_list", "kind": 13, "range": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 46}}, "selectionRange": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 18}}, "detail": "PDTC_exp_gene_list = list(PDTC_exp_df.columns)", "children": []}, {"name": "PDTC_exp_cell_line_list", "kind": 13, "range": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 58}}, "selectionRange": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 23}}, "detail": "PDTC_exp_cell_line_list = list(PDTC_exp_df.index.unique())", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 40}}, "selectionRange": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 6}}, "detail": "exp_df = pd.concat([exp_df,PDTC_exp_df])", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 36}}, "selectionRange": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 48}}, "selectionRange": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "maf", "kind": 13, "range": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 69}}, "selectionRange": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 3}}, "detail": "maf = pd.read_csv(mutation_data_file, sep=',', index_col=0).fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 75}}, "selectionRange": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 11}}, "detail": "mutation_df = maf.groupby(['COSMIC_ID', 'Gene']).size().unstack().fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 49}}, "selectionRange": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 11}}, "detail": "mutation_df = mutation_df[selected_mut_gene_list]", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 46}}, "selectionRange": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 58}}, "selectionRange": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "PDTC_maf", "kind": 13, "range": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 80}}, "selectionRange": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 8}}, "detail": "PDTC_maf = pd.read_csv(PDTC_mutation_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 61}}, "selectionRange": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_maf.replace(to_replace=\"NO\",value=0.0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 82}}, "selectionRange": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_mutation_df.replace(to_replace=\"chr*\",value=1.0,regex=True)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 47}}, "selectionRange": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df.transpose()", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 59}}, "selectionRange": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df[selected_mut_gene_list]", "children": []}, {"name": "PDTC_mutation_gene_list", "kind": 13, "range": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 56}}, "selectionRange": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 23}}, "detail": "PDTC_mutation_gene_list = list(PDTC_mutation_df.columns)", "children": []}, {"name": "PDTC_mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 68}}, "selectionRange": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 28}}, "detail": "PDTC_mutation_cell_line_list = list(PDTC_mutation_df.index.unique())", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 55}}, "selectionRange": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 11}}, "detail": "mutation_df = pd.concat([mutation_df,PDTC_mutation_df])", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 46}}, "selectionRange": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 58}}, "selectionRange": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 36}}, "selectionRange": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 11}}, "detail": "file_handle = open(drug_target_file)", "children": []}, {"name": "drug_target_map", "kind": 13, "range": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 20}}, "selectionRange": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 15}}, "detail": "drug_target_map = {}", "children": []}, {"name": "drug_target_list", "kind": 13, "range": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 21}}, "selectionRange": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 16}}, "detail": "drug_target_list = []", "children": []}, {"name": "line", "kind": 13, "range": {"start": {"line": 230, "character": 0}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 230, "character": 4}, "end": {"line": 230, "character": 8}}, "detail": "for line in file_handle: new_line = line.rstrip().split(\"\\t\") drug = new_line[0] target_list=new_line[1].split(',') if drug != \"Drug\": target_list_str = \"\" for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\" drug = drug.strip() drug_target_map[drug] = [] if ',' not in target_list_str: drug_target_map[drug].append(target_list_str.strip()) drug_target_list.append(target_list_str.strip()) else: target_list = target_list_str.split(',') for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "new_line", "kind": 13, "range": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 40}}, "selectionRange": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 12}}, "detail": "new_line = line.rstrip().split(\"\\t\")", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 22}}, "selectionRange": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 8}}, "detail": "drug = new_line[0]", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 38}}, "selectionRange": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 15}}, "detail": "target_list=new_line[1].split(',')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 28}}, "selectionRange": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 23}}, "detail": "target_list_str = \"\"", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 237, "character": 8}, "end": {"line": 242, "character": 0}}, "selectionRange": {"start": {"line": 237, "character": 12}, "end": {"line": 237, "character": 13}}, "detail": "for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 65}}, "selectionRange": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 71}}, "selectionRange": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 27}}, "selectionRange": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 12}}, "detail": "drug = drug.strip()", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 52}}, "selectionRange": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 23}}, "detail": "target_list = target_list_str.split(',')", "children": []}, {"name": "target", "kind": 13, "range": {"start": {"line": 250, "character": 12}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 250, "character": 16}, "end": {"line": 250, "character": 22}}, "detail": "for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 257, "character": 0}, "end": {"line": 257, "character": 36}}, "selectionRange": {"start": {"line": 257, "character": 0}, "end": {"line": 257, "character": 11}}, "detail": "file_handle = open(drug_target_file)", "children": []}, {"name": "drug_target_map", "kind": 13, "range": {"start": {"line": 259, "character": 0}, "end": {"line": 259, "character": 20}}, "selectionRange": {"start": {"line": 259, "character": 0}, "end": {"line": 259, "character": 15}}, "detail": "drug_target_map = {}", "children": []}, {"name": "drug_target_list", "kind": 13, "range": {"start": {"line": 260, "character": 0}, "end": {"line": 260, "character": 21}}, "selectionRange": {"start": {"line": 260, "character": 0}, "end": {"line": 260, "character": 16}}, "detail": "drug_target_list = []", "children": []}, {"name": "line", "kind": 13, "range": {"start": {"line": 261, "character": 0}, "end": {"line": 284, "character": 0}}, "selectionRange": {"start": {"line": 261, "character": 4}, "end": {"line": 261, "character": 8}}, "detail": "for line in file_handle: new_line = line.rstrip().split(\"\\t\") drug = new_line[0] target_list=new_line[1].split(',') if drug != \"Drug\": target_list_str = \"\" for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\" drug = drug.strip() drug_target_map[drug] = [] if ',' not in target_list_str: drug_target_map[drug].append(target_list_str.strip()) drug_target_list.append(target_list_str.strip()) else: target_list = target_list_str.split(',') for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "new_line", "kind": 13, "range": {"start": {"line": 263, "character": 4}, "end": {"line": 263, "character": 40}}, "selectionRange": {"start": {"line": 263, "character": 4}, "end": {"line": 263, "character": 12}}, "detail": "new_line = line.rstrip().split(\"\\t\")", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 264, "character": 4}, "end": {"line": 264, "character": 22}}, "selectionRange": {"start": {"line": 264, "character": 4}, "end": {"line": 264, "character": 8}}, "detail": "drug = new_line[0]", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 265, "character": 4}, "end": {"line": 265, "character": 38}}, "selectionRange": {"start": {"line": 265, "character": 4}, "end": {"line": 265, "character": 15}}, "detail": "target_list=new_line[1].split(',')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 267, "character": 8}, "end": {"line": 267, "character": 28}}, "selectionRange": {"start": {"line": 267, "character": 8}, "end": {"line": 267, "character": 23}}, "detail": "target_list_str = \"\"", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 268, "character": 8}, "end": {"line": 273, "character": 0}}, "selectionRange": {"start": {"line": 268, "character": 12}, "end": {"line": 268, "character": 13}}, "detail": "for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 270, "character": 16}, "end": {"line": 270, "character": 65}}, "selectionRange": {"start": {"line": 270, "character": 16}, "end": {"line": 270, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 272, "character": 16}, "end": {"line": 272, "character": 71}}, "selectionRange": {"start": {"line": 272, "character": 16}, "end": {"line": 272, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 273, "character": 8}, "end": {"line": 273, "character": 27}}, "selectionRange": {"start": {"line": 273, "character": 8}, "end": {"line": 273, "character": 12}}, "detail": "drug = drug.strip()", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 280, "character": 12}, "end": {"line": 280, "character": 52}}, "selectionRange": {"start": {"line": 280, "character": 12}, "end": {"line": 280, "character": 23}}, "detail": "target_list = target_list_str.split(',')", "children": []}, {"name": "target", "kind": 13, "range": {"start": {"line": 281, "character": 12}, "end": {"line": 284, "character": 0}}, "selectionRange": {"start": {"line": 281, "character": 16}, "end": {"line": 281, "character": 22}}, "detail": "for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "drug_target_map", "kind": 13, "range": {"start": {"line": 285, "character": 0}, "end": {"line": 285, "character": 20}}, "selectionRange": {"start": {"line": 285, "character": 0}, "end": {"line": 285, "character": 15}}, "detail": "drug_target_map = {}", "children": []}, {"name": "drug_target_list", "kind": 13, "range": {"start": {"line": 286, "character": 0}, "end": {"line": 286, "character": 21}}, "selectionRange": {"start": {"line": 286, "character": 0}, "end": {"line": 286, "character": 16}}, "detail": "drug_target_list = []", "children": []}, {"name": "line", "kind": 13, "range": {"start": {"line": 287, "character": 0}, "end": {"line": 310, "character": 0}}, "selectionRange": {"start": {"line": 287, "character": 4}, "end": {"line": 287, "character": 8}}, "detail": "for line in file_handle: new_line = line.rstrip().split(\"\\t\") drug = new_line[0] target_list=new_line[1].split(',') if drug != \"Drug\": target_list_str = \"\" for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\" drug = drug.strip() drug_target_map[drug] = [] if ',' not in target_list_str: drug_target_map[drug].append(target_list_str.strip()) drug_target_list.append(target_list_str.strip()) else: target_list = target_list_str.split(',') for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "new_line", "kind": 13, "range": {"start": {"line": 289, "character": 4}, "end": {"line": 289, "character": 40}}, "selectionRange": {"start": {"line": 289, "character": 4}, "end": {"line": 289, "character": 12}}, "detail": "new_line = line.rstrip().split(\"\\t\")", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 290, "character": 4}, "end": {"line": 290, "character": 22}}, "selectionRange": {"start": {"line": 290, "character": 4}, "end": {"line": 290, "character": 8}}, "detail": "drug = new_line[0]", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 291, "character": 4}, "end": {"line": 291, "character": 38}}, "selectionRange": {"start": {"line": 291, "character": 4}, "end": {"line": 291, "character": 15}}, "detail": "target_list=new_line[1].split(',')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 293, "character": 8}, "end": {"line": 293, "character": 28}}, "selectionRange": {"start": {"line": 293, "character": 8}, "end": {"line": 293, "character": 23}}, "detail": "target_list_str = \"\"", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 294, "character": 8}, "end": {"line": 299, "character": 0}}, "selectionRange": {"start": {"line": 294, "character": 12}, "end": {"line": 294, "character": 13}}, "detail": "for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 296, "character": 16}, "end": {"line": 296, "character": 65}}, "selectionRange": {"start": {"line": 296, "character": 16}, "end": {"line": 296, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 298, "character": 16}, "end": {"line": 298, "character": 71}}, "selectionRange": {"start": {"line": 298, "character": 16}, "end": {"line": 298, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 299, "character": 8}, "end": {"line": 299, "character": 27}}, "selectionRange": {"start": {"line": 299, "character": 8}, "end": {"line": 299, "character": 12}}, "detail": "drug = drug.strip()", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 306, "character": 12}, "end": {"line": 306, "character": 52}}, "selectionRange": {"start": {"line": 306, "character": 12}, "end": {"line": 306, "character": 23}}, "detail": "target_list = target_list_str.split(',')", "children": []}, {"name": "target", "kind": 13, "range": {"start": {"line": 307, "character": 12}, "end": {"line": 310, "character": 0}}, "selectionRange": {"start": {"line": 307, "character": 16}, "end": {"line": 307, "character": 22}}, "detail": "for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "drugs_legend", "kind": 13, "range": {"start": {"line": 313, "character": 0}, "end": {"line": 313, "character": 85}}, "selectionRange": {"start": {"line": 313, "character": 0}, "end": {"line": 313, "character": 12}}, "detail": "drugs_legend = pd.read_csv('/data/GDSC/Screened_Compounds.csv', sep=',', index_col=0)", "children": []}, {"name": "drug2id_mapping", "kind": 13, "range": {"start": {"line": 315, "character": 0}, "end": {"line": 315, "character": 20}}, "selectionRange": {"start": {"line": 315, "character": 0}, "end": {"line": 315, "character": 15}}, "detail": "drug2id_mapping = {}", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 317, "character": 0}, "end": {"line": 320, "character": 0}}, "selectionRange": {"start": {"line": 317, "character": 4}, "end": {"line": 317, "character": 9}}, "detail": "for index in list(drugs_legend.index) : drug_name = drugs_legend.loc[index,'Drug Name'] drug2id_mapping[ drug_name ] = index", "children": []}, {"name": "drug_name", "kind": 13, "range": {"start": {"line": 318, "character": 4}, "end": {"line": 318, "character": 51}}, "selectionRange": {"start": {"line": 318, "character": 4}, "end": {"line": 318, "character": 13}}, "detail": "drug_name = drugs_legend.loc[index,'Drug Name']", "children": []}, {"name": "valid_gene_list", "kind": 13, "range": {"start": {"line": 325, "character": 0}, "end": {"line": 325, "character": 92}}, "selectionRange": {"start": {"line": 325, "character": 0}, "end": {"line": 325, "character": 15}}, "detail": "valid_gene_list = list(set(drug_target_list) | set(exp_gene_list) | set(mutation_gene_list))", "children": []}, {"name": "network_list", "kind": 13, "range": {"start": {"line": 331, "character": 0}, "end": {"line": 331, "character": 82}}, "selectionRange": {"start": {"line": 331, "character": 0}, "end": {"line": 331, "character": 12}}, "detail": "network_list = [new_network_file+inbiomap_file, new_network_file+pathwaycomm_file]", "children": []}, {"name": "gene_neighbor_map", "kind": 13, "range": {"start": {"line": 332, "character": 0}, "end": {"line": 332, "character": 64}}, "selectionRange": {"start": {"line": 332, "character": 0}, "end": {"line": 332, "character": 17}}, "detail": "gene_neighbor_map = load_network(network_list, valid_gene_list)", "children": []}, {"name": "gene_name_df", "kind": 13, "range": {"start": {"line": 338, "character": 0}, "end": {"line": 338, "character": 89}}, "selectionRange": {"start": {"line": 338, "character": 0}, "end": {"line": 338, "character": 12}}, "detail": "gene_name_df = pd.read_table('/data/HUGO_protein-coding_gene.tsv',index_col=25, sep='\\t')", "children": []}, {"name": "gene_name_map", "kind": 13, "range": {"start": {"line": 344, "character": 0}, "end": {"line": 344, "character": 18}}, "selectionRange": {"start": {"line": 344, "character": 0}, "end": {"line": 344, "character": 13}}, "detail": "gene_name_map = {}", "children": []}, {"name": "uniprot_gene", "kind": 13, "range": {"start": {"line": 346, "character": 0}, "end": {"line": 355, "character": 0}}, "selectionRange": {"start": {"line": 346, "character": 4}, "end": {"line": 346, "character": 16}}, "detail": "for uniprot_gene in gene_name_df.index: if isinstance(uniprot_gene, type('aaa')) == False: continue if isinstance(gene_name_df.loc[uniprot_gene, 'symbol'], type('aaa')) == False: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol'][0] else: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 360, "character": 0}, "end": {"line": 360, "character": 76}}, "selectionRange": {"start": {"line": 360, "character": 0}, "end": {"line": 360, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "uniprot_gene_set", "kind": 13, "range": {"start": {"line": 362, "character": 0}, "end": {"line": 362, "character": 24}}, "selectionRange": {"start": {"line": 362, "character": 0}, "end": {"line": 362, "character": 16}}, "detail": "uniprot_gene_set = set()", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 364, "character": 0}, "end": {"line": 373, "character": 0}}, "selectionRange": {"start": {"line": 364, "character": 4}, "end": {"line": 364, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 369, "character": 4}, "end": {"line": 369, "character": 74}}, "selectionRange": {"start": {"line": 369, "character": 4}, "end": {"line": 369, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 371, "character": 4}, "end": {"line": 373, "character": 0}}, "selectionRange": {"start": {"line": 371, "character": 8}, "end": {"line": 371, "character": 12}}, "detail": "for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "query_gene_set", "kind": 13, "range": {"start": {"line": 376, "character": 0}, "end": {"line": 376, "character": 19}}, "selectionRange": {"start": {"line": 376, "character": 0}, "end": {"line": 376, "character": 14}}, "detail": "query_gene_set = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 378, "character": 0}, "end": {"line": 381, "character": 0}}, "selectionRange": {"start": {"line": 378, "character": 4}, "end": {"line": 378, "character": 8}}, "detail": "for gene in uniprot_gene_set: if gene not in gene_name_map: query_gene_set.append(gene)", "children": []}, {"name": "query_gene_list", "kind": 13, "range": {"start": {"line": 384, "character": 0}, "end": {"line": 384, "character": 38}}, "selectionRange": {"start": {"line": 384, "character": 0}, "end": {"line": 384, "character": 15}}, "detail": "query_gene_list = list(query_gene_set)", "children": []}, {"name": "mg", "kind": 13, "range": {"start": {"line": 386, "character": 0}, "end": {"line": 386, "character": 24}}, "selectionRange": {"start": {"line": 386, "character": 0}, "end": {"line": 386, "character": 2}}, "detail": "mg = mygene.MyGeneInfo()", "children": []}, {"name": "out", "kind": 13, "range": {"start": {"line": 387, "character": 0}, "end": {"line": 387, "character": 87}}, "selectionRange": {"start": {"line": 387, "character": 0}, "end": {"line": 387, "character": 3}}, "detail": "out = mg.querymany(query_gene_list, scopes='uniprot', fields='symbol', species='human')", "children": []}, {"name": "not_found_gene_list", "kind": 13, "range": {"start": {"line": 389, "character": 0}, "end": {"line": 389, "character": 24}}, "selectionRange": {"start": {"line": 389, "character": 0}, "end": {"line": 389, "character": 19}}, "detail": "not_found_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 391, "character": 0}, "end": {"line": 396, "character": 0}}, "selectionRange": {"start": {"line": 391, "character": 4}, "end": {"line": 391, "character": 5}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 391, "character": 0}, "end": {"line": 396, "character": 0}}, "selectionRange": {"start": {"line": 391, "character": 7}, "end": {"line": 391, "character": 11}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 403, "character": 0}, "end": {"line": 403, "character": 76}}, "selectionRange": {"start": {"line": 403, "character": 0}, "end": {"line": 403, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 405, "character": 0}, "end": {"line": 427, "character": 0}}, "selectionRange": {"start": {"line": 405, "character": 4}, "end": {"line": 405, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') complex_symbol_list = [] for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] ) for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 410, "character": 4}, "end": {"line": 410, "character": 74}}, "selectionRange": {"start": {"line": 410, "character": 4}, "end": {"line": 410, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "complex_symbol_list", "kind": 13, "range": {"start": {"line": 412, "character": 4}, "end": {"line": 412, "character": 28}}, "selectionRange": {"start": {"line": 412, "character": 4}, "end": {"line": 412, "character": 23}}, "detail": "complex_symbol_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 414, "character": 4}, "end": {"line": 417, "character": 0}}, "selectionRange": {"start": {"line": 414, "character": 8}, "end": {"line": 414, "character": 12}}, "detail": "for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] )", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 418, "character": 4}, "end": {"line": 427, "character": 0}}, "selectionRange": {"start": {"line": 418, "character": 8}, "end": {"line": 418, "character": 13}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 418, "character": 4}, "end": {"line": 427, "character": 0}}, "selectionRange": {"start": {"line": 418, "character": 15}, "end": {"line": 418, "character": 20}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene_exp_neighbor_map", "kind": 13, "range": {"start": {"line": 432, "character": 0}, "end": {"line": 432, "character": 26}}, "selectionRange": {"start": {"line": 432, "character": 0}, "end": {"line": 432, "character": 21}}, "detail": "gene_exp_neighbor_map = {}", "children": []}, {"name": "exp_matrix", "kind": 13, "range": {"start": {"line": 433, "character": 0}, "end": {"line": 433, "character": 26}}, "selectionRange": {"start": {"line": 433, "character": 0}, "end": {"line": 433, "character": 10}}, "detail": "exp_matrix = exp_df.values", "children": []}, {"name": "P", "kind": 13, "range": {"start": {"line": 435, "character": 0}, "end": {"line": 435, "character": 79}}, "selectionRange": {"start": {"line": 435, "character": 0}, "end": {"line": 435, "character": 1}}, "detail": "P = 1 - cdist(np.transpose(exp_matrix), np.transpose(exp_matrix),'correlation')", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 437, "character": 0}, "end": {"line": 451, "character": 0}}, "selectionRange": {"start": {"line": 437, "character": 4}, "end": {"line": 437, "character": 5}}, "detail": "for i in range(len(exp_gene_list)): gene1 = exp_gene_list[i] gene_exp_neighbor_map[gene1] = set() for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2) if gene1 not in gene_exp_neighbor_map[gene1]: print (gene1, 'not in itself?', P[i,i])", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 439, "character": 4}, "end": {"line": 439, "character": 28}}, "selectionRange": {"start": {"line": 439, "character": 4}, "end": {"line": 439, "character": 9}}, "detail": "gene1 = exp_gene_list[i]", "children": []}, {"name": "j", "kind": 13, "range": {"start": {"line": 442, "character": 4}, "end": {"line": 448, "character": 0}}, "selectionRange": {"start": {"line": 442, "character": 8}, "end": {"line": 442, "character": 9}}, "detail": "for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 444, "character": 8}, "end": {"line": 444, "character": 32}}, "selectionRange": {"start": {"line": 444, "character": 8}, "end": {"line": 444, "character": 13}}, "detail": "gene2 = exp_gene_list[j]", "children": []}, {"name": "drug_feature_list", "kind": 13, "range": {"start": {"line": 459, "character": 0}, "end": {"line": 459, "character": 22}}, "selectionRange": {"start": {"line": 459, "character": 0}, "end": {"line": 459, "character": 17}}, "detail": "drug_feature_list = []", "children": []}, {"name": "drug_neighbor_map", "kind": 13, "range": {"start": {"line": 460, "character": 0}, "end": {"line": 460, "character": 22}}, "selectionRange": {"start": {"line": 460, "character": 0}, "end": {"line": 460, "character": 17}}, "detail": "drug_neighbor_map = {}", "children": []}, {"name": "selected_drug_list", "kind": 13, "range": {"start": {"line": 461, "character": 0}, "end": {"line": 461, "character": 23}}, "selectionRange": {"start": {"line": 461, "character": 0}, "end": {"line": 461, "character": 18}}, "detail": "selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 463, "character": 0}, "end": {"line": 480, "character": 0}}, "selectionRange": {"start": {"line": 463, "character": 4}, "end": {"line": 463, "character": 8}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 463, "character": 0}, "end": {"line": 480, "character": 0}}, "selectionRange": {"start": {"line": 463, "character": 10}, "end": {"line": 463, "character": 21}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 466, "character": 8}, "end": {"line": 476, "character": 0}}, "selectionRange": {"start": {"line": 466, "character": 12}, "end": {"line": 466, "character": 16}}, "detail": "for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene]", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 494, "character": 0}, "end": {"line": 494, "character": 52}}, "selectionRange": {"start": {"line": 494, "character": 0}, "end": {"line": 494, "character": 5}}, "detail": "drugs = pd.read_csv(drug_cell_line_file,index_col=2)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 495, "character": 0}, "end": {"line": 495, "character": 93}}, "selectionRange": {"start": {"line": 495, "character": 0}, "end": {"line": 495, "character": 5}}, "detail": "drugs = drugs.drop([\"DATASET_VERSION\",\"IC50_RESULTS_ID\",\"MAX_CONC_MICROMOLAR\",\"RMSE\"],axis=1)", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 496, "character": 0}, "end": {"line": 496, "character": 49}}, "selectionRange": {"start": {"line": 496, "character": 0}, "end": {"line": 496, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 498, "character": 0}, "end": {"line": 498, "character": 28}}, "selectionRange": {"start": {"line": 498, "character": 0}, "end": {"line": 498, "character": 9}}, "detail": "drug_list = drugs[\"DRUG_ID\"]", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 499, "character": 0}, "end": {"line": 499, "character": 16}}, "selectionRange": {"start": {"line": 499, "character": 0}, "end": {"line": 499, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 509, "character": 0}, "end": {"line": 509, "character": 71}}, "selectionRange": {"start": {"line": 509, "character": 0}, "end": {"line": 509, "character": 10}}, "detail": "PDTC_drugs = pd.read_csv(PDTC_drug_cell_line_file,sep='\\t',index_col=0)", "children": []}, {"name": "PDTC_drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 510, "character": 0}, "end": {"line": 510, "character": 59}}, "selectionRange": {"start": {"line": 510, "character": 0}, "end": {"line": 510, "character": 25}}, "detail": "PDTC_drugs_cell_line_list = list(PDTC_drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 512, "character": 0}, "end": {"line": 512, "character": 39}}, "selectionRange": {"start": {"line": 512, "character": 0}, "end": {"line": 512, "character": 9}}, "detail": "drug_list = PDTC_drugs[\"Drug\"].tolist()", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 513, "character": 0}, "end": {"line": 513, "character": 16}}, "selectionRange": {"start": {"line": 513, "character": 0}, "end": {"line": 513, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 514, "character": 0}, "end": {"line": 519, "character": 0}}, "selectionRange": {"start": {"line": 514, "character": 4}, "end": {"line": 514, "character": 5}}, "detail": "for i in drug_list: if i in drug2id_mapping.keys(): new_drug_id.append(drug2id_mapping[i]) else: new_drug_id.append(0)", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 521, "character": 0}, "end": {"line": 521, "character": 84}}, "selectionRange": {"start": {"line": 521, "character": 0}, "end": {"line": 521, "character": 10}}, "detail": "PDTC_drugs = PDTC_drugs.drop([\"Drug\",\"iC50\",\"D1_CONC\",\"D5_CONC\",\"perc.iC50\"],axis=1)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 529, "character": 0}, "end": {"line": 529, "character": 37}}, "selectionRange": {"start": {"line": 529, "character": 0}, "end": {"line": 529, "character": 5}}, "detail": "drugs = pd.concat([drugs,PDTC_drugs])", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 536, "character": 0}, "end": {"line": 536, "character": 49}}, "selectionRange": {"start": {"line": 536, "character": 0}, "end": {"line": 536, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "cell_line_list", "kind": 13, "range": {"start": {"line": 542, "character": 0}, "end": {"line": 542, "character": 102}}, "selectionRange": {"start": {"line": 542, "character": 0}, "end": {"line": 542, "character": 14}}, "detail": "cell_line_list = list(set(drugs_cell_line_list)&set(exp_cell_line_list)&set(mutation_cell_line_list) )", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 549, "character": 0}, "end": {"line": 549, "character": 66}}, "selectionRange": {"start": {"line": 549, "character": 0}, "end": {"line": 549, "character": 16}}, "detail": "cell_line_legend = pd.read_csv(cell_line_detail_file, index_col=1)", "children": []}, {"name": "PDTC_cell_line", "kind": 13, "range": {"start": {"line": 550, "character": 0}, "end": {"line": 550, "character": 206}}, "selectionRange": {"start": {"line": 550, "character": 0}, "end": {"line": 550, "character": 14}}, "detail": "PDTC_cell_line = pd.DataFrame({'Line': [\"BRCA\"]*len(PDTC_exp_cell_line_list), 'Site':[\"PDTC\"]*len(PDTC_exp_cell_line_list),\"Histology\":[\"breast\"]*len(PDTC_exp_cell_line_list)},index=PDTC_exp_cell_line_list)", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 551, "character": 0}, "end": {"line": 551, "character": 63}}, "selectionRange": {"start": {"line": 551, "character": 0}, "end": {"line": 551, "character": 16}}, "detail": "cell_line_legend = pd.concat([cell_line_legend,PDTC_cell_line])", "children": []}, {"name": "tissue_map", "kind": 13, "range": {"start": {"line": 554, "character": 0}, "end": {"line": 554, "character": 15}}, "selectionRange": {"start": {"line": 554, "character": 0}, "end": {"line": 554, "character": 10}}, "detail": "tissue_map = {}", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 556, "character": 0}, "end": {"line": 564, "character": 0}}, "selectionRange": {"start": {"line": 556, "character": 4}, "end": {"line": 556, "character": 13}}, "detail": "for cell_line in cell_line_list: tissue = cell_line_legend.loc[cell_line,'Site'] if tissue not in tissue_map: tissue_map[tissue] = [] tissue_map[tissue].append(cell_line)", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 558, "character": 4}, "end": {"line": 558, "character": 51}}, "selectionRange": {"start": {"line": 558, "character": 4}, "end": {"line": 558, "character": 10}}, "detail": "tissue = cell_line_legend.loc[cell_line,'Site']", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 565, "character": 0}, "end": {"line": 565, "character": 23}}, "selectionRange": {"start": {"line": 565, "character": 0}, "end": {"line": 565, "character": 19}}, "detail": "large_tissue_number = 0", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 566, "character": 0}, "end": {"line": 572, "character": 0}}, "selectionRange": {"start": {"line": 566, "character": 4}, "end": {"line": 566, "character": 10}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 566, "character": 0}, "end": {"line": 572, "character": 0}}, "selectionRange": {"start": {"line": 566, "character": 12}, "end": {"line": 566, "character": 21}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 569, "character": 8}, "end": {"line": 569, "character": 32}}, "selectionRange": {"start": {"line": 569, "character": 8}, "end": {"line": 569, "character": 27}}, "detail": "large_tissue_number += 1", "children": []}, {"name": "new_exp_gene_list", "kind": 13, "range": {"start": {"line": 592, "character": 0}, "end": {"line": 592, "character": 22}}, "selectionRange": {"start": {"line": 592, "character": 0}, "end": {"line": 592, "character": 17}}, "detail": "new_exp_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 593, "character": 0}, "end": {"line": 596, "character": 0}}, "selectionRange": {"start": {"line": 593, "character": 4}, "end": {"line": 593, "character": 5}}, "detail": "for i in exp_gene_list: if i in valid_gene_list: new_exp_gene_list.append(i)", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 601, "character": 0}, "end": {"line": 601, "character": 41}}, "selectionRange": {"start": {"line": 601, "character": 0}, "end": {"line": 601, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 602, "character": 0}, "end": {"line": 602, "character": 38}}, "selectionRange": {"start": {"line": 602, "character": 0}, "end": {"line": 602, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 603, "character": 0}, "end": {"line": 603, "character": 72}}, "selectionRange": {"start": {"line": 603, "character": 0}, "end": {"line": 603, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 605, "character": 0}, "end": {"line": 605, "character": 43}}, "selectionRange": {"start": {"line": 605, "character": 0}, "end": {"line": 605, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 606, "character": 0}, "end": {"line": 606, "character": 68}}, "selectionRange": {"start": {"line": 606, "character": 0}, "end": {"line": 606, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 613, "character": 0}, "end": {"line": 613, "character": 58}}, "selectionRange": {"start": {"line": 613, "character": 0}, "end": {"line": 613, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 614, "character": 0}, "end": {"line": 614, "character": 68}}, "selectionRange": {"start": {"line": 614, "character": 0}, "end": {"line": 614, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "new_data_file", "kind": 13, "range": {"start": {"line": 623, "character": 0}, "end": {"line": 623, "character": 18}}, "selectionRange": {"start": {"line": 623, "character": 0}, "end": {"line": 623, "character": 13}}, "detail": "new_data_file = ''", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 627, "character": 0}, "end": {"line": 627, "character": 41}}, "selectionRange": {"start": {"line": 627, "character": 0}, "end": {"line": 627, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 628, "character": 0}, "end": {"line": 628, "character": 38}}, "selectionRange": {"start": {"line": 628, "character": 0}, "end": {"line": 628, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 629, "character": 0}, "end": {"line": 629, "character": 72}}, "selectionRange": {"start": {"line": 629, "character": 0}, "end": {"line": 629, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 631, "character": 0}, "end": {"line": 631, "character": 43}}, "selectionRange": {"start": {"line": 631, "character": 0}, "end": {"line": 631, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 632, "character": 0}, "end": {"line": 632, "character": 68}}, "selectionRange": {"start": {"line": 632, "character": 0}, "end": {"line": 632, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 639, "character": 0}, "end": {"line": 639, "character": 58}}, "selectionRange": {"start": {"line": 639, "character": 0}, "end": {"line": 639, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 640, "character": 0}, "end": {"line": 640, "character": 68}}, "selectionRange": {"start": {"line": 640, "character": 0}, "end": {"line": 640, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "rename_selected_drug_list", "kind": 13, "range": {"start": {"line": 644, "character": 0}, "end": {"line": 644, "character": 30}}, "selectionRange": {"start": {"line": 644, "character": 0}, "end": {"line": 644, "character": 25}}, "detail": "rename_selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 646, "character": 0}, "end": {"line": 716, "character": 0}}, "selectionRange": {"start": {"line": 646, "character": 4}, "end": {"line": 646, "character": 8}}, "detail": "for drug in selected_drug_list: print(drug) if drug not in drug2id_mapping: print('drug name wrong', drug) else: cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]] feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) ) feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) ) print(len(feature_exp_gene_list) + len(feature_mut_gene_list)) if len(feature_exp_gene_list) + len(feature_mut_gene_list) == 0: continue feature_description = [] drug_tissue_map = {} drug = drug.replace(' ','_') rename_selected_drug_list.append(drug) if drug == 'Nutlin-3a_(-)': drug = 'Nutlin-3a' drug_folder = '/data/merged/drug_feature/' + drug + '/' if not os.path.exists(drug_folder): os.makedirs(drug_folder) for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description)) file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\") pickle.dump(drug_tissue_map,file_handle) file_handle.close()", "children": []}, {"name": "cell_line_drug_matrix", "kind": 13, "range": {"start": {"line": 654, "character": 8}, "end": {"line": 654, "character": 84}}, "selectionRange": {"start": {"line": 654, "character": 8}, "end": {"line": 654, "character": 29}}, "detail": "cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]]", "children": []}, {"name": "feature_exp_gene_list", "kind": 13, "range": {"start": {"line": 659, "character": 8}, "end": {"line": 659, "character": 98}}, "selectionRange": {"start": {"line": 659, "character": 8}, "end": {"line": 659, "character": 29}}, "detail": "feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) )", "children": []}, {"name": "feature_mut_gene_list", "kind": 13, "range": {"start": {"line": 660, "character": 8}, "end": {"line": 660, "character": 98}}, "selectionRange": {"start": {"line": 660, "character": 8}, "end": {"line": 660, "character": 29}}, "detail": "feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) )", "children": []}, {"name": "feature_description", "kind": 13, "range": {"start": {"line": 664, "character": 8}, "end": {"line": 664, "character": 32}}, "selectionRange": {"start": {"line": 664, "character": 8}, "end": {"line": 664, "character": 27}}, "detail": "feature_description = []", "children": []}, {"name": "drug_tissue_map", "kind": 13, "range": {"start": {"line": 666, "character": 8}, "end": {"line": 666, "character": 28}}, "selectionRange": {"start": {"line": 666, "character": 8}, "end": {"line": 666, "character": 23}}, "detail": "drug_tissue_map = {}", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 668, "character": 8}, "end": {"line": 668, "character": 36}}, "selectionRange": {"start": {"line": 668, "character": 8}, "end": {"line": 668, "character": 12}}, "detail": "drug = drug.replace(' ','_')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 674, "character": 12}, "end": {"line": 674, "character": 30}}, "selectionRange": {"start": {"line": 674, "character": 12}, "end": {"line": 674, "character": 16}}, "detail": "drug = 'Nutlin-3a'", "children": []}, {"name": "drug_folder", "kind": 13, "range": {"start": {"line": 676, "character": 8}, "end": {"line": 676, "character": 63}}, "selectionRange": {"start": {"line": 676, "character": 8}, "end": {"line": 676, "character": 19}}, "detail": "drug_folder = '/data/merged/drug_feature/' + drug + '/'", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 682, "character": 8}, "end": {"line": 712, "character": 0}}, "selectionRange": {"start": {"line": 682, "character": 12}, "end": {"line": 682, "character": 18}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "tissue_cell_line_list", "kind": 13, "range": {"start": {"line": 682, "character": 8}, "end": {"line": 712, "character": 0}}, "selectionRange": {"start": {"line": 682, "character": 20}, "end": {"line": 682, "character": 41}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 685, "character": 12}, "end": {"line": 685, "character": 103}}, "selectionRange": {"start": {"line": 685, "character": 12}, "end": {"line": 685, "character": 35}}, "detail": "drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list )", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 686, "character": 12}, "end": {"line": 686, "character": 67}}, "selectionRange": {"start": {"line": 686, "character": 12}, "end": {"line": 686, "character": 35}}, "detail": "drug_specific_cell_line = list(drug_specific_cell_line)", "children": []}, {"name": "feature_list", "kind": 13, "range": {"start": {"line": 689, "character": 12}, "end": {"line": 689, "character": 29}}, "selectionRange": {"start": {"line": 689, "character": 12}, "end": {"line": 689, "character": 24}}, "detail": "feature_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 693, "character": 16}, "end": {"line": 695, "character": 0}}, "selectionRange": {"start": {"line": 693, "character": 20}, "end": {"line": 693, "character": 24}}, "detail": "for gene in feature_exp_gene_list: feature_description.append(gene+'_expression')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 698, "character": 16}, "end": {"line": 700, "character": 0}}, "selectionRange": {"start": {"line": 698, "character": 20}, "end": {"line": 698, "character": 24}}, "detail": "for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation')", "children": []}, {"name": "feature", "kind": 13, "range": {"start": {"line": 701, "character": 12}, "end": {"line": 701, "character": 58}}, "selectionRange": {"start": {"line": 701, "character": 12}, "end": {"line": 701, "character": 19}}, "detail": "feature = np.concatenate(feature_list, axis=1)", "children": []}, {"name": "label", "kind": 13, "range": {"start": {"line": 703, "character": 12}, "end": {"line": 703, "character": 88}}, "selectionRange": {"start": {"line": 703, "character": 12}, "end": {"line": 703, "character": 17}}, "detail": "label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 713, "character": 8}, "end": {"line": 713, "character": 84}}, "selectionRange": {"start": {"line": 713, "character": 8}, "end": {"line": 713, "character": 19}}, "detail": "file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\")", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 717, "character": 0}, "end": {"line": 717, "character": 52}}, "selectionRange": {"start": {"line": 717, "character": 0}, "end": {"line": 717, "character": 11}}, "detail": "file_handle = open('rename_selected_drug_list', 'w')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 718, "character": 0}, "end": {"line": 720, "character": 0}}, "selectionRange": {"start": {"line": 718, "character": 4}, "end": {"line": 718, "character": 8}}, "detail": "for drug in rename_selected_drug_list: file_handle.writelines(drug+ '\\n')", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 738, "character": 0}, "end": {"line": 738, "character": 13}}, "selectionRange": {"start": {"line": 738, "character": 7}, "end": {"line": 738, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cell_line_loc", "kind": 13, "range": {"start": {"line": 744, "character": 0}, "end": {"line": 744, "character": 84}}, "selectionRange": {"start": {"line": 744, "character": 0}, "end": {"line": 744, "character": 13}}, "detail": "cell_line_loc = '/cellar/users/samsonfong/Projects/tcrp-v2/from-ma/cell_line_lists/'", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 750, "character": 0}, "end": {"line": 752, "character": 0}}, "selectionRange": {"start": {"line": 750, "character": 53}, "end": {"line": 750, "character": 54}}, "detail": "with open('/data/drug_feature/KU-55933/KU', 'rb') as f: tmap= pickle.load(f)", "children": []}, {"name": "tmap", "kind": 13, "range": {"start": {"line": 751, "character": 4}, "end": {"line": 751, "character": 24}}, "selectionRange": {"start": {"line": 751, "character": 4}, "end": {"line": 751, "character": 8}}, "detail": "tmap= pickle.load(f)", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 769, "character": 0}, "end": {"line": 769, "character": 68}}, "selectionRange": {"start": {"line": 769, "character": 0}, "end": {"line": 769, "character": 1}}, "detail": "f = np.load('/data/drug_feature/KU-55933/lung_KU-55933_feature.npy')", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 41, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 42, "result": [{"name": "matplotlib", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 17}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 17}}, "detail": "module matplotlib", "children": []}, {"name": "os", "kind": 2, "range": {"start": {"line": 10, "character": 0}, "end": {"line": 10, "character": 9}}, "selectionRange": {"start": {"line": 10, "character": 7}, "end": {"line": 10, "character": 9}}, "detail": "module os", "children": []}, {"name": "pd", "kind": 2, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 11, "character": 19}}, "selectionRange": {"start": {"line": 11, "character": 17}, "end": {"line": 11, "character": 19}}, "detail": "module pd", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 12, "character": 0}, "end": {"line": 12, "character": 18}}, "selectionRange": {"start": {"line": 12, "character": 16}, "end": {"line": 12, "character": 18}}, "detail": "module np", "children": []}, {"name": "sys", "kind": 2, "range": {"start": {"line": 13, "character": 0}, "end": {"line": 13, "character": 10}}, "selectionRange": {"start": {"line": 13, "character": 7}, "end": {"line": 13, "character": 10}}, "detail": "module sys", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 14, "character": 0}, "end": {"line": 14, "character": 13}}, "selectionRange": {"start": {"line": 14, "character": 7}, "end": {"line": 14, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cdist", "kind": 12, "range": {"start": {"line": 15, "character": 0}, "end": {"line": 15, "character": 40}}, "selectionRange": {"start": {"line": 15, "character": 35}, "end": {"line": 15, "character": 40}}, "detail": "def cdist", "children": []}, {"name": "math", "kind": 2, "range": {"start": {"line": 16, "character": 0}, "end": {"line": 16, "character": 11}}, "selectionRange": {"start": {"line": 16, "character": 7}, "end": {"line": 16, "character": 11}}, "detail": "module math", "children": []}, {"name": "nx", "kind": 2, "range": {"start": {"line": 17, "character": 0}, "end": {"line": 17, "character": 21}}, "selectionRange": {"start": {"line": 17, "character": 19}, "end": {"line": 17, "character": 21}}, "detail": "module nx", "children": []}, {"name": "nxacc", "kind": 2, "range": {"start": {"line": 18, "character": 0}, "end": {"line": 18, "character": 56}}, "selectionRange": {"start": {"line": 18, "character": 51}, "end": {"line": 18, "character": 56}}, "detail": "module nxacc", "children": []}, {"name": "nxadag", "kind": 2, "range": {"start": {"line": 19, "character": 0}, "end": {"line": 19, "character": 40}}, "selectionRange": {"start": {"line": 19, "character": 34}, "end": {"line": 19, "character": 40}}, "detail": "module nxadag", "children": []}, {"name": "plt", "kind": 2, "range": {"start": {"line": 20, "character": 0}, "end": {"line": 20, "character": 31}}, "selectionRange": {"start": {"line": 20, "character": 28}, "end": {"line": 20, "character": 31}}, "detail": "module plt", "children": []}, {"name": "sns", "kind": 2, "range": {"start": {"line": 21, "character": 0}, "end": {"line": 21, "character": 21}}, "selectionRange": {"start": {"line": 21, "character": 18}, "end": {"line": 21, "character": 21}}, "detail": "module sns", "children": []}, {"name": "itertools", "kind": 2, "range": {"start": {"line": 22, "character": 0}, "end": {"line": 22, "character": 16}}, "selectionRange": {"start": {"line": 22, "character": 7}, "end": {"line": 22, "character": 16}}, "detail": "module itertools", "children": []}, {"name": "mygene", "kind": 2, "range": {"start": {"line": 23, "character": 0}, "end": {"line": 23, "character": 13}}, "selectionRange": {"start": {"line": 23, "character": 7}, "end": {"line": 23, "character": 13}}, "detail": "module mygene", "children": []}, {"name": "re", "kind": 2, "range": {"start": {"line": 24, "character": 0}, "end": {"line": 24, "character": 9}}, "selectionRange": {"start": {"line": 24, "character": 7}, "end": {"line": 24, "character": 9}}, "detail": "module re", "children": []}, {"name": "selected_exp_gene_list", "kind": 13, "range": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 95}}, "selectionRange": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 22}}, "detail": "selected_exp_gene_list = pd.read_csv(\"/data/common_exp_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "selected_mut_gene_list", "kind": 13, "range": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 95}}, "selectionRange": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 22}}, "detail": "selected_mut_gene_list = pd.read_csv(\"/data/common_mut_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "load_network", "kind": 12, "range": {"start": {"line": 37, "character": 0}, "end": {"line": 65, "character": 28}}, "selectionRange": {"start": {"line": 37, "character": 4}, "end": {"line": 37, "character": 16}}, "detail": "def load_network", "children": []}, {"name": "load_name_space", "kind": 12, "range": {"start": {"line": 67, "character": 0}, "end": {"line": 79, "character": 21}}, "selectionRange": {"start": {"line": 67, "character": 4}, "end": {"line": 67, "character": 19}}, "detail": "def load_name_space", "children": []}, {"name": "list2index", "kind": 12, "range": {"start": {"line": 81, "character": 0}, "end": {"line": 88, "character": 41}}, "selectionRange": {"start": {"line": 81, "character": 4}, "end": {"line": 81, "character": 14}}, "detail": "def list2index", "children": []}, {"name": "PDTC_data_file", "kind": 13, "range": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 30}}, "selectionRange": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 14}}, "detail": "PDTC_data_file = '/data/PTDC/'", "children": []}, {"name": "PDTC_exp_data_file", "kind": 13, "range": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 60}}, "selectionRange": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 18}}, "detail": "PDTC_exp_data_file = PDTC_data_file + 'ExpressionModels.tsv'", "children": []}, {"name": "PDTC_drug_cell_line_file", "kind": 13, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 72}}, "selectionRange": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 24}}, "detail": "PDTC_drug_cell_line_file = PDTC_data_file + 'DrugResponsesAUCModels.tsv'", "children": []}, {"name": "PDTC_mutation_data_file", "kind": 13, "range": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 59}}, "selectionRange": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 23}}, "detail": "PDTC_mutation_data_file = PDTC_data_file + 'SNVsModels.tsv'", "children": []}, {"name": "PDTC_drug_target_file", "kind": 13, "range": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 47}}, "selectionRange": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 21}}, "detail": "PDTC_drug_target_file ='/data/drug_targets.tsv'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 37}}, "selectionRange": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 46}}, "selectionRange": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "data_file", "kind": 13, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 25}}, "selectionRange": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 9}}, "detail": "data_file = '/data/GDSC/'", "children": []}, {"name": "new_network_file", "kind": 13, "range": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 27}}, "selectionRange": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 16}}, "detail": "new_network_file = '/data/'", "children": []}, {"name": "exp_data_file", "kind": 13, "range": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 61}}, "selectionRange": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 13}}, "detail": "exp_data_file = data_file + 'Cell_line_RMA_proc_basalExp.txt'", "children": []}, {"name": "drug_cell_line_file", "kind": 13, "range": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 64}}, "selectionRange": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 19}}, "detail": "drug_cell_line_file = data_file + 'v17_fitted_dose_response.csv'", "children": []}, {"name": "cell_line_detail_file", "kind": 13, "range": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 60}}, "selectionRange": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 21}}, "detail": "cell_line_detail_file = data_file + 'Cell_Lines_Details.csv'", "children": []}, {"name": "mutation_data_file", "kind": 13, "range": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 51}}, "selectionRange": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 18}}, "detail": "mutation_data_file = data_file + 'WES_variants.csv'", "children": []}, {"name": "drug_target_file", "kind": 13, "range": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 42}}, "selectionRange": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 16}}, "detail": "drug_target_file ='/data/drug_targets.tsv'", "children": []}, {"name": "feature_folder", "kind": 13, "range": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 27}}, "selectionRange": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 14}}, "detail": "feature_folder = 'feature/'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 37}}, "selectionRange": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 46}}, "selectionRange": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 58}}, "selectionRange": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 6}}, "detail": "exp_df = pd.read_csv(exp_data_file, sep='\\t', index_col=0)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 21}}, "selectionRange": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 6}}, "detail": "exp_df = exp_df.T[1:]", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 56}}, "selectionRange": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 6}}, "detail": "exp_df = exp_df.rename(columns={np.nan: 'NO_GENE_NAME'})", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 43}}, "selectionRange": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 6}}, "detail": "exp_df = exp_df.drop('NO_GENE_NAME',axis=1)", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 138, "character": 0}, "end": {"line": 140, "character": 26}}, "selectionRange": {"start": {"line": 138, "character": 4}, "end": {"line": 138, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 142, "character": 0}, "end": {"line": 142, "character": 44}}, "selectionRange": {"start": {"line": 142, "character": 7}, "end": {"line": 142, "character": 12}}, "detail": "exp_df.index = exp_df.index.map(stripNumber)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 40}}, "selectionRange": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 6}}, "detail": "exp_df = exp_df.groupby(level=0).first()", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 39}}, "selectionRange": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 6}}, "detail": "exp_df = exp_df[selected_exp_gene_list]", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 36}}, "selectionRange": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 48}}, "selectionRange": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 78}}, "selectionRange": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 11}}, "detail": "PDTC_exp_df = pd.read_csv(PDTC_exp_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 31}}, "selectionRange": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df.T[1:]", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 160, "character": 0}, "end": {"line": 162, "character": 26}}, "selectionRange": {"start": {"line": 160, "character": 4}, "end": {"line": 160, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 49}}, "selectionRange": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df[selected_exp_gene_list]", "children": []}, {"name": "PDTC_exp_gene_list", "kind": 13, "range": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 46}}, "selectionRange": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 18}}, "detail": "PDTC_exp_gene_list = list(PDTC_exp_df.columns)", "children": []}, {"name": "PDTC_exp_cell_line_list", "kind": 13, "range": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 58}}, "selectionRange": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 23}}, "detail": "PDTC_exp_cell_line_list = list(PDTC_exp_df.index.unique())", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 40}}, "selectionRange": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 6}}, "detail": "exp_df = pd.concat([exp_df,PDTC_exp_df])", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 36}}, "selectionRange": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 48}}, "selectionRange": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "maf", "kind": 13, "range": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 69}}, "selectionRange": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 3}}, "detail": "maf = pd.read_csv(mutation_data_file, sep=',', index_col=0).fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 75}}, "selectionRange": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 11}}, "detail": "mutation_df = maf.groupby(['COSMIC_ID', 'Gene']).size().unstack().fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 49}}, "selectionRange": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 11}}, "detail": "mutation_df = mutation_df[selected_mut_gene_list]", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 46}}, "selectionRange": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 58}}, "selectionRange": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "PDTC_maf", "kind": 13, "range": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 80}}, "selectionRange": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 8}}, "detail": "PDTC_maf = pd.read_csv(PDTC_mutation_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 61}}, "selectionRange": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_maf.replace(to_replace=\"NO\",value=0.0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 82}}, "selectionRange": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_mutation_df.replace(to_replace=\"chr*\",value=1.0,regex=True)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 47}}, "selectionRange": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df.transpose()", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 59}}, "selectionRange": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df[selected_mut_gene_list]", "children": []}, {"name": "PDTC_mutation_gene_list", "kind": 13, "range": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 56}}, "selectionRange": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 23}}, "detail": "PDTC_mutation_gene_list = list(PDTC_mutation_df.columns)", "children": []}, {"name": "PDTC_mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 68}}, "selectionRange": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 28}}, "detail": "PDTC_mutation_cell_line_list = list(PDTC_mutation_df.index.unique())", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 55}}, "selectionRange": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 11}}, "detail": "mutation_df = pd.concat([mutation_df,PDTC_mutation_df])", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 46}}, "selectionRange": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 58}}, "selectionRange": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 36}}, "selectionRange": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 11}}, "detail": "file_handle = open(drug_target_file)", "children": []}, {"name": "drug_target_map", "kind": 13, "range": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 20}}, "selectionRange": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 15}}, "detail": "drug_target_map = {}", "children": []}, {"name": "drug_target_list", "kind": 13, "range": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 21}}, "selectionRange": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 16}}, "detail": "drug_target_list = []", "children": []}, {"name": "line", "kind": 13, "range": {"start": {"line": 230, "character": 0}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 230, "character": 4}, "end": {"line": 230, "character": 8}}, "detail": "for line in file_handle: new_line = line.rstrip().split(\"\\t\") drug = new_line[0] target_list=new_line[1].split(',') if drug != \"Drug\": target_list_str = \"\" for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\" drug = drug.strip() drug_target_map[drug] = [] if ',' not in target_list_str: drug_target_map[drug].append(target_list_str.strip()) drug_target_list.append(target_list_str.strip()) else: target_list = target_list_str.split(',') for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "new_line", "kind": 13, "range": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 40}}, "selectionRange": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 12}}, "detail": "new_line = line.rstrip().split(\"\\t\")", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 22}}, "selectionRange": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 8}}, "detail": "drug = new_line[0]", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 38}}, "selectionRange": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 15}}, "detail": "target_list=new_line[1].split(',')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 28}}, "selectionRange": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 23}}, "detail": "target_list_str = \"\"", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 237, "character": 8}, "end": {"line": 242, "character": 0}}, "selectionRange": {"start": {"line": 237, "character": 12}, "end": {"line": 237, "character": 13}}, "detail": "for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 65}}, "selectionRange": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 71}}, "selectionRange": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 27}}, "selectionRange": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 12}}, "detail": "drug = drug.strip()", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 52}}, "selectionRange": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 23}}, "detail": "target_list = target_list_str.split(',')", "children": []}, {"name": "target", "kind": 13, "range": {"start": {"line": 250, "character": 12}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 250, "character": 16}, "end": {"line": 250, "character": 22}}, "detail": "for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 257, "character": 0}, "end": {"line": 257, "character": 36}}, "selectionRange": {"start": {"line": 257, "character": 0}, "end": {"line": 257, "character": 11}}, "detail": "file_handle = open(drug_target_file)", "children": []}, {"name": "drug_target_map", "kind": 13, "range": {"start": {"line": 259, "character": 0}, "end": {"line": 259, "character": 20}}, "selectionRange": {"start": {"line": 259, "character": 0}, "end": {"line": 259, "character": 15}}, "detail": "drug_target_map = {}", "children": []}, {"name": "drug_target_list", "kind": 13, "range": {"start": {"line": 260, "character": 0}, "end": {"line": 260, "character": 21}}, "selectionRange": {"start": {"line": 260, "character": 0}, "end": {"line": 260, "character": 16}}, "detail": "drug_target_list = []", "children": []}, {"name": "line", "kind": 13, "range": {"start": {"line": 261, "character": 0}, "end": {"line": 284, "character": 0}}, "selectionRange": {"start": {"line": 261, "character": 4}, "end": {"line": 261, "character": 8}}, "detail": "for line in file_handle: new_line = line.rstrip().split(\"\\t\") drug = new_line[0] target_list=new_line[1].split(',') if drug != \"Drug\": target_list_str = \"\" for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\" drug = drug.strip() drug_target_map[drug] = [] if ',' not in target_list_str: drug_target_map[drug].append(target_list_str.strip()) drug_target_list.append(target_list_str.strip()) else: target_list = target_list_str.split(',') for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "new_line", "kind": 13, "range": {"start": {"line": 263, "character": 4}, "end": {"line": 263, "character": 40}}, "selectionRange": {"start": {"line": 263, "character": 4}, "end": {"line": 263, "character": 12}}, "detail": "new_line = line.rstrip().split(\"\\t\")", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 264, "character": 4}, "end": {"line": 264, "character": 22}}, "selectionRange": {"start": {"line": 264, "character": 4}, "end": {"line": 264, "character": 8}}, "detail": "drug = new_line[0]", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 265, "character": 4}, "end": {"line": 265, "character": 38}}, "selectionRange": {"start": {"line": 265, "character": 4}, "end": {"line": 265, "character": 15}}, "detail": "target_list=new_line[1].split(',')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 267, "character": 8}, "end": {"line": 267, "character": 28}}, "selectionRange": {"start": {"line": 267, "character": 8}, "end": {"line": 267, "character": 23}}, "detail": "target_list_str = \"\"", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 268, "character": 8}, "end": {"line": 273, "character": 0}}, "selectionRange": {"start": {"line": 268, "character": 12}, "end": {"line": 268, "character": 13}}, "detail": "for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 270, "character": 16}, "end": {"line": 270, "character": 65}}, "selectionRange": {"start": {"line": 270, "character": 16}, "end": {"line": 270, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 272, "character": 16}, "end": {"line": 272, "character": 71}}, "selectionRange": {"start": {"line": 272, "character": 16}, "end": {"line": 272, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 273, "character": 8}, "end": {"line": 273, "character": 27}}, "selectionRange": {"start": {"line": 273, "character": 8}, "end": {"line": 273, "character": 12}}, "detail": "drug = drug.strip()", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 280, "character": 12}, "end": {"line": 280, "character": 52}}, "selectionRange": {"start": {"line": 280, "character": 12}, "end": {"line": 280, "character": 23}}, "detail": "target_list = target_list_str.split(',')", "children": []}, {"name": "target", "kind": 13, "range": {"start": {"line": 281, "character": 12}, "end": {"line": 284, "character": 0}}, "selectionRange": {"start": {"line": 281, "character": 16}, "end": {"line": 281, "character": 22}}, "detail": "for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "drug_target_map", "kind": 13, "range": {"start": {"line": 285, "character": 0}, "end": {"line": 285, "character": 20}}, "selectionRange": {"start": {"line": 285, "character": 0}, "end": {"line": 285, "character": 15}}, "detail": "drug_target_map = {}", "children": []}, {"name": "drug_target_list", "kind": 13, "range": {"start": {"line": 286, "character": 0}, "end": {"line": 286, "character": 21}}, "selectionRange": {"start": {"line": 286, "character": 0}, "end": {"line": 286, "character": 16}}, "detail": "drug_target_list = []", "children": []}, {"name": "line", "kind": 13, "range": {"start": {"line": 287, "character": 0}, "end": {"line": 310, "character": 0}}, "selectionRange": {"start": {"line": 287, "character": 4}, "end": {"line": 287, "character": 8}}, "detail": "for line in file_handle: new_line = line.rstrip().split(\"\\t\") drug = new_line[0] target_list=new_line[1].split(',') if drug != \"Drug\": target_list_str = \"\" for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\" drug = drug.strip() drug_target_map[drug] = [] if ',' not in target_list_str: drug_target_map[drug].append(target_list_str.strip()) drug_target_list.append(target_list_str.strip()) else: target_list = target_list_str.split(',') for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "new_line", "kind": 13, "range": {"start": {"line": 289, "character": 4}, "end": {"line": 289, "character": 40}}, "selectionRange": {"start": {"line": 289, "character": 4}, "end": {"line": 289, "character": 12}}, "detail": "new_line = line.rstrip().split(\"\\t\")", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 290, "character": 4}, "end": {"line": 290, "character": 22}}, "selectionRange": {"start": {"line": 290, "character": 4}, "end": {"line": 290, "character": 8}}, "detail": "drug = new_line[0]", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 291, "character": 4}, "end": {"line": 291, "character": 38}}, "selectionRange": {"start": {"line": 291, "character": 4}, "end": {"line": 291, "character": 15}}, "detail": "target_list=new_line[1].split(',')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 293, "character": 8}, "end": {"line": 293, "character": 28}}, "selectionRange": {"start": {"line": 293, "character": 8}, "end": {"line": 293, "character": 23}}, "detail": "target_list_str = \"\"", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 294, "character": 8}, "end": {"line": 299, "character": 0}}, "selectionRange": {"start": {"line": 294, "character": 12}, "end": {"line": 294, "character": 13}}, "detail": "for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 296, "character": 16}, "end": {"line": 296, "character": 65}}, "selectionRange": {"start": {"line": 296, "character": 16}, "end": {"line": 296, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 298, "character": 16}, "end": {"line": 298, "character": 71}}, "selectionRange": {"start": {"line": 298, "character": 16}, "end": {"line": 298, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 299, "character": 8}, "end": {"line": 299, "character": 27}}, "selectionRange": {"start": {"line": 299, "character": 8}, "end": {"line": 299, "character": 12}}, "detail": "drug = drug.strip()", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 306, "character": 12}, "end": {"line": 306, "character": 52}}, "selectionRange": {"start": {"line": 306, "character": 12}, "end": {"line": 306, "character": 23}}, "detail": "target_list = target_list_str.split(',')", "children": []}, {"name": "target", "kind": 13, "range": {"start": {"line": 307, "character": 12}, "end": {"line": 310, "character": 0}}, "selectionRange": {"start": {"line": 307, "character": 16}, "end": {"line": 307, "character": 22}}, "detail": "for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "drugs_legend", "kind": 13, "range": {"start": {"line": 313, "character": 0}, "end": {"line": 313, "character": 85}}, "selectionRange": {"start": {"line": 313, "character": 0}, "end": {"line": 313, "character": 12}}, "detail": "drugs_legend = pd.read_csv('/data/GDSC/Screened_Compounds.csv', sep=',', index_col=0)", "children": []}, {"name": "drug2id_mapping", "kind": 13, "range": {"start": {"line": 315, "character": 0}, "end": {"line": 315, "character": 20}}, "selectionRange": {"start": {"line": 315, "character": 0}, "end": {"line": 315, "character": 15}}, "detail": "drug2id_mapping = {}", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 317, "character": 0}, "end": {"line": 320, "character": 0}}, "selectionRange": {"start": {"line": 317, "character": 4}, "end": {"line": 317, "character": 9}}, "detail": "for index in list(drugs_legend.index) : drug_name = drugs_legend.loc[index,'Drug Name'] drug2id_mapping[ drug_name ] = index", "children": []}, {"name": "drug_name", "kind": 13, "range": {"start": {"line": 318, "character": 4}, "end": {"line": 318, "character": 51}}, "selectionRange": {"start": {"line": 318, "character": 4}, "end": {"line": 318, "character": 13}}, "detail": "drug_name = drugs_legend.loc[index,'Drug Name']", "children": []}, {"name": "valid_gene_list", "kind": 13, "range": {"start": {"line": 325, "character": 0}, "end": {"line": 325, "character": 92}}, "selectionRange": {"start": {"line": 325, "character": 0}, "end": {"line": 325, "character": 15}}, "detail": "valid_gene_list = list(set(drug_target_list) | set(exp_gene_list) | set(mutation_gene_list))", "children": []}, {"name": "network_list", "kind": 13, "range": {"start": {"line": 331, "character": 0}, "end": {"line": 331, "character": 82}}, "selectionRange": {"start": {"line": 331, "character": 0}, "end": {"line": 331, "character": 12}}, "detail": "network_list = [new_network_file+inbiomap_file, new_network_file+pathwaycomm_file]", "children": []}, {"name": "gene_neighbor_map", "kind": 13, "range": {"start": {"line": 332, "character": 0}, "end": {"line": 332, "character": 64}}, "selectionRange": {"start": {"line": 332, "character": 0}, "end": {"line": 332, "character": 17}}, "detail": "gene_neighbor_map = load_network(network_list, valid_gene_list)", "children": []}, {"name": "gene_name_df", "kind": 13, "range": {"start": {"line": 338, "character": 0}, "end": {"line": 338, "character": 89}}, "selectionRange": {"start": {"line": 338, "character": 0}, "end": {"line": 338, "character": 12}}, "detail": "gene_name_df = pd.read_table('/data/HUGO_protein-coding_gene.tsv',index_col=25, sep='\\t')", "children": []}, {"name": "gene_name_map", "kind": 13, "range": {"start": {"line": 344, "character": 0}, "end": {"line": 344, "character": 18}}, "selectionRange": {"start": {"line": 344, "character": 0}, "end": {"line": 344, "character": 13}}, "detail": "gene_name_map = {}", "children": []}, {"name": "uniprot_gene", "kind": 13, "range": {"start": {"line": 346, "character": 0}, "end": {"line": 355, "character": 0}}, "selectionRange": {"start": {"line": 346, "character": 4}, "end": {"line": 346, "character": 16}}, "detail": "for uniprot_gene in gene_name_df.index: if isinstance(uniprot_gene, type('aaa')) == False: continue if isinstance(gene_name_df.loc[uniprot_gene, 'symbol'], type('aaa')) == False: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol'][0] else: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 360, "character": 0}, "end": {"line": 360, "character": 76}}, "selectionRange": {"start": {"line": 360, "character": 0}, "end": {"line": 360, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "uniprot_gene_set", "kind": 13, "range": {"start": {"line": 362, "character": 0}, "end": {"line": 362, "character": 24}}, "selectionRange": {"start": {"line": 362, "character": 0}, "end": {"line": 362, "character": 16}}, "detail": "uniprot_gene_set = set()", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 364, "character": 0}, "end": {"line": 373, "character": 0}}, "selectionRange": {"start": {"line": 364, "character": 4}, "end": {"line": 364, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 369, "character": 4}, "end": {"line": 369, "character": 74}}, "selectionRange": {"start": {"line": 369, "character": 4}, "end": {"line": 369, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 371, "character": 4}, "end": {"line": 373, "character": 0}}, "selectionRange": {"start": {"line": 371, "character": 8}, "end": {"line": 371, "character": 12}}, "detail": "for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "query_gene_set", "kind": 13, "range": {"start": {"line": 376, "character": 0}, "end": {"line": 376, "character": 19}}, "selectionRange": {"start": {"line": 376, "character": 0}, "end": {"line": 376, "character": 14}}, "detail": "query_gene_set = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 378, "character": 0}, "end": {"line": 381, "character": 0}}, "selectionRange": {"start": {"line": 378, "character": 4}, "end": {"line": 378, "character": 8}}, "detail": "for gene in uniprot_gene_set: if gene not in gene_name_map: query_gene_set.append(gene)", "children": []}, {"name": "query_gene_list", "kind": 13, "range": {"start": {"line": 384, "character": 0}, "end": {"line": 384, "character": 38}}, "selectionRange": {"start": {"line": 384, "character": 0}, "end": {"line": 384, "character": 15}}, "detail": "query_gene_list = list(query_gene_set)", "children": []}, {"name": "mg", "kind": 13, "range": {"start": {"line": 386, "character": 0}, "end": {"line": 386, "character": 24}}, "selectionRange": {"start": {"line": 386, "character": 0}, "end": {"line": 386, "character": 2}}, "detail": "mg = mygene.MyGeneInfo()", "children": []}, {"name": "out", "kind": 13, "range": {"start": {"line": 387, "character": 0}, "end": {"line": 387, "character": 87}}, "selectionRange": {"start": {"line": 387, "character": 0}, "end": {"line": 387, "character": 3}}, "detail": "out = mg.querymany(query_gene_list, scopes='uniprot', fields='symbol', species='human')", "children": []}, {"name": "not_found_gene_list", "kind": 13, "range": {"start": {"line": 389, "character": 0}, "end": {"line": 389, "character": 24}}, "selectionRange": {"start": {"line": 389, "character": 0}, "end": {"line": 389, "character": 19}}, "detail": "not_found_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 391, "character": 0}, "end": {"line": 396, "character": 0}}, "selectionRange": {"start": {"line": 391, "character": 4}, "end": {"line": 391, "character": 5}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 391, "character": 0}, "end": {"line": 396, "character": 0}}, "selectionRange": {"start": {"line": 391, "character": 7}, "end": {"line": 391, "character": 11}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 403, "character": 0}, "end": {"line": 403, "character": 76}}, "selectionRange": {"start": {"line": 403, "character": 0}, "end": {"line": 403, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 405, "character": 0}, "end": {"line": 427, "character": 0}}, "selectionRange": {"start": {"line": 405, "character": 4}, "end": {"line": 405, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') complex_symbol_list = [] for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] ) for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 410, "character": 4}, "end": {"line": 410, "character": 74}}, "selectionRange": {"start": {"line": 410, "character": 4}, "end": {"line": 410, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "complex_symbol_list", "kind": 13, "range": {"start": {"line": 412, "character": 4}, "end": {"line": 412, "character": 28}}, "selectionRange": {"start": {"line": 412, "character": 4}, "end": {"line": 412, "character": 23}}, "detail": "complex_symbol_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 414, "character": 4}, "end": {"line": 417, "character": 0}}, "selectionRange": {"start": {"line": 414, "character": 8}, "end": {"line": 414, "character": 12}}, "detail": "for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] )", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 418, "character": 4}, "end": {"line": 427, "character": 0}}, "selectionRange": {"start": {"line": 418, "character": 8}, "end": {"line": 418, "character": 13}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 418, "character": 4}, "end": {"line": 427, "character": 0}}, "selectionRange": {"start": {"line": 418, "character": 15}, "end": {"line": 418, "character": 20}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene_exp_neighbor_map", "kind": 13, "range": {"start": {"line": 432, "character": 0}, "end": {"line": 432, "character": 26}}, "selectionRange": {"start": {"line": 432, "character": 0}, "end": {"line": 432, "character": 21}}, "detail": "gene_exp_neighbor_map = {}", "children": []}, {"name": "exp_matrix", "kind": 13, "range": {"start": {"line": 433, "character": 0}, "end": {"line": 433, "character": 26}}, "selectionRange": {"start": {"line": 433, "character": 0}, "end": {"line": 433, "character": 10}}, "detail": "exp_matrix = exp_df.values", "children": []}, {"name": "P", "kind": 13, "range": {"start": {"line": 435, "character": 0}, "end": {"line": 435, "character": 79}}, "selectionRange": {"start": {"line": 435, "character": 0}, "end": {"line": 435, "character": 1}}, "detail": "P = 1 - cdist(np.transpose(exp_matrix), np.transpose(exp_matrix),'correlation')", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 437, "character": 0}, "end": {"line": 451, "character": 0}}, "selectionRange": {"start": {"line": 437, "character": 4}, "end": {"line": 437, "character": 5}}, "detail": "for i in range(len(exp_gene_list)): gene1 = exp_gene_list[i] gene_exp_neighbor_map[gene1] = set() for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2) if gene1 not in gene_exp_neighbor_map[gene1]: print (gene1, 'not in itself?', P[i,i])", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 439, "character": 4}, "end": {"line": 439, "character": 28}}, "selectionRange": {"start": {"line": 439, "character": 4}, "end": {"line": 439, "character": 9}}, "detail": "gene1 = exp_gene_list[i]", "children": []}, {"name": "j", "kind": 13, "range": {"start": {"line": 442, "character": 4}, "end": {"line": 448, "character": 0}}, "selectionRange": {"start": {"line": 442, "character": 8}, "end": {"line": 442, "character": 9}}, "detail": "for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 444, "character": 8}, "end": {"line": 444, "character": 32}}, "selectionRange": {"start": {"line": 444, "character": 8}, "end": {"line": 444, "character": 13}}, "detail": "gene2 = exp_gene_list[j]", "children": []}, {"name": "drug_feature_list", "kind": 13, "range": {"start": {"line": 459, "character": 0}, "end": {"line": 459, "character": 22}}, "selectionRange": {"start": {"line": 459, "character": 0}, "end": {"line": 459, "character": 17}}, "detail": "drug_feature_list = []", "children": []}, {"name": "drug_neighbor_map", "kind": 13, "range": {"start": {"line": 460, "character": 0}, "end": {"line": 460, "character": 22}}, "selectionRange": {"start": {"line": 460, "character": 0}, "end": {"line": 460, "character": 17}}, "detail": "drug_neighbor_map = {}", "children": []}, {"name": "selected_drug_list", "kind": 13, "range": {"start": {"line": 461, "character": 0}, "end": {"line": 461, "character": 23}}, "selectionRange": {"start": {"line": 461, "character": 0}, "end": {"line": 461, "character": 18}}, "detail": "selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 463, "character": 0}, "end": {"line": 480, "character": 0}}, "selectionRange": {"start": {"line": 463, "character": 4}, "end": {"line": 463, "character": 8}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 463, "character": 0}, "end": {"line": 480, "character": 0}}, "selectionRange": {"start": {"line": 463, "character": 10}, "end": {"line": 463, "character": 21}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 466, "character": 8}, "end": {"line": 476, "character": 0}}, "selectionRange": {"start": {"line": 466, "character": 12}, "end": {"line": 466, "character": 16}}, "detail": "for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene]", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 494, "character": 0}, "end": {"line": 494, "character": 52}}, "selectionRange": {"start": {"line": 494, "character": 0}, "end": {"line": 494, "character": 5}}, "detail": "drugs = pd.read_csv(drug_cell_line_file,index_col=2)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 495, "character": 0}, "end": {"line": 495, "character": 93}}, "selectionRange": {"start": {"line": 495, "character": 0}, "end": {"line": 495, "character": 5}}, "detail": "drugs = drugs.drop([\"DATASET_VERSION\",\"IC50_RESULTS_ID\",\"MAX_CONC_MICROMOLAR\",\"RMSE\"],axis=1)", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 496, "character": 0}, "end": {"line": 496, "character": 49}}, "selectionRange": {"start": {"line": 496, "character": 0}, "end": {"line": 496, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 498, "character": 0}, "end": {"line": 498, "character": 28}}, "selectionRange": {"start": {"line": 498, "character": 0}, "end": {"line": 498, "character": 9}}, "detail": "drug_list = drugs[\"DRUG_ID\"]", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 499, "character": 0}, "end": {"line": 499, "character": 16}}, "selectionRange": {"start": {"line": 499, "character": 0}, "end": {"line": 499, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 509, "character": 0}, "end": {"line": 509, "character": 71}}, "selectionRange": {"start": {"line": 509, "character": 0}, "end": {"line": 509, "character": 10}}, "detail": "PDTC_drugs = pd.read_csv(PDTC_drug_cell_line_file,sep='\\t',index_col=0)", "children": []}, {"name": "PDTC_drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 510, "character": 0}, "end": {"line": 510, "character": 59}}, "selectionRange": {"start": {"line": 510, "character": 0}, "end": {"line": 510, "character": 25}}, "detail": "PDTC_drugs_cell_line_list = list(PDTC_drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 512, "character": 0}, "end": {"line": 512, "character": 39}}, "selectionRange": {"start": {"line": 512, "character": 0}, "end": {"line": 512, "character": 9}}, "detail": "drug_list = PDTC_drugs[\"Drug\"].tolist()", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 513, "character": 0}, "end": {"line": 513, "character": 16}}, "selectionRange": {"start": {"line": 513, "character": 0}, "end": {"line": 513, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 514, "character": 0}, "end": {"line": 519, "character": 0}}, "selectionRange": {"start": {"line": 514, "character": 4}, "end": {"line": 514, "character": 5}}, "detail": "for i in drug_list: if i in drug2id_mapping.keys(): new_drug_id.append(drug2id_mapping[i]) else: new_drug_id.append(0)", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 521, "character": 0}, "end": {"line": 521, "character": 84}}, "selectionRange": {"start": {"line": 521, "character": 0}, "end": {"line": 521, "character": 10}}, "detail": "PDTC_drugs = PDTC_drugs.drop([\"Drug\",\"iC50\",\"D1_CONC\",\"D5_CONC\",\"perc.iC50\"],axis=1)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 529, "character": 0}, "end": {"line": 529, "character": 37}}, "selectionRange": {"start": {"line": 529, "character": 0}, "end": {"line": 529, "character": 5}}, "detail": "drugs = pd.concat([drugs,PDTC_drugs])", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 536, "character": 0}, "end": {"line": 536, "character": 49}}, "selectionRange": {"start": {"line": 536, "character": 0}, "end": {"line": 536, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "cell_line_list", "kind": 13, "range": {"start": {"line": 542, "character": 0}, "end": {"line": 542, "character": 102}}, "selectionRange": {"start": {"line": 542, "character": 0}, "end": {"line": 542, "character": 14}}, "detail": "cell_line_list = list(set(drugs_cell_line_list)&set(exp_cell_line_list)&set(mutation_cell_line_list) )", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 549, "character": 0}, "end": {"line": 549, "character": 66}}, "selectionRange": {"start": {"line": 549, "character": 0}, "end": {"line": 549, "character": 16}}, "detail": "cell_line_legend = pd.read_csv(cell_line_detail_file, index_col=1)", "children": []}, {"name": "PDTC_cell_line", "kind": 13, "range": {"start": {"line": 550, "character": 0}, "end": {"line": 550, "character": 206}}, "selectionRange": {"start": {"line": 550, "character": 0}, "end": {"line": 550, "character": 14}}, "detail": "PDTC_cell_line = pd.DataFrame({'Line': [\"BRCA\"]*len(PDTC_exp_cell_line_list), 'Site':[\"PDTC\"]*len(PDTC_exp_cell_line_list),\"Histology\":[\"breast\"]*len(PDTC_exp_cell_line_list)},index=PDTC_exp_cell_line_list)", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 551, "character": 0}, "end": {"line": 551, "character": 63}}, "selectionRange": {"start": {"line": 551, "character": 0}, "end": {"line": 551, "character": 16}}, "detail": "cell_line_legend = pd.concat([cell_line_legend,PDTC_cell_line])", "children": []}, {"name": "tissue_map", "kind": 13, "range": {"start": {"line": 554, "character": 0}, "end": {"line": 554, "character": 15}}, "selectionRange": {"start": {"line": 554, "character": 0}, "end": {"line": 554, "character": 10}}, "detail": "tissue_map = {}", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 556, "character": 0}, "end": {"line": 564, "character": 0}}, "selectionRange": {"start": {"line": 556, "character": 4}, "end": {"line": 556, "character": 13}}, "detail": "for cell_line in cell_line_list: tissue = cell_line_legend.loc[cell_line,'Site'] if tissue not in tissue_map: tissue_map[tissue] = [] tissue_map[tissue].append(cell_line)", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 558, "character": 4}, "end": {"line": 558, "character": 51}}, "selectionRange": {"start": {"line": 558, "character": 4}, "end": {"line": 558, "character": 10}}, "detail": "tissue = cell_line_legend.loc[cell_line,'Site']", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 565, "character": 0}, "end": {"line": 565, "character": 23}}, "selectionRange": {"start": {"line": 565, "character": 0}, "end": {"line": 565, "character": 19}}, "detail": "large_tissue_number = 0", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 566, "character": 0}, "end": {"line": 572, "character": 0}}, "selectionRange": {"start": {"line": 566, "character": 4}, "end": {"line": 566, "character": 10}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 566, "character": 0}, "end": {"line": 572, "character": 0}}, "selectionRange": {"start": {"line": 566, "character": 12}, "end": {"line": 566, "character": 21}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 569, "character": 8}, "end": {"line": 569, "character": 32}}, "selectionRange": {"start": {"line": 569, "character": 8}, "end": {"line": 569, "character": 27}}, "detail": "large_tissue_number += 1", "children": []}, {"name": "new_exp_gene_list", "kind": 13, "range": {"start": {"line": 592, "character": 0}, "end": {"line": 592, "character": 22}}, "selectionRange": {"start": {"line": 592, "character": 0}, "end": {"line": 592, "character": 17}}, "detail": "new_exp_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 593, "character": 0}, "end": {"line": 596, "character": 0}}, "selectionRange": {"start": {"line": 593, "character": 4}, "end": {"line": 593, "character": 5}}, "detail": "for i in exp_gene_list: if i in valid_gene_list: new_exp_gene_list.append(i)", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 601, "character": 0}, "end": {"line": 601, "character": 41}}, "selectionRange": {"start": {"line": 601, "character": 0}, "end": {"line": 601, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 602, "character": 0}, "end": {"line": 602, "character": 38}}, "selectionRange": {"start": {"line": 602, "character": 0}, "end": {"line": 602, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 603, "character": 0}, "end": {"line": 603, "character": 72}}, "selectionRange": {"start": {"line": 603, "character": 0}, "end": {"line": 603, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 605, "character": 0}, "end": {"line": 605, "character": 43}}, "selectionRange": {"start": {"line": 605, "character": 0}, "end": {"line": 605, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 606, "character": 0}, "end": {"line": 606, "character": 68}}, "selectionRange": {"start": {"line": 606, "character": 0}, "end": {"line": 606, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 613, "character": 0}, "end": {"line": 613, "character": 58}}, "selectionRange": {"start": {"line": 613, "character": 0}, "end": {"line": 613, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 614, "character": 0}, "end": {"line": 614, "character": 68}}, "selectionRange": {"start": {"line": 614, "character": 0}, "end": {"line": 614, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "new_data_file", "kind": 13, "range": {"start": {"line": 623, "character": 0}, "end": {"line": 623, "character": 18}}, "selectionRange": {"start": {"line": 623, "character": 0}, "end": {"line": 623, "character": 13}}, "detail": "new_data_file = ''", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 627, "character": 0}, "end": {"line": 627, "character": 41}}, "selectionRange": {"start": {"line": 627, "character": 0}, "end": {"line": 627, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 628, "character": 0}, "end": {"line": 628, "character": 38}}, "selectionRange": {"start": {"line": 628, "character": 0}, "end": {"line": 628, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 629, "character": 0}, "end": {"line": 629, "character": 72}}, "selectionRange": {"start": {"line": 629, "character": 0}, "end": {"line": 629, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 631, "character": 0}, "end": {"line": 631, "character": 43}}, "selectionRange": {"start": {"line": 631, "character": 0}, "end": {"line": 631, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 632, "character": 0}, "end": {"line": 632, "character": 68}}, "selectionRange": {"start": {"line": 632, "character": 0}, "end": {"line": 632, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 639, "character": 0}, "end": {"line": 639, "character": 58}}, "selectionRange": {"start": {"line": 639, "character": 0}, "end": {"line": 639, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 640, "character": 0}, "end": {"line": 640, "character": 68}}, "selectionRange": {"start": {"line": 640, "character": 0}, "end": {"line": 640, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "rename_selected_drug_list", "kind": 13, "range": {"start": {"line": 644, "character": 0}, "end": {"line": 644, "character": 30}}, "selectionRange": {"start": {"line": 644, "character": 0}, "end": {"line": 644, "character": 25}}, "detail": "rename_selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 646, "character": 0}, "end": {"line": 716, "character": 0}}, "selectionRange": {"start": {"line": 646, "character": 4}, "end": {"line": 646, "character": 8}}, "detail": "for drug in selected_drug_list: print(drug) if drug not in drug2id_mapping: print('drug name wrong', drug) else: cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]] feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) ) feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) ) print(len(feature_exp_gene_list) + len(feature_mut_gene_list)) if len(feature_exp_gene_list) + len(feature_mut_gene_list) == 0: continue feature_description = [] drug_tissue_map = {} drug = drug.replace(' ','_') rename_selected_drug_list.append(drug) if drug == 'Nutlin-3a_(-)': drug = 'Nutlin-3a' drug_folder = '/data/merged/drug_feature/' + drug + '/' if not os.path.exists(drug_folder): os.makedirs(drug_folder) for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description)) file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\") pickle.dump(drug_tissue_map,file_handle) file_handle.close()", "children": []}, {"name": "cell_line_drug_matrix", "kind": 13, "range": {"start": {"line": 654, "character": 8}, "end": {"line": 654, "character": 84}}, "selectionRange": {"start": {"line": 654, "character": 8}, "end": {"line": 654, "character": 29}}, "detail": "cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]]", "children": []}, {"name": "feature_exp_gene_list", "kind": 13, "range": {"start": {"line": 659, "character": 8}, "end": {"line": 659, "character": 98}}, "selectionRange": {"start": {"line": 659, "character": 8}, "end": {"line": 659, "character": 29}}, "detail": "feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) )", "children": []}, {"name": "feature_mut_gene_list", "kind": 13, "range": {"start": {"line": 660, "character": 8}, "end": {"line": 660, "character": 98}}, "selectionRange": {"start": {"line": 660, "character": 8}, "end": {"line": 660, "character": 29}}, "detail": "feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) )", "children": []}, {"name": "feature_description", "kind": 13, "range": {"start": {"line": 664, "character": 8}, "end": {"line": 664, "character": 32}}, "selectionRange": {"start": {"line": 664, "character": 8}, "end": {"line": 664, "character": 27}}, "detail": "feature_description = []", "children": []}, {"name": "drug_tissue_map", "kind": 13, "range": {"start": {"line": 666, "character": 8}, "end": {"line": 666, "character": 28}}, "selectionRange": {"start": {"line": 666, "character": 8}, "end": {"line": 666, "character": 23}}, "detail": "drug_tissue_map = {}", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 668, "character": 8}, "end": {"line": 668, "character": 36}}, "selectionRange": {"start": {"line": 668, "character": 8}, "end": {"line": 668, "character": 12}}, "detail": "drug = drug.replace(' ','_')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 674, "character": 12}, "end": {"line": 674, "character": 30}}, "selectionRange": {"start": {"line": 674, "character": 12}, "end": {"line": 674, "character": 16}}, "detail": "drug = 'Nutlin-3a'", "children": []}, {"name": "drug_folder", "kind": 13, "range": {"start": {"line": 676, "character": 8}, "end": {"line": 676, "character": 63}}, "selectionRange": {"start": {"line": 676, "character": 8}, "end": {"line": 676, "character": 19}}, "detail": "drug_folder = '/data/merged/drug_feature/' + drug + '/'", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 682, "character": 8}, "end": {"line": 712, "character": 0}}, "selectionRange": {"start": {"line": 682, "character": 12}, "end": {"line": 682, "character": 18}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "tissue_cell_line_list", "kind": 13, "range": {"start": {"line": 682, "character": 8}, "end": {"line": 712, "character": 0}}, "selectionRange": {"start": {"line": 682, "character": 20}, "end": {"line": 682, "character": 41}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 685, "character": 12}, "end": {"line": 685, "character": 103}}, "selectionRange": {"start": {"line": 685, "character": 12}, "end": {"line": 685, "character": 35}}, "detail": "drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list )", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 686, "character": 12}, "end": {"line": 686, "character": 67}}, "selectionRange": {"start": {"line": 686, "character": 12}, "end": {"line": 686, "character": 35}}, "detail": "drug_specific_cell_line = list(drug_specific_cell_line)", "children": []}, {"name": "feature_list", "kind": 13, "range": {"start": {"line": 689, "character": 12}, "end": {"line": 689, "character": 29}}, "selectionRange": {"start": {"line": 689, "character": 12}, "end": {"line": 689, "character": 24}}, "detail": "feature_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 693, "character": 16}, "end": {"line": 695, "character": 0}}, "selectionRange": {"start": {"line": 693, "character": 20}, "end": {"line": 693, "character": 24}}, "detail": "for gene in feature_exp_gene_list: feature_description.append(gene+'_expression')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 698, "character": 16}, "end": {"line": 700, "character": 0}}, "selectionRange": {"start": {"line": 698, "character": 20}, "end": {"line": 698, "character": 24}}, "detail": "for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation')", "children": []}, {"name": "feature", "kind": 13, "range": {"start": {"line": 701, "character": 12}, "end": {"line": 701, "character": 58}}, "selectionRange": {"start": {"line": 701, "character": 12}, "end": {"line": 701, "character": 19}}, "detail": "feature = np.concatenate(feature_list, axis=1)", "children": []}, {"name": "label", "kind": 13, "range": {"start": {"line": 703, "character": 12}, "end": {"line": 703, "character": 88}}, "selectionRange": {"start": {"line": 703, "character": 12}, "end": {"line": 703, "character": 17}}, "detail": "label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 713, "character": 8}, "end": {"line": 713, "character": 84}}, "selectionRange": {"start": {"line": 713, "character": 8}, "end": {"line": 713, "character": 19}}, "detail": "file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\")", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 717, "character": 0}, "end": {"line": 717, "character": 52}}, "selectionRange": {"start": {"line": 717, "character": 0}, "end": {"line": 717, "character": 11}}, "detail": "file_handle = open('rename_selected_drug_list', 'w')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 718, "character": 0}, "end": {"line": 720, "character": 0}}, "selectionRange": {"start": {"line": 718, "character": 4}, "end": {"line": 718, "character": 8}}, "detail": "for drug in rename_selected_drug_list: file_handle.writelines(drug+ '\\n')", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 738, "character": 0}, "end": {"line": 738, "character": 13}}, "selectionRange": {"start": {"line": 738, "character": 7}, "end": {"line": 738, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cell_line_loc", "kind": 13, "range": {"start": {"line": 744, "character": 0}, "end": {"line": 744, "character": 84}}, "selectionRange": {"start": {"line": 744, "character": 0}, "end": {"line": 744, "character": 13}}, "detail": "cell_line_loc = '/cellar/users/samsonfong/Projects/tcrp-v2/from-ma/cell_line_lists/'", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 750, "character": 0}, "end": {"line": 752, "character": 0}}, "selectionRange": {"start": {"line": 750, "character": 53}, "end": {"line": 750, "character": 54}}, "detail": "with open('/data/drug_feature/KU-55933/KU', 'rb') as f: tmap= pickle.load(f)", "children": []}, {"name": "tmap", "kind": 13, "range": {"start": {"line": 751, "character": 4}, "end": {"line": 751, "character": 24}}, "selectionRange": {"start": {"line": 751, "character": 4}, "end": {"line": 751, "character": 8}}, "detail": "tmap= pickle.load(f)", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 769, "character": 0}, "end": {"line": 769, "character": 68}}, "selectionRange": {"start": {"line": 769, "character": 0}, "end": {"line": 769, "character": 1}}, "detail": "f = np.load('/data/drug_feature/KU-55933/lung_KU-55933_feature.npy')", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 43, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///root/capsule/code/process_merged.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 44, "result": [{"name": "matplotlib", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 17}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 17}}, "detail": "module matplotlib", "children": []}, {"name": "os", "kind": 2, "range": {"start": {"line": 10, "character": 0}, "end": {"line": 10, "character": 9}}, "selectionRange": {"start": {"line": 10, "character": 7}, "end": {"line": 10, "character": 9}}, "detail": "module os", "children": []}, {"name": "pd", "kind": 2, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 11, "character": 19}}, "selectionRange": {"start": {"line": 11, "character": 17}, "end": {"line": 11, "character": 19}}, "detail": "module pd", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 12, "character": 0}, "end": {"line": 12, "character": 18}}, "selectionRange": {"start": {"line": 12, "character": 16}, "end": {"line": 12, "character": 18}}, "detail": "module np", "children": []}, {"name": "sys", "kind": 2, "range": {"start": {"line": 13, "character": 0}, "end": {"line": 13, "character": 10}}, "selectionRange": {"start": {"line": 13, "character": 7}, "end": {"line": 13, "character": 10}}, "detail": "module sys", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 14, "character": 0}, "end": {"line": 14, "character": 13}}, "selectionRange": {"start": {"line": 14, "character": 7}, "end": {"line": 14, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cdist", "kind": 12, "range": {"start": {"line": 15, "character": 0}, "end": {"line": 15, "character": 40}}, "selectionRange": {"start": {"line": 15, "character": 35}, "end": {"line": 15, "character": 40}}, "detail": "def cdist", "children": []}, {"name": "math", "kind": 2, "range": {"start": {"line": 16, "character": 0}, "end": {"line": 16, "character": 11}}, "selectionRange": {"start": {"line": 16, "character": 7}, "end": {"line": 16, "character": 11}}, "detail": "module math", "children": []}, {"name": "nx", "kind": 2, "range": {"start": {"line": 17, "character": 0}, "end": {"line": 17, "character": 21}}, "selectionRange": {"start": {"line": 17, "character": 19}, "end": {"line": 17, "character": 21}}, "detail": "module nx", "children": []}, {"name": "nxacc", "kind": 2, "range": {"start": {"line": 18, "character": 0}, "end": {"line": 18, "character": 56}}, "selectionRange": {"start": {"line": 18, "character": 51}, "end": {"line": 18, "character": 56}}, "detail": "module nxacc", "children": []}, {"name": "nxadag", "kind": 2, "range": {"start": {"line": 19, "character": 0}, "end": {"line": 19, "character": 40}}, "selectionRange": {"start": {"line": 19, "character": 34}, "end": {"line": 19, "character": 40}}, "detail": "module nxadag", "children": []}, {"name": "plt", "kind": 2, "range": {"start": {"line": 20, "character": 0}, "end": {"line": 20, "character": 31}}, "selectionRange": {"start": {"line": 20, "character": 28}, "end": {"line": 20, "character": 31}}, "detail": "module plt", "children": []}, {"name": "sns", "kind": 2, "range": {"start": {"line": 21, "character": 0}, "end": {"line": 21, "character": 21}}, "selectionRange": {"start": {"line": 21, "character": 18}, "end": {"line": 21, "character": 21}}, "detail": "module sns", "children": []}, {"name": "itertools", "kind": 2, "range": {"start": {"line": 22, "character": 0}, "end": {"line": 22, "character": 16}}, "selectionRange": {"start": {"line": 22, "character": 7}, "end": {"line": 22, "character": 16}}, "detail": "module itertools", "children": []}, {"name": "mygene", "kind": 2, "range": {"start": {"line": 23, "character": 0}, "end": {"line": 23, "character": 13}}, "selectionRange": {"start": {"line": 23, "character": 7}, "end": {"line": 23, "character": 13}}, "detail": "module mygene", "children": []}, {"name": "re", "kind": 2, "range": {"start": {"line": 24, "character": 0}, "end": {"line": 24, "character": 9}}, "selectionRange": {"start": {"line": 24, "character": 7}, "end": {"line": 24, "character": 9}}, "detail": "module re", "children": []}, {"name": "selected_exp_gene_list", "kind": 13, "range": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 95}}, "selectionRange": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 22}}, "detail": "selected_exp_gene_list = pd.read_csv(\"/data/common_exp_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "selected_mut_gene_list", "kind": 13, "range": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 95}}, "selectionRange": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 22}}, "detail": "selected_mut_gene_list = pd.read_csv(\"/data/common_mut_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "load_network", "kind": 12, "range": {"start": {"line": 37, "character": 0}, "end": {"line": 65, "character": 28}}, "selectionRange": {"start": {"line": 37, "character": 4}, "end": {"line": 37, "character": 16}}, "detail": "def load_network", "children": []}, {"name": "load_name_space", "kind": 12, "range": {"start": {"line": 67, "character": 0}, "end": {"line": 79, "character": 21}}, "selectionRange": {"start": {"line": 67, "character": 4}, "end": {"line": 67, "character": 19}}, "detail": "def load_name_space", "children": []}, {"name": "list2index", "kind": 12, "range": {"start": {"line": 81, "character": 0}, "end": {"line": 88, "character": 41}}, "selectionRange": {"start": {"line": 81, "character": 4}, "end": {"line": 81, "character": 14}}, "detail": "def list2index", "children": []}, {"name": "PDTC_data_file", "kind": 13, "range": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 30}}, "selectionRange": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 14}}, "detail": "PDTC_data_file = '/data/PTDC/'", "children": []}, {"name": "PDTC_exp_data_file", "kind": 13, "range": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 60}}, "selectionRange": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 18}}, "detail": "PDTC_exp_data_file = PDTC_data_file + 'ExpressionModels.tsv'", "children": []}, {"name": "PDTC_drug_cell_line_file", "kind": 13, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 72}}, "selectionRange": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 24}}, "detail": "PDTC_drug_cell_line_file = PDTC_data_file + 'DrugResponsesAUCModels.tsv'", "children": []}, {"name": "PDTC_mutation_data_file", "kind": 13, "range": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 59}}, "selectionRange": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 23}}, "detail": "PDTC_mutation_data_file = PDTC_data_file + 'SNVsModels.tsv'", "children": []}, {"name": "PDTC_drug_target_file", "kind": 13, "range": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 47}}, "selectionRange": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 21}}, "detail": "PDTC_drug_target_file ='/data/drug_targets.tsv'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 37}}, "selectionRange": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 46}}, "selectionRange": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "data_file", "kind": 13, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 25}}, "selectionRange": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 9}}, "detail": "data_file = '/data/GDSC/'", "children": []}, {"name": "new_network_file", "kind": 13, "range": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 27}}, "selectionRange": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 16}}, "detail": "new_network_file = '/data/'", "children": []}, {"name": "exp_data_file", "kind": 13, "range": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 61}}, "selectionRange": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 13}}, "detail": "exp_data_file = data_file + 'Cell_line_RMA_proc_basalExp.txt'", "children": []}, {"name": "drug_cell_line_file", "kind": 13, "range": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 64}}, "selectionRange": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 19}}, "detail": "drug_cell_line_file = data_file + 'v17_fitted_dose_response.csv'", "children": []}, {"name": "cell_line_detail_file", "kind": 13, "range": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 60}}, "selectionRange": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 21}}, "detail": "cell_line_detail_file = data_file + 'Cell_Lines_Details.csv'", "children": []}, {"name": "mutation_data_file", "kind": 13, "range": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 51}}, "selectionRange": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 18}}, "detail": "mutation_data_file = data_file + 'WES_variants.csv'", "children": []}, {"name": "drug_target_file", "kind": 13, "range": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 42}}, "selectionRange": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 16}}, "detail": "drug_target_file ='/data/drug_targets.tsv'", "children": []}, {"name": "feature_folder", "kind": 13, "range": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 27}}, "selectionRange": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 14}}, "detail": "feature_folder = 'feature/'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 37}}, "selectionRange": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 46}}, "selectionRange": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 58}}, "selectionRange": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 6}}, "detail": "exp_df = pd.read_csv(exp_data_file, sep='\\t', index_col=0)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 21}}, "selectionRange": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 6}}, "detail": "exp_df = exp_df.T[1:]", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 56}}, "selectionRange": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 6}}, "detail": "exp_df = exp_df.rename(columns={np.nan: 'NO_GENE_NAME'})", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 43}}, "selectionRange": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 6}}, "detail": "exp_df = exp_df.drop('NO_GENE_NAME',axis=1)", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 138, "character": 0}, "end": {"line": 140, "character": 26}}, "selectionRange": {"start": {"line": 138, "character": 4}, "end": {"line": 138, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 142, "character": 0}, "end": {"line": 142, "character": 44}}, "selectionRange": {"start": {"line": 142, "character": 7}, "end": {"line": 142, "character": 12}}, "detail": "exp_df.index = exp_df.index.map(stripNumber)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 40}}, "selectionRange": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 6}}, "detail": "exp_df = exp_df.groupby(level=0).first()", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 39}}, "selectionRange": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 6}}, "detail": "exp_df = exp_df[selected_exp_gene_list]", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 36}}, "selectionRange": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 48}}, "selectionRange": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 78}}, "selectionRange": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 11}}, "detail": "PDTC_exp_df = pd.read_csv(PDTC_exp_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 31}}, "selectionRange": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df.T[1:]", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 160, "character": 0}, "end": {"line": 162, "character": 26}}, "selectionRange": {"start": {"line": 160, "character": 4}, "end": {"line": 160, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 49}}, "selectionRange": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df[selected_exp_gene_list]", "children": []}, {"name": "PDTC_exp_gene_list", "kind": 13, "range": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 46}}, "selectionRange": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 18}}, "detail": "PDTC_exp_gene_list = list(PDTC_exp_df.columns)", "children": []}, {"name": "PDTC_exp_cell_line_list", "kind": 13, "range": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 58}}, "selectionRange": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 23}}, "detail": "PDTC_exp_cell_line_list = list(PDTC_exp_df.index.unique())", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 40}}, "selectionRange": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 6}}, "detail": "exp_df = pd.concat([exp_df,PDTC_exp_df])", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 36}}, "selectionRange": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 48}}, "selectionRange": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "maf", "kind": 13, "range": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 69}}, "selectionRange": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 3}}, "detail": "maf = pd.read_csv(mutation_data_file, sep=',', index_col=0).fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 75}}, "selectionRange": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 11}}, "detail": "mutation_df = maf.groupby(['COSMIC_ID', 'Gene']).size().unstack().fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 49}}, "selectionRange": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 11}}, "detail": "mutation_df = mutation_df[selected_mut_gene_list]", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 46}}, "selectionRange": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 58}}, "selectionRange": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "PDTC_maf", "kind": 13, "range": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 80}}, "selectionRange": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 8}}, "detail": "PDTC_maf = pd.read_csv(PDTC_mutation_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 61}}, "selectionRange": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_maf.replace(to_replace=\"NO\",value=0.0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 82}}, "selectionRange": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_mutation_df.replace(to_replace=\"chr*\",value=1.0,regex=True)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 47}}, "selectionRange": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df.transpose()", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 59}}, "selectionRange": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df[selected_mut_gene_list]", "children": []}, {"name": "PDTC_mutation_gene_list", "kind": 13, "range": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 56}}, "selectionRange": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 23}}, "detail": "PDTC_mutation_gene_list = list(PDTC_mutation_df.columns)", "children": []}, {"name": "PDTC_mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 68}}, "selectionRange": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 28}}, "detail": "PDTC_mutation_cell_line_list = list(PDTC_mutation_df.index.unique())", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 55}}, "selectionRange": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 11}}, "detail": "mutation_df = pd.concat([mutation_df,PDTC_mutation_df])", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 46}}, "selectionRange": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 58}}, "selectionRange": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 36}}, "selectionRange": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 11}}, "detail": "file_handle = open(drug_target_file)", "children": []}, {"name": "drug_target_map", "kind": 13, "range": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 20}}, "selectionRange": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 15}}, "detail": "drug_target_map = {}", "children": []}, {"name": "drug_target_list", "kind": 13, "range": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 21}}, "selectionRange": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 16}}, "detail": "drug_target_list = []", "children": []}, {"name": "line", "kind": 13, "range": {"start": {"line": 230, "character": 0}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 230, "character": 4}, "end": {"line": 230, "character": 8}}, "detail": "for line in file_handle: new_line = line.rstrip().split(\"\\t\") drug = new_line[0] target_list=new_line[1].split(',') if drug != \"Drug\": target_list_str = \"\" for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\" drug = drug.strip() drug_target_map[drug] = [] if ',' not in target_list_str: drug_target_map[drug].append(target_list_str.strip()) drug_target_list.append(target_list_str.strip()) else: target_list = target_list_str.split(',') for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "new_line", "kind": 13, "range": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 40}}, "selectionRange": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 12}}, "detail": "new_line = line.rstrip().split(\"\\t\")", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 22}}, "selectionRange": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 8}}, "detail": "drug = new_line[0]", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 38}}, "selectionRange": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 15}}, "detail": "target_list=new_line[1].split(',')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 28}}, "selectionRange": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 23}}, "detail": "target_list_str = \"\"", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 237, "character": 8}, "end": {"line": 242, "character": 0}}, "selectionRange": {"start": {"line": 237, "character": 12}, "end": {"line": 237, "character": 13}}, "detail": "for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 65}}, "selectionRange": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 71}}, "selectionRange": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 27}}, "selectionRange": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 12}}, "detail": "drug = drug.strip()", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 52}}, "selectionRange": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 23}}, "detail": "target_list = target_list_str.split(',')", "children": []}, {"name": "target", "kind": 13, "range": {"start": {"line": 250, "character": 12}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 250, "character": 16}, "end": {"line": 250, "character": 22}}, "detail": "for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "drug_target_map", "kind": 13, "range": {"start": {"line": 259, "character": 0}, "end": {"line": 259, "character": 20}}, "selectionRange": {"start": {"line": 259, "character": 0}, "end": {"line": 259, "character": 15}}, "detail": "drug_target_map = {}", "children": []}, {"name": "drug_target_list", "kind": 13, "range": {"start": {"line": 260, "character": 0}, "end": {"line": 260, "character": 21}}, "selectionRange": {"start": {"line": 260, "character": 0}, "end": {"line": 260, "character": 16}}, "detail": "drug_target_list = []", "children": []}, {"name": "line", "kind": 13, "range": {"start": {"line": 261, "character": 0}, "end": {"line": 284, "character": 0}}, "selectionRange": {"start": {"line": 261, "character": 4}, "end": {"line": 261, "character": 8}}, "detail": "for line in file_handle: new_line = line.rstrip().split(\"\\t\") drug = new_line[0] target_list=new_line[1].split(',') if drug != \"Drug\": target_list_str = \"\" for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\" drug = drug.strip() drug_target_map[drug] = [] if ',' not in target_list_str: drug_target_map[drug].append(target_list_str.strip()) drug_target_list.append(target_list_str.strip()) else: target_list = target_list_str.split(',') for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "new_line", "kind": 13, "range": {"start": {"line": 263, "character": 4}, "end": {"line": 263, "character": 40}}, "selectionRange": {"start": {"line": 263, "character": 4}, "end": {"line": 263, "character": 12}}, "detail": "new_line = line.rstrip().split(\"\\t\")", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 264, "character": 4}, "end": {"line": 264, "character": 22}}, "selectionRange": {"start": {"line": 264, "character": 4}, "end": {"line": 264, "character": 8}}, "detail": "drug = new_line[0]", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 265, "character": 4}, "end": {"line": 265, "character": 38}}, "selectionRange": {"start": {"line": 265, "character": 4}, "end": {"line": 265, "character": 15}}, "detail": "target_list=new_line[1].split(',')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 267, "character": 8}, "end": {"line": 267, "character": 28}}, "selectionRange": {"start": {"line": 267, "character": 8}, "end": {"line": 267, "character": 23}}, "detail": "target_list_str = \"\"", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 268, "character": 8}, "end": {"line": 273, "character": 0}}, "selectionRange": {"start": {"line": 268, "character": 12}, "end": {"line": 268, "character": 13}}, "detail": "for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 270, "character": 16}, "end": {"line": 270, "character": 65}}, "selectionRange": {"start": {"line": 270, "character": 16}, "end": {"line": 270, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 272, "character": 16}, "end": {"line": 272, "character": 71}}, "selectionRange": {"start": {"line": 272, "character": 16}, "end": {"line": 272, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 273, "character": 8}, "end": {"line": 273, "character": 27}}, "selectionRange": {"start": {"line": 273, "character": 8}, "end": {"line": 273, "character": 12}}, "detail": "drug = drug.strip()", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 280, "character": 12}, "end": {"line": 280, "character": 52}}, "selectionRange": {"start": {"line": 280, "character": 12}, "end": {"line": 280, "character": 23}}, "detail": "target_list = target_list_str.split(',')", "children": []}, {"name": "target", "kind": 13, "range": {"start": {"line": 281, "character": 12}, "end": {"line": 284, "character": 0}}, "selectionRange": {"start": {"line": 281, "character": 16}, "end": {"line": 281, "character": 22}}, "detail": "for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "drugs_legend", "kind": 13, "range": {"start": {"line": 287, "character": 0}, "end": {"line": 287, "character": 85}}, "selectionRange": {"start": {"line": 287, "character": 0}, "end": {"line": 287, "character": 12}}, "detail": "drugs_legend = pd.read_csv('/data/GDSC/Screened_Compounds.csv', sep=',', index_col=0)", "children": []}, {"name": "drug2id_mapping", "kind": 13, "range": {"start": {"line": 289, "character": 0}, "end": {"line": 289, "character": 20}}, "selectionRange": {"start": {"line": 289, "character": 0}, "end": {"line": 289, "character": 15}}, "detail": "drug2id_mapping = {}", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 291, "character": 0}, "end": {"line": 294, "character": 0}}, "selectionRange": {"start": {"line": 291, "character": 4}, "end": {"line": 291, "character": 9}}, "detail": "for index in list(drugs_legend.index) : drug_name = drugs_legend.loc[index,'Drug Name'] drug2id_mapping[ drug_name ] = index", "children": []}, {"name": "drug_name", "kind": 13, "range": {"start": {"line": 292, "character": 4}, "end": {"line": 292, "character": 51}}, "selectionRange": {"start": {"line": 292, "character": 4}, "end": {"line": 292, "character": 13}}, "detail": "drug_name = drugs_legend.loc[index,'Drug Name']", "children": []}, {"name": "valid_gene_list", "kind": 13, "range": {"start": {"line": 299, "character": 0}, "end": {"line": 299, "character": 92}}, "selectionRange": {"start": {"line": 299, "character": 0}, "end": {"line": 299, "character": 15}}, "detail": "valid_gene_list = list(set(drug_target_list) | set(exp_gene_list) | set(mutation_gene_list))", "children": []}, {"name": "network_list", "kind": 13, "range": {"start": {"line": 305, "character": 0}, "end": {"line": 305, "character": 82}}, "selectionRange": {"start": {"line": 305, "character": 0}, "end": {"line": 305, "character": 12}}, "detail": "network_list = [new_network_file+inbiomap_file, new_network_file+pathwaycomm_file]", "children": []}, {"name": "gene_neighbor_map", "kind": 13, "range": {"start": {"line": 306, "character": 0}, "end": {"line": 306, "character": 64}}, "selectionRange": {"start": {"line": 306, "character": 0}, "end": {"line": 306, "character": 17}}, "detail": "gene_neighbor_map = load_network(network_list, valid_gene_list)", "children": []}, {"name": "gene_name_df", "kind": 13, "range": {"start": {"line": 312, "character": 0}, "end": {"line": 312, "character": 89}}, "selectionRange": {"start": {"line": 312, "character": 0}, "end": {"line": 312, "character": 12}}, "detail": "gene_name_df = pd.read_table('/data/HUGO_protein-coding_gene.tsv',index_col=25, sep='\\t')", "children": []}, {"name": "gene_name_map", "kind": 13, "range": {"start": {"line": 318, "character": 0}, "end": {"line": 318, "character": 18}}, "selectionRange": {"start": {"line": 318, "character": 0}, "end": {"line": 318, "character": 13}}, "detail": "gene_name_map = {}", "children": []}, {"name": "uniprot_gene", "kind": 13, "range": {"start": {"line": 320, "character": 0}, "end": {"line": 329, "character": 0}}, "selectionRange": {"start": {"line": 320, "character": 4}, "end": {"line": 320, "character": 16}}, "detail": "for uniprot_gene in gene_name_df.index: if isinstance(uniprot_gene, type('aaa')) == False: continue if isinstance(gene_name_df.loc[uniprot_gene, 'symbol'], type('aaa')) == False: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol'][0] else: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 76}}, "selectionRange": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "uniprot_gene_set", "kind": 13, "range": {"start": {"line": 336, "character": 0}, "end": {"line": 336, "character": 24}}, "selectionRange": {"start": {"line": 336, "character": 0}, "end": {"line": 336, "character": 16}}, "detail": "uniprot_gene_set = set()", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 338, "character": 0}, "end": {"line": 347, "character": 0}}, "selectionRange": {"start": {"line": 338, "character": 4}, "end": {"line": 338, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 343, "character": 4}, "end": {"line": 343, "character": 74}}, "selectionRange": {"start": {"line": 343, "character": 4}, "end": {"line": 343, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 345, "character": 4}, "end": {"line": 347, "character": 0}}, "selectionRange": {"start": {"line": 345, "character": 8}, "end": {"line": 345, "character": 12}}, "detail": "for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "query_gene_set", "kind": 13, "range": {"start": {"line": 350, "character": 0}, "end": {"line": 350, "character": 19}}, "selectionRange": {"start": {"line": 350, "character": 0}, "end": {"line": 350, "character": 14}}, "detail": "query_gene_set = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 352, "character": 0}, "end": {"line": 355, "character": 0}}, "selectionRange": {"start": {"line": 352, "character": 4}, "end": {"line": 352, "character": 8}}, "detail": "for gene in uniprot_gene_set: if gene not in gene_name_map: query_gene_set.append(gene)", "children": []}, {"name": "query_gene_list", "kind": 13, "range": {"start": {"line": 358, "character": 0}, "end": {"line": 358, "character": 38}}, "selectionRange": {"start": {"line": 358, "character": 0}, "end": {"line": 358, "character": 15}}, "detail": "query_gene_list = list(query_gene_set)", "children": []}, {"name": "mg", "kind": 13, "range": {"start": {"line": 360, "character": 0}, "end": {"line": 360, "character": 24}}, "selectionRange": {"start": {"line": 360, "character": 0}, "end": {"line": 360, "character": 2}}, "detail": "mg = mygene.MyGeneInfo()", "children": []}, {"name": "out", "kind": 13, "range": {"start": {"line": 361, "character": 0}, "end": {"line": 361, "character": 87}}, "selectionRange": {"start": {"line": 361, "character": 0}, "end": {"line": 361, "character": 3}}, "detail": "out = mg.querymany(query_gene_list, scopes='uniprot', fields='symbol', species='human')", "children": []}, {"name": "not_found_gene_list", "kind": 13, "range": {"start": {"line": 363, "character": 0}, "end": {"line": 363, "character": 24}}, "selectionRange": {"start": {"line": 363, "character": 0}, "end": {"line": 363, "character": 19}}, "detail": "not_found_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 365, "character": 0}, "end": {"line": 370, "character": 0}}, "selectionRange": {"start": {"line": 365, "character": 4}, "end": {"line": 365, "character": 5}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 365, "character": 0}, "end": {"line": 370, "character": 0}}, "selectionRange": {"start": {"line": 365, "character": 7}, "end": {"line": 365, "character": 11}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 377, "character": 0}, "end": {"line": 377, "character": 76}}, "selectionRange": {"start": {"line": 377, "character": 0}, "end": {"line": 377, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 379, "character": 0}, "end": {"line": 401, "character": 0}}, "selectionRange": {"start": {"line": 379, "character": 4}, "end": {"line": 379, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') complex_symbol_list = [] for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] ) for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 384, "character": 4}, "end": {"line": 384, "character": 74}}, "selectionRange": {"start": {"line": 384, "character": 4}, "end": {"line": 384, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "complex_symbol_list", "kind": 13, "range": {"start": {"line": 386, "character": 4}, "end": {"line": 386, "character": 28}}, "selectionRange": {"start": {"line": 386, "character": 4}, "end": {"line": 386, "character": 23}}, "detail": "complex_symbol_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 388, "character": 4}, "end": {"line": 391, "character": 0}}, "selectionRange": {"start": {"line": 388, "character": 8}, "end": {"line": 388, "character": 12}}, "detail": "for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] )", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 392, "character": 4}, "end": {"line": 401, "character": 0}}, "selectionRange": {"start": {"line": 392, "character": 8}, "end": {"line": 392, "character": 13}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 392, "character": 4}, "end": {"line": 401, "character": 0}}, "selectionRange": {"start": {"line": 392, "character": 15}, "end": {"line": 392, "character": 20}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene_exp_neighbor_map", "kind": 13, "range": {"start": {"line": 406, "character": 0}, "end": {"line": 406, "character": 26}}, "selectionRange": {"start": {"line": 406, "character": 0}, "end": {"line": 406, "character": 21}}, "detail": "gene_exp_neighbor_map = {}", "children": []}, {"name": "exp_matrix", "kind": 13, "range": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 26}}, "selectionRange": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 10}}, "detail": "exp_matrix = exp_df.values", "children": []}, {"name": "P", "kind": 13, "range": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 79}}, "selectionRange": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 1}}, "detail": "P = 1 - cdist(np.transpose(exp_matrix), np.transpose(exp_matrix),'correlation')", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 411, "character": 0}, "end": {"line": 425, "character": 0}}, "selectionRange": {"start": {"line": 411, "character": 4}, "end": {"line": 411, "character": 5}}, "detail": "for i in range(len(exp_gene_list)): gene1 = exp_gene_list[i] gene_exp_neighbor_map[gene1] = set() for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2) if gene1 not in gene_exp_neighbor_map[gene1]: print (gene1, 'not in itself?', P[i,i])", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 413, "character": 4}, "end": {"line": 413, "character": 28}}, "selectionRange": {"start": {"line": 413, "character": 4}, "end": {"line": 413, "character": 9}}, "detail": "gene1 = exp_gene_list[i]", "children": []}, {"name": "j", "kind": 13, "range": {"start": {"line": 416, "character": 4}, "end": {"line": 422, "character": 0}}, "selectionRange": {"start": {"line": 416, "character": 8}, "end": {"line": 416, "character": 9}}, "detail": "for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 418, "character": 8}, "end": {"line": 418, "character": 32}}, "selectionRange": {"start": {"line": 418, "character": 8}, "end": {"line": 418, "character": 13}}, "detail": "gene2 = exp_gene_list[j]", "children": []}, {"name": "drug_feature_list", "kind": 13, "range": {"start": {"line": 433, "character": 0}, "end": {"line": 433, "character": 22}}, "selectionRange": {"start": {"line": 433, "character": 0}, "end": {"line": 433, "character": 17}}, "detail": "drug_feature_list = []", "children": []}, {"name": "drug_neighbor_map", "kind": 13, "range": {"start": {"line": 434, "character": 0}, "end": {"line": 434, "character": 22}}, "selectionRange": {"start": {"line": 434, "character": 0}, "end": {"line": 434, "character": 17}}, "detail": "drug_neighbor_map = {}", "children": []}, {"name": "selected_drug_list", "kind": 13, "range": {"start": {"line": 435, "character": 0}, "end": {"line": 435, "character": 23}}, "selectionRange": {"start": {"line": 435, "character": 0}, "end": {"line": 435, "character": 18}}, "detail": "selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 437, "character": 0}, "end": {"line": 454, "character": 0}}, "selectionRange": {"start": {"line": 437, "character": 4}, "end": {"line": 437, "character": 8}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 437, "character": 0}, "end": {"line": 454, "character": 0}}, "selectionRange": {"start": {"line": 437, "character": 10}, "end": {"line": 437, "character": 21}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 440, "character": 8}, "end": {"line": 450, "character": 0}}, "selectionRange": {"start": {"line": 440, "character": 12}, "end": {"line": 440, "character": 16}}, "detail": "for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene]", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 468, "character": 0}, "end": {"line": 468, "character": 52}}, "selectionRange": {"start": {"line": 468, "character": 0}, "end": {"line": 468, "character": 5}}, "detail": "drugs = pd.read_csv(drug_cell_line_file,index_col=2)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 93}}, "selectionRange": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 5}}, "detail": "drugs = drugs.drop([\"DATASET_VERSION\",\"IC50_RESULTS_ID\",\"MAX_CONC_MICROMOLAR\",\"RMSE\"],axis=1)", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 470, "character": 0}, "end": {"line": 470, "character": 49}}, "selectionRange": {"start": {"line": 470, "character": 0}, "end": {"line": 470, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 472, "character": 0}, "end": {"line": 472, "character": 28}}, "selectionRange": {"start": {"line": 472, "character": 0}, "end": {"line": 472, "character": 9}}, "detail": "drug_list = drugs[\"DRUG_ID\"]", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 473, "character": 0}, "end": {"line": 473, "character": 16}}, "selectionRange": {"start": {"line": 473, "character": 0}, "end": {"line": 473, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 483, "character": 0}, "end": {"line": 483, "character": 71}}, "selectionRange": {"start": {"line": 483, "character": 0}, "end": {"line": 483, "character": 10}}, "detail": "PDTC_drugs = pd.read_csv(PDTC_drug_cell_line_file,sep='\\t',index_col=0)", "children": []}, {"name": "PDTC_drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 59}}, "selectionRange": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 25}}, "detail": "PDTC_drugs_cell_line_list = list(PDTC_drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 486, "character": 0}, "end": {"line": 486, "character": 39}}, "selectionRange": {"start": {"line": 486, "character": 0}, "end": {"line": 486, "character": 9}}, "detail": "drug_list = PDTC_drugs[\"Drug\"].tolist()", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 487, "character": 0}, "end": {"line": 487, "character": 16}}, "selectionRange": {"start": {"line": 487, "character": 0}, "end": {"line": 487, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 488, "character": 0}, "end": {"line": 493, "character": 0}}, "selectionRange": {"start": {"line": 488, "character": 4}, "end": {"line": 488, "character": 5}}, "detail": "for i in drug_list: if i in drug2id_mapping.keys(): new_drug_id.append(drug2id_mapping[i]) else: new_drug_id.append(0)", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 495, "character": 0}, "end": {"line": 495, "character": 84}}, "selectionRange": {"start": {"line": 495, "character": 0}, "end": {"line": 495, "character": 10}}, "detail": "PDTC_drugs = PDTC_drugs.drop([\"Drug\",\"iC50\",\"D1_CONC\",\"D5_CONC\",\"perc.iC50\"],axis=1)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 503, "character": 0}, "end": {"line": 503, "character": 37}}, "selectionRange": {"start": {"line": 503, "character": 0}, "end": {"line": 503, "character": 5}}, "detail": "drugs = pd.concat([drugs,PDTC_drugs])", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 510, "character": 0}, "end": {"line": 510, "character": 49}}, "selectionRange": {"start": {"line": 510, "character": 0}, "end": {"line": 510, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "cell_line_list", "kind": 13, "range": {"start": {"line": 516, "character": 0}, "end": {"line": 516, "character": 102}}, "selectionRange": {"start": {"line": 516, "character": 0}, "end": {"line": 516, "character": 14}}, "detail": "cell_line_list = list(set(drugs_cell_line_list)&set(exp_cell_line_list)&set(mutation_cell_line_list) )", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 523, "character": 0}, "end": {"line": 523, "character": 66}}, "selectionRange": {"start": {"line": 523, "character": 0}, "end": {"line": 523, "character": 16}}, "detail": "cell_line_legend = pd.read_csv(cell_line_detail_file, index_col=1)", "children": []}, {"name": "PDTC_cell_line", "kind": 13, "range": {"start": {"line": 524, "character": 0}, "end": {"line": 524, "character": 206}}, "selectionRange": {"start": {"line": 524, "character": 0}, "end": {"line": 524, "character": 14}}, "detail": "PDTC_cell_line = pd.DataFrame({'Line': [\"BRCA\"]*len(PDTC_exp_cell_line_list), 'Site':[\"PDTC\"]*len(PDTC_exp_cell_line_list),\"Histology\":[\"breast\"]*len(PDTC_exp_cell_line_list)},index=PDTC_exp_cell_line_list)", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 525, "character": 0}, "end": {"line": 525, "character": 63}}, "selectionRange": {"start": {"line": 525, "character": 0}, "end": {"line": 525, "character": 16}}, "detail": "cell_line_legend = pd.concat([cell_line_legend,PDTC_cell_line])", "children": []}, {"name": "tissue_map", "kind": 13, "range": {"start": {"line": 528, "character": 0}, "end": {"line": 528, "character": 15}}, "selectionRange": {"start": {"line": 528, "character": 0}, "end": {"line": 528, "character": 10}}, "detail": "tissue_map = {}", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 530, "character": 0}, "end": {"line": 538, "character": 0}}, "selectionRange": {"start": {"line": 530, "character": 4}, "end": {"line": 530, "character": 13}}, "detail": "for cell_line in cell_line_list: tissue = cell_line_legend.loc[cell_line,'Site'] if tissue not in tissue_map: tissue_map[tissue] = [] tissue_map[tissue].append(cell_line)", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 532, "character": 4}, "end": {"line": 532, "character": 51}}, "selectionRange": {"start": {"line": 532, "character": 4}, "end": {"line": 532, "character": 10}}, "detail": "tissue = cell_line_legend.loc[cell_line,'Site']", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 539, "character": 0}, "end": {"line": 539, "character": 23}}, "selectionRange": {"start": {"line": 539, "character": 0}, "end": {"line": 539, "character": 19}}, "detail": "large_tissue_number = 0", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 540, "character": 0}, "end": {"line": 546, "character": 0}}, "selectionRange": {"start": {"line": 540, "character": 4}, "end": {"line": 540, "character": 10}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 540, "character": 0}, "end": {"line": 546, "character": 0}}, "selectionRange": {"start": {"line": 540, "character": 12}, "end": {"line": 540, "character": 21}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 543, "character": 8}, "end": {"line": 543, "character": 32}}, "selectionRange": {"start": {"line": 543, "character": 8}, "end": {"line": 543, "character": 27}}, "detail": "large_tissue_number += 1", "children": []}, {"name": "new_exp_gene_list", "kind": 13, "range": {"start": {"line": 566, "character": 0}, "end": {"line": 566, "character": 22}}, "selectionRange": {"start": {"line": 566, "character": 0}, "end": {"line": 566, "character": 17}}, "detail": "new_exp_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 567, "character": 0}, "end": {"line": 570, "character": 0}}, "selectionRange": {"start": {"line": 567, "character": 4}, "end": {"line": 567, "character": 5}}, "detail": "for i in exp_gene_list: if i in valid_gene_list: new_exp_gene_list.append(i)", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 41}}, "selectionRange": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 38}}, "selectionRange": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 72}}, "selectionRange": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 43}}, "selectionRange": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 68}}, "selectionRange": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 58}}, "selectionRange": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 68}}, "selectionRange": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "new_data_file", "kind": 13, "range": {"start": {"line": 597, "character": 0}, "end": {"line": 597, "character": 18}}, "selectionRange": {"start": {"line": 597, "character": 0}, "end": {"line": 597, "character": 13}}, "detail": "new_data_file = ''", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 601, "character": 0}, "end": {"line": 601, "character": 41}}, "selectionRange": {"start": {"line": 601, "character": 0}, "end": {"line": 601, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 602, "character": 0}, "end": {"line": 602, "character": 38}}, "selectionRange": {"start": {"line": 602, "character": 0}, "end": {"line": 602, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 603, "character": 0}, "end": {"line": 603, "character": 72}}, "selectionRange": {"start": {"line": 603, "character": 0}, "end": {"line": 603, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 605, "character": 0}, "end": {"line": 605, "character": 43}}, "selectionRange": {"start": {"line": 605, "character": 0}, "end": {"line": 605, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 606, "character": 0}, "end": {"line": 606, "character": 68}}, "selectionRange": {"start": {"line": 606, "character": 0}, "end": {"line": 606, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 613, "character": 0}, "end": {"line": 613, "character": 58}}, "selectionRange": {"start": {"line": 613, "character": 0}, "end": {"line": 613, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 614, "character": 0}, "end": {"line": 614, "character": 68}}, "selectionRange": {"start": {"line": 614, "character": 0}, "end": {"line": 614, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "rename_selected_drug_list", "kind": 13, "range": {"start": {"line": 618, "character": 0}, "end": {"line": 618, "character": 30}}, "selectionRange": {"start": {"line": 618, "character": 0}, "end": {"line": 618, "character": 25}}, "detail": "rename_selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 620, "character": 0}, "end": {"line": 690, "character": 0}}, "selectionRange": {"start": {"line": 620, "character": 4}, "end": {"line": 620, "character": 8}}, "detail": "for drug in selected_drug_list: print(drug) if drug not in drug2id_mapping: print('drug name wrong', drug) else: cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]] feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) ) feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) ) print(len(feature_exp_gene_list) + len(feature_mut_gene_list)) if len(feature_exp_gene_list) + len(feature_mut_gene_list) == 0: continue feature_description = [] drug_tissue_map = {} drug = drug.replace(' ','_') rename_selected_drug_list.append(drug) if drug == 'Nutlin-3a_(-)': drug = 'Nutlin-3a' drug_folder = '/data/merged/drug_feature/' + drug + '/' if not os.path.exists(drug_folder): os.makedirs(drug_folder) for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description)) file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\") pickle.dump(drug_tissue_map,file_handle) file_handle.close()", "children": []}, {"name": "cell_line_drug_matrix", "kind": 13, "range": {"start": {"line": 628, "character": 8}, "end": {"line": 628, "character": 84}}, "selectionRange": {"start": {"line": 628, "character": 8}, "end": {"line": 628, "character": 29}}, "detail": "cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]]", "children": []}, {"name": "feature_exp_gene_list", "kind": 13, "range": {"start": {"line": 633, "character": 8}, "end": {"line": 633, "character": 98}}, "selectionRange": {"start": {"line": 633, "character": 8}, "end": {"line": 633, "character": 29}}, "detail": "feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) )", "children": []}, {"name": "feature_mut_gene_list", "kind": 13, "range": {"start": {"line": 634, "character": 8}, "end": {"line": 634, "character": 98}}, "selectionRange": {"start": {"line": 634, "character": 8}, "end": {"line": 634, "character": 29}}, "detail": "feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) )", "children": []}, {"name": "feature_description", "kind": 13, "range": {"start": {"line": 638, "character": 8}, "end": {"line": 638, "character": 32}}, "selectionRange": {"start": {"line": 638, "character": 8}, "end": {"line": 638, "character": 27}}, "detail": "feature_description = []", "children": []}, {"name": "drug_tissue_map", "kind": 13, "range": {"start": {"line": 640, "character": 8}, "end": {"line": 640, "character": 28}}, "selectionRange": {"start": {"line": 640, "character": 8}, "end": {"line": 640, "character": 23}}, "detail": "drug_tissue_map = {}", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 642, "character": 8}, "end": {"line": 642, "character": 36}}, "selectionRange": {"start": {"line": 642, "character": 8}, "end": {"line": 642, "character": 12}}, "detail": "drug = drug.replace(' ','_')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 648, "character": 12}, "end": {"line": 648, "character": 30}}, "selectionRange": {"start": {"line": 648, "character": 12}, "end": {"line": 648, "character": 16}}, "detail": "drug = 'Nutlin-3a'", "children": []}, {"name": "drug_folder", "kind": 13, "range": {"start": {"line": 650, "character": 8}, "end": {"line": 650, "character": 63}}, "selectionRange": {"start": {"line": 650, "character": 8}, "end": {"line": 650, "character": 19}}, "detail": "drug_folder = '/data/merged/drug_feature/' + drug + '/'", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 656, "character": 8}, "end": {"line": 686, "character": 0}}, "selectionRange": {"start": {"line": 656, "character": 12}, "end": {"line": 656, "character": 18}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "tissue_cell_line_list", "kind": 13, "range": {"start": {"line": 656, "character": 8}, "end": {"line": 686, "character": 0}}, "selectionRange": {"start": {"line": 656, "character": 20}, "end": {"line": 656, "character": 41}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 659, "character": 12}, "end": {"line": 659, "character": 103}}, "selectionRange": {"start": {"line": 659, "character": 12}, "end": {"line": 659, "character": 35}}, "detail": "drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list )", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 660, "character": 12}, "end": {"line": 660, "character": 67}}, "selectionRange": {"start": {"line": 660, "character": 12}, "end": {"line": 660, "character": 35}}, "detail": "drug_specific_cell_line = list(drug_specific_cell_line)", "children": []}, {"name": "feature_list", "kind": 13, "range": {"start": {"line": 663, "character": 12}, "end": {"line": 663, "character": 29}}, "selectionRange": {"start": {"line": 663, "character": 12}, "end": {"line": 663, "character": 24}}, "detail": "feature_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 667, "character": 16}, "end": {"line": 669, "character": 0}}, "selectionRange": {"start": {"line": 667, "character": 20}, "end": {"line": 667, "character": 24}}, "detail": "for gene in feature_exp_gene_list: feature_description.append(gene+'_expression')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 672, "character": 16}, "end": {"line": 674, "character": 0}}, "selectionRange": {"start": {"line": 672, "character": 20}, "end": {"line": 672, "character": 24}}, "detail": "for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation')", "children": []}, {"name": "feature", "kind": 13, "range": {"start": {"line": 675, "character": 12}, "end": {"line": 675, "character": 58}}, "selectionRange": {"start": {"line": 675, "character": 12}, "end": {"line": 675, "character": 19}}, "detail": "feature = np.concatenate(feature_list, axis=1)", "children": []}, {"name": "label", "kind": 13, "range": {"start": {"line": 677, "character": 12}, "end": {"line": 677, "character": 88}}, "selectionRange": {"start": {"line": 677, "character": 12}, "end": {"line": 677, "character": 17}}, "detail": "label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 687, "character": 8}, "end": {"line": 687, "character": 84}}, "selectionRange": {"start": {"line": 687, "character": 8}, "end": {"line": 687, "character": 19}}, "detail": "file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\")", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 691, "character": 0}, "end": {"line": 691, "character": 52}}, "selectionRange": {"start": {"line": 691, "character": 0}, "end": {"line": 691, "character": 11}}, "detail": "file_handle = open('rename_selected_drug_list', 'w')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 692, "character": 0}, "end": {"line": 694, "character": 0}}, "selectionRange": {"start": {"line": 692, "character": 4}, "end": {"line": 692, "character": 8}}, "detail": "for drug in rename_selected_drug_list: file_handle.writelines(drug+ '\\n')", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 712, "character": 0}, "end": {"line": 712, "character": 13}}, "selectionRange": {"start": {"line": 712, "character": 7}, "end": {"line": 712, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cell_line_loc", "kind": 13, "range": {"start": {"line": 718, "character": 0}, "end": {"line": 718, "character": 84}}, "selectionRange": {"start": {"line": 718, "character": 0}, "end": {"line": 718, "character": 13}}, "detail": "cell_line_loc = '/cellar/users/samsonfong/Projects/tcrp-v2/from-ma/cell_line_lists/'", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 724, "character": 0}, "end": {"line": 726, "character": 0}}, "selectionRange": {"start": {"line": 724, "character": 53}, "end": {"line": 724, "character": 54}}, "detail": "with open('/data/drug_feature/KU-55933/KU', 'rb') as f: tmap= pickle.load(f)", "children": []}, {"name": "tmap", "kind": 13, "range": {"start": {"line": 725, "character": 4}, "end": {"line": 725, "character": 24}}, "selectionRange": {"start": {"line": 725, "character": 4}, "end": {"line": 725, "character": 8}}, "detail": "tmap= pickle.load(f)", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 743, "character": 0}, "end": {"line": 743, "character": 68}}, "selectionRange": {"start": {"line": 743, "character": 0}, "end": {"line": 743, "character": 1}}, "detail": "f = np.load('/data/drug_feature/KU-55933/lung_KU-55933_feature.npy')", "children": []}]}
ERROR:pygls.protocol:Failed to handle request 45 textDocument/definition work_done_token=None text_document=TextDocumentIdentifier(uri='file:///root/capsule/code/process_merged.py') position=267:37
Traceback (most recent call last):
  File "/.vscode/extensions/ms-python.python-2021.12.1559732655/pythonFiles/lib/jedilsp/pygls/protocol.py", line 331, in _handle_request
    self._execute_request(msg_id, handler, params)
  File "/.vscode/extensions/ms-python.python-2021.12.1559732655/pythonFiles/lib/jedilsp/pygls/protocol.py", line 260, in _execute_request
    method_name, method_type, msg_id, handler(params))
  File "/.vscode/extensions/ms-python.python-2021.12.1559732655/pythonFiles/lib/jedilsp/jedi_language_server/server.py", line 301, in definition
    follow_builtin_imports=True,
  File "/.vscode/extensions/ms-python.python-2021.12.1559732655/pythonFiles/lib/jedilsp/jedi/api/helpers.py", line 487, in wrapper
    column, line_len, line, line_string))
ValueError: `column` parameter (37) is not in a valid range (0-28) for line 268 ('        target_list_str = ""\n').
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 45, "error": {"code": -32602, "message": "ValueError: `column` parameter (37) is not in a valid range (0-28) for line 268 ('        target_list_str = \"\"\\n').", "data": "{'traceback': ['  File \"/.vscode/extensions/ms-python.python-2021.12.1559732655/pythonFiles/lib/jedilsp/pygls/protocol.py\", line 331, in _handle_request\\n    self._execute_request(msg_id, handler, params)\\n', '  File \"/.vscode/extensions/ms-python.python-2021.12.1559732655/pythonFiles/lib/jedilsp/pygls/protocol.py\", line 260, in _execute_request\\n    method_name, method_type, msg_id, handler(params))\\n', '  File \"/.vscode/extensions/ms-python.python-2021.12.1559732655/pythonFiles/lib/jedilsp/jedi_language_server/server.py\", line 301, in definition\\n    follow_builtin_imports=True,\\n', '  File \"/.vscode/extensions/ms-python.python-2021.12.1559732655/pythonFiles/lib/jedilsp/jedi/api/helpers.py\", line 487, in wrapper\\n    column, line_len, line, line_string))\\n']}"}}
[Error - 3:08:10 AM] Request textDocument/definition failed.
  Message: ValueError: `column` parameter (37) is not in a valid range (0-28) for line 268 ('        target_list_str = ""\n').
  Code: -32602 
{'traceback': ['  File "/.vscode/extensions/ms-python.python-2021.12.1559732655/pythonFiles/lib/jedilsp/pygls/protocol.py", line 331, in _handle_request\n    self._execute_request(msg_id, handler, params)\n', '  File "/.vscode/extensions/ms-python.python-2021.12.1559732655/pythonFiles/lib/jedilsp/pygls/protocol.py", line 260, in _execute_request\n    method_name, method_type, msg_id, handler(params))\n', '  File "/.vscode/extensions/ms-python.python-2021.12.1559732655/pythonFiles/lib/jedilsp/jedi_language_server/server.py", line 301, in definition\n    follow_builtin_imports=True,\n', '  File "/.vscode/extensions/ms-python.python-2021.12.1559732655/pythonFiles/lib/jedilsp/jedi/api/helpers.py", line 487, in wrapper\n    column, line_len, line, line_string))\n']}
ERROR:pygls.protocol:Failed to handle request 46 textDocument/hover work_done_token=None text_document=TextDocumentIdentifier(uri='file:///root/capsule/code/process_merged.py') position=267:37
Traceback (most recent call last):
  File "/.vscode/extensions/ms-python.python-2021.12.1559732655/pythonFiles/lib/jedilsp/pygls/protocol.py", line 331, in _handle_request
    self._execute_request(msg_id, handler, params)
  File "/.vscode/extensions/ms-python.python-2021.12.1559732655/pythonFiles/lib/jedilsp/pygls/protocol.py", line 260, in _execute_request
    method_name, method_type, msg_id, handler(params))
  File "/.vscode/extensions/ms-python.python-2021.12.1559732655/pythonFiles/lib/jedilsp/jedi_language_server/server.py", line 354, in hover
    column=1 if jedi_lines[1] == 0 else jedi_lines[1],
  File "/.vscode/extensions/ms-python.python-2021.12.1559732655/pythonFiles/lib/jedilsp/jedi/api/helpers.py", line 487, in wrapper
    column, line_len, line, line_string))
ValueError: `column` parameter (37) is not in a valid range (0-28) for line 268 ('        target_list_str = ""\n').
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 46, "error": {"code": -32602, "message": "ValueError: `column` parameter (37) is not in a valid range (0-28) for line 268 ('        target_list_str = \"\"\\n').", "data": "{'traceback': ['  File \"/.vscode/extensions/ms-python.python-2021.12.1559732655/pythonFiles/lib/jedilsp/pygls/protocol.py\", line 331, in _handle_request\\n    self._execute_request(msg_id, handler, params)\\n', '  File \"/.vscode/extensions/ms-python.python-2021.12.1559732655/pythonFiles/lib/jedilsp/pygls/protocol.py\", line 260, in _execute_request\\n    method_name, method_type, msg_id, handler(params))\\n', '  File \"/.vscode/extensions/ms-python.python-2021.12.1559732655/pythonFiles/lib/jedilsp/jedi_language_server/server.py\", line 354, in hover\\n    column=1 if jedi_lines[1] == 0 else jedi_lines[1],\\n', '  File \"/.vscode/extensions/ms-python.python-2021.12.1559732655/pythonFiles/lib/jedilsp/jedi/api/helpers.py\", line 487, in wrapper\\n    column, line_len, line, line_string))\\n']}"}}
[Error - 3:08:10 AM] Request textDocument/hover failed.
  Message: ValueError: `column` parameter (37) is not in a valid range (0-28) for line 268 ('        target_list_str = ""\n').
  Code: -32602 
{'traceback': ['  File "/.vscode/extensions/ms-python.python-2021.12.1559732655/pythonFiles/lib/jedilsp/pygls/protocol.py", line 331, in _handle_request\n    self._execute_request(msg_id, handler, params)\n', '  File "/.vscode/extensions/ms-python.python-2021.12.1559732655/pythonFiles/lib/jedilsp/pygls/protocol.py", line 260, in _execute_request\n    method_name, method_type, msg_id, handler(params))\n', '  File "/.vscode/extensions/ms-python.python-2021.12.1559732655/pythonFiles/lib/jedilsp/jedi_language_server/server.py", line 354, in hover\n    column=1 if jedi_lines[1] == 0 else jedi_lines[1],\n', '  File "/.vscode/extensions/ms-python.python-2021.12.1559732655/pythonFiles/lib/jedilsp/jedi/api/helpers.py", line 487, in wrapper\n    column, line_len, line, line_string))\n']}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///root/capsule/code/process_merged.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///root/capsule/code/process_merged.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 47, "result": [{"name": "matplotlib", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 17}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 17}}, "detail": "module matplotlib", "children": []}, {"name": "os", "kind": 2, "range": {"start": {"line": 10, "character": 0}, "end": {"line": 10, "character": 9}}, "selectionRange": {"start": {"line": 10, "character": 7}, "end": {"line": 10, "character": 9}}, "detail": "module os", "children": []}, {"name": "pd", "kind": 2, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 11, "character": 19}}, "selectionRange": {"start": {"line": 11, "character": 17}, "end": {"line": 11, "character": 19}}, "detail": "module pd", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 12, "character": 0}, "end": {"line": 12, "character": 18}}, "selectionRange": {"start": {"line": 12, "character": 16}, "end": {"line": 12, "character": 18}}, "detail": "module np", "children": []}, {"name": "sys", "kind": 2, "range": {"start": {"line": 13, "character": 0}, "end": {"line": 13, "character": 10}}, "selectionRange": {"start": {"line": 13, "character": 7}, "end": {"line": 13, "character": 10}}, "detail": "module sys", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 14, "character": 0}, "end": {"line": 14, "character": 13}}, "selectionRange": {"start": {"line": 14, "character": 7}, "end": {"line": 14, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cdist", "kind": 12, "range": {"start": {"line": 15, "character": 0}, "end": {"line": 15, "character": 40}}, "selectionRange": {"start": {"line": 15, "character": 35}, "end": {"line": 15, "character": 40}}, "detail": "def cdist", "children": []}, {"name": "math", "kind": 2, "range": {"start": {"line": 16, "character": 0}, "end": {"line": 16, "character": 11}}, "selectionRange": {"start": {"line": 16, "character": 7}, "end": {"line": 16, "character": 11}}, "detail": "module math", "children": []}, {"name": "nx", "kind": 2, "range": {"start": {"line": 17, "character": 0}, "end": {"line": 17, "character": 21}}, "selectionRange": {"start": {"line": 17, "character": 19}, "end": {"line": 17, "character": 21}}, "detail": "module nx", "children": []}, {"name": "nxacc", "kind": 2, "range": {"start": {"line": 18, "character": 0}, "end": {"line": 18, "character": 56}}, "selectionRange": {"start": {"line": 18, "character": 51}, "end": {"line": 18, "character": 56}}, "detail": "module nxacc", "children": []}, {"name": "nxadag", "kind": 2, "range": {"start": {"line": 19, "character": 0}, "end": {"line": 19, "character": 40}}, "selectionRange": {"start": {"line": 19, "character": 34}, "end": {"line": 19, "character": 40}}, "detail": "module nxadag", "children": []}, {"name": "plt", "kind": 2, "range": {"start": {"line": 20, "character": 0}, "end": {"line": 20, "character": 31}}, "selectionRange": {"start": {"line": 20, "character": 28}, "end": {"line": 20, "character": 31}}, "detail": "module plt", "children": []}, {"name": "sns", "kind": 2, "range": {"start": {"line": 21, "character": 0}, "end": {"line": 21, "character": 21}}, "selectionRange": {"start": {"line": 21, "character": 18}, "end": {"line": 21, "character": 21}}, "detail": "module sns", "children": []}, {"name": "itertools", "kind": 2, "range": {"start": {"line": 22, "character": 0}, "end": {"line": 22, "character": 16}}, "selectionRange": {"start": {"line": 22, "character": 7}, "end": {"line": 22, "character": 16}}, "detail": "module itertools", "children": []}, {"name": "mygene", "kind": 2, "range": {"start": {"line": 23, "character": 0}, "end": {"line": 23, "character": 13}}, "selectionRange": {"start": {"line": 23, "character": 7}, "end": {"line": 23, "character": 13}}, "detail": "module mygene", "children": []}, {"name": "re", "kind": 2, "range": {"start": {"line": 24, "character": 0}, "end": {"line": 24, "character": 9}}, "selectionRange": {"start": {"line": 24, "character": 7}, "end": {"line": 24, "character": 9}}, "detail": "module re", "children": []}, {"name": "selected_exp_gene_list", "kind": 13, "range": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 95}}, "selectionRange": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 22}}, "detail": "selected_exp_gene_list = pd.read_csv(\"/data/common_exp_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "selected_mut_gene_list", "kind": 13, "range": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 95}}, "selectionRange": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 22}}, "detail": "selected_mut_gene_list = pd.read_csv(\"/data/common_mut_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "load_network", "kind": 12, "range": {"start": {"line": 37, "character": 0}, "end": {"line": 65, "character": 28}}, "selectionRange": {"start": {"line": 37, "character": 4}, "end": {"line": 37, "character": 16}}, "detail": "def load_network", "children": []}, {"name": "load_name_space", "kind": 12, "range": {"start": {"line": 67, "character": 0}, "end": {"line": 79, "character": 21}}, "selectionRange": {"start": {"line": 67, "character": 4}, "end": {"line": 67, "character": 19}}, "detail": "def load_name_space", "children": []}, {"name": "list2index", "kind": 12, "range": {"start": {"line": 81, "character": 0}, "end": {"line": 88, "character": 41}}, "selectionRange": {"start": {"line": 81, "character": 4}, "end": {"line": 81, "character": 14}}, "detail": "def list2index", "children": []}, {"name": "PDTC_data_file", "kind": 13, "range": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 30}}, "selectionRange": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 14}}, "detail": "PDTC_data_file = '/data/PTDC/'", "children": []}, {"name": "PDTC_exp_data_file", "kind": 13, "range": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 60}}, "selectionRange": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 18}}, "detail": "PDTC_exp_data_file = PDTC_data_file + 'ExpressionModels.tsv'", "children": []}, {"name": "PDTC_drug_cell_line_file", "kind": 13, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 72}}, "selectionRange": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 24}}, "detail": "PDTC_drug_cell_line_file = PDTC_data_file + 'DrugResponsesAUCModels.tsv'", "children": []}, {"name": "PDTC_mutation_data_file", "kind": 13, "range": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 59}}, "selectionRange": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 23}}, "detail": "PDTC_mutation_data_file = PDTC_data_file + 'SNVsModels.tsv'", "children": []}, {"name": "PDTC_drug_target_file", "kind": 13, "range": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 47}}, "selectionRange": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 21}}, "detail": "PDTC_drug_target_file ='/data/drug_targets.tsv'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 37}}, "selectionRange": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 46}}, "selectionRange": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "data_file", "kind": 13, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 25}}, "selectionRange": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 9}}, "detail": "data_file = '/data/GDSC/'", "children": []}, {"name": "new_network_file", "kind": 13, "range": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 27}}, "selectionRange": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 16}}, "detail": "new_network_file = '/data/'", "children": []}, {"name": "exp_data_file", "kind": 13, "range": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 61}}, "selectionRange": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 13}}, "detail": "exp_data_file = data_file + 'Cell_line_RMA_proc_basalExp.txt'", "children": []}, {"name": "drug_cell_line_file", "kind": 13, "range": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 64}}, "selectionRange": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 19}}, "detail": "drug_cell_line_file = data_file + 'v17_fitted_dose_response.csv'", "children": []}, {"name": "cell_line_detail_file", "kind": 13, "range": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 60}}, "selectionRange": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 21}}, "detail": "cell_line_detail_file = data_file + 'Cell_Lines_Details.csv'", "children": []}, {"name": "mutation_data_file", "kind": 13, "range": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 51}}, "selectionRange": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 18}}, "detail": "mutation_data_file = data_file + 'WES_variants.csv'", "children": []}, {"name": "drug_target_file", "kind": 13, "range": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 42}}, "selectionRange": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 16}}, "detail": "drug_target_file ='/data/drug_targets.tsv'", "children": []}, {"name": "feature_folder", "kind": 13, "range": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 27}}, "selectionRange": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 14}}, "detail": "feature_folder = 'feature/'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 37}}, "selectionRange": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 46}}, "selectionRange": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 58}}, "selectionRange": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 6}}, "detail": "exp_df = pd.read_csv(exp_data_file, sep='\\t', index_col=0)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 21}}, "selectionRange": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 6}}, "detail": "exp_df = exp_df.T[1:]", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 56}}, "selectionRange": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 6}}, "detail": "exp_df = exp_df.rename(columns={np.nan: 'NO_GENE_NAME'})", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 43}}, "selectionRange": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 6}}, "detail": "exp_df = exp_df.drop('NO_GENE_NAME',axis=1)", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 138, "character": 0}, "end": {"line": 140, "character": 26}}, "selectionRange": {"start": {"line": 138, "character": 4}, "end": {"line": 138, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 142, "character": 0}, "end": {"line": 142, "character": 44}}, "selectionRange": {"start": {"line": 142, "character": 7}, "end": {"line": 142, "character": 12}}, "detail": "exp_df.index = exp_df.index.map(stripNumber)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 40}}, "selectionRange": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 6}}, "detail": "exp_df = exp_df.groupby(level=0).first()", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 39}}, "selectionRange": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 6}}, "detail": "exp_df = exp_df[selected_exp_gene_list]", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 36}}, "selectionRange": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 48}}, "selectionRange": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 78}}, "selectionRange": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 11}}, "detail": "PDTC_exp_df = pd.read_csv(PDTC_exp_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 31}}, "selectionRange": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df.T[1:]", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 160, "character": 0}, "end": {"line": 162, "character": 26}}, "selectionRange": {"start": {"line": 160, "character": 4}, "end": {"line": 160, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 49}}, "selectionRange": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df[selected_exp_gene_list]", "children": []}, {"name": "PDTC_exp_gene_list", "kind": 13, "range": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 46}}, "selectionRange": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 18}}, "detail": "PDTC_exp_gene_list = list(PDTC_exp_df.columns)", "children": []}, {"name": "PDTC_exp_cell_line_list", "kind": 13, "range": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 58}}, "selectionRange": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 23}}, "detail": "PDTC_exp_cell_line_list = list(PDTC_exp_df.index.unique())", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 40}}, "selectionRange": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 6}}, "detail": "exp_df = pd.concat([exp_df,PDTC_exp_df])", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 36}}, "selectionRange": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 48}}, "selectionRange": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "maf", "kind": 13, "range": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 69}}, "selectionRange": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 3}}, "detail": "maf = pd.read_csv(mutation_data_file, sep=',', index_col=0).fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 75}}, "selectionRange": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 11}}, "detail": "mutation_df = maf.groupby(['COSMIC_ID', 'Gene']).size().unstack().fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 49}}, "selectionRange": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 11}}, "detail": "mutation_df = mutation_df[selected_mut_gene_list]", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 46}}, "selectionRange": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 58}}, "selectionRange": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "PDTC_maf", "kind": 13, "range": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 80}}, "selectionRange": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 8}}, "detail": "PDTC_maf = pd.read_csv(PDTC_mutation_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 61}}, "selectionRange": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_maf.replace(to_replace=\"NO\",value=0.0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 82}}, "selectionRange": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_mutation_df.replace(to_replace=\"chr*\",value=1.0,regex=True)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 47}}, "selectionRange": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df.transpose()", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 59}}, "selectionRange": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df[selected_mut_gene_list]", "children": []}, {"name": "PDTC_mutation_gene_list", "kind": 13, "range": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 56}}, "selectionRange": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 23}}, "detail": "PDTC_mutation_gene_list = list(PDTC_mutation_df.columns)", "children": []}, {"name": "PDTC_mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 68}}, "selectionRange": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 28}}, "detail": "PDTC_mutation_cell_line_list = list(PDTC_mutation_df.index.unique())", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 55}}, "selectionRange": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 11}}, "detail": "mutation_df = pd.concat([mutation_df,PDTC_mutation_df])", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 46}}, "selectionRange": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 58}}, "selectionRange": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 36}}, "selectionRange": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 11}}, "detail": "file_handle = open(drug_target_file)", "children": []}, {"name": "drug_target_map", "kind": 13, "range": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 20}}, "selectionRange": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 15}}, "detail": "drug_target_map = {}", "children": []}, {"name": "drug_target_list", "kind": 13, "range": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 21}}, "selectionRange": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 16}}, "detail": "drug_target_list = []", "children": []}, {"name": "line", "kind": 13, "range": {"start": {"line": 230, "character": 0}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 230, "character": 4}, "end": {"line": 230, "character": 8}}, "detail": "for line in file_handle: new_line = line.rstrip().split(\"\\t\") drug = new_line[0] target_list=new_line[1].split(',') if drug != \"Drug\": target_list_str = \"\" for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\" drug = drug.strip() drug_target_map[drug] = [] if ',' not in target_list_str: drug_target_map[drug].append(target_list_str.strip()) drug_target_list.append(target_list_str.strip()) else: target_list = target_list_str.split(',') for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "new_line", "kind": 13, "range": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 40}}, "selectionRange": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 12}}, "detail": "new_line = line.rstrip().split(\"\\t\")", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 22}}, "selectionRange": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 8}}, "detail": "drug = new_line[0]", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 38}}, "selectionRange": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 15}}, "detail": "target_list=new_line[1].split(',')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 28}}, "selectionRange": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 23}}, "detail": "target_list_str = \"\"", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 237, "character": 8}, "end": {"line": 242, "character": 0}}, "selectionRange": {"start": {"line": 237, "character": 12}, "end": {"line": 237, "character": 13}}, "detail": "for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 65}}, "selectionRange": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 71}}, "selectionRange": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 27}}, "selectionRange": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 12}}, "detail": "drug = drug.strip()", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 52}}, "selectionRange": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 23}}, "detail": "target_list = target_list_str.split(',')", "children": []}, {"name": "target", "kind": 13, "range": {"start": {"line": 250, "character": 12}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 250, "character": 16}, "end": {"line": 250, "character": 22}}, "detail": "for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "drug_target_map", "kind": 13, "range": {"start": {"line": 259, "character": 0}, "end": {"line": 259, "character": 20}}, "selectionRange": {"start": {"line": 259, "character": 0}, "end": {"line": 259, "character": 15}}, "detail": "drug_target_map = {}", "children": []}, {"name": "drug_target_list", "kind": 13, "range": {"start": {"line": 260, "character": 0}, "end": {"line": 260, "character": 21}}, "selectionRange": {"start": {"line": 260, "character": 0}, "end": {"line": 260, "character": 16}}, "detail": "drug_target_list = []", "children": []}, {"name": "line", "kind": 13, "range": {"start": {"line": 261, "character": 0}, "end": {"line": 284, "character": 0}}, "selectionRange": {"start": {"line": 261, "character": 4}, "end": {"line": 261, "character": 8}}, "detail": "for line in file_handle: new_line = line.rstrip().split(\"\\t\") drug = new_line[0] target_list=new_line[1].split(',') if drug != \"Drug\": target_list_str = \"\" for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\" drug = drug.strip() drug_target_map[drug] = [] if ',' not in target_list_str: drug_target_map[drug].append(target_list_str.strip()) drug_target_list.append(target_list_str.strip()) else: target_list = target_list_str.split(',') for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "new_line", "kind": 13, "range": {"start": {"line": 263, "character": 4}, "end": {"line": 263, "character": 40}}, "selectionRange": {"start": {"line": 263, "character": 4}, "end": {"line": 263, "character": 12}}, "detail": "new_line = line.rstrip().split(\"\\t\")", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 264, "character": 4}, "end": {"line": 264, "character": 22}}, "selectionRange": {"start": {"line": 264, "character": 4}, "end": {"line": 264, "character": 8}}, "detail": "drug = new_line[0]", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 265, "character": 4}, "end": {"line": 265, "character": 38}}, "selectionRange": {"start": {"line": 265, "character": 4}, "end": {"line": 265, "character": 15}}, "detail": "target_list=new_line[1].split(',')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 267, "character": 8}, "end": {"line": 267, "character": 28}}, "selectionRange": {"start": {"line": 267, "character": 8}, "end": {"line": 267, "character": 23}}, "detail": "target_list_str = \"\"", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 268, "character": 8}, "end": {"line": 273, "character": 0}}, "selectionRange": {"start": {"line": 268, "character": 12}, "end": {"line": 268, "character": 13}}, "detail": "for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 270, "character": 16}, "end": {"line": 270, "character": 65}}, "selectionRange": {"start": {"line": 270, "character": 16}, "end": {"line": 270, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 272, "character": 16}, "end": {"line": 272, "character": 71}}, "selectionRange": {"start": {"line": 272, "character": 16}, "end": {"line": 272, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 273, "character": 8}, "end": {"line": 273, "character": 27}}, "selectionRange": {"start": {"line": 273, "character": 8}, "end": {"line": 273, "character": 12}}, "detail": "drug = drug.strip()", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 280, "character": 12}, "end": {"line": 280, "character": 52}}, "selectionRange": {"start": {"line": 280, "character": 12}, "end": {"line": 280, "character": 23}}, "detail": "target_list = target_list_str.split(',')", "children": []}, {"name": "target", "kind": 13, "range": {"start": {"line": 281, "character": 12}, "end": {"line": 284, "character": 0}}, "selectionRange": {"start": {"line": 281, "character": 16}, "end": {"line": 281, "character": 22}}, "detail": "for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "drugs_legend", "kind": 13, "range": {"start": {"line": 287, "character": 0}, "end": {"line": 287, "character": 85}}, "selectionRange": {"start": {"line": 287, "character": 0}, "end": {"line": 287, "character": 12}}, "detail": "drugs_legend = pd.read_csv('/data/GDSC/Screened_Compounds.csv', sep=',', index_col=0)", "children": []}, {"name": "drug2id_mapping", "kind": 13, "range": {"start": {"line": 289, "character": 0}, "end": {"line": 289, "character": 20}}, "selectionRange": {"start": {"line": 289, "character": 0}, "end": {"line": 289, "character": 15}}, "detail": "drug2id_mapping = {}", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 291, "character": 0}, "end": {"line": 294, "character": 0}}, "selectionRange": {"start": {"line": 291, "character": 4}, "end": {"line": 291, "character": 9}}, "detail": "for index in list(drugs_legend.index) : drug_name = drugs_legend.loc[index,'Drug Name'] drug2id_mapping[ drug_name ] = index", "children": []}, {"name": "drug_name", "kind": 13, "range": {"start": {"line": 292, "character": 4}, "end": {"line": 292, "character": 51}}, "selectionRange": {"start": {"line": 292, "character": 4}, "end": {"line": 292, "character": 13}}, "detail": "drug_name = drugs_legend.loc[index,'Drug Name']", "children": []}, {"name": "valid_gene_list", "kind": 13, "range": {"start": {"line": 299, "character": 0}, "end": {"line": 299, "character": 92}}, "selectionRange": {"start": {"line": 299, "character": 0}, "end": {"line": 299, "character": 15}}, "detail": "valid_gene_list = list(set(drug_target_list) | set(exp_gene_list) | set(mutation_gene_list))", "children": []}, {"name": "network_list", "kind": 13, "range": {"start": {"line": 305, "character": 0}, "end": {"line": 305, "character": 82}}, "selectionRange": {"start": {"line": 305, "character": 0}, "end": {"line": 305, "character": 12}}, "detail": "network_list = [new_network_file+inbiomap_file, new_network_file+pathwaycomm_file]", "children": []}, {"name": "gene_neighbor_map", "kind": 13, "range": {"start": {"line": 306, "character": 0}, "end": {"line": 306, "character": 64}}, "selectionRange": {"start": {"line": 306, "character": 0}, "end": {"line": 306, "character": 17}}, "detail": "gene_neighbor_map = load_network(network_list, valid_gene_list)", "children": []}, {"name": "gene_name_df", "kind": 13, "range": {"start": {"line": 312, "character": 0}, "end": {"line": 312, "character": 89}}, "selectionRange": {"start": {"line": 312, "character": 0}, "end": {"line": 312, "character": 12}}, "detail": "gene_name_df = pd.read_table('/data/HUGO_protein-coding_gene.tsv',index_col=25, sep='\\t')", "children": []}, {"name": "gene_name_map", "kind": 13, "range": {"start": {"line": 318, "character": 0}, "end": {"line": 318, "character": 18}}, "selectionRange": {"start": {"line": 318, "character": 0}, "end": {"line": 318, "character": 13}}, "detail": "gene_name_map = {}", "children": []}, {"name": "uniprot_gene", "kind": 13, "range": {"start": {"line": 320, "character": 0}, "end": {"line": 329, "character": 0}}, "selectionRange": {"start": {"line": 320, "character": 4}, "end": {"line": 320, "character": 16}}, "detail": "for uniprot_gene in gene_name_df.index: if isinstance(uniprot_gene, type('aaa')) == False: continue if isinstance(gene_name_df.loc[uniprot_gene, 'symbol'], type('aaa')) == False: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol'][0] else: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 76}}, "selectionRange": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "uniprot_gene_set", "kind": 13, "range": {"start": {"line": 336, "character": 0}, "end": {"line": 336, "character": 24}}, "selectionRange": {"start": {"line": 336, "character": 0}, "end": {"line": 336, "character": 16}}, "detail": "uniprot_gene_set = set()", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 338, "character": 0}, "end": {"line": 347, "character": 0}}, "selectionRange": {"start": {"line": 338, "character": 4}, "end": {"line": 338, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 343, "character": 4}, "end": {"line": 343, "character": 74}}, "selectionRange": {"start": {"line": 343, "character": 4}, "end": {"line": 343, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 345, "character": 4}, "end": {"line": 347, "character": 0}}, "selectionRange": {"start": {"line": 345, "character": 8}, "end": {"line": 345, "character": 12}}, "detail": "for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "query_gene_set", "kind": 13, "range": {"start": {"line": 350, "character": 0}, "end": {"line": 350, "character": 19}}, "selectionRange": {"start": {"line": 350, "character": 0}, "end": {"line": 350, "character": 14}}, "detail": "query_gene_set = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 352, "character": 0}, "end": {"line": 355, "character": 0}}, "selectionRange": {"start": {"line": 352, "character": 4}, "end": {"line": 352, "character": 8}}, "detail": "for gene in uniprot_gene_set: if gene not in gene_name_map: query_gene_set.append(gene)", "children": []}, {"name": "query_gene_list", "kind": 13, "range": {"start": {"line": 358, "character": 0}, "end": {"line": 358, "character": 38}}, "selectionRange": {"start": {"line": 358, "character": 0}, "end": {"line": 358, "character": 15}}, "detail": "query_gene_list = list(query_gene_set)", "children": []}, {"name": "mg", "kind": 13, "range": {"start": {"line": 360, "character": 0}, "end": {"line": 360, "character": 24}}, "selectionRange": {"start": {"line": 360, "character": 0}, "end": {"line": 360, "character": 2}}, "detail": "mg = mygene.MyGeneInfo()", "children": []}, {"name": "out", "kind": 13, "range": {"start": {"line": 361, "character": 0}, "end": {"line": 361, "character": 87}}, "selectionRange": {"start": {"line": 361, "character": 0}, "end": {"line": 361, "character": 3}}, "detail": "out = mg.querymany(query_gene_list, scopes='uniprot', fields='symbol', species='human')", "children": []}, {"name": "not_found_gene_list", "kind": 13, "range": {"start": {"line": 363, "character": 0}, "end": {"line": 363, "character": 24}}, "selectionRange": {"start": {"line": 363, "character": 0}, "end": {"line": 363, "character": 19}}, "detail": "not_found_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 365, "character": 0}, "end": {"line": 370, "character": 0}}, "selectionRange": {"start": {"line": 365, "character": 4}, "end": {"line": 365, "character": 5}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 365, "character": 0}, "end": {"line": 370, "character": 0}}, "selectionRange": {"start": {"line": 365, "character": 7}, "end": {"line": 365, "character": 11}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 377, "character": 0}, "end": {"line": 377, "character": 76}}, "selectionRange": {"start": {"line": 377, "character": 0}, "end": {"line": 377, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 379, "character": 0}, "end": {"line": 401, "character": 0}}, "selectionRange": {"start": {"line": 379, "character": 4}, "end": {"line": 379, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') complex_symbol_list = [] for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] ) for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 384, "character": 4}, "end": {"line": 384, "character": 74}}, "selectionRange": {"start": {"line": 384, "character": 4}, "end": {"line": 384, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "complex_symbol_list", "kind": 13, "range": {"start": {"line": 386, "character": 4}, "end": {"line": 386, "character": 28}}, "selectionRange": {"start": {"line": 386, "character": 4}, "end": {"line": 386, "character": 23}}, "detail": "complex_symbol_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 388, "character": 4}, "end": {"line": 391, "character": 0}}, "selectionRange": {"start": {"line": 388, "character": 8}, "end": {"line": 388, "character": 12}}, "detail": "for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] )", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 392, "character": 4}, "end": {"line": 401, "character": 0}}, "selectionRange": {"start": {"line": 392, "character": 8}, "end": {"line": 392, "character": 13}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 392, "character": 4}, "end": {"line": 401, "character": 0}}, "selectionRange": {"start": {"line": 392, "character": 15}, "end": {"line": 392, "character": 20}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene_exp_neighbor_map", "kind": 13, "range": {"start": {"line": 406, "character": 0}, "end": {"line": 406, "character": 26}}, "selectionRange": {"start": {"line": 406, "character": 0}, "end": {"line": 406, "character": 21}}, "detail": "gene_exp_neighbor_map = {}", "children": []}, {"name": "exp_matrix", "kind": 13, "range": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 26}}, "selectionRange": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 10}}, "detail": "exp_matrix = exp_df.values", "children": []}, {"name": "P", "kind": 13, "range": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 79}}, "selectionRange": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 1}}, "detail": "P = 1 - cdist(np.transpose(exp_matrix), np.transpose(exp_matrix),'correlation')", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 411, "character": 0}, "end": {"line": 425, "character": 0}}, "selectionRange": {"start": {"line": 411, "character": 4}, "end": {"line": 411, "character": 5}}, "detail": "for i in range(len(exp_gene_list)): gene1 = exp_gene_list[i] gene_exp_neighbor_map[gene1] = set() for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2) if gene1 not in gene_exp_neighbor_map[gene1]: print (gene1, 'not in itself?', P[i,i])", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 413, "character": 4}, "end": {"line": 413, "character": 28}}, "selectionRange": {"start": {"line": 413, "character": 4}, "end": {"line": 413, "character": 9}}, "detail": "gene1 = exp_gene_list[i]", "children": []}, {"name": "j", "kind": 13, "range": {"start": {"line": 416, "character": 4}, "end": {"line": 422, "character": 0}}, "selectionRange": {"start": {"line": 416, "character": 8}, "end": {"line": 416, "character": 9}}, "detail": "for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 418, "character": 8}, "end": {"line": 418, "character": 32}}, "selectionRange": {"start": {"line": 418, "character": 8}, "end": {"line": 418, "character": 13}}, "detail": "gene2 = exp_gene_list[j]", "children": []}, {"name": "drug_feature_list", "kind": 13, "range": {"start": {"line": 433, "character": 0}, "end": {"line": 433, "character": 22}}, "selectionRange": {"start": {"line": 433, "character": 0}, "end": {"line": 433, "character": 17}}, "detail": "drug_feature_list = []", "children": []}, {"name": "drug_neighbor_map", "kind": 13, "range": {"start": {"line": 434, "character": 0}, "end": {"line": 434, "character": 22}}, "selectionRange": {"start": {"line": 434, "character": 0}, "end": {"line": 434, "character": 17}}, "detail": "drug_neighbor_map = {}", "children": []}, {"name": "selected_drug_list", "kind": 13, "range": {"start": {"line": 435, "character": 0}, "end": {"line": 435, "character": 23}}, "selectionRange": {"start": {"line": 435, "character": 0}, "end": {"line": 435, "character": 18}}, "detail": "selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 437, "character": 0}, "end": {"line": 454, "character": 0}}, "selectionRange": {"start": {"line": 437, "character": 4}, "end": {"line": 437, "character": 8}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 437, "character": 0}, "end": {"line": 454, "character": 0}}, "selectionRange": {"start": {"line": 437, "character": 10}, "end": {"line": 437, "character": 21}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 440, "character": 8}, "end": {"line": 450, "character": 0}}, "selectionRange": {"start": {"line": 440, "character": 12}, "end": {"line": 440, "character": 16}}, "detail": "for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene]", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 468, "character": 0}, "end": {"line": 468, "character": 52}}, "selectionRange": {"start": {"line": 468, "character": 0}, "end": {"line": 468, "character": 5}}, "detail": "drugs = pd.read_csv(drug_cell_line_file,index_col=2)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 93}}, "selectionRange": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 5}}, "detail": "drugs = drugs.drop([\"DATASET_VERSION\",\"IC50_RESULTS_ID\",\"MAX_CONC_MICROMOLAR\",\"RMSE\"],axis=1)", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 470, "character": 0}, "end": {"line": 470, "character": 49}}, "selectionRange": {"start": {"line": 470, "character": 0}, "end": {"line": 470, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 472, "character": 0}, "end": {"line": 472, "character": 28}}, "selectionRange": {"start": {"line": 472, "character": 0}, "end": {"line": 472, "character": 9}}, "detail": "drug_list = drugs[\"DRUG_ID\"]", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 473, "character": 0}, "end": {"line": 473, "character": 16}}, "selectionRange": {"start": {"line": 473, "character": 0}, "end": {"line": 473, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 483, "character": 0}, "end": {"line": 483, "character": 71}}, "selectionRange": {"start": {"line": 483, "character": 0}, "end": {"line": 483, "character": 10}}, "detail": "PDTC_drugs = pd.read_csv(PDTC_drug_cell_line_file,sep='\\t',index_col=0)", "children": []}, {"name": "PDTC_drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 59}}, "selectionRange": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 25}}, "detail": "PDTC_drugs_cell_line_list = list(PDTC_drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 486, "character": 0}, "end": {"line": 486, "character": 39}}, "selectionRange": {"start": {"line": 486, "character": 0}, "end": {"line": 486, "character": 9}}, "detail": "drug_list = PDTC_drugs[\"Drug\"].tolist()", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 487, "character": 0}, "end": {"line": 487, "character": 16}}, "selectionRange": {"start": {"line": 487, "character": 0}, "end": {"line": 487, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 488, "character": 0}, "end": {"line": 493, "character": 0}}, "selectionRange": {"start": {"line": 488, "character": 4}, "end": {"line": 488, "character": 5}}, "detail": "for i in drug_list: if i in drug2id_mapping.keys(): new_drug_id.append(drug2id_mapping[i]) else: new_drug_id.append(0)", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 495, "character": 0}, "end": {"line": 495, "character": 84}}, "selectionRange": {"start": {"line": 495, "character": 0}, "end": {"line": 495, "character": 10}}, "detail": "PDTC_drugs = PDTC_drugs.drop([\"Drug\",\"iC50\",\"D1_CONC\",\"D5_CONC\",\"perc.iC50\"],axis=1)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 503, "character": 0}, "end": {"line": 503, "character": 37}}, "selectionRange": {"start": {"line": 503, "character": 0}, "end": {"line": 503, "character": 5}}, "detail": "drugs = pd.concat([drugs,PDTC_drugs])", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 510, "character": 0}, "end": {"line": 510, "character": 49}}, "selectionRange": {"start": {"line": 510, "character": 0}, "end": {"line": 510, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "cell_line_list", "kind": 13, "range": {"start": {"line": 516, "character": 0}, "end": {"line": 516, "character": 102}}, "selectionRange": {"start": {"line": 516, "character": 0}, "end": {"line": 516, "character": 14}}, "detail": "cell_line_list = list(set(drugs_cell_line_list)&set(exp_cell_line_list)&set(mutation_cell_line_list) )", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 523, "character": 0}, "end": {"line": 523, "character": 66}}, "selectionRange": {"start": {"line": 523, "character": 0}, "end": {"line": 523, "character": 16}}, "detail": "cell_line_legend = pd.read_csv(cell_line_detail_file, index_col=1)", "children": []}, {"name": "PDTC_cell_line", "kind": 13, "range": {"start": {"line": 524, "character": 0}, "end": {"line": 524, "character": 206}}, "selectionRange": {"start": {"line": 524, "character": 0}, "end": {"line": 524, "character": 14}}, "detail": "PDTC_cell_line = pd.DataFrame({'Line': [\"BRCA\"]*len(PDTC_exp_cell_line_list), 'Site':[\"PDTC\"]*len(PDTC_exp_cell_line_list),\"Histology\":[\"breast\"]*len(PDTC_exp_cell_line_list)},index=PDTC_exp_cell_line_list)", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 525, "character": 0}, "end": {"line": 525, "character": 63}}, "selectionRange": {"start": {"line": 525, "character": 0}, "end": {"line": 525, "character": 16}}, "detail": "cell_line_legend = pd.concat([cell_line_legend,PDTC_cell_line])", "children": []}, {"name": "tissue_map", "kind": 13, "range": {"start": {"line": 528, "character": 0}, "end": {"line": 528, "character": 15}}, "selectionRange": {"start": {"line": 528, "character": 0}, "end": {"line": 528, "character": 10}}, "detail": "tissue_map = {}", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 530, "character": 0}, "end": {"line": 538, "character": 0}}, "selectionRange": {"start": {"line": 530, "character": 4}, "end": {"line": 530, "character": 13}}, "detail": "for cell_line in cell_line_list: tissue = cell_line_legend.loc[cell_line,'Site'] if tissue not in tissue_map: tissue_map[tissue] = [] tissue_map[tissue].append(cell_line)", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 532, "character": 4}, "end": {"line": 532, "character": 51}}, "selectionRange": {"start": {"line": 532, "character": 4}, "end": {"line": 532, "character": 10}}, "detail": "tissue = cell_line_legend.loc[cell_line,'Site']", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 539, "character": 0}, "end": {"line": 539, "character": 23}}, "selectionRange": {"start": {"line": 539, "character": 0}, "end": {"line": 539, "character": 19}}, "detail": "large_tissue_number = 0", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 540, "character": 0}, "end": {"line": 546, "character": 0}}, "selectionRange": {"start": {"line": 540, "character": 4}, "end": {"line": 540, "character": 10}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 540, "character": 0}, "end": {"line": 546, "character": 0}}, "selectionRange": {"start": {"line": 540, "character": 12}, "end": {"line": 540, "character": 21}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 543, "character": 8}, "end": {"line": 543, "character": 32}}, "selectionRange": {"start": {"line": 543, "character": 8}, "end": {"line": 543, "character": 27}}, "detail": "large_tissue_number += 1", "children": []}, {"name": "new_exp_gene_list", "kind": 13, "range": {"start": {"line": 566, "character": 0}, "end": {"line": 566, "character": 22}}, "selectionRange": {"start": {"line": 566, "character": 0}, "end": {"line": 566, "character": 17}}, "detail": "new_exp_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 567, "character": 0}, "end": {"line": 570, "character": 0}}, "selectionRange": {"start": {"line": 567, "character": 4}, "end": {"line": 567, "character": 5}}, "detail": "for i in exp_gene_list: if i in valid_gene_list: new_exp_gene_list.append(i)", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 41}}, "selectionRange": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 38}}, "selectionRange": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 72}}, "selectionRange": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 43}}, "selectionRange": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 68}}, "selectionRange": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 58}}, "selectionRange": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 68}}, "selectionRange": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "new_data_file", "kind": 13, "range": {"start": {"line": 597, "character": 0}, "end": {"line": 597, "character": 18}}, "selectionRange": {"start": {"line": 597, "character": 0}, "end": {"line": 597, "character": 13}}, "detail": "new_data_file = ''", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 601, "character": 0}, "end": {"line": 601, "character": 41}}, "selectionRange": {"start": {"line": 601, "character": 0}, "end": {"line": 601, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 602, "character": 0}, "end": {"line": 602, "character": 38}}, "selectionRange": {"start": {"line": 602, "character": 0}, "end": {"line": 602, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 603, "character": 0}, "end": {"line": 603, "character": 72}}, "selectionRange": {"start": {"line": 603, "character": 0}, "end": {"line": 603, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 605, "character": 0}, "end": {"line": 605, "character": 43}}, "selectionRange": {"start": {"line": 605, "character": 0}, "end": {"line": 605, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 606, "character": 0}, "end": {"line": 606, "character": 68}}, "selectionRange": {"start": {"line": 606, "character": 0}, "end": {"line": 606, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 613, "character": 0}, "end": {"line": 613, "character": 58}}, "selectionRange": {"start": {"line": 613, "character": 0}, "end": {"line": 613, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 614, "character": 0}, "end": {"line": 614, "character": 68}}, "selectionRange": {"start": {"line": 614, "character": 0}, "end": {"line": 614, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "rename_selected_drug_list", "kind": 13, "range": {"start": {"line": 618, "character": 0}, "end": {"line": 618, "character": 30}}, "selectionRange": {"start": {"line": 618, "character": 0}, "end": {"line": 618, "character": 25}}, "detail": "rename_selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 620, "character": 0}, "end": {"line": 690, "character": 0}}, "selectionRange": {"start": {"line": 620, "character": 4}, "end": {"line": 620, "character": 8}}, "detail": "for drug in selected_drug_list: print(drug) if drug not in drug2id_mapping: print('drug name wrong', drug) else: cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]] feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) ) feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) ) print(len(feature_exp_gene_list) + len(feature_mut_gene_list)) if len(feature_exp_gene_list) + len(feature_mut_gene_list) == 0: continue feature_description = [] drug_tissue_map = {} drug = drug.replace(' ','_') rename_selected_drug_list.append(drug) if drug == 'Nutlin-3a_(-)': drug = 'Nutlin-3a' drug_folder = '/data/merged/drug_feature/' + drug + '/' if not os.path.exists(drug_folder): os.makedirs(drug_folder) for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description)) file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\") pickle.dump(drug_tissue_map,file_handle) file_handle.close()", "children": []}, {"name": "cell_line_drug_matrix", "kind": 13, "range": {"start": {"line": 628, "character": 8}, "end": {"line": 628, "character": 84}}, "selectionRange": {"start": {"line": 628, "character": 8}, "end": {"line": 628, "character": 29}}, "detail": "cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]]", "children": []}, {"name": "feature_exp_gene_list", "kind": 13, "range": {"start": {"line": 633, "character": 8}, "end": {"line": 633, "character": 98}}, "selectionRange": {"start": {"line": 633, "character": 8}, "end": {"line": 633, "character": 29}}, "detail": "feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) )", "children": []}, {"name": "feature_mut_gene_list", "kind": 13, "range": {"start": {"line": 634, "character": 8}, "end": {"line": 634, "character": 98}}, "selectionRange": {"start": {"line": 634, "character": 8}, "end": {"line": 634, "character": 29}}, "detail": "feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) )", "children": []}, {"name": "feature_description", "kind": 13, "range": {"start": {"line": 638, "character": 8}, "end": {"line": 638, "character": 32}}, "selectionRange": {"start": {"line": 638, "character": 8}, "end": {"line": 638, "character": 27}}, "detail": "feature_description = []", "children": []}, {"name": "drug_tissue_map", "kind": 13, "range": {"start": {"line": 640, "character": 8}, "end": {"line": 640, "character": 28}}, "selectionRange": {"start": {"line": 640, "character": 8}, "end": {"line": 640, "character": 23}}, "detail": "drug_tissue_map = {}", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 642, "character": 8}, "end": {"line": 642, "character": 36}}, "selectionRange": {"start": {"line": 642, "character": 8}, "end": {"line": 642, "character": 12}}, "detail": "drug = drug.replace(' ','_')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 648, "character": 12}, "end": {"line": 648, "character": 30}}, "selectionRange": {"start": {"line": 648, "character": 12}, "end": {"line": 648, "character": 16}}, "detail": "drug = 'Nutlin-3a'", "children": []}, {"name": "drug_folder", "kind": 13, "range": {"start": {"line": 650, "character": 8}, "end": {"line": 650, "character": 63}}, "selectionRange": {"start": {"line": 650, "character": 8}, "end": {"line": 650, "character": 19}}, "detail": "drug_folder = '/data/merged/drug_feature/' + drug + '/'", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 656, "character": 8}, "end": {"line": 686, "character": 0}}, "selectionRange": {"start": {"line": 656, "character": 12}, "end": {"line": 656, "character": 18}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "tissue_cell_line_list", "kind": 13, "range": {"start": {"line": 656, "character": 8}, "end": {"line": 686, "character": 0}}, "selectionRange": {"start": {"line": 656, "character": 20}, "end": {"line": 656, "character": 41}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 659, "character": 12}, "end": {"line": 659, "character": 103}}, "selectionRange": {"start": {"line": 659, "character": 12}, "end": {"line": 659, "character": 35}}, "detail": "drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list )", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 660, "character": 12}, "end": {"line": 660, "character": 67}}, "selectionRange": {"start": {"line": 660, "character": 12}, "end": {"line": 660, "character": 35}}, "detail": "drug_specific_cell_line = list(drug_specific_cell_line)", "children": []}, {"name": "feature_list", "kind": 13, "range": {"start": {"line": 663, "character": 12}, "end": {"line": 663, "character": 29}}, "selectionRange": {"start": {"line": 663, "character": 12}, "end": {"line": 663, "character": 24}}, "detail": "feature_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 667, "character": 16}, "end": {"line": 669, "character": 0}}, "selectionRange": {"start": {"line": 667, "character": 20}, "end": {"line": 667, "character": 24}}, "detail": "for gene in feature_exp_gene_list: feature_description.append(gene+'_expression')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 672, "character": 16}, "end": {"line": 674, "character": 0}}, "selectionRange": {"start": {"line": 672, "character": 20}, "end": {"line": 672, "character": 24}}, "detail": "for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation')", "children": []}, {"name": "feature", "kind": 13, "range": {"start": {"line": 675, "character": 12}, "end": {"line": 675, "character": 58}}, "selectionRange": {"start": {"line": 675, "character": 12}, "end": {"line": 675, "character": 19}}, "detail": "feature = np.concatenate(feature_list, axis=1)", "children": []}, {"name": "label", "kind": 13, "range": {"start": {"line": 677, "character": 12}, "end": {"line": 677, "character": 88}}, "selectionRange": {"start": {"line": 677, "character": 12}, "end": {"line": 677, "character": 17}}, "detail": "label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 687, "character": 8}, "end": {"line": 687, "character": 84}}, "selectionRange": {"start": {"line": 687, "character": 8}, "end": {"line": 687, "character": 19}}, "detail": "file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\")", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 691, "character": 0}, "end": {"line": 691, "character": 52}}, "selectionRange": {"start": {"line": 691, "character": 0}, "end": {"line": 691, "character": 11}}, "detail": "file_handle = open('rename_selected_drug_list', 'w')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 692, "character": 0}, "end": {"line": 694, "character": 0}}, "selectionRange": {"start": {"line": 692, "character": 4}, "end": {"line": 692, "character": 8}}, "detail": "for drug in rename_selected_drug_list: file_handle.writelines(drug+ '\\n')", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 712, "character": 0}, "end": {"line": 712, "character": 13}}, "selectionRange": {"start": {"line": 712, "character": 7}, "end": {"line": 712, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cell_line_loc", "kind": 13, "range": {"start": {"line": 718, "character": 0}, "end": {"line": 718, "character": 84}}, "selectionRange": {"start": {"line": 718, "character": 0}, "end": {"line": 718, "character": 13}}, "detail": "cell_line_loc = '/cellar/users/samsonfong/Projects/tcrp-v2/from-ma/cell_line_lists/'", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 724, "character": 0}, "end": {"line": 726, "character": 0}}, "selectionRange": {"start": {"line": 724, "character": 53}, "end": {"line": 724, "character": 54}}, "detail": "with open('/data/drug_feature/KU-55933/KU', 'rb') as f: tmap= pickle.load(f)", "children": []}, {"name": "tmap", "kind": 13, "range": {"start": {"line": 725, "character": 4}, "end": {"line": 725, "character": 24}}, "selectionRange": {"start": {"line": 725, "character": 4}, "end": {"line": 725, "character": 8}}, "detail": "tmap= pickle.load(f)", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 743, "character": 0}, "end": {"line": 743, "character": 68}}, "selectionRange": {"start": {"line": 743, "character": 0}, "end": {"line": 743, "character": 1}}, "detail": "f = np.load('/data/drug_feature/KU-55933/lung_KU-55933_feature.npy')", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 48, "result": [{"title": "Inline variable", "kind": "refactor.inline", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///root/capsule/code/process_merged.py", "version": 5}, "edits": [{"range": {"start": {"line": 29, "character": 0}, "end": {"line": 30, "character": 95}}, "newText": ""}, {"range": {"start": {"line": 145, "character": 16}, "end": {"line": 145, "character": 38}}, "newText": "pd.read_csv(\"/data/common_exp_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()"}, {"range": {"start": {"line": 166, "character": 26}, "end": {"line": 166, "character": 48}}, "newText": "pd.read_csv(\"/data/common_exp_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 49, "result": {"contents": {"kind": "markdown", "value": "```python\nkeyword =\n```"}, "range": null}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 50, "result": {"contents": {"kind": "markdown", "value": "```python\nkeyword =\n```"}, "range": null}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 51, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 52, "result": [{"name": "matplotlib", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 17}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 17}}, "detail": "module matplotlib", "children": []}, {"name": "os", "kind": 2, "range": {"start": {"line": 10, "character": 0}, "end": {"line": 10, "character": 9}}, "selectionRange": {"start": {"line": 10, "character": 7}, "end": {"line": 10, "character": 9}}, "detail": "module os", "children": []}, {"name": "pd", "kind": 2, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 11, "character": 19}}, "selectionRange": {"start": {"line": 11, "character": 17}, "end": {"line": 11, "character": 19}}, "detail": "module pd", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 12, "character": 0}, "end": {"line": 12, "character": 18}}, "selectionRange": {"start": {"line": 12, "character": 16}, "end": {"line": 12, "character": 18}}, "detail": "module np", "children": []}, {"name": "sys", "kind": 2, "range": {"start": {"line": 13, "character": 0}, "end": {"line": 13, "character": 10}}, "selectionRange": {"start": {"line": 13, "character": 7}, "end": {"line": 13, "character": 10}}, "detail": "module sys", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 14, "character": 0}, "end": {"line": 14, "character": 13}}, "selectionRange": {"start": {"line": 14, "character": 7}, "end": {"line": 14, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cdist", "kind": 12, "range": {"start": {"line": 15, "character": 0}, "end": {"line": 15, "character": 40}}, "selectionRange": {"start": {"line": 15, "character": 35}, "end": {"line": 15, "character": 40}}, "detail": "def cdist", "children": []}, {"name": "math", "kind": 2, "range": {"start": {"line": 16, "character": 0}, "end": {"line": 16, "character": 11}}, "selectionRange": {"start": {"line": 16, "character": 7}, "end": {"line": 16, "character": 11}}, "detail": "module math", "children": []}, {"name": "nx", "kind": 2, "range": {"start": {"line": 17, "character": 0}, "end": {"line": 17, "character": 21}}, "selectionRange": {"start": {"line": 17, "character": 19}, "end": {"line": 17, "character": 21}}, "detail": "module nx", "children": []}, {"name": "nxacc", "kind": 2, "range": {"start": {"line": 18, "character": 0}, "end": {"line": 18, "character": 56}}, "selectionRange": {"start": {"line": 18, "character": 51}, "end": {"line": 18, "character": 56}}, "detail": "module nxacc", "children": []}, {"name": "nxadag", "kind": 2, "range": {"start": {"line": 19, "character": 0}, "end": {"line": 19, "character": 40}}, "selectionRange": {"start": {"line": 19, "character": 34}, "end": {"line": 19, "character": 40}}, "detail": "module nxadag", "children": []}, {"name": "plt", "kind": 2, "range": {"start": {"line": 20, "character": 0}, "end": {"line": 20, "character": 31}}, "selectionRange": {"start": {"line": 20, "character": 28}, "end": {"line": 20, "character": 31}}, "detail": "module plt", "children": []}, {"name": "sns", "kind": 2, "range": {"start": {"line": 21, "character": 0}, "end": {"line": 21, "character": 21}}, "selectionRange": {"start": {"line": 21, "character": 18}, "end": {"line": 21, "character": 21}}, "detail": "module sns", "children": []}, {"name": "itertools", "kind": 2, "range": {"start": {"line": 22, "character": 0}, "end": {"line": 22, "character": 16}}, "selectionRange": {"start": {"line": 22, "character": 7}, "end": {"line": 22, "character": 16}}, "detail": "module itertools", "children": []}, {"name": "mygene", "kind": 2, "range": {"start": {"line": 23, "character": 0}, "end": {"line": 23, "character": 13}}, "selectionRange": {"start": {"line": 23, "character": 7}, "end": {"line": 23, "character": 13}}, "detail": "module mygene", "children": []}, {"name": "re", "kind": 2, "range": {"start": {"line": 24, "character": 0}, "end": {"line": 24, "character": 9}}, "selectionRange": {"start": {"line": 24, "character": 7}, "end": {"line": 24, "character": 9}}, "detail": "module re", "children": []}, {"name": "selected_exp_gene_list", "kind": 13, "range": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 95}}, "selectionRange": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 22}}, "detail": "selected_exp_gene_list = pd.read_csv(\"/data/common_exp_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "selected_mut_gene_list", "kind": 13, "range": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 95}}, "selectionRange": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 22}}, "detail": "selected_mut_gene_list = pd.read_csv(\"/data/common_mut_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "load_network", "kind": 12, "range": {"start": {"line": 37, "character": 0}, "end": {"line": 65, "character": 28}}, "selectionRange": {"start": {"line": 37, "character": 4}, "end": {"line": 37, "character": 16}}, "detail": "def load_network", "children": []}, {"name": "load_name_space", "kind": 12, "range": {"start": {"line": 67, "character": 0}, "end": {"line": 79, "character": 21}}, "selectionRange": {"start": {"line": 67, "character": 4}, "end": {"line": 67, "character": 19}}, "detail": "def load_name_space", "children": []}, {"name": "list2index", "kind": 12, "range": {"start": {"line": 81, "character": 0}, "end": {"line": 88, "character": 41}}, "selectionRange": {"start": {"line": 81, "character": 4}, "end": {"line": 81, "character": 14}}, "detail": "def list2index", "children": []}, {"name": "PDTC_data_file", "kind": 13, "range": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 30}}, "selectionRange": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 14}}, "detail": "PDTC_data_file = '/data/PTDC/'", "children": []}, {"name": "PDTC_exp_data_file", "kind": 13, "range": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 60}}, "selectionRange": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 18}}, "detail": "PDTC_exp_data_file = PDTC_data_file + 'ExpressionModels.tsv'", "children": []}, {"name": "PDTC_drug_cell_line_file", "kind": 13, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 72}}, "selectionRange": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 24}}, "detail": "PDTC_drug_cell_line_file = PDTC_data_file + 'DrugResponsesAUCModels.tsv'", "children": []}, {"name": "PDTC_mutation_data_file", "kind": 13, "range": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 59}}, "selectionRange": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 23}}, "detail": "PDTC_mutation_data_file = PDTC_data_file + 'SNVsModels.tsv'", "children": []}, {"name": "PDTC_drug_target_file", "kind": 13, "range": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 47}}, "selectionRange": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 21}}, "detail": "PDTC_drug_target_file ='/data/drug_targets.tsv'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 37}}, "selectionRange": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 46}}, "selectionRange": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "data_file", "kind": 13, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 25}}, "selectionRange": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 9}}, "detail": "data_file = '/data/GDSC/'", "children": []}, {"name": "new_network_file", "kind": 13, "range": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 27}}, "selectionRange": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 16}}, "detail": "new_network_file = '/data/'", "children": []}, {"name": "exp_data_file", "kind": 13, "range": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 61}}, "selectionRange": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 13}}, "detail": "exp_data_file = data_file + 'Cell_line_RMA_proc_basalExp.txt'", "children": []}, {"name": "drug_cell_line_file", "kind": 13, "range": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 64}}, "selectionRange": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 19}}, "detail": "drug_cell_line_file = data_file + 'v17_fitted_dose_response.csv'", "children": []}, {"name": "cell_line_detail_file", "kind": 13, "range": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 60}}, "selectionRange": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 21}}, "detail": "cell_line_detail_file = data_file + 'Cell_Lines_Details.csv'", "children": []}, {"name": "mutation_data_file", "kind": 13, "range": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 51}}, "selectionRange": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 18}}, "detail": "mutation_data_file = data_file + 'WES_variants.csv'", "children": []}, {"name": "drug_target_file", "kind": 13, "range": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 42}}, "selectionRange": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 16}}, "detail": "drug_target_file ='/data/drug_targets.tsv'", "children": []}, {"name": "feature_folder", "kind": 13, "range": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 27}}, "selectionRange": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 14}}, "detail": "feature_folder = 'feature/'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 37}}, "selectionRange": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 46}}, "selectionRange": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 58}}, "selectionRange": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 6}}, "detail": "exp_df = pd.read_csv(exp_data_file, sep='\\t', index_col=0)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 21}}, "selectionRange": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 6}}, "detail": "exp_df = exp_df.T[1:]", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 56}}, "selectionRange": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 6}}, "detail": "exp_df = exp_df.rename(columns={np.nan: 'NO_GENE_NAME'})", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 43}}, "selectionRange": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 6}}, "detail": "exp_df = exp_df.drop('NO_GENE_NAME',axis=1)", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 138, "character": 0}, "end": {"line": 140, "character": 26}}, "selectionRange": {"start": {"line": 138, "character": 4}, "end": {"line": 138, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 142, "character": 0}, "end": {"line": 142, "character": 44}}, "selectionRange": {"start": {"line": 142, "character": 7}, "end": {"line": 142, "character": 12}}, "detail": "exp_df.index = exp_df.index.map(stripNumber)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 40}}, "selectionRange": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 6}}, "detail": "exp_df = exp_df.groupby(level=0).first()", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 39}}, "selectionRange": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 6}}, "detail": "exp_df = exp_df[selected_exp_gene_list]", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 36}}, "selectionRange": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 48}}, "selectionRange": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 78}}, "selectionRange": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 11}}, "detail": "PDTC_exp_df = pd.read_csv(PDTC_exp_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 31}}, "selectionRange": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df.T[1:]", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 160, "character": 0}, "end": {"line": 162, "character": 26}}, "selectionRange": {"start": {"line": 160, "character": 4}, "end": {"line": 160, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 49}}, "selectionRange": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df[selected_exp_gene_list]", "children": []}, {"name": "PDTC_exp_gene_list", "kind": 13, "range": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 46}}, "selectionRange": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 18}}, "detail": "PDTC_exp_gene_list = list(PDTC_exp_df.columns)", "children": []}, {"name": "PDTC_exp_cell_line_list", "kind": 13, "range": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 58}}, "selectionRange": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 23}}, "detail": "PDTC_exp_cell_line_list = list(PDTC_exp_df.index.unique())", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 40}}, "selectionRange": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 6}}, "detail": "exp_df = pd.concat([exp_df,PDTC_exp_df])", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 36}}, "selectionRange": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 48}}, "selectionRange": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "maf", "kind": 13, "range": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 69}}, "selectionRange": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 3}}, "detail": "maf = pd.read_csv(mutation_data_file, sep=',', index_col=0).fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 75}}, "selectionRange": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 11}}, "detail": "mutation_df = maf.groupby(['COSMIC_ID', 'Gene']).size().unstack().fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 49}}, "selectionRange": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 11}}, "detail": "mutation_df = mutation_df[selected_mut_gene_list]", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 46}}, "selectionRange": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 58}}, "selectionRange": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "PDTC_maf", "kind": 13, "range": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 80}}, "selectionRange": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 8}}, "detail": "PDTC_maf = pd.read_csv(PDTC_mutation_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 61}}, "selectionRange": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_maf.replace(to_replace=\"NO\",value=0.0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 82}}, "selectionRange": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_mutation_df.replace(to_replace=\"chr*\",value=1.0,regex=True)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 47}}, "selectionRange": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df.transpose()", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 59}}, "selectionRange": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df[selected_mut_gene_list]", "children": []}, {"name": "PDTC_mutation_gene_list", "kind": 13, "range": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 56}}, "selectionRange": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 23}}, "detail": "PDTC_mutation_gene_list = list(PDTC_mutation_df.columns)", "children": []}, {"name": "PDTC_mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 68}}, "selectionRange": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 28}}, "detail": "PDTC_mutation_cell_line_list = list(PDTC_mutation_df.index.unique())", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 55}}, "selectionRange": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 11}}, "detail": "mutation_df = pd.concat([mutation_df,PDTC_mutation_df])", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 46}}, "selectionRange": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 58}}, "selectionRange": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 36}}, "selectionRange": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 11}}, "detail": "file_handle = open(drug_target_file)", "children": []}, {"name": "drug_target_map", "kind": 13, "range": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 20}}, "selectionRange": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 15}}, "detail": "drug_target_map = {}", "children": []}, {"name": "drug_target_list", "kind": 13, "range": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 21}}, "selectionRange": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 16}}, "detail": "drug_target_list = []", "children": []}, {"name": "line", "kind": 13, "range": {"start": {"line": 230, "character": 0}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 230, "character": 4}, "end": {"line": 230, "character": 8}}, "detail": "for line in file_handle: new_line = line.rstrip().split(\"\\t\") drug = new_line[0] target_list=new_line[1].split(',') if drug != \"Drug\": target_list_str = \"\" for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\" drug = drug.strip() drug_target_map[drug] = [] if ',' not in target_list_str: drug_target_map[drug].append(target_list_str.strip()) drug_target_list.append(target_list_str.strip()) else: target_list = target_list_str.split(',') for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "new_line", "kind": 13, "range": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 40}}, "selectionRange": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 12}}, "detail": "new_line = line.rstrip().split(\"\\t\")", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 22}}, "selectionRange": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 8}}, "detail": "drug = new_line[0]", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 38}}, "selectionRange": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 15}}, "detail": "target_list=new_line[1].split(',')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 28}}, "selectionRange": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 23}}, "detail": "target_list_str = \"\"", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 237, "character": 8}, "end": {"line": 242, "character": 0}}, "selectionRange": {"start": {"line": 237, "character": 12}, "end": {"line": 237, "character": 13}}, "detail": "for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 65}}, "selectionRange": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 71}}, "selectionRange": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 27}}, "selectionRange": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 12}}, "detail": "drug = drug.strip()", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 52}}, "selectionRange": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 23}}, "detail": "target_list = target_list_str.split(',')", "children": []}, {"name": "target", "kind": 13, "range": {"start": {"line": 250, "character": 12}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 250, "character": 16}, "end": {"line": 250, "character": 22}}, "detail": "for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "drug_target_map", "kind": 13, "range": {"start": {"line": 259, "character": 0}, "end": {"line": 259, "character": 20}}, "selectionRange": {"start": {"line": 259, "character": 0}, "end": {"line": 259, "character": 15}}, "detail": "drug_target_map = {}", "children": []}, {"name": "drug_target_list", "kind": 13, "range": {"start": {"line": 260, "character": 0}, "end": {"line": 260, "character": 21}}, "selectionRange": {"start": {"line": 260, "character": 0}, "end": {"line": 260, "character": 16}}, "detail": "drug_target_list = []", "children": []}, {"name": "line", "kind": 13, "range": {"start": {"line": 261, "character": 0}, "end": {"line": 284, "character": 0}}, "selectionRange": {"start": {"line": 261, "character": 4}, "end": {"line": 261, "character": 8}}, "detail": "for line in file_handle: new_line = line.rstrip().split(\"\\t\") drug = new_line[0] target_list=new_line[1].split(',') if drug != \"Drug\": target_list_str = \"\" for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\" drug = drug.strip() drug_target_map[drug] = [] if ',' not in target_list_str: drug_target_map[drug].append(target_list_str.strip()) drug_target_list.append(target_list_str.strip()) else: target_list = target_list_str.split(',') for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "new_line", "kind": 13, "range": {"start": {"line": 263, "character": 4}, "end": {"line": 263, "character": 40}}, "selectionRange": {"start": {"line": 263, "character": 4}, "end": {"line": 263, "character": 12}}, "detail": "new_line = line.rstrip().split(\"\\t\")", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 264, "character": 4}, "end": {"line": 264, "character": 22}}, "selectionRange": {"start": {"line": 264, "character": 4}, "end": {"line": 264, "character": 8}}, "detail": "drug = new_line[0]", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 265, "character": 4}, "end": {"line": 265, "character": 38}}, "selectionRange": {"start": {"line": 265, "character": 4}, "end": {"line": 265, "character": 15}}, "detail": "target_list=new_line[1].split(',')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 267, "character": 8}, "end": {"line": 267, "character": 28}}, "selectionRange": {"start": {"line": 267, "character": 8}, "end": {"line": 267, "character": 23}}, "detail": "target_list_str = \"\"", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 268, "character": 8}, "end": {"line": 273, "character": 0}}, "selectionRange": {"start": {"line": 268, "character": 12}, "end": {"line": 268, "character": 13}}, "detail": "for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 270, "character": 16}, "end": {"line": 270, "character": 65}}, "selectionRange": {"start": {"line": 270, "character": 16}, "end": {"line": 270, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 272, "character": 16}, "end": {"line": 272, "character": 71}}, "selectionRange": {"start": {"line": 272, "character": 16}, "end": {"line": 272, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 273, "character": 8}, "end": {"line": 273, "character": 27}}, "selectionRange": {"start": {"line": 273, "character": 8}, "end": {"line": 273, "character": 12}}, "detail": "drug = drug.strip()", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 280, "character": 12}, "end": {"line": 280, "character": 52}}, "selectionRange": {"start": {"line": 280, "character": 12}, "end": {"line": 280, "character": 23}}, "detail": "target_list = target_list_str.split(',')", "children": []}, {"name": "target", "kind": 13, "range": {"start": {"line": 281, "character": 12}, "end": {"line": 284, "character": 0}}, "selectionRange": {"start": {"line": 281, "character": 16}, "end": {"line": 281, "character": 22}}, "detail": "for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "drugs_legend", "kind": 13, "range": {"start": {"line": 287, "character": 0}, "end": {"line": 287, "character": 85}}, "selectionRange": {"start": {"line": 287, "character": 0}, "end": {"line": 287, "character": 12}}, "detail": "drugs_legend = pd.read_csv('/data/GDSC/Screened_Compounds.csv', sep=',', index_col=0)", "children": []}, {"name": "drug2id_mapping", "kind": 13, "range": {"start": {"line": 289, "character": 0}, "end": {"line": 289, "character": 20}}, "selectionRange": {"start": {"line": 289, "character": 0}, "end": {"line": 289, "character": 15}}, "detail": "drug2id_mapping = {}", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 291, "character": 0}, "end": {"line": 294, "character": 0}}, "selectionRange": {"start": {"line": 291, "character": 4}, "end": {"line": 291, "character": 9}}, "detail": "for index in list(drugs_legend.index) : drug_name = drugs_legend.loc[index,'Drug Name'] drug2id_mapping[ drug_name ] = index", "children": []}, {"name": "drug_name", "kind": 13, "range": {"start": {"line": 292, "character": 4}, "end": {"line": 292, "character": 51}}, "selectionRange": {"start": {"line": 292, "character": 4}, "end": {"line": 292, "character": 13}}, "detail": "drug_name = drugs_legend.loc[index,'Drug Name']", "children": []}, {"name": "valid_gene_list", "kind": 13, "range": {"start": {"line": 299, "character": 0}, "end": {"line": 299, "character": 92}}, "selectionRange": {"start": {"line": 299, "character": 0}, "end": {"line": 299, "character": 15}}, "detail": "valid_gene_list = list(set(drug_target_list) | set(exp_gene_list) | set(mutation_gene_list))", "children": []}, {"name": "network_list", "kind": 13, "range": {"start": {"line": 305, "character": 0}, "end": {"line": 305, "character": 82}}, "selectionRange": {"start": {"line": 305, "character": 0}, "end": {"line": 305, "character": 12}}, "detail": "network_list = [new_network_file+inbiomap_file, new_network_file+pathwaycomm_file]", "children": []}, {"name": "gene_neighbor_map", "kind": 13, "range": {"start": {"line": 306, "character": 0}, "end": {"line": 306, "character": 64}}, "selectionRange": {"start": {"line": 306, "character": 0}, "end": {"line": 306, "character": 17}}, "detail": "gene_neighbor_map = load_network(network_list, valid_gene_list)", "children": []}, {"name": "gene_name_df", "kind": 13, "range": {"start": {"line": 312, "character": 0}, "end": {"line": 312, "character": 89}}, "selectionRange": {"start": {"line": 312, "character": 0}, "end": {"line": 312, "character": 12}}, "detail": "gene_name_df = pd.read_table('/data/HUGO_protein-coding_gene.tsv',index_col=25, sep='\\t')", "children": []}, {"name": "gene_name_map", "kind": 13, "range": {"start": {"line": 318, "character": 0}, "end": {"line": 318, "character": 18}}, "selectionRange": {"start": {"line": 318, "character": 0}, "end": {"line": 318, "character": 13}}, "detail": "gene_name_map = {}", "children": []}, {"name": "uniprot_gene", "kind": 13, "range": {"start": {"line": 320, "character": 0}, "end": {"line": 329, "character": 0}}, "selectionRange": {"start": {"line": 320, "character": 4}, "end": {"line": 320, "character": 16}}, "detail": "for uniprot_gene in gene_name_df.index: if isinstance(uniprot_gene, type('aaa')) == False: continue if isinstance(gene_name_df.loc[uniprot_gene, 'symbol'], type('aaa')) == False: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol'][0] else: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 76}}, "selectionRange": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "uniprot_gene_set", "kind": 13, "range": {"start": {"line": 336, "character": 0}, "end": {"line": 336, "character": 24}}, "selectionRange": {"start": {"line": 336, "character": 0}, "end": {"line": 336, "character": 16}}, "detail": "uniprot_gene_set = set()", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 338, "character": 0}, "end": {"line": 347, "character": 0}}, "selectionRange": {"start": {"line": 338, "character": 4}, "end": {"line": 338, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 343, "character": 4}, "end": {"line": 343, "character": 74}}, "selectionRange": {"start": {"line": 343, "character": 4}, "end": {"line": 343, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 345, "character": 4}, "end": {"line": 347, "character": 0}}, "selectionRange": {"start": {"line": 345, "character": 8}, "end": {"line": 345, "character": 12}}, "detail": "for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "query_gene_set", "kind": 13, "range": {"start": {"line": 350, "character": 0}, "end": {"line": 350, "character": 19}}, "selectionRange": {"start": {"line": 350, "character": 0}, "end": {"line": 350, "character": 14}}, "detail": "query_gene_set = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 352, "character": 0}, "end": {"line": 355, "character": 0}}, "selectionRange": {"start": {"line": 352, "character": 4}, "end": {"line": 352, "character": 8}}, "detail": "for gene in uniprot_gene_set: if gene not in gene_name_map: query_gene_set.append(gene)", "children": []}, {"name": "query_gene_list", "kind": 13, "range": {"start": {"line": 358, "character": 0}, "end": {"line": 358, "character": 38}}, "selectionRange": {"start": {"line": 358, "character": 0}, "end": {"line": 358, "character": 15}}, "detail": "query_gene_list = list(query_gene_set)", "children": []}, {"name": "mg", "kind": 13, "range": {"start": {"line": 360, "character": 0}, "end": {"line": 360, "character": 24}}, "selectionRange": {"start": {"line": 360, "character": 0}, "end": {"line": 360, "character": 2}}, "detail": "mg = mygene.MyGeneInfo()", "children": []}, {"name": "out", "kind": 13, "range": {"start": {"line": 361, "character": 0}, "end": {"line": 361, "character": 87}}, "selectionRange": {"start": {"line": 361, "character": 0}, "end": {"line": 361, "character": 3}}, "detail": "out = mg.querymany(query_gene_list, scopes='uniprot', fields='symbol', species='human')", "children": []}, {"name": "not_found_gene_list", "kind": 13, "range": {"start": {"line": 363, "character": 0}, "end": {"line": 363, "character": 24}}, "selectionRange": {"start": {"line": 363, "character": 0}, "end": {"line": 363, "character": 19}}, "detail": "not_found_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 365, "character": 0}, "end": {"line": 370, "character": 0}}, "selectionRange": {"start": {"line": 365, "character": 4}, "end": {"line": 365, "character": 5}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 365, "character": 0}, "end": {"line": 370, "character": 0}}, "selectionRange": {"start": {"line": 365, "character": 7}, "end": {"line": 365, "character": 11}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 377, "character": 0}, "end": {"line": 377, "character": 76}}, "selectionRange": {"start": {"line": 377, "character": 0}, "end": {"line": 377, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 379, "character": 0}, "end": {"line": 401, "character": 0}}, "selectionRange": {"start": {"line": 379, "character": 4}, "end": {"line": 379, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') complex_symbol_list = [] for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] ) for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 384, "character": 4}, "end": {"line": 384, "character": 74}}, "selectionRange": {"start": {"line": 384, "character": 4}, "end": {"line": 384, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "complex_symbol_list", "kind": 13, "range": {"start": {"line": 386, "character": 4}, "end": {"line": 386, "character": 28}}, "selectionRange": {"start": {"line": 386, "character": 4}, "end": {"line": 386, "character": 23}}, "detail": "complex_symbol_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 388, "character": 4}, "end": {"line": 391, "character": 0}}, "selectionRange": {"start": {"line": 388, "character": 8}, "end": {"line": 388, "character": 12}}, "detail": "for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] )", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 392, "character": 4}, "end": {"line": 401, "character": 0}}, "selectionRange": {"start": {"line": 392, "character": 8}, "end": {"line": 392, "character": 13}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 392, "character": 4}, "end": {"line": 401, "character": 0}}, "selectionRange": {"start": {"line": 392, "character": 15}, "end": {"line": 392, "character": 20}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene_exp_neighbor_map", "kind": 13, "range": {"start": {"line": 406, "character": 0}, "end": {"line": 406, "character": 26}}, "selectionRange": {"start": {"line": 406, "character": 0}, "end": {"line": 406, "character": 21}}, "detail": "gene_exp_neighbor_map = {}", "children": []}, {"name": "exp_matrix", "kind": 13, "range": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 26}}, "selectionRange": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 10}}, "detail": "exp_matrix = exp_df.values", "children": []}, {"name": "P", "kind": 13, "range": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 79}}, "selectionRange": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 1}}, "detail": "P = 1 - cdist(np.transpose(exp_matrix), np.transpose(exp_matrix),'correlation')", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 411, "character": 0}, "end": {"line": 425, "character": 0}}, "selectionRange": {"start": {"line": 411, "character": 4}, "end": {"line": 411, "character": 5}}, "detail": "for i in range(len(exp_gene_list)): gene1 = exp_gene_list[i] gene_exp_neighbor_map[gene1] = set() for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2) if gene1 not in gene_exp_neighbor_map[gene1]: print (gene1, 'not in itself?', P[i,i])", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 413, "character": 4}, "end": {"line": 413, "character": 28}}, "selectionRange": {"start": {"line": 413, "character": 4}, "end": {"line": 413, "character": 9}}, "detail": "gene1 = exp_gene_list[i]", "children": []}, {"name": "j", "kind": 13, "range": {"start": {"line": 416, "character": 4}, "end": {"line": 422, "character": 0}}, "selectionRange": {"start": {"line": 416, "character": 8}, "end": {"line": 416, "character": 9}}, "detail": "for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 418, "character": 8}, "end": {"line": 418, "character": 32}}, "selectionRange": {"start": {"line": 418, "character": 8}, "end": {"line": 418, "character": 13}}, "detail": "gene2 = exp_gene_list[j]", "children": []}, {"name": "drug_feature_list", "kind": 13, "range": {"start": {"line": 433, "character": 0}, "end": {"line": 433, "character": 22}}, "selectionRange": {"start": {"line": 433, "character": 0}, "end": {"line": 433, "character": 17}}, "detail": "drug_feature_list = []", "children": []}, {"name": "drug_neighbor_map", "kind": 13, "range": {"start": {"line": 434, "character": 0}, "end": {"line": 434, "character": 22}}, "selectionRange": {"start": {"line": 434, "character": 0}, "end": {"line": 434, "character": 17}}, "detail": "drug_neighbor_map = {}", "children": []}, {"name": "selected_drug_list", "kind": 13, "range": {"start": {"line": 435, "character": 0}, "end": {"line": 435, "character": 23}}, "selectionRange": {"start": {"line": 435, "character": 0}, "end": {"line": 435, "character": 18}}, "detail": "selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 437, "character": 0}, "end": {"line": 454, "character": 0}}, "selectionRange": {"start": {"line": 437, "character": 4}, "end": {"line": 437, "character": 8}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 437, "character": 0}, "end": {"line": 454, "character": 0}}, "selectionRange": {"start": {"line": 437, "character": 10}, "end": {"line": 437, "character": 21}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 440, "character": 8}, "end": {"line": 450, "character": 0}}, "selectionRange": {"start": {"line": 440, "character": 12}, "end": {"line": 440, "character": 16}}, "detail": "for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene]", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 468, "character": 0}, "end": {"line": 468, "character": 52}}, "selectionRange": {"start": {"line": 468, "character": 0}, "end": {"line": 468, "character": 5}}, "detail": "drugs = pd.read_csv(drug_cell_line_file,index_col=2)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 93}}, "selectionRange": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 5}}, "detail": "drugs = drugs.drop([\"DATASET_VERSION\",\"IC50_RESULTS_ID\",\"MAX_CONC_MICROMOLAR\",\"RMSE\"],axis=1)", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 470, "character": 0}, "end": {"line": 470, "character": 49}}, "selectionRange": {"start": {"line": 470, "character": 0}, "end": {"line": 470, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 472, "character": 0}, "end": {"line": 472, "character": 28}}, "selectionRange": {"start": {"line": 472, "character": 0}, "end": {"line": 472, "character": 9}}, "detail": "drug_list = drugs[\"DRUG_ID\"]", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 473, "character": 0}, "end": {"line": 473, "character": 16}}, "selectionRange": {"start": {"line": 473, "character": 0}, "end": {"line": 473, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 483, "character": 0}, "end": {"line": 483, "character": 71}}, "selectionRange": {"start": {"line": 483, "character": 0}, "end": {"line": 483, "character": 10}}, "detail": "PDTC_drugs = pd.read_csv(PDTC_drug_cell_line_file,sep='\\t',index_col=0)", "children": []}, {"name": "PDTC_drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 59}}, "selectionRange": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 25}}, "detail": "PDTC_drugs_cell_line_list = list(PDTC_drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 486, "character": 0}, "end": {"line": 486, "character": 39}}, "selectionRange": {"start": {"line": 486, "character": 0}, "end": {"line": 486, "character": 9}}, "detail": "drug_list = PDTC_drugs[\"Drug\"].tolist()", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 487, "character": 0}, "end": {"line": 487, "character": 16}}, "selectionRange": {"start": {"line": 487, "character": 0}, "end": {"line": 487, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 488, "character": 0}, "end": {"line": 493, "character": 0}}, "selectionRange": {"start": {"line": 488, "character": 4}, "end": {"line": 488, "character": 5}}, "detail": "for i in drug_list: if i in drug2id_mapping.keys(): new_drug_id.append(drug2id_mapping[i]) else: new_drug_id.append(0)", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 495, "character": 0}, "end": {"line": 495, "character": 84}}, "selectionRange": {"start": {"line": 495, "character": 0}, "end": {"line": 495, "character": 10}}, "detail": "PDTC_drugs = PDTC_drugs.drop([\"Drug\",\"iC50\",\"D1_CONC\",\"D5_CONC\",\"perc.iC50\"],axis=1)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 503, "character": 0}, "end": {"line": 503, "character": 37}}, "selectionRange": {"start": {"line": 503, "character": 0}, "end": {"line": 503, "character": 5}}, "detail": "drugs = pd.concat([drugs,PDTC_drugs])", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 510, "character": 0}, "end": {"line": 510, "character": 49}}, "selectionRange": {"start": {"line": 510, "character": 0}, "end": {"line": 510, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "cell_line_list", "kind": 13, "range": {"start": {"line": 516, "character": 0}, "end": {"line": 516, "character": 102}}, "selectionRange": {"start": {"line": 516, "character": 0}, "end": {"line": 516, "character": 14}}, "detail": "cell_line_list = list(set(drugs_cell_line_list)&set(exp_cell_line_list)&set(mutation_cell_line_list) )", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 523, "character": 0}, "end": {"line": 523, "character": 66}}, "selectionRange": {"start": {"line": 523, "character": 0}, "end": {"line": 523, "character": 16}}, "detail": "cell_line_legend = pd.read_csv(cell_line_detail_file, index_col=1)", "children": []}, {"name": "PDTC_cell_line", "kind": 13, "range": {"start": {"line": 524, "character": 0}, "end": {"line": 524, "character": 206}}, "selectionRange": {"start": {"line": 524, "character": 0}, "end": {"line": 524, "character": 14}}, "detail": "PDTC_cell_line = pd.DataFrame({'Line': [\"BRCA\"]*len(PDTC_exp_cell_line_list), 'Site':[\"PDTC\"]*len(PDTC_exp_cell_line_list),\"Histology\":[\"breast\"]*len(PDTC_exp_cell_line_list)},index=PDTC_exp_cell_line_list)", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 525, "character": 0}, "end": {"line": 525, "character": 63}}, "selectionRange": {"start": {"line": 525, "character": 0}, "end": {"line": 525, "character": 16}}, "detail": "cell_line_legend = pd.concat([cell_line_legend,PDTC_cell_line])", "children": []}, {"name": "tissue_map", "kind": 13, "range": {"start": {"line": 528, "character": 0}, "end": {"line": 528, "character": 15}}, "selectionRange": {"start": {"line": 528, "character": 0}, "end": {"line": 528, "character": 10}}, "detail": "tissue_map = {}", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 530, "character": 0}, "end": {"line": 538, "character": 0}}, "selectionRange": {"start": {"line": 530, "character": 4}, "end": {"line": 530, "character": 13}}, "detail": "for cell_line in cell_line_list: tissue = cell_line_legend.loc[cell_line,'Site'] if tissue not in tissue_map: tissue_map[tissue] = [] tissue_map[tissue].append(cell_line)", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 532, "character": 4}, "end": {"line": 532, "character": 51}}, "selectionRange": {"start": {"line": 532, "character": 4}, "end": {"line": 532, "character": 10}}, "detail": "tissue = cell_line_legend.loc[cell_line,'Site']", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 539, "character": 0}, "end": {"line": 539, "character": 23}}, "selectionRange": {"start": {"line": 539, "character": 0}, "end": {"line": 539, "character": 19}}, "detail": "large_tissue_number = 0", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 540, "character": 0}, "end": {"line": 546, "character": 0}}, "selectionRange": {"start": {"line": 540, "character": 4}, "end": {"line": 540, "character": 10}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 540, "character": 0}, "end": {"line": 546, "character": 0}}, "selectionRange": {"start": {"line": 540, "character": 12}, "end": {"line": 540, "character": 21}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 543, "character": 8}, "end": {"line": 543, "character": 32}}, "selectionRange": {"start": {"line": 543, "character": 8}, "end": {"line": 543, "character": 27}}, "detail": "large_tissue_number += 1", "children": []}, {"name": "new_exp_gene_list", "kind": 13, "range": {"start": {"line": 566, "character": 0}, "end": {"line": 566, "character": 22}}, "selectionRange": {"start": {"line": 566, "character": 0}, "end": {"line": 566, "character": 17}}, "detail": "new_exp_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 567, "character": 0}, "end": {"line": 570, "character": 0}}, "selectionRange": {"start": {"line": 567, "character": 4}, "end": {"line": 567, "character": 5}}, "detail": "for i in exp_gene_list: if i in valid_gene_list: new_exp_gene_list.append(i)", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 41}}, "selectionRange": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 38}}, "selectionRange": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 72}}, "selectionRange": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 43}}, "selectionRange": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 68}}, "selectionRange": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 58}}, "selectionRange": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 68}}, "selectionRange": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "new_data_file", "kind": 13, "range": {"start": {"line": 597, "character": 0}, "end": {"line": 597, "character": 18}}, "selectionRange": {"start": {"line": 597, "character": 0}, "end": {"line": 597, "character": 13}}, "detail": "new_data_file = ''", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 601, "character": 0}, "end": {"line": 601, "character": 41}}, "selectionRange": {"start": {"line": 601, "character": 0}, "end": {"line": 601, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 602, "character": 0}, "end": {"line": 602, "character": 38}}, "selectionRange": {"start": {"line": 602, "character": 0}, "end": {"line": 602, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 603, "character": 0}, "end": {"line": 603, "character": 72}}, "selectionRange": {"start": {"line": 603, "character": 0}, "end": {"line": 603, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 605, "character": 0}, "end": {"line": 605, "character": 43}}, "selectionRange": {"start": {"line": 605, "character": 0}, "end": {"line": 605, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 606, "character": 0}, "end": {"line": 606, "character": 68}}, "selectionRange": {"start": {"line": 606, "character": 0}, "end": {"line": 606, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 613, "character": 0}, "end": {"line": 613, "character": 58}}, "selectionRange": {"start": {"line": 613, "character": 0}, "end": {"line": 613, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 614, "character": 0}, "end": {"line": 614, "character": 68}}, "selectionRange": {"start": {"line": 614, "character": 0}, "end": {"line": 614, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "rename_selected_drug_list", "kind": 13, "range": {"start": {"line": 618, "character": 0}, "end": {"line": 618, "character": 30}}, "selectionRange": {"start": {"line": 618, "character": 0}, "end": {"line": 618, "character": 25}}, "detail": "rename_selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 620, "character": 0}, "end": {"line": 690, "character": 0}}, "selectionRange": {"start": {"line": 620, "character": 4}, "end": {"line": 620, "character": 8}}, "detail": "for drug in selected_drug_list: print(drug) if drug not in drug2id_mapping: print('drug name wrong', drug) else: cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]] feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) ) feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) ) print(len(feature_exp_gene_list) + len(feature_mut_gene_list)) if len(feature_exp_gene_list) + len(feature_mut_gene_list) == 0: continue feature_description = [] drug_tissue_map = {} drug = drug.replace(' ','_') rename_selected_drug_list.append(drug) if drug == 'Nutlin-3a_(-)': drug = 'Nutlin-3a' drug_folder = '/data/merged/drug_feature/' + drug + '/' if not os.path.exists(drug_folder): os.makedirs(drug_folder) for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description)) file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\") pickle.dump(drug_tissue_map,file_handle) file_handle.close()", "children": []}, {"name": "cell_line_drug_matrix", "kind": 13, "range": {"start": {"line": 628, "character": 8}, "end": {"line": 628, "character": 84}}, "selectionRange": {"start": {"line": 628, "character": 8}, "end": {"line": 628, "character": 29}}, "detail": "cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]]", "children": []}, {"name": "feature_exp_gene_list", "kind": 13, "range": {"start": {"line": 633, "character": 8}, "end": {"line": 633, "character": 98}}, "selectionRange": {"start": {"line": 633, "character": 8}, "end": {"line": 633, "character": 29}}, "detail": "feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) )", "children": []}, {"name": "feature_mut_gene_list", "kind": 13, "range": {"start": {"line": 634, "character": 8}, "end": {"line": 634, "character": 98}}, "selectionRange": {"start": {"line": 634, "character": 8}, "end": {"line": 634, "character": 29}}, "detail": "feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) )", "children": []}, {"name": "feature_description", "kind": 13, "range": {"start": {"line": 638, "character": 8}, "end": {"line": 638, "character": 32}}, "selectionRange": {"start": {"line": 638, "character": 8}, "end": {"line": 638, "character": 27}}, "detail": "feature_description = []", "children": []}, {"name": "drug_tissue_map", "kind": 13, "range": {"start": {"line": 640, "character": 8}, "end": {"line": 640, "character": 28}}, "selectionRange": {"start": {"line": 640, "character": 8}, "end": {"line": 640, "character": 23}}, "detail": "drug_tissue_map = {}", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 642, "character": 8}, "end": {"line": 642, "character": 36}}, "selectionRange": {"start": {"line": 642, "character": 8}, "end": {"line": 642, "character": 12}}, "detail": "drug = drug.replace(' ','_')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 648, "character": 12}, "end": {"line": 648, "character": 30}}, "selectionRange": {"start": {"line": 648, "character": 12}, "end": {"line": 648, "character": 16}}, "detail": "drug = 'Nutlin-3a'", "children": []}, {"name": "drug_folder", "kind": 13, "range": {"start": {"line": 650, "character": 8}, "end": {"line": 650, "character": 63}}, "selectionRange": {"start": {"line": 650, "character": 8}, "end": {"line": 650, "character": 19}}, "detail": "drug_folder = '/data/merged/drug_feature/' + drug + '/'", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 656, "character": 8}, "end": {"line": 686, "character": 0}}, "selectionRange": {"start": {"line": 656, "character": 12}, "end": {"line": 656, "character": 18}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "tissue_cell_line_list", "kind": 13, "range": {"start": {"line": 656, "character": 8}, "end": {"line": 686, "character": 0}}, "selectionRange": {"start": {"line": 656, "character": 20}, "end": {"line": 656, "character": 41}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 659, "character": 12}, "end": {"line": 659, "character": 103}}, "selectionRange": {"start": {"line": 659, "character": 12}, "end": {"line": 659, "character": 35}}, "detail": "drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list )", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 660, "character": 12}, "end": {"line": 660, "character": 67}}, "selectionRange": {"start": {"line": 660, "character": 12}, "end": {"line": 660, "character": 35}}, "detail": "drug_specific_cell_line = list(drug_specific_cell_line)", "children": []}, {"name": "feature_list", "kind": 13, "range": {"start": {"line": 663, "character": 12}, "end": {"line": 663, "character": 29}}, "selectionRange": {"start": {"line": 663, "character": 12}, "end": {"line": 663, "character": 24}}, "detail": "feature_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 667, "character": 16}, "end": {"line": 669, "character": 0}}, "selectionRange": {"start": {"line": 667, "character": 20}, "end": {"line": 667, "character": 24}}, "detail": "for gene in feature_exp_gene_list: feature_description.append(gene+'_expression')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 672, "character": 16}, "end": {"line": 674, "character": 0}}, "selectionRange": {"start": {"line": 672, "character": 20}, "end": {"line": 672, "character": 24}}, "detail": "for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation')", "children": []}, {"name": "feature", "kind": 13, "range": {"start": {"line": 675, "character": 12}, "end": {"line": 675, "character": 58}}, "selectionRange": {"start": {"line": 675, "character": 12}, "end": {"line": 675, "character": 19}}, "detail": "feature = np.concatenate(feature_list, axis=1)", "children": []}, {"name": "label", "kind": 13, "range": {"start": {"line": 677, "character": 12}, "end": {"line": 677, "character": 88}}, "selectionRange": {"start": {"line": 677, "character": 12}, "end": {"line": 677, "character": 17}}, "detail": "label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 687, "character": 8}, "end": {"line": 687, "character": 84}}, "selectionRange": {"start": {"line": 687, "character": 8}, "end": {"line": 687, "character": 19}}, "detail": "file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\")", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 691, "character": 0}, "end": {"line": 691, "character": 52}}, "selectionRange": {"start": {"line": 691, "character": 0}, "end": {"line": 691, "character": 11}}, "detail": "file_handle = open('rename_selected_drug_list', 'w')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 692, "character": 0}, "end": {"line": 694, "character": 0}}, "selectionRange": {"start": {"line": 692, "character": 4}, "end": {"line": 692, "character": 8}}, "detail": "for drug in rename_selected_drug_list: file_handle.writelines(drug+ '\\n')", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 712, "character": 0}, "end": {"line": 712, "character": 13}}, "selectionRange": {"start": {"line": 712, "character": 7}, "end": {"line": 712, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cell_line_loc", "kind": 13, "range": {"start": {"line": 718, "character": 0}, "end": {"line": 718, "character": 84}}, "selectionRange": {"start": {"line": 718, "character": 0}, "end": {"line": 718, "character": 13}}, "detail": "cell_line_loc = '/cellar/users/samsonfong/Projects/tcrp-v2/from-ma/cell_line_lists/'", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 724, "character": 0}, "end": {"line": 726, "character": 0}}, "selectionRange": {"start": {"line": 724, "character": 53}, "end": {"line": 724, "character": 54}}, "detail": "with open('/data/drug_feature/KU-55933/KU', 'rb') as f: tmap= pickle.load(f)", "children": []}, {"name": "tmap", "kind": 13, "range": {"start": {"line": 725, "character": 4}, "end": {"line": 725, "character": 24}}, "selectionRange": {"start": {"line": 725, "character": 4}, "end": {"line": 725, "character": 8}}, "detail": "tmap= pickle.load(f)", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 743, "character": 0}, "end": {"line": 743, "character": 68}}, "selectionRange": {"start": {"line": 743, "character": 0}, "end": {"line": 743, "character": 1}}, "detail": "f = np.load('/data/drug_feature/KU-55933/lung_KU-55933_feature.npy')", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 53, "result": [{"title": "Inline variable", "kind": "refactor.inline", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///root/capsule/code/process_merged.py", "version": 5}, "edits": [{"range": {"start": {"line": 29, "character": 0}, "end": {"line": 30, "character": 95}}, "newText": ""}, {"range": {"start": {"line": 145, "character": 16}, "end": {"line": 145, "character": 38}}, "newText": "pd.read_csv(\"/data/common_exp_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()"}, {"range": {"start": {"line": 166, "character": 26}, "end": {"line": 166, "character": 48}}, "newText": "pd.read_csv(\"/data/common_exp_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 54, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 55, "result": [{"name": "matplotlib", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 17}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 17}}, "detail": "module matplotlib", "children": []}, {"name": "os", "kind": 2, "range": {"start": {"line": 10, "character": 0}, "end": {"line": 10, "character": 9}}, "selectionRange": {"start": {"line": 10, "character": 7}, "end": {"line": 10, "character": 9}}, "detail": "module os", "children": []}, {"name": "pd", "kind": 2, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 11, "character": 19}}, "selectionRange": {"start": {"line": 11, "character": 17}, "end": {"line": 11, "character": 19}}, "detail": "module pd", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 12, "character": 0}, "end": {"line": 12, "character": 18}}, "selectionRange": {"start": {"line": 12, "character": 16}, "end": {"line": 12, "character": 18}}, "detail": "module np", "children": []}, {"name": "sys", "kind": 2, "range": {"start": {"line": 13, "character": 0}, "end": {"line": 13, "character": 10}}, "selectionRange": {"start": {"line": 13, "character": 7}, "end": {"line": 13, "character": 10}}, "detail": "module sys", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 14, "character": 0}, "end": {"line": 14, "character": 13}}, "selectionRange": {"start": {"line": 14, "character": 7}, "end": {"line": 14, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cdist", "kind": 12, "range": {"start": {"line": 15, "character": 0}, "end": {"line": 15, "character": 40}}, "selectionRange": {"start": {"line": 15, "character": 35}, "end": {"line": 15, "character": 40}}, "detail": "def cdist", "children": []}, {"name": "math", "kind": 2, "range": {"start": {"line": 16, "character": 0}, "end": {"line": 16, "character": 11}}, "selectionRange": {"start": {"line": 16, "character": 7}, "end": {"line": 16, "character": 11}}, "detail": "module math", "children": []}, {"name": "nx", "kind": 2, "range": {"start": {"line": 17, "character": 0}, "end": {"line": 17, "character": 21}}, "selectionRange": {"start": {"line": 17, "character": 19}, "end": {"line": 17, "character": 21}}, "detail": "module nx", "children": []}, {"name": "nxacc", "kind": 2, "range": {"start": {"line": 18, "character": 0}, "end": {"line": 18, "character": 56}}, "selectionRange": {"start": {"line": 18, "character": 51}, "end": {"line": 18, "character": 56}}, "detail": "module nxacc", "children": []}, {"name": "nxadag", "kind": 2, "range": {"start": {"line": 19, "character": 0}, "end": {"line": 19, "character": 40}}, "selectionRange": {"start": {"line": 19, "character": 34}, "end": {"line": 19, "character": 40}}, "detail": "module nxadag", "children": []}, {"name": "plt", "kind": 2, "range": {"start": {"line": 20, "character": 0}, "end": {"line": 20, "character": 31}}, "selectionRange": {"start": {"line": 20, "character": 28}, "end": {"line": 20, "character": 31}}, "detail": "module plt", "children": []}, {"name": "sns", "kind": 2, "range": {"start": {"line": 21, "character": 0}, "end": {"line": 21, "character": 21}}, "selectionRange": {"start": {"line": 21, "character": 18}, "end": {"line": 21, "character": 21}}, "detail": "module sns", "children": []}, {"name": "itertools", "kind": 2, "range": {"start": {"line": 22, "character": 0}, "end": {"line": 22, "character": 16}}, "selectionRange": {"start": {"line": 22, "character": 7}, "end": {"line": 22, "character": 16}}, "detail": "module itertools", "children": []}, {"name": "mygene", "kind": 2, "range": {"start": {"line": 23, "character": 0}, "end": {"line": 23, "character": 13}}, "selectionRange": {"start": {"line": 23, "character": 7}, "end": {"line": 23, "character": 13}}, "detail": "module mygene", "children": []}, {"name": "re", "kind": 2, "range": {"start": {"line": 24, "character": 0}, "end": {"line": 24, "character": 9}}, "selectionRange": {"start": {"line": 24, "character": 7}, "end": {"line": 24, "character": 9}}, "detail": "module re", "children": []}, {"name": "selected_exp_gene_list", "kind": 13, "range": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 95}}, "selectionRange": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 22}}, "detail": "selected_exp_gene_list = pd.read_csv(\"/data/common_exp_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "selected_mut_gene_list", "kind": 13, "range": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 95}}, "selectionRange": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 22}}, "detail": "selected_mut_gene_list = pd.read_csv(\"/data/common_mut_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "load_network", "kind": 12, "range": {"start": {"line": 37, "character": 0}, "end": {"line": 65, "character": 28}}, "selectionRange": {"start": {"line": 37, "character": 4}, "end": {"line": 37, "character": 16}}, "detail": "def load_network", "children": []}, {"name": "load_name_space", "kind": 12, "range": {"start": {"line": 67, "character": 0}, "end": {"line": 79, "character": 21}}, "selectionRange": {"start": {"line": 67, "character": 4}, "end": {"line": 67, "character": 19}}, "detail": "def load_name_space", "children": []}, {"name": "list2index", "kind": 12, "range": {"start": {"line": 81, "character": 0}, "end": {"line": 88, "character": 41}}, "selectionRange": {"start": {"line": 81, "character": 4}, "end": {"line": 81, "character": 14}}, "detail": "def list2index", "children": []}, {"name": "PDTC_data_file", "kind": 13, "range": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 30}}, "selectionRange": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 14}}, "detail": "PDTC_data_file = '/data/PTDC/'", "children": []}, {"name": "PDTC_exp_data_file", "kind": 13, "range": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 60}}, "selectionRange": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 18}}, "detail": "PDTC_exp_data_file = PDTC_data_file + 'ExpressionModels.tsv'", "children": []}, {"name": "PDTC_drug_cell_line_file", "kind": 13, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 72}}, "selectionRange": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 24}}, "detail": "PDTC_drug_cell_line_file = PDTC_data_file + 'DrugResponsesAUCModels.tsv'", "children": []}, {"name": "PDTC_mutation_data_file", "kind": 13, "range": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 59}}, "selectionRange": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 23}}, "detail": "PDTC_mutation_data_file = PDTC_data_file + 'SNVsModels.tsv'", "children": []}, {"name": "PDTC_drug_target_file", "kind": 13, "range": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 47}}, "selectionRange": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 21}}, "detail": "PDTC_drug_target_file ='/data/drug_targets.tsv'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 37}}, "selectionRange": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 46}}, "selectionRange": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "data_file", "kind": 13, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 25}}, "selectionRange": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 9}}, "detail": "data_file = '/data/GDSC/'", "children": []}, {"name": "new_network_file", "kind": 13, "range": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 27}}, "selectionRange": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 16}}, "detail": "new_network_file = '/data/'", "children": []}, {"name": "exp_data_file", "kind": 13, "range": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 61}}, "selectionRange": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 13}}, "detail": "exp_data_file = data_file + 'Cell_line_RMA_proc_basalExp.txt'", "children": []}, {"name": "drug_cell_line_file", "kind": 13, "range": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 64}}, "selectionRange": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 19}}, "detail": "drug_cell_line_file = data_file + 'v17_fitted_dose_response.csv'", "children": []}, {"name": "cell_line_detail_file", "kind": 13, "range": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 60}}, "selectionRange": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 21}}, "detail": "cell_line_detail_file = data_file + 'Cell_Lines_Details.csv'", "children": []}, {"name": "mutation_data_file", "kind": 13, "range": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 51}}, "selectionRange": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 18}}, "detail": "mutation_data_file = data_file + 'WES_variants.csv'", "children": []}, {"name": "drug_target_file", "kind": 13, "range": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 42}}, "selectionRange": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 16}}, "detail": "drug_target_file ='/data/drug_targets.tsv'", "children": []}, {"name": "feature_folder", "kind": 13, "range": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 27}}, "selectionRange": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 14}}, "detail": "feature_folder = 'feature/'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 37}}, "selectionRange": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 46}}, "selectionRange": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 58}}, "selectionRange": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 6}}, "detail": "exp_df = pd.read_csv(exp_data_file, sep='\\t', index_col=0)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 21}}, "selectionRange": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 6}}, "detail": "exp_df = exp_df.T[1:]", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 56}}, "selectionRange": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 6}}, "detail": "exp_df = exp_df.rename(columns={np.nan: 'NO_GENE_NAME'})", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 43}}, "selectionRange": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 6}}, "detail": "exp_df = exp_df.drop('NO_GENE_NAME',axis=1)", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 138, "character": 0}, "end": {"line": 140, "character": 26}}, "selectionRange": {"start": {"line": 138, "character": 4}, "end": {"line": 138, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 142, "character": 0}, "end": {"line": 142, "character": 44}}, "selectionRange": {"start": {"line": 142, "character": 7}, "end": {"line": 142, "character": 12}}, "detail": "exp_df.index = exp_df.index.map(stripNumber)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 40}}, "selectionRange": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 6}}, "detail": "exp_df = exp_df.groupby(level=0).first()", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 39}}, "selectionRange": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 6}}, "detail": "exp_df = exp_df[selected_exp_gene_list]", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 36}}, "selectionRange": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 48}}, "selectionRange": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 78}}, "selectionRange": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 11}}, "detail": "PDTC_exp_df = pd.read_csv(PDTC_exp_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 31}}, "selectionRange": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df.T[1:]", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 160, "character": 0}, "end": {"line": 162, "character": 26}}, "selectionRange": {"start": {"line": 160, "character": 4}, "end": {"line": 160, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 49}}, "selectionRange": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df[selected_exp_gene_list]", "children": []}, {"name": "PDTC_exp_gene_list", "kind": 13, "range": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 46}}, "selectionRange": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 18}}, "detail": "PDTC_exp_gene_list = list(PDTC_exp_df.columns)", "children": []}, {"name": "PDTC_exp_cell_line_list", "kind": 13, "range": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 58}}, "selectionRange": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 23}}, "detail": "PDTC_exp_cell_line_list = list(PDTC_exp_df.index.unique())", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 40}}, "selectionRange": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 6}}, "detail": "exp_df = pd.concat([exp_df,PDTC_exp_df])", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 36}}, "selectionRange": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 48}}, "selectionRange": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "maf", "kind": 13, "range": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 69}}, "selectionRange": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 3}}, "detail": "maf = pd.read_csv(mutation_data_file, sep=',', index_col=0).fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 75}}, "selectionRange": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 11}}, "detail": "mutation_df = maf.groupby(['COSMIC_ID', 'Gene']).size().unstack().fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 49}}, "selectionRange": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 11}}, "detail": "mutation_df = mutation_df[selected_mut_gene_list]", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 46}}, "selectionRange": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 58}}, "selectionRange": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "PDTC_maf", "kind": 13, "range": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 80}}, "selectionRange": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 8}}, "detail": "PDTC_maf = pd.read_csv(PDTC_mutation_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 61}}, "selectionRange": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_maf.replace(to_replace=\"NO\",value=0.0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 82}}, "selectionRange": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_mutation_df.replace(to_replace=\"chr*\",value=1.0,regex=True)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 47}}, "selectionRange": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df.transpose()", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 59}}, "selectionRange": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df[selected_mut_gene_list]", "children": []}, {"name": "PDTC_mutation_gene_list", "kind": 13, "range": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 56}}, "selectionRange": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 23}}, "detail": "PDTC_mutation_gene_list = list(PDTC_mutation_df.columns)", "children": []}, {"name": "PDTC_mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 68}}, "selectionRange": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 28}}, "detail": "PDTC_mutation_cell_line_list = list(PDTC_mutation_df.index.unique())", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 55}}, "selectionRange": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 11}}, "detail": "mutation_df = pd.concat([mutation_df,PDTC_mutation_df])", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 46}}, "selectionRange": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 58}}, "selectionRange": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 36}}, "selectionRange": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 11}}, "detail": "file_handle = open(drug_target_file)", "children": []}, {"name": "drug_target_map", "kind": 13, "range": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 20}}, "selectionRange": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 15}}, "detail": "drug_target_map = {}", "children": []}, {"name": "drug_target_list", "kind": 13, "range": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 21}}, "selectionRange": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 16}}, "detail": "drug_target_list = []", "children": []}, {"name": "line", "kind": 13, "range": {"start": {"line": 230, "character": 0}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 230, "character": 4}, "end": {"line": 230, "character": 8}}, "detail": "for line in file_handle: new_line = line.rstrip().split(\"\\t\") drug = new_line[0] target_list=new_line[1].split(',') if drug != \"Drug\": target_list_str = \"\" for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\" drug = drug.strip() drug_target_map[drug] = [] if ',' not in target_list_str: drug_target_map[drug].append(target_list_str.strip()) drug_target_list.append(target_list_str.strip()) else: target_list = target_list_str.split(',') for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "new_line", "kind": 13, "range": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 40}}, "selectionRange": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 12}}, "detail": "new_line = line.rstrip().split(\"\\t\")", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 22}}, "selectionRange": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 8}}, "detail": "drug = new_line[0]", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 38}}, "selectionRange": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 15}}, "detail": "target_list=new_line[1].split(',')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 28}}, "selectionRange": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 23}}, "detail": "target_list_str = \"\"", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 237, "character": 8}, "end": {"line": 242, "character": 0}}, "selectionRange": {"start": {"line": 237, "character": 12}, "end": {"line": 237, "character": 13}}, "detail": "for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 65}}, "selectionRange": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 71}}, "selectionRange": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 27}}, "selectionRange": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 12}}, "detail": "drug = drug.strip()", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 52}}, "selectionRange": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 23}}, "detail": "target_list = target_list_str.split(',')", "children": []}, {"name": "target", "kind": 13, "range": {"start": {"line": 250, "character": 12}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 250, "character": 16}, "end": {"line": 250, "character": 22}}, "detail": "for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "drug_target_map", "kind": 13, "range": {"start": {"line": 259, "character": 0}, "end": {"line": 259, "character": 20}}, "selectionRange": {"start": {"line": 259, "character": 0}, "end": {"line": 259, "character": 15}}, "detail": "drug_target_map = {}", "children": []}, {"name": "drug_target_list", "kind": 13, "range": {"start": {"line": 260, "character": 0}, "end": {"line": 260, "character": 21}}, "selectionRange": {"start": {"line": 260, "character": 0}, "end": {"line": 260, "character": 16}}, "detail": "drug_target_list = []", "children": []}, {"name": "line", "kind": 13, "range": {"start": {"line": 261, "character": 0}, "end": {"line": 284, "character": 0}}, "selectionRange": {"start": {"line": 261, "character": 4}, "end": {"line": 261, "character": 8}}, "detail": "for line in file_handle: new_line = line.rstrip().split(\"\\t\") drug = new_line[0] target_list=new_line[1].split(',') if drug != \"Drug\": target_list_str = \"\" for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\" drug = drug.strip() drug_target_map[drug] = [] if ',' not in target_list_str: drug_target_map[drug].append(target_list_str.strip()) drug_target_list.append(target_list_str.strip()) else: target_list = target_list_str.split(',') for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "new_line", "kind": 13, "range": {"start": {"line": 263, "character": 4}, "end": {"line": 263, "character": 40}}, "selectionRange": {"start": {"line": 263, "character": 4}, "end": {"line": 263, "character": 12}}, "detail": "new_line = line.rstrip().split(\"\\t\")", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 264, "character": 4}, "end": {"line": 264, "character": 22}}, "selectionRange": {"start": {"line": 264, "character": 4}, "end": {"line": 264, "character": 8}}, "detail": "drug = new_line[0]", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 265, "character": 4}, "end": {"line": 265, "character": 38}}, "selectionRange": {"start": {"line": 265, "character": 4}, "end": {"line": 265, "character": 15}}, "detail": "target_list=new_line[1].split(',')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 267, "character": 8}, "end": {"line": 267, "character": 28}}, "selectionRange": {"start": {"line": 267, "character": 8}, "end": {"line": 267, "character": 23}}, "detail": "target_list_str = \"\"", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 268, "character": 8}, "end": {"line": 273, "character": 0}}, "selectionRange": {"start": {"line": 268, "character": 12}, "end": {"line": 268, "character": 13}}, "detail": "for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 270, "character": 16}, "end": {"line": 270, "character": 65}}, "selectionRange": {"start": {"line": 270, "character": 16}, "end": {"line": 270, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 272, "character": 16}, "end": {"line": 272, "character": 71}}, "selectionRange": {"start": {"line": 272, "character": 16}, "end": {"line": 272, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 273, "character": 8}, "end": {"line": 273, "character": 27}}, "selectionRange": {"start": {"line": 273, "character": 8}, "end": {"line": 273, "character": 12}}, "detail": "drug = drug.strip()", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 280, "character": 12}, "end": {"line": 280, "character": 52}}, "selectionRange": {"start": {"line": 280, "character": 12}, "end": {"line": 280, "character": 23}}, "detail": "target_list = target_list_str.split(',')", "children": []}, {"name": "target", "kind": 13, "range": {"start": {"line": 281, "character": 12}, "end": {"line": 284, "character": 0}}, "selectionRange": {"start": {"line": 281, "character": 16}, "end": {"line": 281, "character": 22}}, "detail": "for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "drugs_legend", "kind": 13, "range": {"start": {"line": 287, "character": 0}, "end": {"line": 287, "character": 85}}, "selectionRange": {"start": {"line": 287, "character": 0}, "end": {"line": 287, "character": 12}}, "detail": "drugs_legend = pd.read_csv('/data/GDSC/Screened_Compounds.csv', sep=',', index_col=0)", "children": []}, {"name": "drug2id_mapping", "kind": 13, "range": {"start": {"line": 289, "character": 0}, "end": {"line": 289, "character": 20}}, "selectionRange": {"start": {"line": 289, "character": 0}, "end": {"line": 289, "character": 15}}, "detail": "drug2id_mapping = {}", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 291, "character": 0}, "end": {"line": 294, "character": 0}}, "selectionRange": {"start": {"line": 291, "character": 4}, "end": {"line": 291, "character": 9}}, "detail": "for index in list(drugs_legend.index) : drug_name = drugs_legend.loc[index,'Drug Name'] drug2id_mapping[ drug_name ] = index", "children": []}, {"name": "drug_name", "kind": 13, "range": {"start": {"line": 292, "character": 4}, "end": {"line": 292, "character": 51}}, "selectionRange": {"start": {"line": 292, "character": 4}, "end": {"line": 292, "character": 13}}, "detail": "drug_name = drugs_legend.loc[index,'Drug Name']", "children": []}, {"name": "valid_gene_list", "kind": 13, "range": {"start": {"line": 299, "character": 0}, "end": {"line": 299, "character": 92}}, "selectionRange": {"start": {"line": 299, "character": 0}, "end": {"line": 299, "character": 15}}, "detail": "valid_gene_list = list(set(drug_target_list) | set(exp_gene_list) | set(mutation_gene_list))", "children": []}, {"name": "network_list", "kind": 13, "range": {"start": {"line": 305, "character": 0}, "end": {"line": 305, "character": 82}}, "selectionRange": {"start": {"line": 305, "character": 0}, "end": {"line": 305, "character": 12}}, "detail": "network_list = [new_network_file+inbiomap_file, new_network_file+pathwaycomm_file]", "children": []}, {"name": "gene_neighbor_map", "kind": 13, "range": {"start": {"line": 306, "character": 0}, "end": {"line": 306, "character": 64}}, "selectionRange": {"start": {"line": 306, "character": 0}, "end": {"line": 306, "character": 17}}, "detail": "gene_neighbor_map = load_network(network_list, valid_gene_list)", "children": []}, {"name": "gene_name_df", "kind": 13, "range": {"start": {"line": 312, "character": 0}, "end": {"line": 312, "character": 89}}, "selectionRange": {"start": {"line": 312, "character": 0}, "end": {"line": 312, "character": 12}}, "detail": "gene_name_df = pd.read_table('/data/HUGO_protein-coding_gene.tsv',index_col=25, sep='\\t')", "children": []}, {"name": "gene_name_map", "kind": 13, "range": {"start": {"line": 318, "character": 0}, "end": {"line": 318, "character": 18}}, "selectionRange": {"start": {"line": 318, "character": 0}, "end": {"line": 318, "character": 13}}, "detail": "gene_name_map = {}", "children": []}, {"name": "uniprot_gene", "kind": 13, "range": {"start": {"line": 320, "character": 0}, "end": {"line": 329, "character": 0}}, "selectionRange": {"start": {"line": 320, "character": 4}, "end": {"line": 320, "character": 16}}, "detail": "for uniprot_gene in gene_name_df.index: if isinstance(uniprot_gene, type('aaa')) == False: continue if isinstance(gene_name_df.loc[uniprot_gene, 'symbol'], type('aaa')) == False: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol'][0] else: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 76}}, "selectionRange": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "uniprot_gene_set", "kind": 13, "range": {"start": {"line": 336, "character": 0}, "end": {"line": 336, "character": 24}}, "selectionRange": {"start": {"line": 336, "character": 0}, "end": {"line": 336, "character": 16}}, "detail": "uniprot_gene_set = set()", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 338, "character": 0}, "end": {"line": 347, "character": 0}}, "selectionRange": {"start": {"line": 338, "character": 4}, "end": {"line": 338, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 343, "character": 4}, "end": {"line": 343, "character": 74}}, "selectionRange": {"start": {"line": 343, "character": 4}, "end": {"line": 343, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 345, "character": 4}, "end": {"line": 347, "character": 0}}, "selectionRange": {"start": {"line": 345, "character": 8}, "end": {"line": 345, "character": 12}}, "detail": "for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "query_gene_set", "kind": 13, "range": {"start": {"line": 350, "character": 0}, "end": {"line": 350, "character": 19}}, "selectionRange": {"start": {"line": 350, "character": 0}, "end": {"line": 350, "character": 14}}, "detail": "query_gene_set = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 352, "character": 0}, "end": {"line": 355, "character": 0}}, "selectionRange": {"start": {"line": 352, "character": 4}, "end": {"line": 352, "character": 8}}, "detail": "for gene in uniprot_gene_set: if gene not in gene_name_map: query_gene_set.append(gene)", "children": []}, {"name": "query_gene_list", "kind": 13, "range": {"start": {"line": 358, "character": 0}, "end": {"line": 358, "character": 38}}, "selectionRange": {"start": {"line": 358, "character": 0}, "end": {"line": 358, "character": 15}}, "detail": "query_gene_list = list(query_gene_set)", "children": []}, {"name": "mg", "kind": 13, "range": {"start": {"line": 360, "character": 0}, "end": {"line": 360, "character": 24}}, "selectionRange": {"start": {"line": 360, "character": 0}, "end": {"line": 360, "character": 2}}, "detail": "mg = mygene.MyGeneInfo()", "children": []}, {"name": "out", "kind": 13, "range": {"start": {"line": 361, "character": 0}, "end": {"line": 361, "character": 87}}, "selectionRange": {"start": {"line": 361, "character": 0}, "end": {"line": 361, "character": 3}}, "detail": "out = mg.querymany(query_gene_list, scopes='uniprot', fields='symbol', species='human')", "children": []}, {"name": "not_found_gene_list", "kind": 13, "range": {"start": {"line": 363, "character": 0}, "end": {"line": 363, "character": 24}}, "selectionRange": {"start": {"line": 363, "character": 0}, "end": {"line": 363, "character": 19}}, "detail": "not_found_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 365, "character": 0}, "end": {"line": 370, "character": 0}}, "selectionRange": {"start": {"line": 365, "character": 4}, "end": {"line": 365, "character": 5}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 365, "character": 0}, "end": {"line": 370, "character": 0}}, "selectionRange": {"start": {"line": 365, "character": 7}, "end": {"line": 365, "character": 11}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 377, "character": 0}, "end": {"line": 377, "character": 76}}, "selectionRange": {"start": {"line": 377, "character": 0}, "end": {"line": 377, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 379, "character": 0}, "end": {"line": 401, "character": 0}}, "selectionRange": {"start": {"line": 379, "character": 4}, "end": {"line": 379, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') complex_symbol_list = [] for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] ) for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 384, "character": 4}, "end": {"line": 384, "character": 74}}, "selectionRange": {"start": {"line": 384, "character": 4}, "end": {"line": 384, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "complex_symbol_list", "kind": 13, "range": {"start": {"line": 386, "character": 4}, "end": {"line": 386, "character": 28}}, "selectionRange": {"start": {"line": 386, "character": 4}, "end": {"line": 386, "character": 23}}, "detail": "complex_symbol_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 388, "character": 4}, "end": {"line": 391, "character": 0}}, "selectionRange": {"start": {"line": 388, "character": 8}, "end": {"line": 388, "character": 12}}, "detail": "for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] )", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 392, "character": 4}, "end": {"line": 401, "character": 0}}, "selectionRange": {"start": {"line": 392, "character": 8}, "end": {"line": 392, "character": 13}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 392, "character": 4}, "end": {"line": 401, "character": 0}}, "selectionRange": {"start": {"line": 392, "character": 15}, "end": {"line": 392, "character": 20}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene_exp_neighbor_map", "kind": 13, "range": {"start": {"line": 406, "character": 0}, "end": {"line": 406, "character": 26}}, "selectionRange": {"start": {"line": 406, "character": 0}, "end": {"line": 406, "character": 21}}, "detail": "gene_exp_neighbor_map = {}", "children": []}, {"name": "exp_matrix", "kind": 13, "range": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 26}}, "selectionRange": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 10}}, "detail": "exp_matrix = exp_df.values", "children": []}, {"name": "P", "kind": 13, "range": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 79}}, "selectionRange": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 1}}, "detail": "P = 1 - cdist(np.transpose(exp_matrix), np.transpose(exp_matrix),'correlation')", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 411, "character": 0}, "end": {"line": 425, "character": 0}}, "selectionRange": {"start": {"line": 411, "character": 4}, "end": {"line": 411, "character": 5}}, "detail": "for i in range(len(exp_gene_list)): gene1 = exp_gene_list[i] gene_exp_neighbor_map[gene1] = set() for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2) if gene1 not in gene_exp_neighbor_map[gene1]: print (gene1, 'not in itself?', P[i,i])", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 413, "character": 4}, "end": {"line": 413, "character": 28}}, "selectionRange": {"start": {"line": 413, "character": 4}, "end": {"line": 413, "character": 9}}, "detail": "gene1 = exp_gene_list[i]", "children": []}, {"name": "j", "kind": 13, "range": {"start": {"line": 416, "character": 4}, "end": {"line": 422, "character": 0}}, "selectionRange": {"start": {"line": 416, "character": 8}, "end": {"line": 416, "character": 9}}, "detail": "for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 418, "character": 8}, "end": {"line": 418, "character": 32}}, "selectionRange": {"start": {"line": 418, "character": 8}, "end": {"line": 418, "character": 13}}, "detail": "gene2 = exp_gene_list[j]", "children": []}, {"name": "drug_feature_list", "kind": 13, "range": {"start": {"line": 433, "character": 0}, "end": {"line": 433, "character": 22}}, "selectionRange": {"start": {"line": 433, "character": 0}, "end": {"line": 433, "character": 17}}, "detail": "drug_feature_list = []", "children": []}, {"name": "drug_neighbor_map", "kind": 13, "range": {"start": {"line": 434, "character": 0}, "end": {"line": 434, "character": 22}}, "selectionRange": {"start": {"line": 434, "character": 0}, "end": {"line": 434, "character": 17}}, "detail": "drug_neighbor_map = {}", "children": []}, {"name": "selected_drug_list", "kind": 13, "range": {"start": {"line": 435, "character": 0}, "end": {"line": 435, "character": 23}}, "selectionRange": {"start": {"line": 435, "character": 0}, "end": {"line": 435, "character": 18}}, "detail": "selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 437, "character": 0}, "end": {"line": 454, "character": 0}}, "selectionRange": {"start": {"line": 437, "character": 4}, "end": {"line": 437, "character": 8}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 437, "character": 0}, "end": {"line": 454, "character": 0}}, "selectionRange": {"start": {"line": 437, "character": 10}, "end": {"line": 437, "character": 21}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 440, "character": 8}, "end": {"line": 450, "character": 0}}, "selectionRange": {"start": {"line": 440, "character": 12}, "end": {"line": 440, "character": 16}}, "detail": "for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene]", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 468, "character": 0}, "end": {"line": 468, "character": 52}}, "selectionRange": {"start": {"line": 468, "character": 0}, "end": {"line": 468, "character": 5}}, "detail": "drugs = pd.read_csv(drug_cell_line_file,index_col=2)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 93}}, "selectionRange": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 5}}, "detail": "drugs = drugs.drop([\"DATASET_VERSION\",\"IC50_RESULTS_ID\",\"MAX_CONC_MICROMOLAR\",\"RMSE\"],axis=1)", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 470, "character": 0}, "end": {"line": 470, "character": 49}}, "selectionRange": {"start": {"line": 470, "character": 0}, "end": {"line": 470, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 472, "character": 0}, "end": {"line": 472, "character": 28}}, "selectionRange": {"start": {"line": 472, "character": 0}, "end": {"line": 472, "character": 9}}, "detail": "drug_list = drugs[\"DRUG_ID\"]", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 473, "character": 0}, "end": {"line": 473, "character": 16}}, "selectionRange": {"start": {"line": 473, "character": 0}, "end": {"line": 473, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 483, "character": 0}, "end": {"line": 483, "character": 71}}, "selectionRange": {"start": {"line": 483, "character": 0}, "end": {"line": 483, "character": 10}}, "detail": "PDTC_drugs = pd.read_csv(PDTC_drug_cell_line_file,sep='\\t',index_col=0)", "children": []}, {"name": "PDTC_drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 59}}, "selectionRange": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 25}}, "detail": "PDTC_drugs_cell_line_list = list(PDTC_drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 486, "character": 0}, "end": {"line": 486, "character": 39}}, "selectionRange": {"start": {"line": 486, "character": 0}, "end": {"line": 486, "character": 9}}, "detail": "drug_list = PDTC_drugs[\"Drug\"].tolist()", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 487, "character": 0}, "end": {"line": 487, "character": 16}}, "selectionRange": {"start": {"line": 487, "character": 0}, "end": {"line": 487, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 488, "character": 0}, "end": {"line": 493, "character": 0}}, "selectionRange": {"start": {"line": 488, "character": 4}, "end": {"line": 488, "character": 5}}, "detail": "for i in drug_list: if i in drug2id_mapping.keys(): new_drug_id.append(drug2id_mapping[i]) else: new_drug_id.append(0)", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 495, "character": 0}, "end": {"line": 495, "character": 84}}, "selectionRange": {"start": {"line": 495, "character": 0}, "end": {"line": 495, "character": 10}}, "detail": "PDTC_drugs = PDTC_drugs.drop([\"Drug\",\"iC50\",\"D1_CONC\",\"D5_CONC\",\"perc.iC50\"],axis=1)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 503, "character": 0}, "end": {"line": 503, "character": 37}}, "selectionRange": {"start": {"line": 503, "character": 0}, "end": {"line": 503, "character": 5}}, "detail": "drugs = pd.concat([drugs,PDTC_drugs])", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 510, "character": 0}, "end": {"line": 510, "character": 49}}, "selectionRange": {"start": {"line": 510, "character": 0}, "end": {"line": 510, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "cell_line_list", "kind": 13, "range": {"start": {"line": 516, "character": 0}, "end": {"line": 516, "character": 102}}, "selectionRange": {"start": {"line": 516, "character": 0}, "end": {"line": 516, "character": 14}}, "detail": "cell_line_list = list(set(drugs_cell_line_list)&set(exp_cell_line_list)&set(mutation_cell_line_list) )", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 523, "character": 0}, "end": {"line": 523, "character": 66}}, "selectionRange": {"start": {"line": 523, "character": 0}, "end": {"line": 523, "character": 16}}, "detail": "cell_line_legend = pd.read_csv(cell_line_detail_file, index_col=1)", "children": []}, {"name": "PDTC_cell_line", "kind": 13, "range": {"start": {"line": 524, "character": 0}, "end": {"line": 524, "character": 206}}, "selectionRange": {"start": {"line": 524, "character": 0}, "end": {"line": 524, "character": 14}}, "detail": "PDTC_cell_line = pd.DataFrame({'Line': [\"BRCA\"]*len(PDTC_exp_cell_line_list), 'Site':[\"PDTC\"]*len(PDTC_exp_cell_line_list),\"Histology\":[\"breast\"]*len(PDTC_exp_cell_line_list)},index=PDTC_exp_cell_line_list)", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 525, "character": 0}, "end": {"line": 525, "character": 63}}, "selectionRange": {"start": {"line": 525, "character": 0}, "end": {"line": 525, "character": 16}}, "detail": "cell_line_legend = pd.concat([cell_line_legend,PDTC_cell_line])", "children": []}, {"name": "tissue_map", "kind": 13, "range": {"start": {"line": 528, "character": 0}, "end": {"line": 528, "character": 15}}, "selectionRange": {"start": {"line": 528, "character": 0}, "end": {"line": 528, "character": 10}}, "detail": "tissue_map = {}", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 530, "character": 0}, "end": {"line": 538, "character": 0}}, "selectionRange": {"start": {"line": 530, "character": 4}, "end": {"line": 530, "character": 13}}, "detail": "for cell_line in cell_line_list: tissue = cell_line_legend.loc[cell_line,'Site'] if tissue not in tissue_map: tissue_map[tissue] = [] tissue_map[tissue].append(cell_line)", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 532, "character": 4}, "end": {"line": 532, "character": 51}}, "selectionRange": {"start": {"line": 532, "character": 4}, "end": {"line": 532, "character": 10}}, "detail": "tissue = cell_line_legend.loc[cell_line,'Site']", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 539, "character": 0}, "end": {"line": 539, "character": 23}}, "selectionRange": {"start": {"line": 539, "character": 0}, "end": {"line": 539, "character": 19}}, "detail": "large_tissue_number = 0", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 540, "character": 0}, "end": {"line": 546, "character": 0}}, "selectionRange": {"start": {"line": 540, "character": 4}, "end": {"line": 540, "character": 10}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 540, "character": 0}, "end": {"line": 546, "character": 0}}, "selectionRange": {"start": {"line": 540, "character": 12}, "end": {"line": 540, "character": 21}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 543, "character": 8}, "end": {"line": 543, "character": 32}}, "selectionRange": {"start": {"line": 543, "character": 8}, "end": {"line": 543, "character": 27}}, "detail": "large_tissue_number += 1", "children": []}, {"name": "new_exp_gene_list", "kind": 13, "range": {"start": {"line": 566, "character": 0}, "end": {"line": 566, "character": 22}}, "selectionRange": {"start": {"line": 566, "character": 0}, "end": {"line": 566, "character": 17}}, "detail": "new_exp_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 567, "character": 0}, "end": {"line": 570, "character": 0}}, "selectionRange": {"start": {"line": 567, "character": 4}, "end": {"line": 567, "character": 5}}, "detail": "for i in exp_gene_list: if i in valid_gene_list: new_exp_gene_list.append(i)", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 41}}, "selectionRange": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 38}}, "selectionRange": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 72}}, "selectionRange": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 43}}, "selectionRange": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 68}}, "selectionRange": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 58}}, "selectionRange": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 68}}, "selectionRange": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "new_data_file", "kind": 13, "range": {"start": {"line": 597, "character": 0}, "end": {"line": 597, "character": 18}}, "selectionRange": {"start": {"line": 597, "character": 0}, "end": {"line": 597, "character": 13}}, "detail": "new_data_file = ''", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 601, "character": 0}, "end": {"line": 601, "character": 41}}, "selectionRange": {"start": {"line": 601, "character": 0}, "end": {"line": 601, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 602, "character": 0}, "end": {"line": 602, "character": 38}}, "selectionRange": {"start": {"line": 602, "character": 0}, "end": {"line": 602, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 603, "character": 0}, "end": {"line": 603, "character": 72}}, "selectionRange": {"start": {"line": 603, "character": 0}, "end": {"line": 603, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 605, "character": 0}, "end": {"line": 605, "character": 43}}, "selectionRange": {"start": {"line": 605, "character": 0}, "end": {"line": 605, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 606, "character": 0}, "end": {"line": 606, "character": 68}}, "selectionRange": {"start": {"line": 606, "character": 0}, "end": {"line": 606, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 613, "character": 0}, "end": {"line": 613, "character": 58}}, "selectionRange": {"start": {"line": 613, "character": 0}, "end": {"line": 613, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 614, "character": 0}, "end": {"line": 614, "character": 68}}, "selectionRange": {"start": {"line": 614, "character": 0}, "end": {"line": 614, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "rename_selected_drug_list", "kind": 13, "range": {"start": {"line": 618, "character": 0}, "end": {"line": 618, "character": 30}}, "selectionRange": {"start": {"line": 618, "character": 0}, "end": {"line": 618, "character": 25}}, "detail": "rename_selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 620, "character": 0}, "end": {"line": 690, "character": 0}}, "selectionRange": {"start": {"line": 620, "character": 4}, "end": {"line": 620, "character": 8}}, "detail": "for drug in selected_drug_list: print(drug) if drug not in drug2id_mapping: print('drug name wrong', drug) else: cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]] feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) ) feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) ) print(len(feature_exp_gene_list) + len(feature_mut_gene_list)) if len(feature_exp_gene_list) + len(feature_mut_gene_list) == 0: continue feature_description = [] drug_tissue_map = {} drug = drug.replace(' ','_') rename_selected_drug_list.append(drug) if drug == 'Nutlin-3a_(-)': drug = 'Nutlin-3a' drug_folder = '/data/merged/drug_feature/' + drug + '/' if not os.path.exists(drug_folder): os.makedirs(drug_folder) for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description)) file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\") pickle.dump(drug_tissue_map,file_handle) file_handle.close()", "children": []}, {"name": "cell_line_drug_matrix", "kind": 13, "range": {"start": {"line": 628, "character": 8}, "end": {"line": 628, "character": 84}}, "selectionRange": {"start": {"line": 628, "character": 8}, "end": {"line": 628, "character": 29}}, "detail": "cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]]", "children": []}, {"name": "feature_exp_gene_list", "kind": 13, "range": {"start": {"line": 633, "character": 8}, "end": {"line": 633, "character": 98}}, "selectionRange": {"start": {"line": 633, "character": 8}, "end": {"line": 633, "character": 29}}, "detail": "feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) )", "children": []}, {"name": "feature_mut_gene_list", "kind": 13, "range": {"start": {"line": 634, "character": 8}, "end": {"line": 634, "character": 98}}, "selectionRange": {"start": {"line": 634, "character": 8}, "end": {"line": 634, "character": 29}}, "detail": "feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) )", "children": []}, {"name": "feature_description", "kind": 13, "range": {"start": {"line": 638, "character": 8}, "end": {"line": 638, "character": 32}}, "selectionRange": {"start": {"line": 638, "character": 8}, "end": {"line": 638, "character": 27}}, "detail": "feature_description = []", "children": []}, {"name": "drug_tissue_map", "kind": 13, "range": {"start": {"line": 640, "character": 8}, "end": {"line": 640, "character": 28}}, "selectionRange": {"start": {"line": 640, "character": 8}, "end": {"line": 640, "character": 23}}, "detail": "drug_tissue_map = {}", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 642, "character": 8}, "end": {"line": 642, "character": 36}}, "selectionRange": {"start": {"line": 642, "character": 8}, "end": {"line": 642, "character": 12}}, "detail": "drug = drug.replace(' ','_')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 648, "character": 12}, "end": {"line": 648, "character": 30}}, "selectionRange": {"start": {"line": 648, "character": 12}, "end": {"line": 648, "character": 16}}, "detail": "drug = 'Nutlin-3a'", "children": []}, {"name": "drug_folder", "kind": 13, "range": {"start": {"line": 650, "character": 8}, "end": {"line": 650, "character": 63}}, "selectionRange": {"start": {"line": 650, "character": 8}, "end": {"line": 650, "character": 19}}, "detail": "drug_folder = '/data/merged/drug_feature/' + drug + '/'", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 656, "character": 8}, "end": {"line": 686, "character": 0}}, "selectionRange": {"start": {"line": 656, "character": 12}, "end": {"line": 656, "character": 18}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "tissue_cell_line_list", "kind": 13, "range": {"start": {"line": 656, "character": 8}, "end": {"line": 686, "character": 0}}, "selectionRange": {"start": {"line": 656, "character": 20}, "end": {"line": 656, "character": 41}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 659, "character": 12}, "end": {"line": 659, "character": 103}}, "selectionRange": {"start": {"line": 659, "character": 12}, "end": {"line": 659, "character": 35}}, "detail": "drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list )", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 660, "character": 12}, "end": {"line": 660, "character": 67}}, "selectionRange": {"start": {"line": 660, "character": 12}, "end": {"line": 660, "character": 35}}, "detail": "drug_specific_cell_line = list(drug_specific_cell_line)", "children": []}, {"name": "feature_list", "kind": 13, "range": {"start": {"line": 663, "character": 12}, "end": {"line": 663, "character": 29}}, "selectionRange": {"start": {"line": 663, "character": 12}, "end": {"line": 663, "character": 24}}, "detail": "feature_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 667, "character": 16}, "end": {"line": 669, "character": 0}}, "selectionRange": {"start": {"line": 667, "character": 20}, "end": {"line": 667, "character": 24}}, "detail": "for gene in feature_exp_gene_list: feature_description.append(gene+'_expression')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 672, "character": 16}, "end": {"line": 674, "character": 0}}, "selectionRange": {"start": {"line": 672, "character": 20}, "end": {"line": 672, "character": 24}}, "detail": "for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation')", "children": []}, {"name": "feature", "kind": 13, "range": {"start": {"line": 675, "character": 12}, "end": {"line": 675, "character": 58}}, "selectionRange": {"start": {"line": 675, "character": 12}, "end": {"line": 675, "character": 19}}, "detail": "feature = np.concatenate(feature_list, axis=1)", "children": []}, {"name": "label", "kind": 13, "range": {"start": {"line": 677, "character": 12}, "end": {"line": 677, "character": 88}}, "selectionRange": {"start": {"line": 677, "character": 12}, "end": {"line": 677, "character": 17}}, "detail": "label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 687, "character": 8}, "end": {"line": 687, "character": 84}}, "selectionRange": {"start": {"line": 687, "character": 8}, "end": {"line": 687, "character": 19}}, "detail": "file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\")", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 691, "character": 0}, "end": {"line": 691, "character": 52}}, "selectionRange": {"start": {"line": 691, "character": 0}, "end": {"line": 691, "character": 11}}, "detail": "file_handle = open('rename_selected_drug_list', 'w')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 692, "character": 0}, "end": {"line": 694, "character": 0}}, "selectionRange": {"start": {"line": 692, "character": 4}, "end": {"line": 692, "character": 8}}, "detail": "for drug in rename_selected_drug_list: file_handle.writelines(drug+ '\\n')", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 712, "character": 0}, "end": {"line": 712, "character": 13}}, "selectionRange": {"start": {"line": 712, "character": 7}, "end": {"line": 712, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cell_line_loc", "kind": 13, "range": {"start": {"line": 718, "character": 0}, "end": {"line": 718, "character": 84}}, "selectionRange": {"start": {"line": 718, "character": 0}, "end": {"line": 718, "character": 13}}, "detail": "cell_line_loc = '/cellar/users/samsonfong/Projects/tcrp-v2/from-ma/cell_line_lists/'", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 724, "character": 0}, "end": {"line": 726, "character": 0}}, "selectionRange": {"start": {"line": 724, "character": 53}, "end": {"line": 724, "character": 54}}, "detail": "with open('/data/drug_feature/KU-55933/KU', 'rb') as f: tmap= pickle.load(f)", "children": []}, {"name": "tmap", "kind": 13, "range": {"start": {"line": 725, "character": 4}, "end": {"line": 725, "character": 24}}, "selectionRange": {"start": {"line": 725, "character": 4}, "end": {"line": 725, "character": 8}}, "detail": "tmap= pickle.load(f)", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 743, "character": 0}, "end": {"line": 743, "character": 68}}, "selectionRange": {"start": {"line": 743, "character": 0}, "end": {"line": 743, "character": 1}}, "detail": "f = np.load('/data/drug_feature/KU-55933/lung_KU-55933_feature.npy')", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 56, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 57, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 58, "result": [{"name": "matplotlib", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 17}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 17}}, "detail": "module matplotlib", "children": []}, {"name": "os", "kind": 2, "range": {"start": {"line": 10, "character": 0}, "end": {"line": 10, "character": 9}}, "selectionRange": {"start": {"line": 10, "character": 7}, "end": {"line": 10, "character": 9}}, "detail": "module os", "children": []}, {"name": "pd", "kind": 2, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 11, "character": 19}}, "selectionRange": {"start": {"line": 11, "character": 17}, "end": {"line": 11, "character": 19}}, "detail": "module pd", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 12, "character": 0}, "end": {"line": 12, "character": 18}}, "selectionRange": {"start": {"line": 12, "character": 16}, "end": {"line": 12, "character": 18}}, "detail": "module np", "children": []}, {"name": "sys", "kind": 2, "range": {"start": {"line": 13, "character": 0}, "end": {"line": 13, "character": 10}}, "selectionRange": {"start": {"line": 13, "character": 7}, "end": {"line": 13, "character": 10}}, "detail": "module sys", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 14, "character": 0}, "end": {"line": 14, "character": 13}}, "selectionRange": {"start": {"line": 14, "character": 7}, "end": {"line": 14, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cdist", "kind": 12, "range": {"start": {"line": 15, "character": 0}, "end": {"line": 15, "character": 40}}, "selectionRange": {"start": {"line": 15, "character": 35}, "end": {"line": 15, "character": 40}}, "detail": "def cdist", "children": []}, {"name": "math", "kind": 2, "range": {"start": {"line": 16, "character": 0}, "end": {"line": 16, "character": 11}}, "selectionRange": {"start": {"line": 16, "character": 7}, "end": {"line": 16, "character": 11}}, "detail": "module math", "children": []}, {"name": "nx", "kind": 2, "range": {"start": {"line": 17, "character": 0}, "end": {"line": 17, "character": 21}}, "selectionRange": {"start": {"line": 17, "character": 19}, "end": {"line": 17, "character": 21}}, "detail": "module nx", "children": []}, {"name": "nxacc", "kind": 2, "range": {"start": {"line": 18, "character": 0}, "end": {"line": 18, "character": 56}}, "selectionRange": {"start": {"line": 18, "character": 51}, "end": {"line": 18, "character": 56}}, "detail": "module nxacc", "children": []}, {"name": "nxadag", "kind": 2, "range": {"start": {"line": 19, "character": 0}, "end": {"line": 19, "character": 40}}, "selectionRange": {"start": {"line": 19, "character": 34}, "end": {"line": 19, "character": 40}}, "detail": "module nxadag", "children": []}, {"name": "plt", "kind": 2, "range": {"start": {"line": 20, "character": 0}, "end": {"line": 20, "character": 31}}, "selectionRange": {"start": {"line": 20, "character": 28}, "end": {"line": 20, "character": 31}}, "detail": "module plt", "children": []}, {"name": "sns", "kind": 2, "range": {"start": {"line": 21, "character": 0}, "end": {"line": 21, "character": 21}}, "selectionRange": {"start": {"line": 21, "character": 18}, "end": {"line": 21, "character": 21}}, "detail": "module sns", "children": []}, {"name": "itertools", "kind": 2, "range": {"start": {"line": 22, "character": 0}, "end": {"line": 22, "character": 16}}, "selectionRange": {"start": {"line": 22, "character": 7}, "end": {"line": 22, "character": 16}}, "detail": "module itertools", "children": []}, {"name": "mygene", "kind": 2, "range": {"start": {"line": 23, "character": 0}, "end": {"line": 23, "character": 13}}, "selectionRange": {"start": {"line": 23, "character": 7}, "end": {"line": 23, "character": 13}}, "detail": "module mygene", "children": []}, {"name": "re", "kind": 2, "range": {"start": {"line": 24, "character": 0}, "end": {"line": 24, "character": 9}}, "selectionRange": {"start": {"line": 24, "character": 7}, "end": {"line": 24, "character": 9}}, "detail": "module re", "children": []}, {"name": "selected_exp_gene_list", "kind": 13, "range": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 95}}, "selectionRange": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 22}}, "detail": "selected_exp_gene_list = pd.read_csv(\"/data/common_exp_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "selected_mut_gene_list", "kind": 13, "range": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 95}}, "selectionRange": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 22}}, "detail": "selected_mut_gene_list = pd.read_csv(\"/data/common_mut_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "load_network", "kind": 12, "range": {"start": {"line": 37, "character": 0}, "end": {"line": 65, "character": 28}}, "selectionRange": {"start": {"line": 37, "character": 4}, "end": {"line": 37, "character": 16}}, "detail": "def load_network", "children": []}, {"name": "load_name_space", "kind": 12, "range": {"start": {"line": 67, "character": 0}, "end": {"line": 79, "character": 21}}, "selectionRange": {"start": {"line": 67, "character": 4}, "end": {"line": 67, "character": 19}}, "detail": "def load_name_space", "children": []}, {"name": "list2index", "kind": 12, "range": {"start": {"line": 81, "character": 0}, "end": {"line": 88, "character": 41}}, "selectionRange": {"start": {"line": 81, "character": 4}, "end": {"line": 81, "character": 14}}, "detail": "def list2index", "children": []}, {"name": "PDTC_data_file", "kind": 13, "range": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 30}}, "selectionRange": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 14}}, "detail": "PDTC_data_file = '/data/PTDC/'", "children": []}, {"name": "PDTC_exp_data_file", "kind": 13, "range": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 60}}, "selectionRange": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 18}}, "detail": "PDTC_exp_data_file = PDTC_data_file + 'ExpressionModels.tsv'", "children": []}, {"name": "PDTC_drug_cell_line_file", "kind": 13, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 72}}, "selectionRange": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 24}}, "detail": "PDTC_drug_cell_line_file = PDTC_data_file + 'DrugResponsesAUCModels.tsv'", "children": []}, {"name": "PDTC_mutation_data_file", "kind": 13, "range": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 59}}, "selectionRange": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 23}}, "detail": "PDTC_mutation_data_file = PDTC_data_file + 'SNVsModels.tsv'", "children": []}, {"name": "PDTC_drug_target_file", "kind": 13, "range": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 47}}, "selectionRange": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 21}}, "detail": "PDTC_drug_target_file ='/data/drug_targets.tsv'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 37}}, "selectionRange": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 46}}, "selectionRange": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "data_file", "kind": 13, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 25}}, "selectionRange": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 9}}, "detail": "data_file = '/data/GDSC/'", "children": []}, {"name": "new_network_file", "kind": 13, "range": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 27}}, "selectionRange": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 16}}, "detail": "new_network_file = '/data/'", "children": []}, {"name": "exp_data_file", "kind": 13, "range": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 61}}, "selectionRange": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 13}}, "detail": "exp_data_file = data_file + 'Cell_line_RMA_proc_basalExp.txt'", "children": []}, {"name": "drug_cell_line_file", "kind": 13, "range": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 64}}, "selectionRange": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 19}}, "detail": "drug_cell_line_file = data_file + 'v17_fitted_dose_response.csv'", "children": []}, {"name": "cell_line_detail_file", "kind": 13, "range": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 60}}, "selectionRange": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 21}}, "detail": "cell_line_detail_file = data_file + 'Cell_Lines_Details.csv'", "children": []}, {"name": "mutation_data_file", "kind": 13, "range": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 51}}, "selectionRange": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 18}}, "detail": "mutation_data_file = data_file + 'WES_variants.csv'", "children": []}, {"name": "drug_target_file", "kind": 13, "range": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 42}}, "selectionRange": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 16}}, "detail": "drug_target_file ='/data/drug_targets.tsv'", "children": []}, {"name": "feature_folder", "kind": 13, "range": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 27}}, "selectionRange": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 14}}, "detail": "feature_folder = 'feature/'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 37}}, "selectionRange": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 46}}, "selectionRange": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 58}}, "selectionRange": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 6}}, "detail": "exp_df = pd.read_csv(exp_data_file, sep='\\t', index_col=0)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 21}}, "selectionRange": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 6}}, "detail": "exp_df = exp_df.T[1:]", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 56}}, "selectionRange": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 6}}, "detail": "exp_df = exp_df.rename(columns={np.nan: 'NO_GENE_NAME'})", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 43}}, "selectionRange": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 6}}, "detail": "exp_df = exp_df.drop('NO_GENE_NAME',axis=1)", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 138, "character": 0}, "end": {"line": 140, "character": 26}}, "selectionRange": {"start": {"line": 138, "character": 4}, "end": {"line": 138, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 142, "character": 0}, "end": {"line": 142, "character": 44}}, "selectionRange": {"start": {"line": 142, "character": 7}, "end": {"line": 142, "character": 12}}, "detail": "exp_df.index = exp_df.index.map(stripNumber)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 40}}, "selectionRange": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 6}}, "detail": "exp_df = exp_df.groupby(level=0).first()", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 39}}, "selectionRange": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 6}}, "detail": "exp_df = exp_df[selected_exp_gene_list]", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 36}}, "selectionRange": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 48}}, "selectionRange": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 78}}, "selectionRange": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 11}}, "detail": "PDTC_exp_df = pd.read_csv(PDTC_exp_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 31}}, "selectionRange": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df.T[1:]", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 160, "character": 0}, "end": {"line": 162, "character": 26}}, "selectionRange": {"start": {"line": 160, "character": 4}, "end": {"line": 160, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 49}}, "selectionRange": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df[selected_exp_gene_list]", "children": []}, {"name": "PDTC_exp_gene_list", "kind": 13, "range": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 46}}, "selectionRange": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 18}}, "detail": "PDTC_exp_gene_list = list(PDTC_exp_df.columns)", "children": []}, {"name": "PDTC_exp_cell_line_list", "kind": 13, "range": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 58}}, "selectionRange": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 23}}, "detail": "PDTC_exp_cell_line_list = list(PDTC_exp_df.index.unique())", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 40}}, "selectionRange": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 6}}, "detail": "exp_df = pd.concat([exp_df,PDTC_exp_df])", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 36}}, "selectionRange": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 48}}, "selectionRange": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "maf", "kind": 13, "range": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 69}}, "selectionRange": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 3}}, "detail": "maf = pd.read_csv(mutation_data_file, sep=',', index_col=0).fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 75}}, "selectionRange": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 11}}, "detail": "mutation_df = maf.groupby(['COSMIC_ID', 'Gene']).size().unstack().fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 49}}, "selectionRange": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 11}}, "detail": "mutation_df = mutation_df[selected_mut_gene_list]", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 46}}, "selectionRange": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 58}}, "selectionRange": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "PDTC_maf", "kind": 13, "range": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 80}}, "selectionRange": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 8}}, "detail": "PDTC_maf = pd.read_csv(PDTC_mutation_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 61}}, "selectionRange": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_maf.replace(to_replace=\"NO\",value=0.0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 82}}, "selectionRange": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_mutation_df.replace(to_replace=\"chr*\",value=1.0,regex=True)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 47}}, "selectionRange": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df.transpose()", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 59}}, "selectionRange": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df[selected_mut_gene_list]", "children": []}, {"name": "PDTC_mutation_gene_list", "kind": 13, "range": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 56}}, "selectionRange": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 23}}, "detail": "PDTC_mutation_gene_list = list(PDTC_mutation_df.columns)", "children": []}, {"name": "PDTC_mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 68}}, "selectionRange": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 28}}, "detail": "PDTC_mutation_cell_line_list = list(PDTC_mutation_df.index.unique())", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 55}}, "selectionRange": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 11}}, "detail": "mutation_df = pd.concat([mutation_df,PDTC_mutation_df])", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 46}}, "selectionRange": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 58}}, "selectionRange": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 36}}, "selectionRange": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 11}}, "detail": "file_handle = open(drug_target_file)", "children": []}, {"name": "drug_target_map", "kind": 13, "range": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 20}}, "selectionRange": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 15}}, "detail": "drug_target_map = {}", "children": []}, {"name": "drug_target_list", "kind": 13, "range": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 21}}, "selectionRange": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 16}}, "detail": "drug_target_list = []", "children": []}, {"name": "line", "kind": 13, "range": {"start": {"line": 230, "character": 0}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 230, "character": 4}, "end": {"line": 230, "character": 8}}, "detail": "for line in file_handle: new_line = line.rstrip().split(\"\\t\") drug = new_line[0] target_list=new_line[1].split(',') if drug != \"Drug\": target_list_str = \"\" for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\" drug = drug.strip() drug_target_map[drug] = [] if ',' not in target_list_str: drug_target_map[drug].append(target_list_str.strip()) drug_target_list.append(target_list_str.strip()) else: target_list = target_list_str.split(',') for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "new_line", "kind": 13, "range": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 40}}, "selectionRange": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 12}}, "detail": "new_line = line.rstrip().split(\"\\t\")", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 22}}, "selectionRange": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 8}}, "detail": "drug = new_line[0]", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 38}}, "selectionRange": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 15}}, "detail": "target_list=new_line[1].split(',')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 28}}, "selectionRange": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 23}}, "detail": "target_list_str = \"\"", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 237, "character": 8}, "end": {"line": 242, "character": 0}}, "selectionRange": {"start": {"line": 237, "character": 12}, "end": {"line": 237, "character": 13}}, "detail": "for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 65}}, "selectionRange": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 71}}, "selectionRange": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 27}}, "selectionRange": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 12}}, "detail": "drug = drug.strip()", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 52}}, "selectionRange": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 23}}, "detail": "target_list = target_list_str.split(',')", "children": []}, {"name": "target", "kind": 13, "range": {"start": {"line": 250, "character": 12}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 250, "character": 16}, "end": {"line": 250, "character": 22}}, "detail": "for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "drug_target_map", "kind": 13, "range": {"start": {"line": 259, "character": 0}, "end": {"line": 259, "character": 20}}, "selectionRange": {"start": {"line": 259, "character": 0}, "end": {"line": 259, "character": 15}}, "detail": "drug_target_map = {}", "children": []}, {"name": "drug_target_list", "kind": 13, "range": {"start": {"line": 260, "character": 0}, "end": {"line": 260, "character": 21}}, "selectionRange": {"start": {"line": 260, "character": 0}, "end": {"line": 260, "character": 16}}, "detail": "drug_target_list = []", "children": []}, {"name": "line", "kind": 13, "range": {"start": {"line": 261, "character": 0}, "end": {"line": 284, "character": 0}}, "selectionRange": {"start": {"line": 261, "character": 4}, "end": {"line": 261, "character": 8}}, "detail": "for line in file_handle: new_line = line.rstrip().split(\"\\t\") drug = new_line[0] target_list=new_line[1].split(',') if drug != \"Drug\": target_list_str = \"\" for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\" drug = drug.strip() drug_target_map[drug] = [] if ',' not in target_list_str: drug_target_map[drug].append(target_list_str.strip()) drug_target_list.append(target_list_str.strip()) else: target_list = target_list_str.split(',') for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "new_line", "kind": 13, "range": {"start": {"line": 263, "character": 4}, "end": {"line": 263, "character": 40}}, "selectionRange": {"start": {"line": 263, "character": 4}, "end": {"line": 263, "character": 12}}, "detail": "new_line = line.rstrip().split(\"\\t\")", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 264, "character": 4}, "end": {"line": 264, "character": 22}}, "selectionRange": {"start": {"line": 264, "character": 4}, "end": {"line": 264, "character": 8}}, "detail": "drug = new_line[0]", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 265, "character": 4}, "end": {"line": 265, "character": 38}}, "selectionRange": {"start": {"line": 265, "character": 4}, "end": {"line": 265, "character": 15}}, "detail": "target_list=new_line[1].split(',')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 267, "character": 8}, "end": {"line": 267, "character": 28}}, "selectionRange": {"start": {"line": 267, "character": 8}, "end": {"line": 267, "character": 23}}, "detail": "target_list_str = \"\"", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 268, "character": 8}, "end": {"line": 273, "character": 0}}, "selectionRange": {"start": {"line": 268, "character": 12}, "end": {"line": 268, "character": 13}}, "detail": "for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 270, "character": 16}, "end": {"line": 270, "character": 65}}, "selectionRange": {"start": {"line": 270, "character": 16}, "end": {"line": 270, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 272, "character": 16}, "end": {"line": 272, "character": 71}}, "selectionRange": {"start": {"line": 272, "character": 16}, "end": {"line": 272, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 273, "character": 8}, "end": {"line": 273, "character": 27}}, "selectionRange": {"start": {"line": 273, "character": 8}, "end": {"line": 273, "character": 12}}, "detail": "drug = drug.strip()", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 280, "character": 12}, "end": {"line": 280, "character": 52}}, "selectionRange": {"start": {"line": 280, "character": 12}, "end": {"line": 280, "character": 23}}, "detail": "target_list = target_list_str.split(',')", "children": []}, {"name": "target", "kind": 13, "range": {"start": {"line": 281, "character": 12}, "end": {"line": 284, "character": 0}}, "selectionRange": {"start": {"line": 281, "character": 16}, "end": {"line": 281, "character": 22}}, "detail": "for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "drugs_legend", "kind": 13, "range": {"start": {"line": 287, "character": 0}, "end": {"line": 287, "character": 85}}, "selectionRange": {"start": {"line": 287, "character": 0}, "end": {"line": 287, "character": 12}}, "detail": "drugs_legend = pd.read_csv('/data/GDSC/Screened_Compounds.csv', sep=',', index_col=0)", "children": []}, {"name": "drug2id_mapping", "kind": 13, "range": {"start": {"line": 289, "character": 0}, "end": {"line": 289, "character": 20}}, "selectionRange": {"start": {"line": 289, "character": 0}, "end": {"line": 289, "character": 15}}, "detail": "drug2id_mapping = {}", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 291, "character": 0}, "end": {"line": 294, "character": 0}}, "selectionRange": {"start": {"line": 291, "character": 4}, "end": {"line": 291, "character": 9}}, "detail": "for index in list(drugs_legend.index) : drug_name = drugs_legend.loc[index,'Drug Name'] drug2id_mapping[ drug_name ] = index", "children": []}, {"name": "drug_name", "kind": 13, "range": {"start": {"line": 292, "character": 4}, "end": {"line": 292, "character": 51}}, "selectionRange": {"start": {"line": 292, "character": 4}, "end": {"line": 292, "character": 13}}, "detail": "drug_name = drugs_legend.loc[index,'Drug Name']", "children": []}, {"name": "valid_gene_list", "kind": 13, "range": {"start": {"line": 299, "character": 0}, "end": {"line": 299, "character": 92}}, "selectionRange": {"start": {"line": 299, "character": 0}, "end": {"line": 299, "character": 15}}, "detail": "valid_gene_list = list(set(drug_target_list) | set(exp_gene_list) | set(mutation_gene_list))", "children": []}, {"name": "network_list", "kind": 13, "range": {"start": {"line": 305, "character": 0}, "end": {"line": 305, "character": 82}}, "selectionRange": {"start": {"line": 305, "character": 0}, "end": {"line": 305, "character": 12}}, "detail": "network_list = [new_network_file+inbiomap_file, new_network_file+pathwaycomm_file]", "children": []}, {"name": "gene_neighbor_map", "kind": 13, "range": {"start": {"line": 306, "character": 0}, "end": {"line": 306, "character": 64}}, "selectionRange": {"start": {"line": 306, "character": 0}, "end": {"line": 306, "character": 17}}, "detail": "gene_neighbor_map = load_network(network_list, valid_gene_list)", "children": []}, {"name": "gene_name_df", "kind": 13, "range": {"start": {"line": 312, "character": 0}, "end": {"line": 312, "character": 89}}, "selectionRange": {"start": {"line": 312, "character": 0}, "end": {"line": 312, "character": 12}}, "detail": "gene_name_df = pd.read_table('/data/HUGO_protein-coding_gene.tsv',index_col=25, sep='\\t')", "children": []}, {"name": "gene_name_map", "kind": 13, "range": {"start": {"line": 318, "character": 0}, "end": {"line": 318, "character": 18}}, "selectionRange": {"start": {"line": 318, "character": 0}, "end": {"line": 318, "character": 13}}, "detail": "gene_name_map = {}", "children": []}, {"name": "uniprot_gene", "kind": 13, "range": {"start": {"line": 320, "character": 0}, "end": {"line": 329, "character": 0}}, "selectionRange": {"start": {"line": 320, "character": 4}, "end": {"line": 320, "character": 16}}, "detail": "for uniprot_gene in gene_name_df.index: if isinstance(uniprot_gene, type('aaa')) == False: continue if isinstance(gene_name_df.loc[uniprot_gene, 'symbol'], type('aaa')) == False: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol'][0] else: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 76}}, "selectionRange": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "uniprot_gene_set", "kind": 13, "range": {"start": {"line": 336, "character": 0}, "end": {"line": 336, "character": 24}}, "selectionRange": {"start": {"line": 336, "character": 0}, "end": {"line": 336, "character": 16}}, "detail": "uniprot_gene_set = set()", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 338, "character": 0}, "end": {"line": 347, "character": 0}}, "selectionRange": {"start": {"line": 338, "character": 4}, "end": {"line": 338, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 343, "character": 4}, "end": {"line": 343, "character": 74}}, "selectionRange": {"start": {"line": 343, "character": 4}, "end": {"line": 343, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 345, "character": 4}, "end": {"line": 347, "character": 0}}, "selectionRange": {"start": {"line": 345, "character": 8}, "end": {"line": 345, "character": 12}}, "detail": "for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "query_gene_set", "kind": 13, "range": {"start": {"line": 350, "character": 0}, "end": {"line": 350, "character": 19}}, "selectionRange": {"start": {"line": 350, "character": 0}, "end": {"line": 350, "character": 14}}, "detail": "query_gene_set = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 352, "character": 0}, "end": {"line": 355, "character": 0}}, "selectionRange": {"start": {"line": 352, "character": 4}, "end": {"line": 352, "character": 8}}, "detail": "for gene in uniprot_gene_set: if gene not in gene_name_map: query_gene_set.append(gene)", "children": []}, {"name": "query_gene_list", "kind": 13, "range": {"start": {"line": 358, "character": 0}, "end": {"line": 358, "character": 38}}, "selectionRange": {"start": {"line": 358, "character": 0}, "end": {"line": 358, "character": 15}}, "detail": "query_gene_list = list(query_gene_set)", "children": []}, {"name": "mg", "kind": 13, "range": {"start": {"line": 360, "character": 0}, "end": {"line": 360, "character": 24}}, "selectionRange": {"start": {"line": 360, "character": 0}, "end": {"line": 360, "character": 2}}, "detail": "mg = mygene.MyGeneInfo()", "children": []}, {"name": "out", "kind": 13, "range": {"start": {"line": 361, "character": 0}, "end": {"line": 361, "character": 87}}, "selectionRange": {"start": {"line": 361, "character": 0}, "end": {"line": 361, "character": 3}}, "detail": "out = mg.querymany(query_gene_list, scopes='uniprot', fields='symbol', species='human')", "children": []}, {"name": "not_found_gene_list", "kind": 13, "range": {"start": {"line": 363, "character": 0}, "end": {"line": 363, "character": 24}}, "selectionRange": {"start": {"line": 363, "character": 0}, "end": {"line": 363, "character": 19}}, "detail": "not_found_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 365, "character": 0}, "end": {"line": 370, "character": 0}}, "selectionRange": {"start": {"line": 365, "character": 4}, "end": {"line": 365, "character": 5}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 365, "character": 0}, "end": {"line": 370, "character": 0}}, "selectionRange": {"start": {"line": 365, "character": 7}, "end": {"line": 365, "character": 11}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 377, "character": 0}, "end": {"line": 377, "character": 76}}, "selectionRange": {"start": {"line": 377, "character": 0}, "end": {"line": 377, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 379, "character": 0}, "end": {"line": 401, "character": 0}}, "selectionRange": {"start": {"line": 379, "character": 4}, "end": {"line": 379, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') complex_symbol_list = [] for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] ) for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 384, "character": 4}, "end": {"line": 384, "character": 74}}, "selectionRange": {"start": {"line": 384, "character": 4}, "end": {"line": 384, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "complex_symbol_list", "kind": 13, "range": {"start": {"line": 386, "character": 4}, "end": {"line": 386, "character": 28}}, "selectionRange": {"start": {"line": 386, "character": 4}, "end": {"line": 386, "character": 23}}, "detail": "complex_symbol_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 388, "character": 4}, "end": {"line": 391, "character": 0}}, "selectionRange": {"start": {"line": 388, "character": 8}, "end": {"line": 388, "character": 12}}, "detail": "for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] )", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 392, "character": 4}, "end": {"line": 401, "character": 0}}, "selectionRange": {"start": {"line": 392, "character": 8}, "end": {"line": 392, "character": 13}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 392, "character": 4}, "end": {"line": 401, "character": 0}}, "selectionRange": {"start": {"line": 392, "character": 15}, "end": {"line": 392, "character": 20}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene_exp_neighbor_map", "kind": 13, "range": {"start": {"line": 406, "character": 0}, "end": {"line": 406, "character": 26}}, "selectionRange": {"start": {"line": 406, "character": 0}, "end": {"line": 406, "character": 21}}, "detail": "gene_exp_neighbor_map = {}", "children": []}, {"name": "exp_matrix", "kind": 13, "range": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 26}}, "selectionRange": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 10}}, "detail": "exp_matrix = exp_df.values", "children": []}, {"name": "P", "kind": 13, "range": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 79}}, "selectionRange": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 1}}, "detail": "P = 1 - cdist(np.transpose(exp_matrix), np.transpose(exp_matrix),'correlation')", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 411, "character": 0}, "end": {"line": 425, "character": 0}}, "selectionRange": {"start": {"line": 411, "character": 4}, "end": {"line": 411, "character": 5}}, "detail": "for i in range(len(exp_gene_list)): gene1 = exp_gene_list[i] gene_exp_neighbor_map[gene1] = set() for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2) if gene1 not in gene_exp_neighbor_map[gene1]: print (gene1, 'not in itself?', P[i,i])", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 413, "character": 4}, "end": {"line": 413, "character": 28}}, "selectionRange": {"start": {"line": 413, "character": 4}, "end": {"line": 413, "character": 9}}, "detail": "gene1 = exp_gene_list[i]", "children": []}, {"name": "j", "kind": 13, "range": {"start": {"line": 416, "character": 4}, "end": {"line": 422, "character": 0}}, "selectionRange": {"start": {"line": 416, "character": 8}, "end": {"line": 416, "character": 9}}, "detail": "for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 418, "character": 8}, "end": {"line": 418, "character": 32}}, "selectionRange": {"start": {"line": 418, "character": 8}, "end": {"line": 418, "character": 13}}, "detail": "gene2 = exp_gene_list[j]", "children": []}, {"name": "drug_feature_list", "kind": 13, "range": {"start": {"line": 433, "character": 0}, "end": {"line": 433, "character": 22}}, "selectionRange": {"start": {"line": 433, "character": 0}, "end": {"line": 433, "character": 17}}, "detail": "drug_feature_list = []", "children": []}, {"name": "drug_neighbor_map", "kind": 13, "range": {"start": {"line": 434, "character": 0}, "end": {"line": 434, "character": 22}}, "selectionRange": {"start": {"line": 434, "character": 0}, "end": {"line": 434, "character": 17}}, "detail": "drug_neighbor_map = {}", "children": []}, {"name": "selected_drug_list", "kind": 13, "range": {"start": {"line": 435, "character": 0}, "end": {"line": 435, "character": 23}}, "selectionRange": {"start": {"line": 435, "character": 0}, "end": {"line": 435, "character": 18}}, "detail": "selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 437, "character": 0}, "end": {"line": 454, "character": 0}}, "selectionRange": {"start": {"line": 437, "character": 4}, "end": {"line": 437, "character": 8}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 437, "character": 0}, "end": {"line": 454, "character": 0}}, "selectionRange": {"start": {"line": 437, "character": 10}, "end": {"line": 437, "character": 21}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 440, "character": 8}, "end": {"line": 450, "character": 0}}, "selectionRange": {"start": {"line": 440, "character": 12}, "end": {"line": 440, "character": 16}}, "detail": "for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene]", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 468, "character": 0}, "end": {"line": 468, "character": 52}}, "selectionRange": {"start": {"line": 468, "character": 0}, "end": {"line": 468, "character": 5}}, "detail": "drugs = pd.read_csv(drug_cell_line_file,index_col=2)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 93}}, "selectionRange": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 5}}, "detail": "drugs = drugs.drop([\"DATASET_VERSION\",\"IC50_RESULTS_ID\",\"MAX_CONC_MICROMOLAR\",\"RMSE\"],axis=1)", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 470, "character": 0}, "end": {"line": 470, "character": 49}}, "selectionRange": {"start": {"line": 470, "character": 0}, "end": {"line": 470, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 472, "character": 0}, "end": {"line": 472, "character": 28}}, "selectionRange": {"start": {"line": 472, "character": 0}, "end": {"line": 472, "character": 9}}, "detail": "drug_list = drugs[\"DRUG_ID\"]", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 473, "character": 0}, "end": {"line": 473, "character": 16}}, "selectionRange": {"start": {"line": 473, "character": 0}, "end": {"line": 473, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 483, "character": 0}, "end": {"line": 483, "character": 71}}, "selectionRange": {"start": {"line": 483, "character": 0}, "end": {"line": 483, "character": 10}}, "detail": "PDTC_drugs = pd.read_csv(PDTC_drug_cell_line_file,sep='\\t',index_col=0)", "children": []}, {"name": "PDTC_drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 59}}, "selectionRange": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 25}}, "detail": "PDTC_drugs_cell_line_list = list(PDTC_drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 486, "character": 0}, "end": {"line": 486, "character": 39}}, "selectionRange": {"start": {"line": 486, "character": 0}, "end": {"line": 486, "character": 9}}, "detail": "drug_list = PDTC_drugs[\"Drug\"].tolist()", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 487, "character": 0}, "end": {"line": 487, "character": 16}}, "selectionRange": {"start": {"line": 487, "character": 0}, "end": {"line": 487, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 488, "character": 0}, "end": {"line": 493, "character": 0}}, "selectionRange": {"start": {"line": 488, "character": 4}, "end": {"line": 488, "character": 5}}, "detail": "for i in drug_list: if i in drug2id_mapping.keys(): new_drug_id.append(drug2id_mapping[i]) else: new_drug_id.append(0)", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 495, "character": 0}, "end": {"line": 495, "character": 84}}, "selectionRange": {"start": {"line": 495, "character": 0}, "end": {"line": 495, "character": 10}}, "detail": "PDTC_drugs = PDTC_drugs.drop([\"Drug\",\"iC50\",\"D1_CONC\",\"D5_CONC\",\"perc.iC50\"],axis=1)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 503, "character": 0}, "end": {"line": 503, "character": 37}}, "selectionRange": {"start": {"line": 503, "character": 0}, "end": {"line": 503, "character": 5}}, "detail": "drugs = pd.concat([drugs,PDTC_drugs])", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 510, "character": 0}, "end": {"line": 510, "character": 49}}, "selectionRange": {"start": {"line": 510, "character": 0}, "end": {"line": 510, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "cell_line_list", "kind": 13, "range": {"start": {"line": 516, "character": 0}, "end": {"line": 516, "character": 102}}, "selectionRange": {"start": {"line": 516, "character": 0}, "end": {"line": 516, "character": 14}}, "detail": "cell_line_list = list(set(drugs_cell_line_list)&set(exp_cell_line_list)&set(mutation_cell_line_list) )", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 523, "character": 0}, "end": {"line": 523, "character": 66}}, "selectionRange": {"start": {"line": 523, "character": 0}, "end": {"line": 523, "character": 16}}, "detail": "cell_line_legend = pd.read_csv(cell_line_detail_file, index_col=1)", "children": []}, {"name": "PDTC_cell_line", "kind": 13, "range": {"start": {"line": 524, "character": 0}, "end": {"line": 524, "character": 206}}, "selectionRange": {"start": {"line": 524, "character": 0}, "end": {"line": 524, "character": 14}}, "detail": "PDTC_cell_line = pd.DataFrame({'Line': [\"BRCA\"]*len(PDTC_exp_cell_line_list), 'Site':[\"PDTC\"]*len(PDTC_exp_cell_line_list),\"Histology\":[\"breast\"]*len(PDTC_exp_cell_line_list)},index=PDTC_exp_cell_line_list)", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 525, "character": 0}, "end": {"line": 525, "character": 63}}, "selectionRange": {"start": {"line": 525, "character": 0}, "end": {"line": 525, "character": 16}}, "detail": "cell_line_legend = pd.concat([cell_line_legend,PDTC_cell_line])", "children": []}, {"name": "tissue_map", "kind": 13, "range": {"start": {"line": 528, "character": 0}, "end": {"line": 528, "character": 15}}, "selectionRange": {"start": {"line": 528, "character": 0}, "end": {"line": 528, "character": 10}}, "detail": "tissue_map = {}", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 530, "character": 0}, "end": {"line": 538, "character": 0}}, "selectionRange": {"start": {"line": 530, "character": 4}, "end": {"line": 530, "character": 13}}, "detail": "for cell_line in cell_line_list: tissue = cell_line_legend.loc[cell_line,'Site'] if tissue not in tissue_map: tissue_map[tissue] = [] tissue_map[tissue].append(cell_line)", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 532, "character": 4}, "end": {"line": 532, "character": 51}}, "selectionRange": {"start": {"line": 532, "character": 4}, "end": {"line": 532, "character": 10}}, "detail": "tissue = cell_line_legend.loc[cell_line,'Site']", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 539, "character": 0}, "end": {"line": 539, "character": 23}}, "selectionRange": {"start": {"line": 539, "character": 0}, "end": {"line": 539, "character": 19}}, "detail": "large_tissue_number = 0", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 540, "character": 0}, "end": {"line": 546, "character": 0}}, "selectionRange": {"start": {"line": 540, "character": 4}, "end": {"line": 540, "character": 10}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 540, "character": 0}, "end": {"line": 546, "character": 0}}, "selectionRange": {"start": {"line": 540, "character": 12}, "end": {"line": 540, "character": 21}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 543, "character": 8}, "end": {"line": 543, "character": 32}}, "selectionRange": {"start": {"line": 543, "character": 8}, "end": {"line": 543, "character": 27}}, "detail": "large_tissue_number += 1", "children": []}, {"name": "new_exp_gene_list", "kind": 13, "range": {"start": {"line": 566, "character": 0}, "end": {"line": 566, "character": 22}}, "selectionRange": {"start": {"line": 566, "character": 0}, "end": {"line": 566, "character": 17}}, "detail": "new_exp_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 567, "character": 0}, "end": {"line": 570, "character": 0}}, "selectionRange": {"start": {"line": 567, "character": 4}, "end": {"line": 567, "character": 5}}, "detail": "for i in exp_gene_list: if i in valid_gene_list: new_exp_gene_list.append(i)", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 41}}, "selectionRange": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 38}}, "selectionRange": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 72}}, "selectionRange": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 43}}, "selectionRange": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 68}}, "selectionRange": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 58}}, "selectionRange": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 68}}, "selectionRange": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "new_data_file", "kind": 13, "range": {"start": {"line": 597, "character": 0}, "end": {"line": 597, "character": 18}}, "selectionRange": {"start": {"line": 597, "character": 0}, "end": {"line": 597, "character": 13}}, "detail": "new_data_file = ''", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 601, "character": 0}, "end": {"line": 601, "character": 41}}, "selectionRange": {"start": {"line": 601, "character": 0}, "end": {"line": 601, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 602, "character": 0}, "end": {"line": 602, "character": 38}}, "selectionRange": {"start": {"line": 602, "character": 0}, "end": {"line": 602, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 603, "character": 0}, "end": {"line": 603, "character": 72}}, "selectionRange": {"start": {"line": 603, "character": 0}, "end": {"line": 603, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 605, "character": 0}, "end": {"line": 605, "character": 43}}, "selectionRange": {"start": {"line": 605, "character": 0}, "end": {"line": 605, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 606, "character": 0}, "end": {"line": 606, "character": 68}}, "selectionRange": {"start": {"line": 606, "character": 0}, "end": {"line": 606, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 613, "character": 0}, "end": {"line": 613, "character": 58}}, "selectionRange": {"start": {"line": 613, "character": 0}, "end": {"line": 613, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 614, "character": 0}, "end": {"line": 614, "character": 68}}, "selectionRange": {"start": {"line": 614, "character": 0}, "end": {"line": 614, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "rename_selected_drug_list", "kind": 13, "range": {"start": {"line": 618, "character": 0}, "end": {"line": 618, "character": 30}}, "selectionRange": {"start": {"line": 618, "character": 0}, "end": {"line": 618, "character": 25}}, "detail": "rename_selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 620, "character": 0}, "end": {"line": 690, "character": 0}}, "selectionRange": {"start": {"line": 620, "character": 4}, "end": {"line": 620, "character": 8}}, "detail": "for drug in selected_drug_list: print(drug) if drug not in drug2id_mapping: print('drug name wrong', drug) else: cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]] feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) ) feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) ) print(len(feature_exp_gene_list) + len(feature_mut_gene_list)) if len(feature_exp_gene_list) + len(feature_mut_gene_list) == 0: continue feature_description = [] drug_tissue_map = {} drug = drug.replace(' ','_') rename_selected_drug_list.append(drug) if drug == 'Nutlin-3a_(-)': drug = 'Nutlin-3a' drug_folder = '/data/merged/drug_feature/' + drug + '/' if not os.path.exists(drug_folder): os.makedirs(drug_folder) for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description)) file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\") pickle.dump(drug_tissue_map,file_handle) file_handle.close()", "children": []}, {"name": "cell_line_drug_matrix", "kind": 13, "range": {"start": {"line": 628, "character": 8}, "end": {"line": 628, "character": 84}}, "selectionRange": {"start": {"line": 628, "character": 8}, "end": {"line": 628, "character": 29}}, "detail": "cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]]", "children": []}, {"name": "feature_exp_gene_list", "kind": 13, "range": {"start": {"line": 633, "character": 8}, "end": {"line": 633, "character": 98}}, "selectionRange": {"start": {"line": 633, "character": 8}, "end": {"line": 633, "character": 29}}, "detail": "feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) )", "children": []}, {"name": "feature_mut_gene_list", "kind": 13, "range": {"start": {"line": 634, "character": 8}, "end": {"line": 634, "character": 98}}, "selectionRange": {"start": {"line": 634, "character": 8}, "end": {"line": 634, "character": 29}}, "detail": "feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) )", "children": []}, {"name": "feature_description", "kind": 13, "range": {"start": {"line": 638, "character": 8}, "end": {"line": 638, "character": 32}}, "selectionRange": {"start": {"line": 638, "character": 8}, "end": {"line": 638, "character": 27}}, "detail": "feature_description = []", "children": []}, {"name": "drug_tissue_map", "kind": 13, "range": {"start": {"line": 640, "character": 8}, "end": {"line": 640, "character": 28}}, "selectionRange": {"start": {"line": 640, "character": 8}, "end": {"line": 640, "character": 23}}, "detail": "drug_tissue_map = {}", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 642, "character": 8}, "end": {"line": 642, "character": 36}}, "selectionRange": {"start": {"line": 642, "character": 8}, "end": {"line": 642, "character": 12}}, "detail": "drug = drug.replace(' ','_')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 648, "character": 12}, "end": {"line": 648, "character": 30}}, "selectionRange": {"start": {"line": 648, "character": 12}, "end": {"line": 648, "character": 16}}, "detail": "drug = 'Nutlin-3a'", "children": []}, {"name": "drug_folder", "kind": 13, "range": {"start": {"line": 650, "character": 8}, "end": {"line": 650, "character": 63}}, "selectionRange": {"start": {"line": 650, "character": 8}, "end": {"line": 650, "character": 19}}, "detail": "drug_folder = '/data/merged/drug_feature/' + drug + '/'", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 656, "character": 8}, "end": {"line": 686, "character": 0}}, "selectionRange": {"start": {"line": 656, "character": 12}, "end": {"line": 656, "character": 18}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "tissue_cell_line_list", "kind": 13, "range": {"start": {"line": 656, "character": 8}, "end": {"line": 686, "character": 0}}, "selectionRange": {"start": {"line": 656, "character": 20}, "end": {"line": 656, "character": 41}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 659, "character": 12}, "end": {"line": 659, "character": 103}}, "selectionRange": {"start": {"line": 659, "character": 12}, "end": {"line": 659, "character": 35}}, "detail": "drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list )", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 660, "character": 12}, "end": {"line": 660, "character": 67}}, "selectionRange": {"start": {"line": 660, "character": 12}, "end": {"line": 660, "character": 35}}, "detail": "drug_specific_cell_line = list(drug_specific_cell_line)", "children": []}, {"name": "feature_list", "kind": 13, "range": {"start": {"line": 663, "character": 12}, "end": {"line": 663, "character": 29}}, "selectionRange": {"start": {"line": 663, "character": 12}, "end": {"line": 663, "character": 24}}, "detail": "feature_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 667, "character": 16}, "end": {"line": 669, "character": 0}}, "selectionRange": {"start": {"line": 667, "character": 20}, "end": {"line": 667, "character": 24}}, "detail": "for gene in feature_exp_gene_list: feature_description.append(gene+'_expression')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 672, "character": 16}, "end": {"line": 674, "character": 0}}, "selectionRange": {"start": {"line": 672, "character": 20}, "end": {"line": 672, "character": 24}}, "detail": "for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation')", "children": []}, {"name": "feature", "kind": 13, "range": {"start": {"line": 675, "character": 12}, "end": {"line": 675, "character": 58}}, "selectionRange": {"start": {"line": 675, "character": 12}, "end": {"line": 675, "character": 19}}, "detail": "feature = np.concatenate(feature_list, axis=1)", "children": []}, {"name": "label", "kind": 13, "range": {"start": {"line": 677, "character": 12}, "end": {"line": 677, "character": 88}}, "selectionRange": {"start": {"line": 677, "character": 12}, "end": {"line": 677, "character": 17}}, "detail": "label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 687, "character": 8}, "end": {"line": 687, "character": 84}}, "selectionRange": {"start": {"line": 687, "character": 8}, "end": {"line": 687, "character": 19}}, "detail": "file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\")", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 691, "character": 0}, "end": {"line": 691, "character": 52}}, "selectionRange": {"start": {"line": 691, "character": 0}, "end": {"line": 691, "character": 11}}, "detail": "file_handle = open('rename_selected_drug_list', 'w')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 692, "character": 0}, "end": {"line": 694, "character": 0}}, "selectionRange": {"start": {"line": 692, "character": 4}, "end": {"line": 692, "character": 8}}, "detail": "for drug in rename_selected_drug_list: file_handle.writelines(drug+ '\\n')", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 712, "character": 0}, "end": {"line": 712, "character": 13}}, "selectionRange": {"start": {"line": 712, "character": 7}, "end": {"line": 712, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cell_line_loc", "kind": 13, "range": {"start": {"line": 718, "character": 0}, "end": {"line": 718, "character": 84}}, "selectionRange": {"start": {"line": 718, "character": 0}, "end": {"line": 718, "character": 13}}, "detail": "cell_line_loc = '/cellar/users/samsonfong/Projects/tcrp-v2/from-ma/cell_line_lists/'", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 724, "character": 0}, "end": {"line": 726, "character": 0}}, "selectionRange": {"start": {"line": 724, "character": 53}, "end": {"line": 724, "character": 54}}, "detail": "with open('/data/drug_feature/KU-55933/KU', 'rb') as f: tmap= pickle.load(f)", "children": []}, {"name": "tmap", "kind": 13, "range": {"start": {"line": 725, "character": 4}, "end": {"line": 725, "character": 24}}, "selectionRange": {"start": {"line": 725, "character": 4}, "end": {"line": 725, "character": 8}}, "detail": "tmap= pickle.load(f)", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 743, "character": 0}, "end": {"line": 743, "character": 68}}, "selectionRange": {"start": {"line": 743, "character": 0}, "end": {"line": 743, "character": 1}}, "detail": "f = np.load('/data/drug_feature/KU-55933/lung_KU-55933_feature.npy')", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 59, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 60, "result": [{"name": "matplotlib", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 17}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 17}}, "detail": "module matplotlib", "children": []}, {"name": "os", "kind": 2, "range": {"start": {"line": 10, "character": 0}, "end": {"line": 10, "character": 9}}, "selectionRange": {"start": {"line": 10, "character": 7}, "end": {"line": 10, "character": 9}}, "detail": "module os", "children": []}, {"name": "pd", "kind": 2, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 11, "character": 19}}, "selectionRange": {"start": {"line": 11, "character": 17}, "end": {"line": 11, "character": 19}}, "detail": "module pd", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 12, "character": 0}, "end": {"line": 12, "character": 18}}, "selectionRange": {"start": {"line": 12, "character": 16}, "end": {"line": 12, "character": 18}}, "detail": "module np", "children": []}, {"name": "sys", "kind": 2, "range": {"start": {"line": 13, "character": 0}, "end": {"line": 13, "character": 10}}, "selectionRange": {"start": {"line": 13, "character": 7}, "end": {"line": 13, "character": 10}}, "detail": "module sys", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 14, "character": 0}, "end": {"line": 14, "character": 13}}, "selectionRange": {"start": {"line": 14, "character": 7}, "end": {"line": 14, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cdist", "kind": 12, "range": {"start": {"line": 15, "character": 0}, "end": {"line": 15, "character": 40}}, "selectionRange": {"start": {"line": 15, "character": 35}, "end": {"line": 15, "character": 40}}, "detail": "def cdist", "children": []}, {"name": "math", "kind": 2, "range": {"start": {"line": 16, "character": 0}, "end": {"line": 16, "character": 11}}, "selectionRange": {"start": {"line": 16, "character": 7}, "end": {"line": 16, "character": 11}}, "detail": "module math", "children": []}, {"name": "nx", "kind": 2, "range": {"start": {"line": 17, "character": 0}, "end": {"line": 17, "character": 21}}, "selectionRange": {"start": {"line": 17, "character": 19}, "end": {"line": 17, "character": 21}}, "detail": "module nx", "children": []}, {"name": "nxacc", "kind": 2, "range": {"start": {"line": 18, "character": 0}, "end": {"line": 18, "character": 56}}, "selectionRange": {"start": {"line": 18, "character": 51}, "end": {"line": 18, "character": 56}}, "detail": "module nxacc", "children": []}, {"name": "nxadag", "kind": 2, "range": {"start": {"line": 19, "character": 0}, "end": {"line": 19, "character": 40}}, "selectionRange": {"start": {"line": 19, "character": 34}, "end": {"line": 19, "character": 40}}, "detail": "module nxadag", "children": []}, {"name": "plt", "kind": 2, "range": {"start": {"line": 20, "character": 0}, "end": {"line": 20, "character": 31}}, "selectionRange": {"start": {"line": 20, "character": 28}, "end": {"line": 20, "character": 31}}, "detail": "module plt", "children": []}, {"name": "sns", "kind": 2, "range": {"start": {"line": 21, "character": 0}, "end": {"line": 21, "character": 21}}, "selectionRange": {"start": {"line": 21, "character": 18}, "end": {"line": 21, "character": 21}}, "detail": "module sns", "children": []}, {"name": "itertools", "kind": 2, "range": {"start": {"line": 22, "character": 0}, "end": {"line": 22, "character": 16}}, "selectionRange": {"start": {"line": 22, "character": 7}, "end": {"line": 22, "character": 16}}, "detail": "module itertools", "children": []}, {"name": "mygene", "kind": 2, "range": {"start": {"line": 23, "character": 0}, "end": {"line": 23, "character": 13}}, "selectionRange": {"start": {"line": 23, "character": 7}, "end": {"line": 23, "character": 13}}, "detail": "module mygene", "children": []}, {"name": "re", "kind": 2, "range": {"start": {"line": 24, "character": 0}, "end": {"line": 24, "character": 9}}, "selectionRange": {"start": {"line": 24, "character": 7}, "end": {"line": 24, "character": 9}}, "detail": "module re", "children": []}, {"name": "selected_exp_gene_list", "kind": 13, "range": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 95}}, "selectionRange": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 22}}, "detail": "selected_exp_gene_list = pd.read_csv(\"/data/common_exp_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "selected_mut_gene_list", "kind": 13, "range": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 95}}, "selectionRange": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 22}}, "detail": "selected_mut_gene_list = pd.read_csv(\"/data/common_mut_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "load_network", "kind": 12, "range": {"start": {"line": 37, "character": 0}, "end": {"line": 65, "character": 28}}, "selectionRange": {"start": {"line": 37, "character": 4}, "end": {"line": 37, "character": 16}}, "detail": "def load_network", "children": []}, {"name": "load_name_space", "kind": 12, "range": {"start": {"line": 67, "character": 0}, "end": {"line": 79, "character": 21}}, "selectionRange": {"start": {"line": 67, "character": 4}, "end": {"line": 67, "character": 19}}, "detail": "def load_name_space", "children": []}, {"name": "list2index", "kind": 12, "range": {"start": {"line": 81, "character": 0}, "end": {"line": 88, "character": 41}}, "selectionRange": {"start": {"line": 81, "character": 4}, "end": {"line": 81, "character": 14}}, "detail": "def list2index", "children": []}, {"name": "PDTC_data_file", "kind": 13, "range": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 30}}, "selectionRange": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 14}}, "detail": "PDTC_data_file = '/data/PTDC/'", "children": []}, {"name": "PDTC_exp_data_file", "kind": 13, "range": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 60}}, "selectionRange": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 18}}, "detail": "PDTC_exp_data_file = PDTC_data_file + 'ExpressionModels.tsv'", "children": []}, {"name": "PDTC_drug_cell_line_file", "kind": 13, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 72}}, "selectionRange": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 24}}, "detail": "PDTC_drug_cell_line_file = PDTC_data_file + 'DrugResponsesAUCModels.tsv'", "children": []}, {"name": "PDTC_mutation_data_file", "kind": 13, "range": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 59}}, "selectionRange": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 23}}, "detail": "PDTC_mutation_data_file = PDTC_data_file + 'SNVsModels.tsv'", "children": []}, {"name": "PDTC_drug_target_file", "kind": 13, "range": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 47}}, "selectionRange": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 21}}, "detail": "PDTC_drug_target_file ='/data/drug_targets.tsv'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 37}}, "selectionRange": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 46}}, "selectionRange": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "data_file", "kind": 13, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 25}}, "selectionRange": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 9}}, "detail": "data_file = '/data/GDSC/'", "children": []}, {"name": "new_network_file", "kind": 13, "range": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 27}}, "selectionRange": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 16}}, "detail": "new_network_file = '/data/'", "children": []}, {"name": "exp_data_file", "kind": 13, "range": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 61}}, "selectionRange": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 13}}, "detail": "exp_data_file = data_file + 'Cell_line_RMA_proc_basalExp.txt'", "children": []}, {"name": "drug_cell_line_file", "kind": 13, "range": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 64}}, "selectionRange": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 19}}, "detail": "drug_cell_line_file = data_file + 'v17_fitted_dose_response.csv'", "children": []}, {"name": "cell_line_detail_file", "kind": 13, "range": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 60}}, "selectionRange": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 21}}, "detail": "cell_line_detail_file = data_file + 'Cell_Lines_Details.csv'", "children": []}, {"name": "mutation_data_file", "kind": 13, "range": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 51}}, "selectionRange": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 18}}, "detail": "mutation_data_file = data_file + 'WES_variants.csv'", "children": []}, {"name": "drug_target_file", "kind": 13, "range": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 42}}, "selectionRange": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 16}}, "detail": "drug_target_file ='/data/drug_targets.tsv'", "children": []}, {"name": "feature_folder", "kind": 13, "range": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 27}}, "selectionRange": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 14}}, "detail": "feature_folder = 'feature/'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 37}}, "selectionRange": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 46}}, "selectionRange": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 58}}, "selectionRange": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 6}}, "detail": "exp_df = pd.read_csv(exp_data_file, sep='\\t', index_col=0)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 21}}, "selectionRange": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 6}}, "detail": "exp_df = exp_df.T[1:]", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 56}}, "selectionRange": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 6}}, "detail": "exp_df = exp_df.rename(columns={np.nan: 'NO_GENE_NAME'})", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 43}}, "selectionRange": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 6}}, "detail": "exp_df = exp_df.drop('NO_GENE_NAME',axis=1)", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 138, "character": 0}, "end": {"line": 140, "character": 26}}, "selectionRange": {"start": {"line": 138, "character": 4}, "end": {"line": 138, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 142, "character": 0}, "end": {"line": 142, "character": 44}}, "selectionRange": {"start": {"line": 142, "character": 7}, "end": {"line": 142, "character": 12}}, "detail": "exp_df.index = exp_df.index.map(stripNumber)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 40}}, "selectionRange": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 6}}, "detail": "exp_df = exp_df.groupby(level=0).first()", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 39}}, "selectionRange": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 6}}, "detail": "exp_df = exp_df[selected_exp_gene_list]", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 36}}, "selectionRange": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 48}}, "selectionRange": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 78}}, "selectionRange": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 11}}, "detail": "PDTC_exp_df = pd.read_csv(PDTC_exp_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 31}}, "selectionRange": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df.T[1:]", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 160, "character": 0}, "end": {"line": 162, "character": 26}}, "selectionRange": {"start": {"line": 160, "character": 4}, "end": {"line": 160, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 49}}, "selectionRange": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df[selected_exp_gene_list]", "children": []}, {"name": "PDTC_exp_gene_list", "kind": 13, "range": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 46}}, "selectionRange": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 18}}, "detail": "PDTC_exp_gene_list = list(PDTC_exp_df.columns)", "children": []}, {"name": "PDTC_exp_cell_line_list", "kind": 13, "range": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 58}}, "selectionRange": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 23}}, "detail": "PDTC_exp_cell_line_list = list(PDTC_exp_df.index.unique())", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 40}}, "selectionRange": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 6}}, "detail": "exp_df = pd.concat([exp_df,PDTC_exp_df])", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 36}}, "selectionRange": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 48}}, "selectionRange": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "maf", "kind": 13, "range": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 69}}, "selectionRange": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 3}}, "detail": "maf = pd.read_csv(mutation_data_file, sep=',', index_col=0).fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 75}}, "selectionRange": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 11}}, "detail": "mutation_df = maf.groupby(['COSMIC_ID', 'Gene']).size().unstack().fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 49}}, "selectionRange": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 11}}, "detail": "mutation_df = mutation_df[selected_mut_gene_list]", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 46}}, "selectionRange": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 58}}, "selectionRange": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "PDTC_maf", "kind": 13, "range": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 80}}, "selectionRange": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 8}}, "detail": "PDTC_maf = pd.read_csv(PDTC_mutation_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 61}}, "selectionRange": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_maf.replace(to_replace=\"NO\",value=0.0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 82}}, "selectionRange": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_mutation_df.replace(to_replace=\"chr*\",value=1.0,regex=True)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 47}}, "selectionRange": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df.transpose()", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 59}}, "selectionRange": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df[selected_mut_gene_list]", "children": []}, {"name": "PDTC_mutation_gene_list", "kind": 13, "range": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 56}}, "selectionRange": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 23}}, "detail": "PDTC_mutation_gene_list = list(PDTC_mutation_df.columns)", "children": []}, {"name": "PDTC_mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 68}}, "selectionRange": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 28}}, "detail": "PDTC_mutation_cell_line_list = list(PDTC_mutation_df.index.unique())", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 55}}, "selectionRange": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 11}}, "detail": "mutation_df = pd.concat([mutation_df,PDTC_mutation_df])", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 46}}, "selectionRange": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 58}}, "selectionRange": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 36}}, "selectionRange": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 11}}, "detail": "file_handle = open(drug_target_file)", "children": []}, {"name": "drug_target_map", "kind": 13, "range": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 20}}, "selectionRange": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 15}}, "detail": "drug_target_map = {}", "children": []}, {"name": "drug_target_list", "kind": 13, "range": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 21}}, "selectionRange": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 16}}, "detail": "drug_target_list = []", "children": []}, {"name": "line", "kind": 13, "range": {"start": {"line": 230, "character": 0}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 230, "character": 4}, "end": {"line": 230, "character": 8}}, "detail": "for line in file_handle: new_line = line.rstrip().split(\"\\t\") drug = new_line[0] target_list=new_line[1].split(',') if drug != \"Drug\": target_list_str = \"\" for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\" drug = drug.strip() drug_target_map[drug] = [] if ',' not in target_list_str: drug_target_map[drug].append(target_list_str.strip()) drug_target_list.append(target_list_str.strip()) else: target_list = target_list_str.split(',') for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "new_line", "kind": 13, "range": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 40}}, "selectionRange": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 12}}, "detail": "new_line = line.rstrip().split(\"\\t\")", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 22}}, "selectionRange": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 8}}, "detail": "drug = new_line[0]", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 38}}, "selectionRange": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 15}}, "detail": "target_list=new_line[1].split(',')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 28}}, "selectionRange": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 23}}, "detail": "target_list_str = \"\"", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 237, "character": 8}, "end": {"line": 242, "character": 0}}, "selectionRange": {"start": {"line": 237, "character": 12}, "end": {"line": 237, "character": 13}}, "detail": "for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 65}}, "selectionRange": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 71}}, "selectionRange": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 27}}, "selectionRange": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 12}}, "detail": "drug = drug.strip()", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 52}}, "selectionRange": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 23}}, "detail": "target_list = target_list_str.split(',')", "children": []}, {"name": "target", "kind": 13, "range": {"start": {"line": 250, "character": 12}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 250, "character": 16}, "end": {"line": 250, "character": 22}}, "detail": "for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "drug_target_map", "kind": 13, "range": {"start": {"line": 259, "character": 0}, "end": {"line": 259, "character": 20}}, "selectionRange": {"start": {"line": 259, "character": 0}, "end": {"line": 259, "character": 15}}, "detail": "drug_target_map = {}", "children": []}, {"name": "drug_target_list", "kind": 13, "range": {"start": {"line": 260, "character": 0}, "end": {"line": 260, "character": 21}}, "selectionRange": {"start": {"line": 260, "character": 0}, "end": {"line": 260, "character": 16}}, "detail": "drug_target_list = []", "children": []}, {"name": "line", "kind": 13, "range": {"start": {"line": 261, "character": 0}, "end": {"line": 284, "character": 0}}, "selectionRange": {"start": {"line": 261, "character": 4}, "end": {"line": 261, "character": 8}}, "detail": "for line in file_handle: new_line = line.rstrip().split(\"\\t\") drug = new_line[0] target_list=new_line[1].split(',') if drug != \"Drug\": target_list_str = \"\" for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\" drug = drug.strip() drug_target_map[drug] = [] if ',' not in target_list_str: drug_target_map[drug].append(target_list_str.strip()) drug_target_list.append(target_list_str.strip()) else: target_list = target_list_str.split(',') for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "new_line", "kind": 13, "range": {"start": {"line": 263, "character": 4}, "end": {"line": 263, "character": 40}}, "selectionRange": {"start": {"line": 263, "character": 4}, "end": {"line": 263, "character": 12}}, "detail": "new_line = line.rstrip().split(\"\\t\")", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 264, "character": 4}, "end": {"line": 264, "character": 22}}, "selectionRange": {"start": {"line": 264, "character": 4}, "end": {"line": 264, "character": 8}}, "detail": "drug = new_line[0]", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 265, "character": 4}, "end": {"line": 265, "character": 38}}, "selectionRange": {"start": {"line": 265, "character": 4}, "end": {"line": 265, "character": 15}}, "detail": "target_list=new_line[1].split(',')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 267, "character": 8}, "end": {"line": 267, "character": 28}}, "selectionRange": {"start": {"line": 267, "character": 8}, "end": {"line": 267, "character": 23}}, "detail": "target_list_str = \"\"", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 268, "character": 8}, "end": {"line": 273, "character": 0}}, "selectionRange": {"start": {"line": 268, "character": 12}, "end": {"line": 268, "character": 13}}, "detail": "for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 270, "character": 16}, "end": {"line": 270, "character": 65}}, "selectionRange": {"start": {"line": 270, "character": 16}, "end": {"line": 270, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 272, "character": 16}, "end": {"line": 272, "character": 71}}, "selectionRange": {"start": {"line": 272, "character": 16}, "end": {"line": 272, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 273, "character": 8}, "end": {"line": 273, "character": 27}}, "selectionRange": {"start": {"line": 273, "character": 8}, "end": {"line": 273, "character": 12}}, "detail": "drug = drug.strip()", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 280, "character": 12}, "end": {"line": 280, "character": 52}}, "selectionRange": {"start": {"line": 280, "character": 12}, "end": {"line": 280, "character": 23}}, "detail": "target_list = target_list_str.split(',')", "children": []}, {"name": "target", "kind": 13, "range": {"start": {"line": 281, "character": 12}, "end": {"line": 284, "character": 0}}, "selectionRange": {"start": {"line": 281, "character": 16}, "end": {"line": 281, "character": 22}}, "detail": "for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "drugs_legend", "kind": 13, "range": {"start": {"line": 287, "character": 0}, "end": {"line": 287, "character": 85}}, "selectionRange": {"start": {"line": 287, "character": 0}, "end": {"line": 287, "character": 12}}, "detail": "drugs_legend = pd.read_csv('/data/GDSC/Screened_Compounds.csv', sep=',', index_col=0)", "children": []}, {"name": "drug2id_mapping", "kind": 13, "range": {"start": {"line": 289, "character": 0}, "end": {"line": 289, "character": 20}}, "selectionRange": {"start": {"line": 289, "character": 0}, "end": {"line": 289, "character": 15}}, "detail": "drug2id_mapping = {}", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 291, "character": 0}, "end": {"line": 294, "character": 0}}, "selectionRange": {"start": {"line": 291, "character": 4}, "end": {"line": 291, "character": 9}}, "detail": "for index in list(drugs_legend.index) : drug_name = drugs_legend.loc[index,'Drug Name'] drug2id_mapping[ drug_name ] = index", "children": []}, {"name": "drug_name", "kind": 13, "range": {"start": {"line": 292, "character": 4}, "end": {"line": 292, "character": 51}}, "selectionRange": {"start": {"line": 292, "character": 4}, "end": {"line": 292, "character": 13}}, "detail": "drug_name = drugs_legend.loc[index,'Drug Name']", "children": []}, {"name": "valid_gene_list", "kind": 13, "range": {"start": {"line": 299, "character": 0}, "end": {"line": 299, "character": 92}}, "selectionRange": {"start": {"line": 299, "character": 0}, "end": {"line": 299, "character": 15}}, "detail": "valid_gene_list = list(set(drug_target_list) | set(exp_gene_list) | set(mutation_gene_list))", "children": []}, {"name": "network_list", "kind": 13, "range": {"start": {"line": 305, "character": 0}, "end": {"line": 305, "character": 82}}, "selectionRange": {"start": {"line": 305, "character": 0}, "end": {"line": 305, "character": 12}}, "detail": "network_list = [new_network_file+inbiomap_file, new_network_file+pathwaycomm_file]", "children": []}, {"name": "gene_neighbor_map", "kind": 13, "range": {"start": {"line": 306, "character": 0}, "end": {"line": 306, "character": 64}}, "selectionRange": {"start": {"line": 306, "character": 0}, "end": {"line": 306, "character": 17}}, "detail": "gene_neighbor_map = load_network(network_list, valid_gene_list)", "children": []}, {"name": "gene_name_df", "kind": 13, "range": {"start": {"line": 312, "character": 0}, "end": {"line": 312, "character": 89}}, "selectionRange": {"start": {"line": 312, "character": 0}, "end": {"line": 312, "character": 12}}, "detail": "gene_name_df = pd.read_table('/data/HUGO_protein-coding_gene.tsv',index_col=25, sep='\\t')", "children": []}, {"name": "gene_name_map", "kind": 13, "range": {"start": {"line": 318, "character": 0}, "end": {"line": 318, "character": 18}}, "selectionRange": {"start": {"line": 318, "character": 0}, "end": {"line": 318, "character": 13}}, "detail": "gene_name_map = {}", "children": []}, {"name": "uniprot_gene", "kind": 13, "range": {"start": {"line": 320, "character": 0}, "end": {"line": 329, "character": 0}}, "selectionRange": {"start": {"line": 320, "character": 4}, "end": {"line": 320, "character": 16}}, "detail": "for uniprot_gene in gene_name_df.index: if isinstance(uniprot_gene, type('aaa')) == False: continue if isinstance(gene_name_df.loc[uniprot_gene, 'symbol'], type('aaa')) == False: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol'][0] else: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 76}}, "selectionRange": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "uniprot_gene_set", "kind": 13, "range": {"start": {"line": 336, "character": 0}, "end": {"line": 336, "character": 24}}, "selectionRange": {"start": {"line": 336, "character": 0}, "end": {"line": 336, "character": 16}}, "detail": "uniprot_gene_set = set()", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 338, "character": 0}, "end": {"line": 347, "character": 0}}, "selectionRange": {"start": {"line": 338, "character": 4}, "end": {"line": 338, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 343, "character": 4}, "end": {"line": 343, "character": 74}}, "selectionRange": {"start": {"line": 343, "character": 4}, "end": {"line": 343, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 345, "character": 4}, "end": {"line": 347, "character": 0}}, "selectionRange": {"start": {"line": 345, "character": 8}, "end": {"line": 345, "character": 12}}, "detail": "for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "query_gene_set", "kind": 13, "range": {"start": {"line": 350, "character": 0}, "end": {"line": 350, "character": 19}}, "selectionRange": {"start": {"line": 350, "character": 0}, "end": {"line": 350, "character": 14}}, "detail": "query_gene_set = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 352, "character": 0}, "end": {"line": 355, "character": 0}}, "selectionRange": {"start": {"line": 352, "character": 4}, "end": {"line": 352, "character": 8}}, "detail": "for gene in uniprot_gene_set: if gene not in gene_name_map: query_gene_set.append(gene)", "children": []}, {"name": "query_gene_list", "kind": 13, "range": {"start": {"line": 358, "character": 0}, "end": {"line": 358, "character": 38}}, "selectionRange": {"start": {"line": 358, "character": 0}, "end": {"line": 358, "character": 15}}, "detail": "query_gene_list = list(query_gene_set)", "children": []}, {"name": "mg", "kind": 13, "range": {"start": {"line": 360, "character": 0}, "end": {"line": 360, "character": 24}}, "selectionRange": {"start": {"line": 360, "character": 0}, "end": {"line": 360, "character": 2}}, "detail": "mg = mygene.MyGeneInfo()", "children": []}, {"name": "out", "kind": 13, "range": {"start": {"line": 361, "character": 0}, "end": {"line": 361, "character": 87}}, "selectionRange": {"start": {"line": 361, "character": 0}, "end": {"line": 361, "character": 3}}, "detail": "out = mg.querymany(query_gene_list, scopes='uniprot', fields='symbol', species='human')", "children": []}, {"name": "not_found_gene_list", "kind": 13, "range": {"start": {"line": 363, "character": 0}, "end": {"line": 363, "character": 24}}, "selectionRange": {"start": {"line": 363, "character": 0}, "end": {"line": 363, "character": 19}}, "detail": "not_found_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 365, "character": 0}, "end": {"line": 370, "character": 0}}, "selectionRange": {"start": {"line": 365, "character": 4}, "end": {"line": 365, "character": 5}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 365, "character": 0}, "end": {"line": 370, "character": 0}}, "selectionRange": {"start": {"line": 365, "character": 7}, "end": {"line": 365, "character": 11}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 377, "character": 0}, "end": {"line": 377, "character": 76}}, "selectionRange": {"start": {"line": 377, "character": 0}, "end": {"line": 377, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 379, "character": 0}, "end": {"line": 401, "character": 0}}, "selectionRange": {"start": {"line": 379, "character": 4}, "end": {"line": 379, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') complex_symbol_list = [] for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] ) for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 384, "character": 4}, "end": {"line": 384, "character": 74}}, "selectionRange": {"start": {"line": 384, "character": 4}, "end": {"line": 384, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "complex_symbol_list", "kind": 13, "range": {"start": {"line": 386, "character": 4}, "end": {"line": 386, "character": 28}}, "selectionRange": {"start": {"line": 386, "character": 4}, "end": {"line": 386, "character": 23}}, "detail": "complex_symbol_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 388, "character": 4}, "end": {"line": 391, "character": 0}}, "selectionRange": {"start": {"line": 388, "character": 8}, "end": {"line": 388, "character": 12}}, "detail": "for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] )", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 392, "character": 4}, "end": {"line": 401, "character": 0}}, "selectionRange": {"start": {"line": 392, "character": 8}, "end": {"line": 392, "character": 13}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 392, "character": 4}, "end": {"line": 401, "character": 0}}, "selectionRange": {"start": {"line": 392, "character": 15}, "end": {"line": 392, "character": 20}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene_exp_neighbor_map", "kind": 13, "range": {"start": {"line": 406, "character": 0}, "end": {"line": 406, "character": 26}}, "selectionRange": {"start": {"line": 406, "character": 0}, "end": {"line": 406, "character": 21}}, "detail": "gene_exp_neighbor_map = {}", "children": []}, {"name": "exp_matrix", "kind": 13, "range": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 26}}, "selectionRange": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 10}}, "detail": "exp_matrix = exp_df.values", "children": []}, {"name": "P", "kind": 13, "range": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 79}}, "selectionRange": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 1}}, "detail": "P = 1 - cdist(np.transpose(exp_matrix), np.transpose(exp_matrix),'correlation')", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 411, "character": 0}, "end": {"line": 425, "character": 0}}, "selectionRange": {"start": {"line": 411, "character": 4}, "end": {"line": 411, "character": 5}}, "detail": "for i in range(len(exp_gene_list)): gene1 = exp_gene_list[i] gene_exp_neighbor_map[gene1] = set() for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2) if gene1 not in gene_exp_neighbor_map[gene1]: print (gene1, 'not in itself?', P[i,i])", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 413, "character": 4}, "end": {"line": 413, "character": 28}}, "selectionRange": {"start": {"line": 413, "character": 4}, "end": {"line": 413, "character": 9}}, "detail": "gene1 = exp_gene_list[i]", "children": []}, {"name": "j", "kind": 13, "range": {"start": {"line": 416, "character": 4}, "end": {"line": 422, "character": 0}}, "selectionRange": {"start": {"line": 416, "character": 8}, "end": {"line": 416, "character": 9}}, "detail": "for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 418, "character": 8}, "end": {"line": 418, "character": 32}}, "selectionRange": {"start": {"line": 418, "character": 8}, "end": {"line": 418, "character": 13}}, "detail": "gene2 = exp_gene_list[j]", "children": []}, {"name": "drug_feature_list", "kind": 13, "range": {"start": {"line": 433, "character": 0}, "end": {"line": 433, "character": 22}}, "selectionRange": {"start": {"line": 433, "character": 0}, "end": {"line": 433, "character": 17}}, "detail": "drug_feature_list = []", "children": []}, {"name": "drug_neighbor_map", "kind": 13, "range": {"start": {"line": 434, "character": 0}, "end": {"line": 434, "character": 22}}, "selectionRange": {"start": {"line": 434, "character": 0}, "end": {"line": 434, "character": 17}}, "detail": "drug_neighbor_map = {}", "children": []}, {"name": "selected_drug_list", "kind": 13, "range": {"start": {"line": 435, "character": 0}, "end": {"line": 435, "character": 23}}, "selectionRange": {"start": {"line": 435, "character": 0}, "end": {"line": 435, "character": 18}}, "detail": "selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 437, "character": 0}, "end": {"line": 454, "character": 0}}, "selectionRange": {"start": {"line": 437, "character": 4}, "end": {"line": 437, "character": 8}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 437, "character": 0}, "end": {"line": 454, "character": 0}}, "selectionRange": {"start": {"line": 437, "character": 10}, "end": {"line": 437, "character": 21}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 440, "character": 8}, "end": {"line": 450, "character": 0}}, "selectionRange": {"start": {"line": 440, "character": 12}, "end": {"line": 440, "character": 16}}, "detail": "for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene]", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 468, "character": 0}, "end": {"line": 468, "character": 52}}, "selectionRange": {"start": {"line": 468, "character": 0}, "end": {"line": 468, "character": 5}}, "detail": "drugs = pd.read_csv(drug_cell_line_file,index_col=2)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 93}}, "selectionRange": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 5}}, "detail": "drugs = drugs.drop([\"DATASET_VERSION\",\"IC50_RESULTS_ID\",\"MAX_CONC_MICROMOLAR\",\"RMSE\"],axis=1)", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 470, "character": 0}, "end": {"line": 470, "character": 49}}, "selectionRange": {"start": {"line": 470, "character": 0}, "end": {"line": 470, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 472, "character": 0}, "end": {"line": 472, "character": 28}}, "selectionRange": {"start": {"line": 472, "character": 0}, "end": {"line": 472, "character": 9}}, "detail": "drug_list = drugs[\"DRUG_ID\"]", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 473, "character": 0}, "end": {"line": 473, "character": 16}}, "selectionRange": {"start": {"line": 473, "character": 0}, "end": {"line": 473, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 483, "character": 0}, "end": {"line": 483, "character": 71}}, "selectionRange": {"start": {"line": 483, "character": 0}, "end": {"line": 483, "character": 10}}, "detail": "PDTC_drugs = pd.read_csv(PDTC_drug_cell_line_file,sep='\\t',index_col=0)", "children": []}, {"name": "PDTC_drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 59}}, "selectionRange": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 25}}, "detail": "PDTC_drugs_cell_line_list = list(PDTC_drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 486, "character": 0}, "end": {"line": 486, "character": 39}}, "selectionRange": {"start": {"line": 486, "character": 0}, "end": {"line": 486, "character": 9}}, "detail": "drug_list = PDTC_drugs[\"Drug\"].tolist()", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 487, "character": 0}, "end": {"line": 487, "character": 16}}, "selectionRange": {"start": {"line": 487, "character": 0}, "end": {"line": 487, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 488, "character": 0}, "end": {"line": 493, "character": 0}}, "selectionRange": {"start": {"line": 488, "character": 4}, "end": {"line": 488, "character": 5}}, "detail": "for i in drug_list: if i in drug2id_mapping.keys(): new_drug_id.append(drug2id_mapping[i]) else: new_drug_id.append(0)", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 495, "character": 0}, "end": {"line": 495, "character": 84}}, "selectionRange": {"start": {"line": 495, "character": 0}, "end": {"line": 495, "character": 10}}, "detail": "PDTC_drugs = PDTC_drugs.drop([\"Drug\",\"iC50\",\"D1_CONC\",\"D5_CONC\",\"perc.iC50\"],axis=1)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 503, "character": 0}, "end": {"line": 503, "character": 37}}, "selectionRange": {"start": {"line": 503, "character": 0}, "end": {"line": 503, "character": 5}}, "detail": "drugs = pd.concat([drugs,PDTC_drugs])", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 510, "character": 0}, "end": {"line": 510, "character": 49}}, "selectionRange": {"start": {"line": 510, "character": 0}, "end": {"line": 510, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "cell_line_list", "kind": 13, "range": {"start": {"line": 516, "character": 0}, "end": {"line": 516, "character": 102}}, "selectionRange": {"start": {"line": 516, "character": 0}, "end": {"line": 516, "character": 14}}, "detail": "cell_line_list = list(set(drugs_cell_line_list)&set(exp_cell_line_list)&set(mutation_cell_line_list) )", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 523, "character": 0}, "end": {"line": 523, "character": 66}}, "selectionRange": {"start": {"line": 523, "character": 0}, "end": {"line": 523, "character": 16}}, "detail": "cell_line_legend = pd.read_csv(cell_line_detail_file, index_col=1)", "children": []}, {"name": "PDTC_cell_line", "kind": 13, "range": {"start": {"line": 524, "character": 0}, "end": {"line": 524, "character": 206}}, "selectionRange": {"start": {"line": 524, "character": 0}, "end": {"line": 524, "character": 14}}, "detail": "PDTC_cell_line = pd.DataFrame({'Line': [\"BRCA\"]*len(PDTC_exp_cell_line_list), 'Site':[\"PDTC\"]*len(PDTC_exp_cell_line_list),\"Histology\":[\"breast\"]*len(PDTC_exp_cell_line_list)},index=PDTC_exp_cell_line_list)", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 525, "character": 0}, "end": {"line": 525, "character": 63}}, "selectionRange": {"start": {"line": 525, "character": 0}, "end": {"line": 525, "character": 16}}, "detail": "cell_line_legend = pd.concat([cell_line_legend,PDTC_cell_line])", "children": []}, {"name": "tissue_map", "kind": 13, "range": {"start": {"line": 528, "character": 0}, "end": {"line": 528, "character": 15}}, "selectionRange": {"start": {"line": 528, "character": 0}, "end": {"line": 528, "character": 10}}, "detail": "tissue_map = {}", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 530, "character": 0}, "end": {"line": 538, "character": 0}}, "selectionRange": {"start": {"line": 530, "character": 4}, "end": {"line": 530, "character": 13}}, "detail": "for cell_line in cell_line_list: tissue = cell_line_legend.loc[cell_line,'Site'] if tissue not in tissue_map: tissue_map[tissue] = [] tissue_map[tissue].append(cell_line)", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 532, "character": 4}, "end": {"line": 532, "character": 51}}, "selectionRange": {"start": {"line": 532, "character": 4}, "end": {"line": 532, "character": 10}}, "detail": "tissue = cell_line_legend.loc[cell_line,'Site']", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 539, "character": 0}, "end": {"line": 539, "character": 23}}, "selectionRange": {"start": {"line": 539, "character": 0}, "end": {"line": 539, "character": 19}}, "detail": "large_tissue_number = 0", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 540, "character": 0}, "end": {"line": 546, "character": 0}}, "selectionRange": {"start": {"line": 540, "character": 4}, "end": {"line": 540, "character": 10}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 540, "character": 0}, "end": {"line": 546, "character": 0}}, "selectionRange": {"start": {"line": 540, "character": 12}, "end": {"line": 540, "character": 21}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 543, "character": 8}, "end": {"line": 543, "character": 32}}, "selectionRange": {"start": {"line": 543, "character": 8}, "end": {"line": 543, "character": 27}}, "detail": "large_tissue_number += 1", "children": []}, {"name": "new_exp_gene_list", "kind": 13, "range": {"start": {"line": 566, "character": 0}, "end": {"line": 566, "character": 22}}, "selectionRange": {"start": {"line": 566, "character": 0}, "end": {"line": 566, "character": 17}}, "detail": "new_exp_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 567, "character": 0}, "end": {"line": 570, "character": 0}}, "selectionRange": {"start": {"line": 567, "character": 4}, "end": {"line": 567, "character": 5}}, "detail": "for i in exp_gene_list: if i in valid_gene_list: new_exp_gene_list.append(i)", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 41}}, "selectionRange": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 38}}, "selectionRange": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 72}}, "selectionRange": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 43}}, "selectionRange": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 68}}, "selectionRange": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 58}}, "selectionRange": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 68}}, "selectionRange": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "new_data_file", "kind": 13, "range": {"start": {"line": 597, "character": 0}, "end": {"line": 597, "character": 18}}, "selectionRange": {"start": {"line": 597, "character": 0}, "end": {"line": 597, "character": 13}}, "detail": "new_data_file = ''", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 601, "character": 0}, "end": {"line": 601, "character": 41}}, "selectionRange": {"start": {"line": 601, "character": 0}, "end": {"line": 601, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 602, "character": 0}, "end": {"line": 602, "character": 38}}, "selectionRange": {"start": {"line": 602, "character": 0}, "end": {"line": 602, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 603, "character": 0}, "end": {"line": 603, "character": 72}}, "selectionRange": {"start": {"line": 603, "character": 0}, "end": {"line": 603, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 605, "character": 0}, "end": {"line": 605, "character": 43}}, "selectionRange": {"start": {"line": 605, "character": 0}, "end": {"line": 605, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 606, "character": 0}, "end": {"line": 606, "character": 68}}, "selectionRange": {"start": {"line": 606, "character": 0}, "end": {"line": 606, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 613, "character": 0}, "end": {"line": 613, "character": 58}}, "selectionRange": {"start": {"line": 613, "character": 0}, "end": {"line": 613, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 614, "character": 0}, "end": {"line": 614, "character": 68}}, "selectionRange": {"start": {"line": 614, "character": 0}, "end": {"line": 614, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "rename_selected_drug_list", "kind": 13, "range": {"start": {"line": 618, "character": 0}, "end": {"line": 618, "character": 30}}, "selectionRange": {"start": {"line": 618, "character": 0}, "end": {"line": 618, "character": 25}}, "detail": "rename_selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 620, "character": 0}, "end": {"line": 690, "character": 0}}, "selectionRange": {"start": {"line": 620, "character": 4}, "end": {"line": 620, "character": 8}}, "detail": "for drug in selected_drug_list: print(drug) if drug not in drug2id_mapping: print('drug name wrong', drug) else: cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]] feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) ) feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) ) print(len(feature_exp_gene_list) + len(feature_mut_gene_list)) if len(feature_exp_gene_list) + len(feature_mut_gene_list) == 0: continue feature_description = [] drug_tissue_map = {} drug = drug.replace(' ','_') rename_selected_drug_list.append(drug) if drug == 'Nutlin-3a_(-)': drug = 'Nutlin-3a' drug_folder = '/data/merged/drug_feature/' + drug + '/' if not os.path.exists(drug_folder): os.makedirs(drug_folder) for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description)) file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\") pickle.dump(drug_tissue_map,file_handle) file_handle.close()", "children": []}, {"name": "cell_line_drug_matrix", "kind": 13, "range": {"start": {"line": 628, "character": 8}, "end": {"line": 628, "character": 84}}, "selectionRange": {"start": {"line": 628, "character": 8}, "end": {"line": 628, "character": 29}}, "detail": "cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]]", "children": []}, {"name": "feature_exp_gene_list", "kind": 13, "range": {"start": {"line": 633, "character": 8}, "end": {"line": 633, "character": 98}}, "selectionRange": {"start": {"line": 633, "character": 8}, "end": {"line": 633, "character": 29}}, "detail": "feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) )", "children": []}, {"name": "feature_mut_gene_list", "kind": 13, "range": {"start": {"line": 634, "character": 8}, "end": {"line": 634, "character": 98}}, "selectionRange": {"start": {"line": 634, "character": 8}, "end": {"line": 634, "character": 29}}, "detail": "feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) )", "children": []}, {"name": "feature_description", "kind": 13, "range": {"start": {"line": 638, "character": 8}, "end": {"line": 638, "character": 32}}, "selectionRange": {"start": {"line": 638, "character": 8}, "end": {"line": 638, "character": 27}}, "detail": "feature_description = []", "children": []}, {"name": "drug_tissue_map", "kind": 13, "range": {"start": {"line": 640, "character": 8}, "end": {"line": 640, "character": 28}}, "selectionRange": {"start": {"line": 640, "character": 8}, "end": {"line": 640, "character": 23}}, "detail": "drug_tissue_map = {}", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 642, "character": 8}, "end": {"line": 642, "character": 36}}, "selectionRange": {"start": {"line": 642, "character": 8}, "end": {"line": 642, "character": 12}}, "detail": "drug = drug.replace(' ','_')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 648, "character": 12}, "end": {"line": 648, "character": 30}}, "selectionRange": {"start": {"line": 648, "character": 12}, "end": {"line": 648, "character": 16}}, "detail": "drug = 'Nutlin-3a'", "children": []}, {"name": "drug_folder", "kind": 13, "range": {"start": {"line": 650, "character": 8}, "end": {"line": 650, "character": 63}}, "selectionRange": {"start": {"line": 650, "character": 8}, "end": {"line": 650, "character": 19}}, "detail": "drug_folder = '/data/merged/drug_feature/' + drug + '/'", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 656, "character": 8}, "end": {"line": 686, "character": 0}}, "selectionRange": {"start": {"line": 656, "character": 12}, "end": {"line": 656, "character": 18}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "tissue_cell_line_list", "kind": 13, "range": {"start": {"line": 656, "character": 8}, "end": {"line": 686, "character": 0}}, "selectionRange": {"start": {"line": 656, "character": 20}, "end": {"line": 656, "character": 41}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 659, "character": 12}, "end": {"line": 659, "character": 103}}, "selectionRange": {"start": {"line": 659, "character": 12}, "end": {"line": 659, "character": 35}}, "detail": "drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list )", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 660, "character": 12}, "end": {"line": 660, "character": 67}}, "selectionRange": {"start": {"line": 660, "character": 12}, "end": {"line": 660, "character": 35}}, "detail": "drug_specific_cell_line = list(drug_specific_cell_line)", "children": []}, {"name": "feature_list", "kind": 13, "range": {"start": {"line": 663, "character": 12}, "end": {"line": 663, "character": 29}}, "selectionRange": {"start": {"line": 663, "character": 12}, "end": {"line": 663, "character": 24}}, "detail": "feature_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 667, "character": 16}, "end": {"line": 669, "character": 0}}, "selectionRange": {"start": {"line": 667, "character": 20}, "end": {"line": 667, "character": 24}}, "detail": "for gene in feature_exp_gene_list: feature_description.append(gene+'_expression')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 672, "character": 16}, "end": {"line": 674, "character": 0}}, "selectionRange": {"start": {"line": 672, "character": 20}, "end": {"line": 672, "character": 24}}, "detail": "for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation')", "children": []}, {"name": "feature", "kind": 13, "range": {"start": {"line": 675, "character": 12}, "end": {"line": 675, "character": 58}}, "selectionRange": {"start": {"line": 675, "character": 12}, "end": {"line": 675, "character": 19}}, "detail": "feature = np.concatenate(feature_list, axis=1)", "children": []}, {"name": "label", "kind": 13, "range": {"start": {"line": 677, "character": 12}, "end": {"line": 677, "character": 88}}, "selectionRange": {"start": {"line": 677, "character": 12}, "end": {"line": 677, "character": 17}}, "detail": "label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 687, "character": 8}, "end": {"line": 687, "character": 84}}, "selectionRange": {"start": {"line": 687, "character": 8}, "end": {"line": 687, "character": 19}}, "detail": "file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\")", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 691, "character": 0}, "end": {"line": 691, "character": 52}}, "selectionRange": {"start": {"line": 691, "character": 0}, "end": {"line": 691, "character": 11}}, "detail": "file_handle = open('rename_selected_drug_list', 'w')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 692, "character": 0}, "end": {"line": 694, "character": 0}}, "selectionRange": {"start": {"line": 692, "character": 4}, "end": {"line": 692, "character": 8}}, "detail": "for drug in rename_selected_drug_list: file_handle.writelines(drug+ '\\n')", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 712, "character": 0}, "end": {"line": 712, "character": 13}}, "selectionRange": {"start": {"line": 712, "character": 7}, "end": {"line": 712, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cell_line_loc", "kind": 13, "range": {"start": {"line": 718, "character": 0}, "end": {"line": 718, "character": 84}}, "selectionRange": {"start": {"line": 718, "character": 0}, "end": {"line": 718, "character": 13}}, "detail": "cell_line_loc = '/cellar/users/samsonfong/Projects/tcrp-v2/from-ma/cell_line_lists/'", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 724, "character": 0}, "end": {"line": 726, "character": 0}}, "selectionRange": {"start": {"line": 724, "character": 53}, "end": {"line": 724, "character": 54}}, "detail": "with open('/data/drug_feature/KU-55933/KU', 'rb') as f: tmap= pickle.load(f)", "children": []}, {"name": "tmap", "kind": 13, "range": {"start": {"line": 725, "character": 4}, "end": {"line": 725, "character": 24}}, "selectionRange": {"start": {"line": 725, "character": 4}, "end": {"line": 725, "character": 8}}, "detail": "tmap= pickle.load(f)", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 743, "character": 0}, "end": {"line": 743, "character": 68}}, "selectionRange": {"start": {"line": 743, "character": 0}, "end": {"line": 743, "character": 1}}, "detail": "f = np.load('/data/drug_feature/KU-55933/lung_KU-55933_feature.npy')", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 61, "result": [{"name": "matplotlib", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 17}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 17}}, "detail": "module matplotlib", "children": []}, {"name": "os", "kind": 2, "range": {"start": {"line": 10, "character": 0}, "end": {"line": 10, "character": 9}}, "selectionRange": {"start": {"line": 10, "character": 7}, "end": {"line": 10, "character": 9}}, "detail": "module os", "children": []}, {"name": "pd", "kind": 2, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 11, "character": 19}}, "selectionRange": {"start": {"line": 11, "character": 17}, "end": {"line": 11, "character": 19}}, "detail": "module pd", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 12, "character": 0}, "end": {"line": 12, "character": 18}}, "selectionRange": {"start": {"line": 12, "character": 16}, "end": {"line": 12, "character": 18}}, "detail": "module np", "children": []}, {"name": "sys", "kind": 2, "range": {"start": {"line": 13, "character": 0}, "end": {"line": 13, "character": 10}}, "selectionRange": {"start": {"line": 13, "character": 7}, "end": {"line": 13, "character": 10}}, "detail": "module sys", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 14, "character": 0}, "end": {"line": 14, "character": 13}}, "selectionRange": {"start": {"line": 14, "character": 7}, "end": {"line": 14, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cdist", "kind": 12, "range": {"start": {"line": 15, "character": 0}, "end": {"line": 15, "character": 40}}, "selectionRange": {"start": {"line": 15, "character": 35}, "end": {"line": 15, "character": 40}}, "detail": "def cdist", "children": []}, {"name": "math", "kind": 2, "range": {"start": {"line": 16, "character": 0}, "end": {"line": 16, "character": 11}}, "selectionRange": {"start": {"line": 16, "character": 7}, "end": {"line": 16, "character": 11}}, "detail": "module math", "children": []}, {"name": "nx", "kind": 2, "range": {"start": {"line": 17, "character": 0}, "end": {"line": 17, "character": 21}}, "selectionRange": {"start": {"line": 17, "character": 19}, "end": {"line": 17, "character": 21}}, "detail": "module nx", "children": []}, {"name": "nxacc", "kind": 2, "range": {"start": {"line": 18, "character": 0}, "end": {"line": 18, "character": 56}}, "selectionRange": {"start": {"line": 18, "character": 51}, "end": {"line": 18, "character": 56}}, "detail": "module nxacc", "children": []}, {"name": "nxadag", "kind": 2, "range": {"start": {"line": 19, "character": 0}, "end": {"line": 19, "character": 40}}, "selectionRange": {"start": {"line": 19, "character": 34}, "end": {"line": 19, "character": 40}}, "detail": "module nxadag", "children": []}, {"name": "plt", "kind": 2, "range": {"start": {"line": 20, "character": 0}, "end": {"line": 20, "character": 31}}, "selectionRange": {"start": {"line": 20, "character": 28}, "end": {"line": 20, "character": 31}}, "detail": "module plt", "children": []}, {"name": "sns", "kind": 2, "range": {"start": {"line": 21, "character": 0}, "end": {"line": 21, "character": 21}}, "selectionRange": {"start": {"line": 21, "character": 18}, "end": {"line": 21, "character": 21}}, "detail": "module sns", "children": []}, {"name": "itertools", "kind": 2, "range": {"start": {"line": 22, "character": 0}, "end": {"line": 22, "character": 16}}, "selectionRange": {"start": {"line": 22, "character": 7}, "end": {"line": 22, "character": 16}}, "detail": "module itertools", "children": []}, {"name": "mygene", "kind": 2, "range": {"start": {"line": 23, "character": 0}, "end": {"line": 23, "character": 13}}, "selectionRange": {"start": {"line": 23, "character": 7}, "end": {"line": 23, "character": 13}}, "detail": "module mygene", "children": []}, {"name": "re", "kind": 2, "range": {"start": {"line": 24, "character": 0}, "end": {"line": 24, "character": 9}}, "selectionRange": {"start": {"line": 24, "character": 7}, "end": {"line": 24, "character": 9}}, "detail": "module re", "children": []}, {"name": "selected_exp_gene_list", "kind": 13, "range": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 95}}, "selectionRange": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 22}}, "detail": "selected_exp_gene_list = pd.read_csv(\"/data/common_exp_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "selected_mut_gene_list", "kind": 13, "range": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 95}}, "selectionRange": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 22}}, "detail": "selected_mut_gene_list = pd.read_csv(\"/data/common_mut_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "load_network", "kind": 12, "range": {"start": {"line": 37, "character": 0}, "end": {"line": 65, "character": 28}}, "selectionRange": {"start": {"line": 37, "character": 4}, "end": {"line": 37, "character": 16}}, "detail": "def load_network", "children": []}, {"name": "load_name_space", "kind": 12, "range": {"start": {"line": 67, "character": 0}, "end": {"line": 79, "character": 21}}, "selectionRange": {"start": {"line": 67, "character": 4}, "end": {"line": 67, "character": 19}}, "detail": "def load_name_space", "children": []}, {"name": "list2index", "kind": 12, "range": {"start": {"line": 81, "character": 0}, "end": {"line": 88, "character": 41}}, "selectionRange": {"start": {"line": 81, "character": 4}, "end": {"line": 81, "character": 14}}, "detail": "def list2index", "children": []}, {"name": "PDTC_data_file", "kind": 13, "range": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 30}}, "selectionRange": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 14}}, "detail": "PDTC_data_file = '/data/PTDC/'", "children": []}, {"name": "PDTC_exp_data_file", "kind": 13, "range": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 60}}, "selectionRange": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 18}}, "detail": "PDTC_exp_data_file = PDTC_data_file + 'ExpressionModels.tsv'", "children": []}, {"name": "PDTC_drug_cell_line_file", "kind": 13, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 72}}, "selectionRange": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 24}}, "detail": "PDTC_drug_cell_line_file = PDTC_data_file + 'DrugResponsesAUCModels.tsv'", "children": []}, {"name": "PDTC_mutation_data_file", "kind": 13, "range": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 59}}, "selectionRange": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 23}}, "detail": "PDTC_mutation_data_file = PDTC_data_file + 'SNVsModels.tsv'", "children": []}, {"name": "PDTC_drug_target_file", "kind": 13, "range": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 47}}, "selectionRange": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 21}}, "detail": "PDTC_drug_target_file ='/data/drug_targets.tsv'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 37}}, "selectionRange": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 46}}, "selectionRange": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "data_file", "kind": 13, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 25}}, "selectionRange": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 9}}, "detail": "data_file = '/data/GDSC/'", "children": []}, {"name": "new_network_file", "kind": 13, "range": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 27}}, "selectionRange": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 16}}, "detail": "new_network_file = '/data/'", "children": []}, {"name": "exp_data_file", "kind": 13, "range": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 61}}, "selectionRange": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 13}}, "detail": "exp_data_file = data_file + 'Cell_line_RMA_proc_basalExp.txt'", "children": []}, {"name": "drug_cell_line_file", "kind": 13, "range": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 64}}, "selectionRange": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 19}}, "detail": "drug_cell_line_file = data_file + 'v17_fitted_dose_response.csv'", "children": []}, {"name": "cell_line_detail_file", "kind": 13, "range": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 60}}, "selectionRange": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 21}}, "detail": "cell_line_detail_file = data_file + 'Cell_Lines_Details.csv'", "children": []}, {"name": "mutation_data_file", "kind": 13, "range": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 51}}, "selectionRange": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 18}}, "detail": "mutation_data_file = data_file + 'WES_variants.csv'", "children": []}, {"name": "drug_target_file", "kind": 13, "range": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 42}}, "selectionRange": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 16}}, "detail": "drug_target_file ='/data/drug_targets.tsv'", "children": []}, {"name": "feature_folder", "kind": 13, "range": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 27}}, "selectionRange": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 14}}, "detail": "feature_folder = 'feature/'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 37}}, "selectionRange": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 46}}, "selectionRange": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 58}}, "selectionRange": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 6}}, "detail": "exp_df = pd.read_csv(exp_data_file, sep='\\t', index_col=0)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 21}}, "selectionRange": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 6}}, "detail": "exp_df = exp_df.T[1:]", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 56}}, "selectionRange": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 6}}, "detail": "exp_df = exp_df.rename(columns={np.nan: 'NO_GENE_NAME'})", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 43}}, "selectionRange": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 6}}, "detail": "exp_df = exp_df.drop('NO_GENE_NAME',axis=1)", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 138, "character": 0}, "end": {"line": 140, "character": 26}}, "selectionRange": {"start": {"line": 138, "character": 4}, "end": {"line": 138, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 142, "character": 0}, "end": {"line": 142, "character": 44}}, "selectionRange": {"start": {"line": 142, "character": 7}, "end": {"line": 142, "character": 12}}, "detail": "exp_df.index = exp_df.index.map(stripNumber)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 40}}, "selectionRange": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 6}}, "detail": "exp_df = exp_df.groupby(level=0).first()", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 39}}, "selectionRange": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 6}}, "detail": "exp_df = exp_df[selected_exp_gene_list]", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 36}}, "selectionRange": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 48}}, "selectionRange": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 78}}, "selectionRange": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 11}}, "detail": "PDTC_exp_df = pd.read_csv(PDTC_exp_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 31}}, "selectionRange": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df.T[1:]", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 160, "character": 0}, "end": {"line": 162, "character": 26}}, "selectionRange": {"start": {"line": 160, "character": 4}, "end": {"line": 160, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 49}}, "selectionRange": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df[selected_exp_gene_list]", "children": []}, {"name": "PDTC_exp_gene_list", "kind": 13, "range": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 46}}, "selectionRange": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 18}}, "detail": "PDTC_exp_gene_list = list(PDTC_exp_df.columns)", "children": []}, {"name": "PDTC_exp_cell_line_list", "kind": 13, "range": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 58}}, "selectionRange": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 23}}, "detail": "PDTC_exp_cell_line_list = list(PDTC_exp_df.index.unique())", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 40}}, "selectionRange": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 6}}, "detail": "exp_df = pd.concat([exp_df,PDTC_exp_df])", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 36}}, "selectionRange": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 48}}, "selectionRange": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "maf", "kind": 13, "range": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 69}}, "selectionRange": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 3}}, "detail": "maf = pd.read_csv(mutation_data_file, sep=',', index_col=0).fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 75}}, "selectionRange": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 11}}, "detail": "mutation_df = maf.groupby(['COSMIC_ID', 'Gene']).size().unstack().fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 49}}, "selectionRange": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 11}}, "detail": "mutation_df = mutation_df[selected_mut_gene_list]", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 46}}, "selectionRange": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 58}}, "selectionRange": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "PDTC_maf", "kind": 13, "range": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 80}}, "selectionRange": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 8}}, "detail": "PDTC_maf = pd.read_csv(PDTC_mutation_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 61}}, "selectionRange": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_maf.replace(to_replace=\"NO\",value=0.0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 82}}, "selectionRange": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_mutation_df.replace(to_replace=\"chr*\",value=1.0,regex=True)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 47}}, "selectionRange": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df.transpose()", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 59}}, "selectionRange": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df[selected_mut_gene_list]", "children": []}, {"name": "PDTC_mutation_gene_list", "kind": 13, "range": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 56}}, "selectionRange": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 23}}, "detail": "PDTC_mutation_gene_list = list(PDTC_mutation_df.columns)", "children": []}, {"name": "PDTC_mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 68}}, "selectionRange": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 28}}, "detail": "PDTC_mutation_cell_line_list = list(PDTC_mutation_df.index.unique())", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 55}}, "selectionRange": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 11}}, "detail": "mutation_df = pd.concat([mutation_df,PDTC_mutation_df])", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 46}}, "selectionRange": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 58}}, "selectionRange": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 36}}, "selectionRange": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 11}}, "detail": "file_handle = open(drug_target_file)", "children": []}, {"name": "drug_target_map", "kind": 13, "range": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 20}}, "selectionRange": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 15}}, "detail": "drug_target_map = {}", "children": []}, {"name": "drug_target_list", "kind": 13, "range": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 21}}, "selectionRange": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 16}}, "detail": "drug_target_list = []", "children": []}, {"name": "line", "kind": 13, "range": {"start": {"line": 230, "character": 0}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 230, "character": 4}, "end": {"line": 230, "character": 8}}, "detail": "for line in file_handle: new_line = line.rstrip().split(\"\\t\") drug = new_line[0] target_list=new_line[1].split(',') if drug != \"Drug\": target_list_str = \"\" for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\" drug = drug.strip() drug_target_map[drug] = [] if ',' not in target_list_str: drug_target_map[drug].append(target_list_str.strip()) drug_target_list.append(target_list_str.strip()) else: target_list = target_list_str.split(',') for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "new_line", "kind": 13, "range": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 40}}, "selectionRange": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 12}}, "detail": "new_line = line.rstrip().split(\"\\t\")", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 22}}, "selectionRange": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 8}}, "detail": "drug = new_line[0]", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 38}}, "selectionRange": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 15}}, "detail": "target_list=new_line[1].split(',')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 28}}, "selectionRange": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 23}}, "detail": "target_list_str = \"\"", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 237, "character": 8}, "end": {"line": 242, "character": 0}}, "selectionRange": {"start": {"line": 237, "character": 12}, "end": {"line": 237, "character": 13}}, "detail": "for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 65}}, "selectionRange": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 71}}, "selectionRange": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 27}}, "selectionRange": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 12}}, "detail": "drug = drug.strip()", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 52}}, "selectionRange": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 23}}, "detail": "target_list = target_list_str.split(',')", "children": []}, {"name": "target", "kind": 13, "range": {"start": {"line": 250, "character": 12}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 250, "character": 16}, "end": {"line": 250, "character": 22}}, "detail": "for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "drug_target_map", "kind": 13, "range": {"start": {"line": 259, "character": 0}, "end": {"line": 259, "character": 20}}, "selectionRange": {"start": {"line": 259, "character": 0}, "end": {"line": 259, "character": 15}}, "detail": "drug_target_map = {}", "children": []}, {"name": "drug_target_list", "kind": 13, "range": {"start": {"line": 260, "character": 0}, "end": {"line": 260, "character": 21}}, "selectionRange": {"start": {"line": 260, "character": 0}, "end": {"line": 260, "character": 16}}, "detail": "drug_target_list = []", "children": []}, {"name": "line", "kind": 13, "range": {"start": {"line": 261, "character": 0}, "end": {"line": 284, "character": 0}}, "selectionRange": {"start": {"line": 261, "character": 4}, "end": {"line": 261, "character": 8}}, "detail": "for line in file_handle: new_line = line.rstrip().split(\"\\t\") drug = new_line[0] target_list=new_line[1].split(',') if drug != \"Drug\": target_list_str = \"\" for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\" drug = drug.strip() drug_target_map[drug] = [] if ',' not in target_list_str: drug_target_map[drug].append(target_list_str.strip()) drug_target_list.append(target_list_str.strip()) else: target_list = target_list_str.split(',') for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "new_line", "kind": 13, "range": {"start": {"line": 263, "character": 4}, "end": {"line": 263, "character": 40}}, "selectionRange": {"start": {"line": 263, "character": 4}, "end": {"line": 263, "character": 12}}, "detail": "new_line = line.rstrip().split(\"\\t\")", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 264, "character": 4}, "end": {"line": 264, "character": 22}}, "selectionRange": {"start": {"line": 264, "character": 4}, "end": {"line": 264, "character": 8}}, "detail": "drug = new_line[0]", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 265, "character": 4}, "end": {"line": 265, "character": 38}}, "selectionRange": {"start": {"line": 265, "character": 4}, "end": {"line": 265, "character": 15}}, "detail": "target_list=new_line[1].split(',')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 267, "character": 8}, "end": {"line": 267, "character": 28}}, "selectionRange": {"start": {"line": 267, "character": 8}, "end": {"line": 267, "character": 23}}, "detail": "target_list_str = \"\"", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 268, "character": 8}, "end": {"line": 273, "character": 0}}, "selectionRange": {"start": {"line": 268, "character": 12}, "end": {"line": 268, "character": 13}}, "detail": "for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 270, "character": 16}, "end": {"line": 270, "character": 65}}, "selectionRange": {"start": {"line": 270, "character": 16}, "end": {"line": 270, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 272, "character": 16}, "end": {"line": 272, "character": 71}}, "selectionRange": {"start": {"line": 272, "character": 16}, "end": {"line": 272, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 273, "character": 8}, "end": {"line": 273, "character": 27}}, "selectionRange": {"start": {"line": 273, "character": 8}, "end": {"line": 273, "character": 12}}, "detail": "drug = drug.strip()", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 280, "character": 12}, "end": {"line": 280, "character": 52}}, "selectionRange": {"start": {"line": 280, "character": 12}, "end": {"line": 280, "character": 23}}, "detail": "target_list = target_list_str.split(',')", "children": []}, {"name": "target", "kind": 13, "range": {"start": {"line": 281, "character": 12}, "end": {"line": 284, "character": 0}}, "selectionRange": {"start": {"line": 281, "character": 16}, "end": {"line": 281, "character": 22}}, "detail": "for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "drugs_legend", "kind": 13, "range": {"start": {"line": 287, "character": 0}, "end": {"line": 287, "character": 85}}, "selectionRange": {"start": {"line": 287, "character": 0}, "end": {"line": 287, "character": 12}}, "detail": "drugs_legend = pd.read_csv('/data/GDSC/Screened_Compounds.csv', sep=',', index_col=0)", "children": []}, {"name": "drug2id_mapping", "kind": 13, "range": {"start": {"line": 289, "character": 0}, "end": {"line": 289, "character": 20}}, "selectionRange": {"start": {"line": 289, "character": 0}, "end": {"line": 289, "character": 15}}, "detail": "drug2id_mapping = {}", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 291, "character": 0}, "end": {"line": 294, "character": 0}}, "selectionRange": {"start": {"line": 291, "character": 4}, "end": {"line": 291, "character": 9}}, "detail": "for index in list(drugs_legend.index) : drug_name = drugs_legend.loc[index,'Drug Name'] drug2id_mapping[ drug_name ] = index", "children": []}, {"name": "drug_name", "kind": 13, "range": {"start": {"line": 292, "character": 4}, "end": {"line": 292, "character": 51}}, "selectionRange": {"start": {"line": 292, "character": 4}, "end": {"line": 292, "character": 13}}, "detail": "drug_name = drugs_legend.loc[index,'Drug Name']", "children": []}, {"name": "valid_gene_list", "kind": 13, "range": {"start": {"line": 299, "character": 0}, "end": {"line": 299, "character": 92}}, "selectionRange": {"start": {"line": 299, "character": 0}, "end": {"line": 299, "character": 15}}, "detail": "valid_gene_list = list(set(drug_target_list) | set(exp_gene_list) | set(mutation_gene_list))", "children": []}, {"name": "network_list", "kind": 13, "range": {"start": {"line": 305, "character": 0}, "end": {"line": 305, "character": 82}}, "selectionRange": {"start": {"line": 305, "character": 0}, "end": {"line": 305, "character": 12}}, "detail": "network_list = [new_network_file+inbiomap_file, new_network_file+pathwaycomm_file]", "children": []}, {"name": "gene_neighbor_map", "kind": 13, "range": {"start": {"line": 306, "character": 0}, "end": {"line": 306, "character": 64}}, "selectionRange": {"start": {"line": 306, "character": 0}, "end": {"line": 306, "character": 17}}, "detail": "gene_neighbor_map = load_network(network_list, valid_gene_list)", "children": []}, {"name": "gene_name_df", "kind": 13, "range": {"start": {"line": 312, "character": 0}, "end": {"line": 312, "character": 89}}, "selectionRange": {"start": {"line": 312, "character": 0}, "end": {"line": 312, "character": 12}}, "detail": "gene_name_df = pd.read_table('/data/HUGO_protein-coding_gene.tsv',index_col=25, sep='\\t')", "children": []}, {"name": "gene_name_map", "kind": 13, "range": {"start": {"line": 318, "character": 0}, "end": {"line": 318, "character": 18}}, "selectionRange": {"start": {"line": 318, "character": 0}, "end": {"line": 318, "character": 13}}, "detail": "gene_name_map = {}", "children": []}, {"name": "uniprot_gene", "kind": 13, "range": {"start": {"line": 320, "character": 0}, "end": {"line": 329, "character": 0}}, "selectionRange": {"start": {"line": 320, "character": 4}, "end": {"line": 320, "character": 16}}, "detail": "for uniprot_gene in gene_name_df.index: if isinstance(uniprot_gene, type('aaa')) == False: continue if isinstance(gene_name_df.loc[uniprot_gene, 'symbol'], type('aaa')) == False: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol'][0] else: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 76}}, "selectionRange": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "uniprot_gene_set", "kind": 13, "range": {"start": {"line": 336, "character": 0}, "end": {"line": 336, "character": 24}}, "selectionRange": {"start": {"line": 336, "character": 0}, "end": {"line": 336, "character": 16}}, "detail": "uniprot_gene_set = set()", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 338, "character": 0}, "end": {"line": 347, "character": 0}}, "selectionRange": {"start": {"line": 338, "character": 4}, "end": {"line": 338, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 343, "character": 4}, "end": {"line": 343, "character": 74}}, "selectionRange": {"start": {"line": 343, "character": 4}, "end": {"line": 343, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 345, "character": 4}, "end": {"line": 347, "character": 0}}, "selectionRange": {"start": {"line": 345, "character": 8}, "end": {"line": 345, "character": 12}}, "detail": "for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "query_gene_set", "kind": 13, "range": {"start": {"line": 350, "character": 0}, "end": {"line": 350, "character": 19}}, "selectionRange": {"start": {"line": 350, "character": 0}, "end": {"line": 350, "character": 14}}, "detail": "query_gene_set = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 352, "character": 0}, "end": {"line": 355, "character": 0}}, "selectionRange": {"start": {"line": 352, "character": 4}, "end": {"line": 352, "character": 8}}, "detail": "for gene in uniprot_gene_set: if gene not in gene_name_map: query_gene_set.append(gene)", "children": []}, {"name": "query_gene_list", "kind": 13, "range": {"start": {"line": 358, "character": 0}, "end": {"line": 358, "character": 38}}, "selectionRange": {"start": {"line": 358, "character": 0}, "end": {"line": 358, "character": 15}}, "detail": "query_gene_list = list(query_gene_set)", "children": []}, {"name": "mg", "kind": 13, "range": {"start": {"line": 360, "character": 0}, "end": {"line": 360, "character": 24}}, "selectionRange": {"start": {"line": 360, "character": 0}, "end": {"line": 360, "character": 2}}, "detail": "mg = mygene.MyGeneInfo()", "children": []}, {"name": "out", "kind": 13, "range": {"start": {"line": 361, "character": 0}, "end": {"line": 361, "character": 87}}, "selectionRange": {"start": {"line": 361, "character": 0}, "end": {"line": 361, "character": 3}}, "detail": "out = mg.querymany(query_gene_list, scopes='uniprot', fields='symbol', species='human')", "children": []}, {"name": "not_found_gene_list", "kind": 13, "range": {"start": {"line": 363, "character": 0}, "end": {"line": 363, "character": 24}}, "selectionRange": {"start": {"line": 363, "character": 0}, "end": {"line": 363, "character": 19}}, "detail": "not_found_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 365, "character": 0}, "end": {"line": 370, "character": 0}}, "selectionRange": {"start": {"line": 365, "character": 4}, "end": {"line": 365, "character": 5}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 365, "character": 0}, "end": {"line": 370, "character": 0}}, "selectionRange": {"start": {"line": 365, "character": 7}, "end": {"line": 365, "character": 11}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 377, "character": 0}, "end": {"line": 377, "character": 76}}, "selectionRange": {"start": {"line": 377, "character": 0}, "end": {"line": 377, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 379, "character": 0}, "end": {"line": 401, "character": 0}}, "selectionRange": {"start": {"line": 379, "character": 4}, "end": {"line": 379, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') complex_symbol_list = [] for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] ) for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 384, "character": 4}, "end": {"line": 384, "character": 74}}, "selectionRange": {"start": {"line": 384, "character": 4}, "end": {"line": 384, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "complex_symbol_list", "kind": 13, "range": {"start": {"line": 386, "character": 4}, "end": {"line": 386, "character": 28}}, "selectionRange": {"start": {"line": 386, "character": 4}, "end": {"line": 386, "character": 23}}, "detail": "complex_symbol_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 388, "character": 4}, "end": {"line": 391, "character": 0}}, "selectionRange": {"start": {"line": 388, "character": 8}, "end": {"line": 388, "character": 12}}, "detail": "for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] )", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 392, "character": 4}, "end": {"line": 401, "character": 0}}, "selectionRange": {"start": {"line": 392, "character": 8}, "end": {"line": 392, "character": 13}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 392, "character": 4}, "end": {"line": 401, "character": 0}}, "selectionRange": {"start": {"line": 392, "character": 15}, "end": {"line": 392, "character": 20}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene_exp_neighbor_map", "kind": 13, "range": {"start": {"line": 406, "character": 0}, "end": {"line": 406, "character": 26}}, "selectionRange": {"start": {"line": 406, "character": 0}, "end": {"line": 406, "character": 21}}, "detail": "gene_exp_neighbor_map = {}", "children": []}, {"name": "exp_matrix", "kind": 13, "range": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 26}}, "selectionRange": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 10}}, "detail": "exp_matrix = exp_df.values", "children": []}, {"name": "P", "kind": 13, "range": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 79}}, "selectionRange": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 1}}, "detail": "P = 1 - cdist(np.transpose(exp_matrix), np.transpose(exp_matrix),'correlation')", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 411, "character": 0}, "end": {"line": 425, "character": 0}}, "selectionRange": {"start": {"line": 411, "character": 4}, "end": {"line": 411, "character": 5}}, "detail": "for i in range(len(exp_gene_list)): gene1 = exp_gene_list[i] gene_exp_neighbor_map[gene1] = set() for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2) if gene1 not in gene_exp_neighbor_map[gene1]: print (gene1, 'not in itself?', P[i,i])", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 413, "character": 4}, "end": {"line": 413, "character": 28}}, "selectionRange": {"start": {"line": 413, "character": 4}, "end": {"line": 413, "character": 9}}, "detail": "gene1 = exp_gene_list[i]", "children": []}, {"name": "j", "kind": 13, "range": {"start": {"line": 416, "character": 4}, "end": {"line": 422, "character": 0}}, "selectionRange": {"start": {"line": 416, "character": 8}, "end": {"line": 416, "character": 9}}, "detail": "for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 418, "character": 8}, "end": {"line": 418, "character": 32}}, "selectionRange": {"start": {"line": 418, "character": 8}, "end": {"line": 418, "character": 13}}, "detail": "gene2 = exp_gene_list[j]", "children": []}, {"name": "drug_feature_list", "kind": 13, "range": {"start": {"line": 433, "character": 0}, "end": {"line": 433, "character": 22}}, "selectionRange": {"start": {"line": 433, "character": 0}, "end": {"line": 433, "character": 17}}, "detail": "drug_feature_list = []", "children": []}, {"name": "drug_neighbor_map", "kind": 13, "range": {"start": {"line": 434, "character": 0}, "end": {"line": 434, "character": 22}}, "selectionRange": {"start": {"line": 434, "character": 0}, "end": {"line": 434, "character": 17}}, "detail": "drug_neighbor_map = {}", "children": []}, {"name": "selected_drug_list", "kind": 13, "range": {"start": {"line": 435, "character": 0}, "end": {"line": 435, "character": 23}}, "selectionRange": {"start": {"line": 435, "character": 0}, "end": {"line": 435, "character": 18}}, "detail": "selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 437, "character": 0}, "end": {"line": 454, "character": 0}}, "selectionRange": {"start": {"line": 437, "character": 4}, "end": {"line": 437, "character": 8}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 437, "character": 0}, "end": {"line": 454, "character": 0}}, "selectionRange": {"start": {"line": 437, "character": 10}, "end": {"line": 437, "character": 21}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 440, "character": 8}, "end": {"line": 450, "character": 0}}, "selectionRange": {"start": {"line": 440, "character": 12}, "end": {"line": 440, "character": 16}}, "detail": "for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene]", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 468, "character": 0}, "end": {"line": 468, "character": 52}}, "selectionRange": {"start": {"line": 468, "character": 0}, "end": {"line": 468, "character": 5}}, "detail": "drugs = pd.read_csv(drug_cell_line_file,index_col=2)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 93}}, "selectionRange": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 5}}, "detail": "drugs = drugs.drop([\"DATASET_VERSION\",\"IC50_RESULTS_ID\",\"MAX_CONC_MICROMOLAR\",\"RMSE\"],axis=1)", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 470, "character": 0}, "end": {"line": 470, "character": 49}}, "selectionRange": {"start": {"line": 470, "character": 0}, "end": {"line": 470, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 472, "character": 0}, "end": {"line": 472, "character": 28}}, "selectionRange": {"start": {"line": 472, "character": 0}, "end": {"line": 472, "character": 9}}, "detail": "drug_list = drugs[\"DRUG_ID\"]", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 473, "character": 0}, "end": {"line": 473, "character": 16}}, "selectionRange": {"start": {"line": 473, "character": 0}, "end": {"line": 473, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 483, "character": 0}, "end": {"line": 483, "character": 71}}, "selectionRange": {"start": {"line": 483, "character": 0}, "end": {"line": 483, "character": 10}}, "detail": "PDTC_drugs = pd.read_csv(PDTC_drug_cell_line_file,sep='\\t',index_col=0)", "children": []}, {"name": "PDTC_drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 59}}, "selectionRange": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 25}}, "detail": "PDTC_drugs_cell_line_list = list(PDTC_drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 486, "character": 0}, "end": {"line": 486, "character": 39}}, "selectionRange": {"start": {"line": 486, "character": 0}, "end": {"line": 486, "character": 9}}, "detail": "drug_list = PDTC_drugs[\"Drug\"].tolist()", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 487, "character": 0}, "end": {"line": 487, "character": 16}}, "selectionRange": {"start": {"line": 487, "character": 0}, "end": {"line": 487, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 488, "character": 0}, "end": {"line": 493, "character": 0}}, "selectionRange": {"start": {"line": 488, "character": 4}, "end": {"line": 488, "character": 5}}, "detail": "for i in drug_list: if i in drug2id_mapping.keys(): new_drug_id.append(drug2id_mapping[i]) else: new_drug_id.append(0)", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 495, "character": 0}, "end": {"line": 495, "character": 84}}, "selectionRange": {"start": {"line": 495, "character": 0}, "end": {"line": 495, "character": 10}}, "detail": "PDTC_drugs = PDTC_drugs.drop([\"Drug\",\"iC50\",\"D1_CONC\",\"D5_CONC\",\"perc.iC50\"],axis=1)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 503, "character": 0}, "end": {"line": 503, "character": 37}}, "selectionRange": {"start": {"line": 503, "character": 0}, "end": {"line": 503, "character": 5}}, "detail": "drugs = pd.concat([drugs,PDTC_drugs])", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 510, "character": 0}, "end": {"line": 510, "character": 49}}, "selectionRange": {"start": {"line": 510, "character": 0}, "end": {"line": 510, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "cell_line_list", "kind": 13, "range": {"start": {"line": 516, "character": 0}, "end": {"line": 516, "character": 102}}, "selectionRange": {"start": {"line": 516, "character": 0}, "end": {"line": 516, "character": 14}}, "detail": "cell_line_list = list(set(drugs_cell_line_list)&set(exp_cell_line_list)&set(mutation_cell_line_list) )", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 523, "character": 0}, "end": {"line": 523, "character": 66}}, "selectionRange": {"start": {"line": 523, "character": 0}, "end": {"line": 523, "character": 16}}, "detail": "cell_line_legend = pd.read_csv(cell_line_detail_file, index_col=1)", "children": []}, {"name": "PDTC_cell_line", "kind": 13, "range": {"start": {"line": 524, "character": 0}, "end": {"line": 524, "character": 206}}, "selectionRange": {"start": {"line": 524, "character": 0}, "end": {"line": 524, "character": 14}}, "detail": "PDTC_cell_line = pd.DataFrame({'Line': [\"BRCA\"]*len(PDTC_exp_cell_line_list), 'Site':[\"PDTC\"]*len(PDTC_exp_cell_line_list),\"Histology\":[\"breast\"]*len(PDTC_exp_cell_line_list)},index=PDTC_exp_cell_line_list)", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 525, "character": 0}, "end": {"line": 525, "character": 63}}, "selectionRange": {"start": {"line": 525, "character": 0}, "end": {"line": 525, "character": 16}}, "detail": "cell_line_legend = pd.concat([cell_line_legend,PDTC_cell_line])", "children": []}, {"name": "tissue_map", "kind": 13, "range": {"start": {"line": 528, "character": 0}, "end": {"line": 528, "character": 15}}, "selectionRange": {"start": {"line": 528, "character": 0}, "end": {"line": 528, "character": 10}}, "detail": "tissue_map = {}", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 530, "character": 0}, "end": {"line": 538, "character": 0}}, "selectionRange": {"start": {"line": 530, "character": 4}, "end": {"line": 530, "character": 13}}, "detail": "for cell_line in cell_line_list: tissue = cell_line_legend.loc[cell_line,'Site'] if tissue not in tissue_map: tissue_map[tissue] = [] tissue_map[tissue].append(cell_line)", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 532, "character": 4}, "end": {"line": 532, "character": 51}}, "selectionRange": {"start": {"line": 532, "character": 4}, "end": {"line": 532, "character": 10}}, "detail": "tissue = cell_line_legend.loc[cell_line,'Site']", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 539, "character": 0}, "end": {"line": 539, "character": 23}}, "selectionRange": {"start": {"line": 539, "character": 0}, "end": {"line": 539, "character": 19}}, "detail": "large_tissue_number = 0", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 540, "character": 0}, "end": {"line": 546, "character": 0}}, "selectionRange": {"start": {"line": 540, "character": 4}, "end": {"line": 540, "character": 10}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 540, "character": 0}, "end": {"line": 546, "character": 0}}, "selectionRange": {"start": {"line": 540, "character": 12}, "end": {"line": 540, "character": 21}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 543, "character": 8}, "end": {"line": 543, "character": 32}}, "selectionRange": {"start": {"line": 543, "character": 8}, "end": {"line": 543, "character": 27}}, "detail": "large_tissue_number += 1", "children": []}, {"name": "new_exp_gene_list", "kind": 13, "range": {"start": {"line": 566, "character": 0}, "end": {"line": 566, "character": 22}}, "selectionRange": {"start": {"line": 566, "character": 0}, "end": {"line": 566, "character": 17}}, "detail": "new_exp_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 567, "character": 0}, "end": {"line": 570, "character": 0}}, "selectionRange": {"start": {"line": 567, "character": 4}, "end": {"line": 567, "character": 5}}, "detail": "for i in exp_gene_list: if i in valid_gene_list: new_exp_gene_list.append(i)", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 41}}, "selectionRange": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 38}}, "selectionRange": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 72}}, "selectionRange": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 43}}, "selectionRange": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 68}}, "selectionRange": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 58}}, "selectionRange": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 68}}, "selectionRange": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "new_data_file", "kind": 13, "range": {"start": {"line": 597, "character": 0}, "end": {"line": 597, "character": 18}}, "selectionRange": {"start": {"line": 597, "character": 0}, "end": {"line": 597, "character": 13}}, "detail": "new_data_file = ''", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 601, "character": 0}, "end": {"line": 601, "character": 41}}, "selectionRange": {"start": {"line": 601, "character": 0}, "end": {"line": 601, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 602, "character": 0}, "end": {"line": 602, "character": 38}}, "selectionRange": {"start": {"line": 602, "character": 0}, "end": {"line": 602, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 603, "character": 0}, "end": {"line": 603, "character": 72}}, "selectionRange": {"start": {"line": 603, "character": 0}, "end": {"line": 603, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 605, "character": 0}, "end": {"line": 605, "character": 43}}, "selectionRange": {"start": {"line": 605, "character": 0}, "end": {"line": 605, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 606, "character": 0}, "end": {"line": 606, "character": 68}}, "selectionRange": {"start": {"line": 606, "character": 0}, "end": {"line": 606, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 613, "character": 0}, "end": {"line": 613, "character": 58}}, "selectionRange": {"start": {"line": 613, "character": 0}, "end": {"line": 613, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 614, "character": 0}, "end": {"line": 614, "character": 68}}, "selectionRange": {"start": {"line": 614, "character": 0}, "end": {"line": 614, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "rename_selected_drug_list", "kind": 13, "range": {"start": {"line": 618, "character": 0}, "end": {"line": 618, "character": 30}}, "selectionRange": {"start": {"line": 618, "character": 0}, "end": {"line": 618, "character": 25}}, "detail": "rename_selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 620, "character": 0}, "end": {"line": 690, "character": 0}}, "selectionRange": {"start": {"line": 620, "character": 4}, "end": {"line": 620, "character": 8}}, "detail": "for drug in selected_drug_list: print(drug) if drug not in drug2id_mapping: print('drug name wrong', drug) else: cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]] feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) ) feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) ) print(len(feature_exp_gene_list) + len(feature_mut_gene_list)) if len(feature_exp_gene_list) + len(feature_mut_gene_list) == 0: continue feature_description = [] drug_tissue_map = {} drug = drug.replace(' ','_') rename_selected_drug_list.append(drug) if drug == 'Nutlin-3a_(-)': drug = 'Nutlin-3a' drug_folder = '/data/merged/drug_feature/' + drug + '/' if not os.path.exists(drug_folder): os.makedirs(drug_folder) for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description)) file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\") pickle.dump(drug_tissue_map,file_handle) file_handle.close()", "children": []}, {"name": "cell_line_drug_matrix", "kind": 13, "range": {"start": {"line": 628, "character": 8}, "end": {"line": 628, "character": 84}}, "selectionRange": {"start": {"line": 628, "character": 8}, "end": {"line": 628, "character": 29}}, "detail": "cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]]", "children": []}, {"name": "feature_exp_gene_list", "kind": 13, "range": {"start": {"line": 633, "character": 8}, "end": {"line": 633, "character": 98}}, "selectionRange": {"start": {"line": 633, "character": 8}, "end": {"line": 633, "character": 29}}, "detail": "feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) )", "children": []}, {"name": "feature_mut_gene_list", "kind": 13, "range": {"start": {"line": 634, "character": 8}, "end": {"line": 634, "character": 98}}, "selectionRange": {"start": {"line": 634, "character": 8}, "end": {"line": 634, "character": 29}}, "detail": "feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) )", "children": []}, {"name": "feature_description", "kind": 13, "range": {"start": {"line": 638, "character": 8}, "end": {"line": 638, "character": 32}}, "selectionRange": {"start": {"line": 638, "character": 8}, "end": {"line": 638, "character": 27}}, "detail": "feature_description = []", "children": []}, {"name": "drug_tissue_map", "kind": 13, "range": {"start": {"line": 640, "character": 8}, "end": {"line": 640, "character": 28}}, "selectionRange": {"start": {"line": 640, "character": 8}, "end": {"line": 640, "character": 23}}, "detail": "drug_tissue_map = {}", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 642, "character": 8}, "end": {"line": 642, "character": 36}}, "selectionRange": {"start": {"line": 642, "character": 8}, "end": {"line": 642, "character": 12}}, "detail": "drug = drug.replace(' ','_')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 648, "character": 12}, "end": {"line": 648, "character": 30}}, "selectionRange": {"start": {"line": 648, "character": 12}, "end": {"line": 648, "character": 16}}, "detail": "drug = 'Nutlin-3a'", "children": []}, {"name": "drug_folder", "kind": 13, "range": {"start": {"line": 650, "character": 8}, "end": {"line": 650, "character": 63}}, "selectionRange": {"start": {"line": 650, "character": 8}, "end": {"line": 650, "character": 19}}, "detail": "drug_folder = '/data/merged/drug_feature/' + drug + '/'", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 656, "character": 8}, "end": {"line": 686, "character": 0}}, "selectionRange": {"start": {"line": 656, "character": 12}, "end": {"line": 656, "character": 18}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "tissue_cell_line_list", "kind": 13, "range": {"start": {"line": 656, "character": 8}, "end": {"line": 686, "character": 0}}, "selectionRange": {"start": {"line": 656, "character": 20}, "end": {"line": 656, "character": 41}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 659, "character": 12}, "end": {"line": 659, "character": 103}}, "selectionRange": {"start": {"line": 659, "character": 12}, "end": {"line": 659, "character": 35}}, "detail": "drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list )", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 660, "character": 12}, "end": {"line": 660, "character": 67}}, "selectionRange": {"start": {"line": 660, "character": 12}, "end": {"line": 660, "character": 35}}, "detail": "drug_specific_cell_line = list(drug_specific_cell_line)", "children": []}, {"name": "feature_list", "kind": 13, "range": {"start": {"line": 663, "character": 12}, "end": {"line": 663, "character": 29}}, "selectionRange": {"start": {"line": 663, "character": 12}, "end": {"line": 663, "character": 24}}, "detail": "feature_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 667, "character": 16}, "end": {"line": 669, "character": 0}}, "selectionRange": {"start": {"line": 667, "character": 20}, "end": {"line": 667, "character": 24}}, "detail": "for gene in feature_exp_gene_list: feature_description.append(gene+'_expression')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 672, "character": 16}, "end": {"line": 674, "character": 0}}, "selectionRange": {"start": {"line": 672, "character": 20}, "end": {"line": 672, "character": 24}}, "detail": "for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation')", "children": []}, {"name": "feature", "kind": 13, "range": {"start": {"line": 675, "character": 12}, "end": {"line": 675, "character": 58}}, "selectionRange": {"start": {"line": 675, "character": 12}, "end": {"line": 675, "character": 19}}, "detail": "feature = np.concatenate(feature_list, axis=1)", "children": []}, {"name": "label", "kind": 13, "range": {"start": {"line": 677, "character": 12}, "end": {"line": 677, "character": 88}}, "selectionRange": {"start": {"line": 677, "character": 12}, "end": {"line": 677, "character": 17}}, "detail": "label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 687, "character": 8}, "end": {"line": 687, "character": 84}}, "selectionRange": {"start": {"line": 687, "character": 8}, "end": {"line": 687, "character": 19}}, "detail": "file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\")", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 691, "character": 0}, "end": {"line": 691, "character": 52}}, "selectionRange": {"start": {"line": 691, "character": 0}, "end": {"line": 691, "character": 11}}, "detail": "file_handle = open('rename_selected_drug_list', 'w')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 692, "character": 0}, "end": {"line": 694, "character": 0}}, "selectionRange": {"start": {"line": 692, "character": 4}, "end": {"line": 692, "character": 8}}, "detail": "for drug in rename_selected_drug_list: file_handle.writelines(drug+ '\\n')", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 712, "character": 0}, "end": {"line": 712, "character": 13}}, "selectionRange": {"start": {"line": 712, "character": 7}, "end": {"line": 712, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cell_line_loc", "kind": 13, "range": {"start": {"line": 718, "character": 0}, "end": {"line": 718, "character": 84}}, "selectionRange": {"start": {"line": 718, "character": 0}, "end": {"line": 718, "character": 13}}, "detail": "cell_line_loc = '/cellar/users/samsonfong/Projects/tcrp-v2/from-ma/cell_line_lists/'", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 724, "character": 0}, "end": {"line": 726, "character": 0}}, "selectionRange": {"start": {"line": 724, "character": 53}, "end": {"line": 724, "character": 54}}, "detail": "with open('/data/drug_feature/KU-55933/KU', 'rb') as f: tmap= pickle.load(f)", "children": []}, {"name": "tmap", "kind": 13, "range": {"start": {"line": 725, "character": 4}, "end": {"line": 725, "character": 24}}, "selectionRange": {"start": {"line": 725, "character": 4}, "end": {"line": 725, "character": 8}}, "detail": "tmap= pickle.load(f)", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 743, "character": 0}, "end": {"line": 743, "character": 68}}, "selectionRange": {"start": {"line": 743, "character": 0}, "end": {"line": 743, "character": 1}}, "detail": "f = np.load('/data/drug_feature/KU-55933/lung_KU-55933_feature.npy')", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 62, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 63, "result": [{"name": "matplotlib", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 17}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 17}}, "detail": "module matplotlib", "children": []}, {"name": "os", "kind": 2, "range": {"start": {"line": 10, "character": 0}, "end": {"line": 10, "character": 9}}, "selectionRange": {"start": {"line": 10, "character": 7}, "end": {"line": 10, "character": 9}}, "detail": "module os", "children": []}, {"name": "pd", "kind": 2, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 11, "character": 19}}, "selectionRange": {"start": {"line": 11, "character": 17}, "end": {"line": 11, "character": 19}}, "detail": "module pd", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 12, "character": 0}, "end": {"line": 12, "character": 18}}, "selectionRange": {"start": {"line": 12, "character": 16}, "end": {"line": 12, "character": 18}}, "detail": "module np", "children": []}, {"name": "sys", "kind": 2, "range": {"start": {"line": 13, "character": 0}, "end": {"line": 13, "character": 10}}, "selectionRange": {"start": {"line": 13, "character": 7}, "end": {"line": 13, "character": 10}}, "detail": "module sys", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 14, "character": 0}, "end": {"line": 14, "character": 13}}, "selectionRange": {"start": {"line": 14, "character": 7}, "end": {"line": 14, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cdist", "kind": 12, "range": {"start": {"line": 15, "character": 0}, "end": {"line": 15, "character": 40}}, "selectionRange": {"start": {"line": 15, "character": 35}, "end": {"line": 15, "character": 40}}, "detail": "def cdist", "children": []}, {"name": "math", "kind": 2, "range": {"start": {"line": 16, "character": 0}, "end": {"line": 16, "character": 11}}, "selectionRange": {"start": {"line": 16, "character": 7}, "end": {"line": 16, "character": 11}}, "detail": "module math", "children": []}, {"name": "nx", "kind": 2, "range": {"start": {"line": 17, "character": 0}, "end": {"line": 17, "character": 21}}, "selectionRange": {"start": {"line": 17, "character": 19}, "end": {"line": 17, "character": 21}}, "detail": "module nx", "children": []}, {"name": "nxacc", "kind": 2, "range": {"start": {"line": 18, "character": 0}, "end": {"line": 18, "character": 56}}, "selectionRange": {"start": {"line": 18, "character": 51}, "end": {"line": 18, "character": 56}}, "detail": "module nxacc", "children": []}, {"name": "nxadag", "kind": 2, "range": {"start": {"line": 19, "character": 0}, "end": {"line": 19, "character": 40}}, "selectionRange": {"start": {"line": 19, "character": 34}, "end": {"line": 19, "character": 40}}, "detail": "module nxadag", "children": []}, {"name": "plt", "kind": 2, "range": {"start": {"line": 20, "character": 0}, "end": {"line": 20, "character": 31}}, "selectionRange": {"start": {"line": 20, "character": 28}, "end": {"line": 20, "character": 31}}, "detail": "module plt", "children": []}, {"name": "sns", "kind": 2, "range": {"start": {"line": 21, "character": 0}, "end": {"line": 21, "character": 21}}, "selectionRange": {"start": {"line": 21, "character": 18}, "end": {"line": 21, "character": 21}}, "detail": "module sns", "children": []}, {"name": "itertools", "kind": 2, "range": {"start": {"line": 22, "character": 0}, "end": {"line": 22, "character": 16}}, "selectionRange": {"start": {"line": 22, "character": 7}, "end": {"line": 22, "character": 16}}, "detail": "module itertools", "children": []}, {"name": "mygene", "kind": 2, "range": {"start": {"line": 23, "character": 0}, "end": {"line": 23, "character": 13}}, "selectionRange": {"start": {"line": 23, "character": 7}, "end": {"line": 23, "character": 13}}, "detail": "module mygene", "children": []}, {"name": "re", "kind": 2, "range": {"start": {"line": 24, "character": 0}, "end": {"line": 24, "character": 9}}, "selectionRange": {"start": {"line": 24, "character": 7}, "end": {"line": 24, "character": 9}}, "detail": "module re", "children": []}, {"name": "selected_exp_gene_list", "kind": 13, "range": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 95}}, "selectionRange": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 22}}, "detail": "selected_exp_gene_list = pd.read_csv(\"/data/common_exp_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "selected_mut_gene_list", "kind": 13, "range": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 95}}, "selectionRange": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 22}}, "detail": "selected_mut_gene_list = pd.read_csv(\"/data/common_mut_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "load_network", "kind": 12, "range": {"start": {"line": 37, "character": 0}, "end": {"line": 65, "character": 28}}, "selectionRange": {"start": {"line": 37, "character": 4}, "end": {"line": 37, "character": 16}}, "detail": "def load_network", "children": []}, {"name": "load_name_space", "kind": 12, "range": {"start": {"line": 67, "character": 0}, "end": {"line": 79, "character": 21}}, "selectionRange": {"start": {"line": 67, "character": 4}, "end": {"line": 67, "character": 19}}, "detail": "def load_name_space", "children": []}, {"name": "list2index", "kind": 12, "range": {"start": {"line": 81, "character": 0}, "end": {"line": 88, "character": 41}}, "selectionRange": {"start": {"line": 81, "character": 4}, "end": {"line": 81, "character": 14}}, "detail": "def list2index", "children": []}, {"name": "PDTC_data_file", "kind": 13, "range": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 30}}, "selectionRange": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 14}}, "detail": "PDTC_data_file = '/data/PTDC/'", "children": []}, {"name": "PDTC_exp_data_file", "kind": 13, "range": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 60}}, "selectionRange": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 18}}, "detail": "PDTC_exp_data_file = PDTC_data_file + 'ExpressionModels.tsv'", "children": []}, {"name": "PDTC_drug_cell_line_file", "kind": 13, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 72}}, "selectionRange": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 24}}, "detail": "PDTC_drug_cell_line_file = PDTC_data_file + 'DrugResponsesAUCModels.tsv'", "children": []}, {"name": "PDTC_mutation_data_file", "kind": 13, "range": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 59}}, "selectionRange": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 23}}, "detail": "PDTC_mutation_data_file = PDTC_data_file + 'SNVsModels.tsv'", "children": []}, {"name": "PDTC_drug_target_file", "kind": 13, "range": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 47}}, "selectionRange": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 21}}, "detail": "PDTC_drug_target_file ='/data/drug_targets.tsv'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 37}}, "selectionRange": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 46}}, "selectionRange": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "data_file", "kind": 13, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 25}}, "selectionRange": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 9}}, "detail": "data_file = '/data/GDSC/'", "children": []}, {"name": "new_network_file", "kind": 13, "range": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 27}}, "selectionRange": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 16}}, "detail": "new_network_file = '/data/'", "children": []}, {"name": "exp_data_file", "kind": 13, "range": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 61}}, "selectionRange": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 13}}, "detail": "exp_data_file = data_file + 'Cell_line_RMA_proc_basalExp.txt'", "children": []}, {"name": "drug_cell_line_file", "kind": 13, "range": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 64}}, "selectionRange": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 19}}, "detail": "drug_cell_line_file = data_file + 'v17_fitted_dose_response.csv'", "children": []}, {"name": "cell_line_detail_file", "kind": 13, "range": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 60}}, "selectionRange": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 21}}, "detail": "cell_line_detail_file = data_file + 'Cell_Lines_Details.csv'", "children": []}, {"name": "mutation_data_file", "kind": 13, "range": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 51}}, "selectionRange": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 18}}, "detail": "mutation_data_file = data_file + 'WES_variants.csv'", "children": []}, {"name": "drug_target_file", "kind": 13, "range": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 42}}, "selectionRange": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 16}}, "detail": "drug_target_file ='/data/drug_targets.tsv'", "children": []}, {"name": "feature_folder", "kind": 13, "range": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 27}}, "selectionRange": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 14}}, "detail": "feature_folder = 'feature/'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 37}}, "selectionRange": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 46}}, "selectionRange": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 58}}, "selectionRange": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 6}}, "detail": "exp_df = pd.read_csv(exp_data_file, sep='\\t', index_col=0)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 21}}, "selectionRange": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 6}}, "detail": "exp_df = exp_df.T[1:]", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 56}}, "selectionRange": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 6}}, "detail": "exp_df = exp_df.rename(columns={np.nan: 'NO_GENE_NAME'})", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 43}}, "selectionRange": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 6}}, "detail": "exp_df = exp_df.drop('NO_GENE_NAME',axis=1)", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 138, "character": 0}, "end": {"line": 140, "character": 26}}, "selectionRange": {"start": {"line": 138, "character": 4}, "end": {"line": 138, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 142, "character": 0}, "end": {"line": 142, "character": 44}}, "selectionRange": {"start": {"line": 142, "character": 7}, "end": {"line": 142, "character": 12}}, "detail": "exp_df.index = exp_df.index.map(stripNumber)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 40}}, "selectionRange": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 6}}, "detail": "exp_df = exp_df.groupby(level=0).first()", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 39}}, "selectionRange": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 6}}, "detail": "exp_df = exp_df[selected_exp_gene_list]", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 36}}, "selectionRange": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 48}}, "selectionRange": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 78}}, "selectionRange": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 11}}, "detail": "PDTC_exp_df = pd.read_csv(PDTC_exp_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 31}}, "selectionRange": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df.T[1:]", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 160, "character": 0}, "end": {"line": 162, "character": 26}}, "selectionRange": {"start": {"line": 160, "character": 4}, "end": {"line": 160, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 49}}, "selectionRange": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df[selected_exp_gene_list]", "children": []}, {"name": "PDTC_exp_gene_list", "kind": 13, "range": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 46}}, "selectionRange": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 18}}, "detail": "PDTC_exp_gene_list = list(PDTC_exp_df.columns)", "children": []}, {"name": "PDTC_exp_cell_line_list", "kind": 13, "range": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 58}}, "selectionRange": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 23}}, "detail": "PDTC_exp_cell_line_list = list(PDTC_exp_df.index.unique())", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 40}}, "selectionRange": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 6}}, "detail": "exp_df = pd.concat([exp_df,PDTC_exp_df])", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 36}}, "selectionRange": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 48}}, "selectionRange": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "maf", "kind": 13, "range": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 69}}, "selectionRange": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 3}}, "detail": "maf = pd.read_csv(mutation_data_file, sep=',', index_col=0).fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 75}}, "selectionRange": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 11}}, "detail": "mutation_df = maf.groupby(['COSMIC_ID', 'Gene']).size().unstack().fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 49}}, "selectionRange": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 11}}, "detail": "mutation_df = mutation_df[selected_mut_gene_list]", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 46}}, "selectionRange": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 58}}, "selectionRange": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "PDTC_maf", "kind": 13, "range": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 80}}, "selectionRange": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 8}}, "detail": "PDTC_maf = pd.read_csv(PDTC_mutation_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 61}}, "selectionRange": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_maf.replace(to_replace=\"NO\",value=0.0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 82}}, "selectionRange": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_mutation_df.replace(to_replace=\"chr*\",value=1.0,regex=True)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 47}}, "selectionRange": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df.transpose()", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 59}}, "selectionRange": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df[selected_mut_gene_list]", "children": []}, {"name": "PDTC_mutation_gene_list", "kind": 13, "range": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 56}}, "selectionRange": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 23}}, "detail": "PDTC_mutation_gene_list = list(PDTC_mutation_df.columns)", "children": []}, {"name": "PDTC_mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 68}}, "selectionRange": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 28}}, "detail": "PDTC_mutation_cell_line_list = list(PDTC_mutation_df.index.unique())", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 55}}, "selectionRange": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 11}}, "detail": "mutation_df = pd.concat([mutation_df,PDTC_mutation_df])", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 46}}, "selectionRange": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 58}}, "selectionRange": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 36}}, "selectionRange": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 11}}, "detail": "file_handle = open(drug_target_file)", "children": []}, {"name": "drug_target_map", "kind": 13, "range": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 20}}, "selectionRange": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 15}}, "detail": "drug_target_map = {}", "children": []}, {"name": "drug_target_list", "kind": 13, "range": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 21}}, "selectionRange": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 16}}, "detail": "drug_target_list = []", "children": []}, {"name": "line", "kind": 13, "range": {"start": {"line": 230, "character": 0}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 230, "character": 4}, "end": {"line": 230, "character": 8}}, "detail": "for line in file_handle: new_line = line.rstrip().split(\"\\t\") drug = new_line[0] target_list=new_line[1].split(',') if drug != \"Drug\": target_list_str = \"\" for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\" drug = drug.strip() drug_target_map[drug] = [] if ',' not in target_list_str: drug_target_map[drug].append(target_list_str.strip()) drug_target_list.append(target_list_str.strip()) else: target_list = target_list_str.split(',') for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "new_line", "kind": 13, "range": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 40}}, "selectionRange": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 12}}, "detail": "new_line = line.rstrip().split(\"\\t\")", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 22}}, "selectionRange": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 8}}, "detail": "drug = new_line[0]", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 38}}, "selectionRange": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 15}}, "detail": "target_list=new_line[1].split(',')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 28}}, "selectionRange": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 23}}, "detail": "target_list_str = \"\"", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 237, "character": 8}, "end": {"line": 242, "character": 0}}, "selectionRange": {"start": {"line": 237, "character": 12}, "end": {"line": 237, "character": 13}}, "detail": "for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 65}}, "selectionRange": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 71}}, "selectionRange": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 27}}, "selectionRange": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 12}}, "detail": "drug = drug.strip()", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 52}}, "selectionRange": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 23}}, "detail": "target_list = target_list_str.split(',')", "children": []}, {"name": "target", "kind": 13, "range": {"start": {"line": 250, "character": 12}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 250, "character": 16}, "end": {"line": 250, "character": 22}}, "detail": "for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "drug_target_map", "kind": 13, "range": {"start": {"line": 259, "character": 0}, "end": {"line": 259, "character": 20}}, "selectionRange": {"start": {"line": 259, "character": 0}, "end": {"line": 259, "character": 15}}, "detail": "drug_target_map = {}", "children": []}, {"name": "drug_target_list", "kind": 13, "range": {"start": {"line": 260, "character": 0}, "end": {"line": 260, "character": 21}}, "selectionRange": {"start": {"line": 260, "character": 0}, "end": {"line": 260, "character": 16}}, "detail": "drug_target_list = []", "children": []}, {"name": "line", "kind": 13, "range": {"start": {"line": 261, "character": 0}, "end": {"line": 284, "character": 0}}, "selectionRange": {"start": {"line": 261, "character": 4}, "end": {"line": 261, "character": 8}}, "detail": "for line in file_handle: new_line = line.rstrip().split(\"\\t\") drug = new_line[0] target_list=new_line[1].split(',') if drug != \"Drug\": target_list_str = \"\" for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\" drug = drug.strip() drug_target_map[drug] = [] if ',' not in target_list_str: drug_target_map[drug].append(target_list_str.strip()) drug_target_list.append(target_list_str.strip()) else: target_list = target_list_str.split(',') for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "new_line", "kind": 13, "range": {"start": {"line": 263, "character": 4}, "end": {"line": 263, "character": 40}}, "selectionRange": {"start": {"line": 263, "character": 4}, "end": {"line": 263, "character": 12}}, "detail": "new_line = line.rstrip().split(\"\\t\")", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 264, "character": 4}, "end": {"line": 264, "character": 22}}, "selectionRange": {"start": {"line": 264, "character": 4}, "end": {"line": 264, "character": 8}}, "detail": "drug = new_line[0]", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 265, "character": 4}, "end": {"line": 265, "character": 38}}, "selectionRange": {"start": {"line": 265, "character": 4}, "end": {"line": 265, "character": 15}}, "detail": "target_list=new_line[1].split(',')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 267, "character": 8}, "end": {"line": 267, "character": 28}}, "selectionRange": {"start": {"line": 267, "character": 8}, "end": {"line": 267, "character": 23}}, "detail": "target_list_str = \"\"", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 268, "character": 8}, "end": {"line": 273, "character": 0}}, "selectionRange": {"start": {"line": 268, "character": 12}, "end": {"line": 268, "character": 13}}, "detail": "for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 270, "character": 16}, "end": {"line": 270, "character": 65}}, "selectionRange": {"start": {"line": 270, "character": 16}, "end": {"line": 270, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 272, "character": 16}, "end": {"line": 272, "character": 71}}, "selectionRange": {"start": {"line": 272, "character": 16}, "end": {"line": 272, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 273, "character": 8}, "end": {"line": 273, "character": 27}}, "selectionRange": {"start": {"line": 273, "character": 8}, "end": {"line": 273, "character": 12}}, "detail": "drug = drug.strip()", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 280, "character": 12}, "end": {"line": 280, "character": 52}}, "selectionRange": {"start": {"line": 280, "character": 12}, "end": {"line": 280, "character": 23}}, "detail": "target_list = target_list_str.split(',')", "children": []}, {"name": "target", "kind": 13, "range": {"start": {"line": 281, "character": 12}, "end": {"line": 284, "character": 0}}, "selectionRange": {"start": {"line": 281, "character": 16}, "end": {"line": 281, "character": 22}}, "detail": "for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "drugs_legend", "kind": 13, "range": {"start": {"line": 287, "character": 0}, "end": {"line": 287, "character": 85}}, "selectionRange": {"start": {"line": 287, "character": 0}, "end": {"line": 287, "character": 12}}, "detail": "drugs_legend = pd.read_csv('/data/GDSC/Screened_Compounds.csv', sep=',', index_col=0)", "children": []}, {"name": "drug2id_mapping", "kind": 13, "range": {"start": {"line": 289, "character": 0}, "end": {"line": 289, "character": 20}}, "selectionRange": {"start": {"line": 289, "character": 0}, "end": {"line": 289, "character": 15}}, "detail": "drug2id_mapping = {}", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 291, "character": 0}, "end": {"line": 294, "character": 0}}, "selectionRange": {"start": {"line": 291, "character": 4}, "end": {"line": 291, "character": 9}}, "detail": "for index in list(drugs_legend.index) : drug_name = drugs_legend.loc[index,'Drug Name'] drug2id_mapping[ drug_name ] = index", "children": []}, {"name": "drug_name", "kind": 13, "range": {"start": {"line": 292, "character": 4}, "end": {"line": 292, "character": 51}}, "selectionRange": {"start": {"line": 292, "character": 4}, "end": {"line": 292, "character": 13}}, "detail": "drug_name = drugs_legend.loc[index,'Drug Name']", "children": []}, {"name": "valid_gene_list", "kind": 13, "range": {"start": {"line": 299, "character": 0}, "end": {"line": 299, "character": 92}}, "selectionRange": {"start": {"line": 299, "character": 0}, "end": {"line": 299, "character": 15}}, "detail": "valid_gene_list = list(set(drug_target_list) | set(exp_gene_list) | set(mutation_gene_list))", "children": []}, {"name": "network_list", "kind": 13, "range": {"start": {"line": 305, "character": 0}, "end": {"line": 305, "character": 82}}, "selectionRange": {"start": {"line": 305, "character": 0}, "end": {"line": 305, "character": 12}}, "detail": "network_list = [new_network_file+inbiomap_file, new_network_file+pathwaycomm_file]", "children": []}, {"name": "gene_neighbor_map", "kind": 13, "range": {"start": {"line": 306, "character": 0}, "end": {"line": 306, "character": 64}}, "selectionRange": {"start": {"line": 306, "character": 0}, "end": {"line": 306, "character": 17}}, "detail": "gene_neighbor_map = load_network(network_list, valid_gene_list)", "children": []}, {"name": "gene_name_df", "kind": 13, "range": {"start": {"line": 312, "character": 0}, "end": {"line": 312, "character": 89}}, "selectionRange": {"start": {"line": 312, "character": 0}, "end": {"line": 312, "character": 12}}, "detail": "gene_name_df = pd.read_table('/data/HUGO_protein-coding_gene.tsv',index_col=25, sep='\\t')", "children": []}, {"name": "gene_name_map", "kind": 13, "range": {"start": {"line": 318, "character": 0}, "end": {"line": 318, "character": 18}}, "selectionRange": {"start": {"line": 318, "character": 0}, "end": {"line": 318, "character": 13}}, "detail": "gene_name_map = {}", "children": []}, {"name": "uniprot_gene", "kind": 13, "range": {"start": {"line": 320, "character": 0}, "end": {"line": 329, "character": 0}}, "selectionRange": {"start": {"line": 320, "character": 4}, "end": {"line": 320, "character": 16}}, "detail": "for uniprot_gene in gene_name_df.index: if isinstance(uniprot_gene, type('aaa')) == False: continue if isinstance(gene_name_df.loc[uniprot_gene, 'symbol'], type('aaa')) == False: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol'][0] else: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 76}}, "selectionRange": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "uniprot_gene_set", "kind": 13, "range": {"start": {"line": 336, "character": 0}, "end": {"line": 336, "character": 24}}, "selectionRange": {"start": {"line": 336, "character": 0}, "end": {"line": 336, "character": 16}}, "detail": "uniprot_gene_set = set()", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 338, "character": 0}, "end": {"line": 347, "character": 0}}, "selectionRange": {"start": {"line": 338, "character": 4}, "end": {"line": 338, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 343, "character": 4}, "end": {"line": 343, "character": 74}}, "selectionRange": {"start": {"line": 343, "character": 4}, "end": {"line": 343, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 345, "character": 4}, "end": {"line": 347, "character": 0}}, "selectionRange": {"start": {"line": 345, "character": 8}, "end": {"line": 345, "character": 12}}, "detail": "for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "query_gene_set", "kind": 13, "range": {"start": {"line": 350, "character": 0}, "end": {"line": 350, "character": 19}}, "selectionRange": {"start": {"line": 350, "character": 0}, "end": {"line": 350, "character": 14}}, "detail": "query_gene_set = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 352, "character": 0}, "end": {"line": 355, "character": 0}}, "selectionRange": {"start": {"line": 352, "character": 4}, "end": {"line": 352, "character": 8}}, "detail": "for gene in uniprot_gene_set: if gene not in gene_name_map: query_gene_set.append(gene)", "children": []}, {"name": "query_gene_list", "kind": 13, "range": {"start": {"line": 358, "character": 0}, "end": {"line": 358, "character": 38}}, "selectionRange": {"start": {"line": 358, "character": 0}, "end": {"line": 358, "character": 15}}, "detail": "query_gene_list = list(query_gene_set)", "children": []}, {"name": "mg", "kind": 13, "range": {"start": {"line": 360, "character": 0}, "end": {"line": 360, "character": 24}}, "selectionRange": {"start": {"line": 360, "character": 0}, "end": {"line": 360, "character": 2}}, "detail": "mg = mygene.MyGeneInfo()", "children": []}, {"name": "out", "kind": 13, "range": {"start": {"line": 361, "character": 0}, "end": {"line": 361, "character": 87}}, "selectionRange": {"start": {"line": 361, "character": 0}, "end": {"line": 361, "character": 3}}, "detail": "out = mg.querymany(query_gene_list, scopes='uniprot', fields='symbol', species='human')", "children": []}, {"name": "not_found_gene_list", "kind": 13, "range": {"start": {"line": 363, "character": 0}, "end": {"line": 363, "character": 24}}, "selectionRange": {"start": {"line": 363, "character": 0}, "end": {"line": 363, "character": 19}}, "detail": "not_found_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 365, "character": 0}, "end": {"line": 370, "character": 0}}, "selectionRange": {"start": {"line": 365, "character": 4}, "end": {"line": 365, "character": 5}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 365, "character": 0}, "end": {"line": 370, "character": 0}}, "selectionRange": {"start": {"line": 365, "character": 7}, "end": {"line": 365, "character": 11}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 377, "character": 0}, "end": {"line": 377, "character": 76}}, "selectionRange": {"start": {"line": 377, "character": 0}, "end": {"line": 377, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 379, "character": 0}, "end": {"line": 401, "character": 0}}, "selectionRange": {"start": {"line": 379, "character": 4}, "end": {"line": 379, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') complex_symbol_list = [] for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] ) for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 384, "character": 4}, "end": {"line": 384, "character": 74}}, "selectionRange": {"start": {"line": 384, "character": 4}, "end": {"line": 384, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "complex_symbol_list", "kind": 13, "range": {"start": {"line": 386, "character": 4}, "end": {"line": 386, "character": 28}}, "selectionRange": {"start": {"line": 386, "character": 4}, "end": {"line": 386, "character": 23}}, "detail": "complex_symbol_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 388, "character": 4}, "end": {"line": 391, "character": 0}}, "selectionRange": {"start": {"line": 388, "character": 8}, "end": {"line": 388, "character": 12}}, "detail": "for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] )", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 392, "character": 4}, "end": {"line": 401, "character": 0}}, "selectionRange": {"start": {"line": 392, "character": 8}, "end": {"line": 392, "character": 13}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 392, "character": 4}, "end": {"line": 401, "character": 0}}, "selectionRange": {"start": {"line": 392, "character": 15}, "end": {"line": 392, "character": 20}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene_exp_neighbor_map", "kind": 13, "range": {"start": {"line": 406, "character": 0}, "end": {"line": 406, "character": 26}}, "selectionRange": {"start": {"line": 406, "character": 0}, "end": {"line": 406, "character": 21}}, "detail": "gene_exp_neighbor_map = {}", "children": []}, {"name": "exp_matrix", "kind": 13, "range": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 26}}, "selectionRange": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 10}}, "detail": "exp_matrix = exp_df.values", "children": []}, {"name": "P", "kind": 13, "range": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 79}}, "selectionRange": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 1}}, "detail": "P = 1 - cdist(np.transpose(exp_matrix), np.transpose(exp_matrix),'correlation')", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 411, "character": 0}, "end": {"line": 425, "character": 0}}, "selectionRange": {"start": {"line": 411, "character": 4}, "end": {"line": 411, "character": 5}}, "detail": "for i in range(len(exp_gene_list)): gene1 = exp_gene_list[i] gene_exp_neighbor_map[gene1] = set() for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2) if gene1 not in gene_exp_neighbor_map[gene1]: print (gene1, 'not in itself?', P[i,i])", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 413, "character": 4}, "end": {"line": 413, "character": 28}}, "selectionRange": {"start": {"line": 413, "character": 4}, "end": {"line": 413, "character": 9}}, "detail": "gene1 = exp_gene_list[i]", "children": []}, {"name": "j", "kind": 13, "range": {"start": {"line": 416, "character": 4}, "end": {"line": 422, "character": 0}}, "selectionRange": {"start": {"line": 416, "character": 8}, "end": {"line": 416, "character": 9}}, "detail": "for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 418, "character": 8}, "end": {"line": 418, "character": 32}}, "selectionRange": {"start": {"line": 418, "character": 8}, "end": {"line": 418, "character": 13}}, "detail": "gene2 = exp_gene_list[j]", "children": []}, {"name": "drug_feature_list", "kind": 13, "range": {"start": {"line": 433, "character": 0}, "end": {"line": 433, "character": 22}}, "selectionRange": {"start": {"line": 433, "character": 0}, "end": {"line": 433, "character": 17}}, "detail": "drug_feature_list = []", "children": []}, {"name": "drug_neighbor_map", "kind": 13, "range": {"start": {"line": 434, "character": 0}, "end": {"line": 434, "character": 22}}, "selectionRange": {"start": {"line": 434, "character": 0}, "end": {"line": 434, "character": 17}}, "detail": "drug_neighbor_map = {}", "children": []}, {"name": "selected_drug_list", "kind": 13, "range": {"start": {"line": 435, "character": 0}, "end": {"line": 435, "character": 23}}, "selectionRange": {"start": {"line": 435, "character": 0}, "end": {"line": 435, "character": 18}}, "detail": "selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 437, "character": 0}, "end": {"line": 454, "character": 0}}, "selectionRange": {"start": {"line": 437, "character": 4}, "end": {"line": 437, "character": 8}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 437, "character": 0}, "end": {"line": 454, "character": 0}}, "selectionRange": {"start": {"line": 437, "character": 10}, "end": {"line": 437, "character": 21}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 440, "character": 8}, "end": {"line": 450, "character": 0}}, "selectionRange": {"start": {"line": 440, "character": 12}, "end": {"line": 440, "character": 16}}, "detail": "for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene]", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 468, "character": 0}, "end": {"line": 468, "character": 52}}, "selectionRange": {"start": {"line": 468, "character": 0}, "end": {"line": 468, "character": 5}}, "detail": "drugs = pd.read_csv(drug_cell_line_file,index_col=2)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 93}}, "selectionRange": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 5}}, "detail": "drugs = drugs.drop([\"DATASET_VERSION\",\"IC50_RESULTS_ID\",\"MAX_CONC_MICROMOLAR\",\"RMSE\"],axis=1)", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 470, "character": 0}, "end": {"line": 470, "character": 49}}, "selectionRange": {"start": {"line": 470, "character": 0}, "end": {"line": 470, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 472, "character": 0}, "end": {"line": 472, "character": 28}}, "selectionRange": {"start": {"line": 472, "character": 0}, "end": {"line": 472, "character": 9}}, "detail": "drug_list = drugs[\"DRUG_ID\"]", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 473, "character": 0}, "end": {"line": 473, "character": 16}}, "selectionRange": {"start": {"line": 473, "character": 0}, "end": {"line": 473, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 483, "character": 0}, "end": {"line": 483, "character": 71}}, "selectionRange": {"start": {"line": 483, "character": 0}, "end": {"line": 483, "character": 10}}, "detail": "PDTC_drugs = pd.read_csv(PDTC_drug_cell_line_file,sep='\\t',index_col=0)", "children": []}, {"name": "PDTC_drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 59}}, "selectionRange": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 25}}, "detail": "PDTC_drugs_cell_line_list = list(PDTC_drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 486, "character": 0}, "end": {"line": 486, "character": 39}}, "selectionRange": {"start": {"line": 486, "character": 0}, "end": {"line": 486, "character": 9}}, "detail": "drug_list = PDTC_drugs[\"Drug\"].tolist()", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 487, "character": 0}, "end": {"line": 487, "character": 16}}, "selectionRange": {"start": {"line": 487, "character": 0}, "end": {"line": 487, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 488, "character": 0}, "end": {"line": 493, "character": 0}}, "selectionRange": {"start": {"line": 488, "character": 4}, "end": {"line": 488, "character": 5}}, "detail": "for i in drug_list: if i in drug2id_mapping.keys(): new_drug_id.append(drug2id_mapping[i]) else: new_drug_id.append(0)", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 495, "character": 0}, "end": {"line": 495, "character": 84}}, "selectionRange": {"start": {"line": 495, "character": 0}, "end": {"line": 495, "character": 10}}, "detail": "PDTC_drugs = PDTC_drugs.drop([\"Drug\",\"iC50\",\"D1_CONC\",\"D5_CONC\",\"perc.iC50\"],axis=1)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 503, "character": 0}, "end": {"line": 503, "character": 37}}, "selectionRange": {"start": {"line": 503, "character": 0}, "end": {"line": 503, "character": 5}}, "detail": "drugs = pd.concat([drugs,PDTC_drugs])", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 510, "character": 0}, "end": {"line": 510, "character": 49}}, "selectionRange": {"start": {"line": 510, "character": 0}, "end": {"line": 510, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "cell_line_list", "kind": 13, "range": {"start": {"line": 516, "character": 0}, "end": {"line": 516, "character": 102}}, "selectionRange": {"start": {"line": 516, "character": 0}, "end": {"line": 516, "character": 14}}, "detail": "cell_line_list = list(set(drugs_cell_line_list)&set(exp_cell_line_list)&set(mutation_cell_line_list) )", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 523, "character": 0}, "end": {"line": 523, "character": 66}}, "selectionRange": {"start": {"line": 523, "character": 0}, "end": {"line": 523, "character": 16}}, "detail": "cell_line_legend = pd.read_csv(cell_line_detail_file, index_col=1)", "children": []}, {"name": "PDTC_cell_line", "kind": 13, "range": {"start": {"line": 524, "character": 0}, "end": {"line": 524, "character": 206}}, "selectionRange": {"start": {"line": 524, "character": 0}, "end": {"line": 524, "character": 14}}, "detail": "PDTC_cell_line = pd.DataFrame({'Line': [\"BRCA\"]*len(PDTC_exp_cell_line_list), 'Site':[\"PDTC\"]*len(PDTC_exp_cell_line_list),\"Histology\":[\"breast\"]*len(PDTC_exp_cell_line_list)},index=PDTC_exp_cell_line_list)", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 525, "character": 0}, "end": {"line": 525, "character": 63}}, "selectionRange": {"start": {"line": 525, "character": 0}, "end": {"line": 525, "character": 16}}, "detail": "cell_line_legend = pd.concat([cell_line_legend,PDTC_cell_line])", "children": []}, {"name": "tissue_map", "kind": 13, "range": {"start": {"line": 528, "character": 0}, "end": {"line": 528, "character": 15}}, "selectionRange": {"start": {"line": 528, "character": 0}, "end": {"line": 528, "character": 10}}, "detail": "tissue_map = {}", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 530, "character": 0}, "end": {"line": 538, "character": 0}}, "selectionRange": {"start": {"line": 530, "character": 4}, "end": {"line": 530, "character": 13}}, "detail": "for cell_line in cell_line_list: tissue = cell_line_legend.loc[cell_line,'Site'] if tissue not in tissue_map: tissue_map[tissue] = [] tissue_map[tissue].append(cell_line)", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 532, "character": 4}, "end": {"line": 532, "character": 51}}, "selectionRange": {"start": {"line": 532, "character": 4}, "end": {"line": 532, "character": 10}}, "detail": "tissue = cell_line_legend.loc[cell_line,'Site']", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 539, "character": 0}, "end": {"line": 539, "character": 23}}, "selectionRange": {"start": {"line": 539, "character": 0}, "end": {"line": 539, "character": 19}}, "detail": "large_tissue_number = 0", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 540, "character": 0}, "end": {"line": 546, "character": 0}}, "selectionRange": {"start": {"line": 540, "character": 4}, "end": {"line": 540, "character": 10}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 540, "character": 0}, "end": {"line": 546, "character": 0}}, "selectionRange": {"start": {"line": 540, "character": 12}, "end": {"line": 540, "character": 21}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 543, "character": 8}, "end": {"line": 543, "character": 32}}, "selectionRange": {"start": {"line": 543, "character": 8}, "end": {"line": 543, "character": 27}}, "detail": "large_tissue_number += 1", "children": []}, {"name": "new_exp_gene_list", "kind": 13, "range": {"start": {"line": 566, "character": 0}, "end": {"line": 566, "character": 22}}, "selectionRange": {"start": {"line": 566, "character": 0}, "end": {"line": 566, "character": 17}}, "detail": "new_exp_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 567, "character": 0}, "end": {"line": 570, "character": 0}}, "selectionRange": {"start": {"line": 567, "character": 4}, "end": {"line": 567, "character": 5}}, "detail": "for i in exp_gene_list: if i in valid_gene_list: new_exp_gene_list.append(i)", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 41}}, "selectionRange": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 38}}, "selectionRange": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 72}}, "selectionRange": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 43}}, "selectionRange": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 68}}, "selectionRange": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 58}}, "selectionRange": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 68}}, "selectionRange": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "new_data_file", "kind": 13, "range": {"start": {"line": 597, "character": 0}, "end": {"line": 597, "character": 18}}, "selectionRange": {"start": {"line": 597, "character": 0}, "end": {"line": 597, "character": 13}}, "detail": "new_data_file = ''", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 601, "character": 0}, "end": {"line": 601, "character": 41}}, "selectionRange": {"start": {"line": 601, "character": 0}, "end": {"line": 601, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 602, "character": 0}, "end": {"line": 602, "character": 38}}, "selectionRange": {"start": {"line": 602, "character": 0}, "end": {"line": 602, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 603, "character": 0}, "end": {"line": 603, "character": 72}}, "selectionRange": {"start": {"line": 603, "character": 0}, "end": {"line": 603, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 605, "character": 0}, "end": {"line": 605, "character": 43}}, "selectionRange": {"start": {"line": 605, "character": 0}, "end": {"line": 605, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 606, "character": 0}, "end": {"line": 606, "character": 68}}, "selectionRange": {"start": {"line": 606, "character": 0}, "end": {"line": 606, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 613, "character": 0}, "end": {"line": 613, "character": 58}}, "selectionRange": {"start": {"line": 613, "character": 0}, "end": {"line": 613, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 614, "character": 0}, "end": {"line": 614, "character": 68}}, "selectionRange": {"start": {"line": 614, "character": 0}, "end": {"line": 614, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "rename_selected_drug_list", "kind": 13, "range": {"start": {"line": 618, "character": 0}, "end": {"line": 618, "character": 30}}, "selectionRange": {"start": {"line": 618, "character": 0}, "end": {"line": 618, "character": 25}}, "detail": "rename_selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 620, "character": 0}, "end": {"line": 690, "character": 0}}, "selectionRange": {"start": {"line": 620, "character": 4}, "end": {"line": 620, "character": 8}}, "detail": "for drug in selected_drug_list: print(drug) if drug not in drug2id_mapping: print('drug name wrong', drug) else: cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]] feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) ) feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) ) print(len(feature_exp_gene_list) + len(feature_mut_gene_list)) if len(feature_exp_gene_list) + len(feature_mut_gene_list) == 0: continue feature_description = [] drug_tissue_map = {} drug = drug.replace(' ','_') rename_selected_drug_list.append(drug) if drug == 'Nutlin-3a_(-)': drug = 'Nutlin-3a' drug_folder = '/data/merged/drug_feature/' + drug + '/' if not os.path.exists(drug_folder): os.makedirs(drug_folder) for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description)) file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\") pickle.dump(drug_tissue_map,file_handle) file_handle.close()", "children": []}, {"name": "cell_line_drug_matrix", "kind": 13, "range": {"start": {"line": 628, "character": 8}, "end": {"line": 628, "character": 84}}, "selectionRange": {"start": {"line": 628, "character": 8}, "end": {"line": 628, "character": 29}}, "detail": "cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]]", "children": []}, {"name": "feature_exp_gene_list", "kind": 13, "range": {"start": {"line": 633, "character": 8}, "end": {"line": 633, "character": 98}}, "selectionRange": {"start": {"line": 633, "character": 8}, "end": {"line": 633, "character": 29}}, "detail": "feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) )", "children": []}, {"name": "feature_mut_gene_list", "kind": 13, "range": {"start": {"line": 634, "character": 8}, "end": {"line": 634, "character": 98}}, "selectionRange": {"start": {"line": 634, "character": 8}, "end": {"line": 634, "character": 29}}, "detail": "feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) )", "children": []}, {"name": "feature_description", "kind": 13, "range": {"start": {"line": 638, "character": 8}, "end": {"line": 638, "character": 32}}, "selectionRange": {"start": {"line": 638, "character": 8}, "end": {"line": 638, "character": 27}}, "detail": "feature_description = []", "children": []}, {"name": "drug_tissue_map", "kind": 13, "range": {"start": {"line": 640, "character": 8}, "end": {"line": 640, "character": 28}}, "selectionRange": {"start": {"line": 640, "character": 8}, "end": {"line": 640, "character": 23}}, "detail": "drug_tissue_map = {}", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 642, "character": 8}, "end": {"line": 642, "character": 36}}, "selectionRange": {"start": {"line": 642, "character": 8}, "end": {"line": 642, "character": 12}}, "detail": "drug = drug.replace(' ','_')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 648, "character": 12}, "end": {"line": 648, "character": 30}}, "selectionRange": {"start": {"line": 648, "character": 12}, "end": {"line": 648, "character": 16}}, "detail": "drug = 'Nutlin-3a'", "children": []}, {"name": "drug_folder", "kind": 13, "range": {"start": {"line": 650, "character": 8}, "end": {"line": 650, "character": 63}}, "selectionRange": {"start": {"line": 650, "character": 8}, "end": {"line": 650, "character": 19}}, "detail": "drug_folder = '/data/merged/drug_feature/' + drug + '/'", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 656, "character": 8}, "end": {"line": 686, "character": 0}}, "selectionRange": {"start": {"line": 656, "character": 12}, "end": {"line": 656, "character": 18}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "tissue_cell_line_list", "kind": 13, "range": {"start": {"line": 656, "character": 8}, "end": {"line": 686, "character": 0}}, "selectionRange": {"start": {"line": 656, "character": 20}, "end": {"line": 656, "character": 41}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 659, "character": 12}, "end": {"line": 659, "character": 103}}, "selectionRange": {"start": {"line": 659, "character": 12}, "end": {"line": 659, "character": 35}}, "detail": "drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list )", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 660, "character": 12}, "end": {"line": 660, "character": 67}}, "selectionRange": {"start": {"line": 660, "character": 12}, "end": {"line": 660, "character": 35}}, "detail": "drug_specific_cell_line = list(drug_specific_cell_line)", "children": []}, {"name": "feature_list", "kind": 13, "range": {"start": {"line": 663, "character": 12}, "end": {"line": 663, "character": 29}}, "selectionRange": {"start": {"line": 663, "character": 12}, "end": {"line": 663, "character": 24}}, "detail": "feature_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 667, "character": 16}, "end": {"line": 669, "character": 0}}, "selectionRange": {"start": {"line": 667, "character": 20}, "end": {"line": 667, "character": 24}}, "detail": "for gene in feature_exp_gene_list: feature_description.append(gene+'_expression')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 672, "character": 16}, "end": {"line": 674, "character": 0}}, "selectionRange": {"start": {"line": 672, "character": 20}, "end": {"line": 672, "character": 24}}, "detail": "for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation')", "children": []}, {"name": "feature", "kind": 13, "range": {"start": {"line": 675, "character": 12}, "end": {"line": 675, "character": 58}}, "selectionRange": {"start": {"line": 675, "character": 12}, "end": {"line": 675, "character": 19}}, "detail": "feature = np.concatenate(feature_list, axis=1)", "children": []}, {"name": "label", "kind": 13, "range": {"start": {"line": 677, "character": 12}, "end": {"line": 677, "character": 88}}, "selectionRange": {"start": {"line": 677, "character": 12}, "end": {"line": 677, "character": 17}}, "detail": "label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 687, "character": 8}, "end": {"line": 687, "character": 84}}, "selectionRange": {"start": {"line": 687, "character": 8}, "end": {"line": 687, "character": 19}}, "detail": "file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\")", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 691, "character": 0}, "end": {"line": 691, "character": 52}}, "selectionRange": {"start": {"line": 691, "character": 0}, "end": {"line": 691, "character": 11}}, "detail": "file_handle = open('rename_selected_drug_list', 'w')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 692, "character": 0}, "end": {"line": 694, "character": 0}}, "selectionRange": {"start": {"line": 692, "character": 4}, "end": {"line": 692, "character": 8}}, "detail": "for drug in rename_selected_drug_list: file_handle.writelines(drug+ '\\n')", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 712, "character": 0}, "end": {"line": 712, "character": 13}}, "selectionRange": {"start": {"line": 712, "character": 7}, "end": {"line": 712, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cell_line_loc", "kind": 13, "range": {"start": {"line": 718, "character": 0}, "end": {"line": 718, "character": 84}}, "selectionRange": {"start": {"line": 718, "character": 0}, "end": {"line": 718, "character": 13}}, "detail": "cell_line_loc = '/cellar/users/samsonfong/Projects/tcrp-v2/from-ma/cell_line_lists/'", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 724, "character": 0}, "end": {"line": 726, "character": 0}}, "selectionRange": {"start": {"line": 724, "character": 53}, "end": {"line": 724, "character": 54}}, "detail": "with open('/data/drug_feature/KU-55933/KU', 'rb') as f: tmap= pickle.load(f)", "children": []}, {"name": "tmap", "kind": 13, "range": {"start": {"line": 725, "character": 4}, "end": {"line": 725, "character": 24}}, "selectionRange": {"start": {"line": 725, "character": 4}, "end": {"line": 725, "character": 8}}, "detail": "tmap= pickle.load(f)", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 743, "character": 0}, "end": {"line": 743, "character": 68}}, "selectionRange": {"start": {"line": 743, "character": 0}, "end": {"line": 743, "character": 1}}, "detail": "f = np.load('/data/drug_feature/KU-55933/lung_KU-55933_feature.npy')", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 64, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 65, "result": [{"name": "matplotlib", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 17}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 17}}, "detail": "module matplotlib", "children": []}, {"name": "os", "kind": 2, "range": {"start": {"line": 10, "character": 0}, "end": {"line": 10, "character": 9}}, "selectionRange": {"start": {"line": 10, "character": 7}, "end": {"line": 10, "character": 9}}, "detail": "module os", "children": []}, {"name": "pd", "kind": 2, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 11, "character": 19}}, "selectionRange": {"start": {"line": 11, "character": 17}, "end": {"line": 11, "character": 19}}, "detail": "module pd", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 12, "character": 0}, "end": {"line": 12, "character": 18}}, "selectionRange": {"start": {"line": 12, "character": 16}, "end": {"line": 12, "character": 18}}, "detail": "module np", "children": []}, {"name": "sys", "kind": 2, "range": {"start": {"line": 13, "character": 0}, "end": {"line": 13, "character": 10}}, "selectionRange": {"start": {"line": 13, "character": 7}, "end": {"line": 13, "character": 10}}, "detail": "module sys", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 14, "character": 0}, "end": {"line": 14, "character": 13}}, "selectionRange": {"start": {"line": 14, "character": 7}, "end": {"line": 14, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cdist", "kind": 12, "range": {"start": {"line": 15, "character": 0}, "end": {"line": 15, "character": 40}}, "selectionRange": {"start": {"line": 15, "character": 35}, "end": {"line": 15, "character": 40}}, "detail": "def cdist", "children": []}, {"name": "math", "kind": 2, "range": {"start": {"line": 16, "character": 0}, "end": {"line": 16, "character": 11}}, "selectionRange": {"start": {"line": 16, "character": 7}, "end": {"line": 16, "character": 11}}, "detail": "module math", "children": []}, {"name": "nx", "kind": 2, "range": {"start": {"line": 17, "character": 0}, "end": {"line": 17, "character": 21}}, "selectionRange": {"start": {"line": 17, "character": 19}, "end": {"line": 17, "character": 21}}, "detail": "module nx", "children": []}, {"name": "nxacc", "kind": 2, "range": {"start": {"line": 18, "character": 0}, "end": {"line": 18, "character": 56}}, "selectionRange": {"start": {"line": 18, "character": 51}, "end": {"line": 18, "character": 56}}, "detail": "module nxacc", "children": []}, {"name": "nxadag", "kind": 2, "range": {"start": {"line": 19, "character": 0}, "end": {"line": 19, "character": 40}}, "selectionRange": {"start": {"line": 19, "character": 34}, "end": {"line": 19, "character": 40}}, "detail": "module nxadag", "children": []}, {"name": "plt", "kind": 2, "range": {"start": {"line": 20, "character": 0}, "end": {"line": 20, "character": 31}}, "selectionRange": {"start": {"line": 20, "character": 28}, "end": {"line": 20, "character": 31}}, "detail": "module plt", "children": []}, {"name": "sns", "kind": 2, "range": {"start": {"line": 21, "character": 0}, "end": {"line": 21, "character": 21}}, "selectionRange": {"start": {"line": 21, "character": 18}, "end": {"line": 21, "character": 21}}, "detail": "module sns", "children": []}, {"name": "itertools", "kind": 2, "range": {"start": {"line": 22, "character": 0}, "end": {"line": 22, "character": 16}}, "selectionRange": {"start": {"line": 22, "character": 7}, "end": {"line": 22, "character": 16}}, "detail": "module itertools", "children": []}, {"name": "mygene", "kind": 2, "range": {"start": {"line": 23, "character": 0}, "end": {"line": 23, "character": 13}}, "selectionRange": {"start": {"line": 23, "character": 7}, "end": {"line": 23, "character": 13}}, "detail": "module mygene", "children": []}, {"name": "re", "kind": 2, "range": {"start": {"line": 24, "character": 0}, "end": {"line": 24, "character": 9}}, "selectionRange": {"start": {"line": 24, "character": 7}, "end": {"line": 24, "character": 9}}, "detail": "module re", "children": []}, {"name": "selected_exp_gene_list", "kind": 13, "range": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 95}}, "selectionRange": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 22}}, "detail": "selected_exp_gene_list = pd.read_csv(\"/data/common_exp_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "selected_mut_gene_list", "kind": 13, "range": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 95}}, "selectionRange": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 22}}, "detail": "selected_mut_gene_list = pd.read_csv(\"/data/common_mut_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "load_network", "kind": 12, "range": {"start": {"line": 37, "character": 0}, "end": {"line": 65, "character": 28}}, "selectionRange": {"start": {"line": 37, "character": 4}, "end": {"line": 37, "character": 16}}, "detail": "def load_network", "children": []}, {"name": "load_name_space", "kind": 12, "range": {"start": {"line": 67, "character": 0}, "end": {"line": 79, "character": 21}}, "selectionRange": {"start": {"line": 67, "character": 4}, "end": {"line": 67, "character": 19}}, "detail": "def load_name_space", "children": []}, {"name": "list2index", "kind": 12, "range": {"start": {"line": 81, "character": 0}, "end": {"line": 88, "character": 41}}, "selectionRange": {"start": {"line": 81, "character": 4}, "end": {"line": 81, "character": 14}}, "detail": "def list2index", "children": []}, {"name": "PDTC_data_file", "kind": 13, "range": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 30}}, "selectionRange": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 14}}, "detail": "PDTC_data_file = '/data/PTDC/'", "children": []}, {"name": "PDTC_exp_data_file", "kind": 13, "range": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 60}}, "selectionRange": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 18}}, "detail": "PDTC_exp_data_file = PDTC_data_file + 'ExpressionModels.tsv'", "children": []}, {"name": "PDTC_drug_cell_line_file", "kind": 13, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 72}}, "selectionRange": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 24}}, "detail": "PDTC_drug_cell_line_file = PDTC_data_file + 'DrugResponsesAUCModels.tsv'", "children": []}, {"name": "PDTC_mutation_data_file", "kind": 13, "range": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 59}}, "selectionRange": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 23}}, "detail": "PDTC_mutation_data_file = PDTC_data_file + 'SNVsModels.tsv'", "children": []}, {"name": "PDTC_drug_target_file", "kind": 13, "range": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 47}}, "selectionRange": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 21}}, "detail": "PDTC_drug_target_file ='/data/drug_targets.tsv'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 37}}, "selectionRange": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 46}}, "selectionRange": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "data_file", "kind": 13, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 25}}, "selectionRange": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 9}}, "detail": "data_file = '/data/GDSC/'", "children": []}, {"name": "new_network_file", "kind": 13, "range": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 27}}, "selectionRange": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 16}}, "detail": "new_network_file = '/data/'", "children": []}, {"name": "exp_data_file", "kind": 13, "range": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 61}}, "selectionRange": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 13}}, "detail": "exp_data_file = data_file + 'Cell_line_RMA_proc_basalExp.txt'", "children": []}, {"name": "drug_cell_line_file", "kind": 13, "range": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 64}}, "selectionRange": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 19}}, "detail": "drug_cell_line_file = data_file + 'v17_fitted_dose_response.csv'", "children": []}, {"name": "cell_line_detail_file", "kind": 13, "range": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 60}}, "selectionRange": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 21}}, "detail": "cell_line_detail_file = data_file + 'Cell_Lines_Details.csv'", "children": []}, {"name": "mutation_data_file", "kind": 13, "range": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 51}}, "selectionRange": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 18}}, "detail": "mutation_data_file = data_file + 'WES_variants.csv'", "children": []}, {"name": "drug_target_file", "kind": 13, "range": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 42}}, "selectionRange": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 16}}, "detail": "drug_target_file ='/data/drug_targets.tsv'", "children": []}, {"name": "feature_folder", "kind": 13, "range": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 27}}, "selectionRange": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 14}}, "detail": "feature_folder = 'feature/'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 37}}, "selectionRange": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 46}}, "selectionRange": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 58}}, "selectionRange": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 6}}, "detail": "exp_df = pd.read_csv(exp_data_file, sep='\\t', index_col=0)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 21}}, "selectionRange": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 6}}, "detail": "exp_df = exp_df.T[1:]", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 56}}, "selectionRange": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 6}}, "detail": "exp_df = exp_df.rename(columns={np.nan: 'NO_GENE_NAME'})", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 43}}, "selectionRange": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 6}}, "detail": "exp_df = exp_df.drop('NO_GENE_NAME',axis=1)", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 138, "character": 0}, "end": {"line": 140, "character": 26}}, "selectionRange": {"start": {"line": 138, "character": 4}, "end": {"line": 138, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 142, "character": 0}, "end": {"line": 142, "character": 44}}, "selectionRange": {"start": {"line": 142, "character": 7}, "end": {"line": 142, "character": 12}}, "detail": "exp_df.index = exp_df.index.map(stripNumber)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 40}}, "selectionRange": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 6}}, "detail": "exp_df = exp_df.groupby(level=0).first()", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 39}}, "selectionRange": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 6}}, "detail": "exp_df = exp_df[selected_exp_gene_list]", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 36}}, "selectionRange": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 48}}, "selectionRange": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 78}}, "selectionRange": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 11}}, "detail": "PDTC_exp_df = pd.read_csv(PDTC_exp_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 31}}, "selectionRange": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df.T[1:]", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 160, "character": 0}, "end": {"line": 162, "character": 26}}, "selectionRange": {"start": {"line": 160, "character": 4}, "end": {"line": 160, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 49}}, "selectionRange": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df[selected_exp_gene_list]", "children": []}, {"name": "PDTC_exp_gene_list", "kind": 13, "range": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 46}}, "selectionRange": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 18}}, "detail": "PDTC_exp_gene_list = list(PDTC_exp_df.columns)", "children": []}, {"name": "PDTC_exp_cell_line_list", "kind": 13, "range": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 58}}, "selectionRange": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 23}}, "detail": "PDTC_exp_cell_line_list = list(PDTC_exp_df.index.unique())", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 40}}, "selectionRange": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 6}}, "detail": "exp_df = pd.concat([exp_df,PDTC_exp_df])", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 36}}, "selectionRange": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 48}}, "selectionRange": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "maf", "kind": 13, "range": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 69}}, "selectionRange": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 3}}, "detail": "maf = pd.read_csv(mutation_data_file, sep=',', index_col=0).fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 75}}, "selectionRange": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 11}}, "detail": "mutation_df = maf.groupby(['COSMIC_ID', 'Gene']).size().unstack().fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 49}}, "selectionRange": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 11}}, "detail": "mutation_df = mutation_df[selected_mut_gene_list]", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 46}}, "selectionRange": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 58}}, "selectionRange": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "PDTC_maf", "kind": 13, "range": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 80}}, "selectionRange": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 8}}, "detail": "PDTC_maf = pd.read_csv(PDTC_mutation_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 61}}, "selectionRange": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_maf.replace(to_replace=\"NO\",value=0.0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 82}}, "selectionRange": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_mutation_df.replace(to_replace=\"chr*\",value=1.0,regex=True)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 47}}, "selectionRange": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df.transpose()", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 59}}, "selectionRange": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df[selected_mut_gene_list]", "children": []}, {"name": "PDTC_mutation_gene_list", "kind": 13, "range": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 56}}, "selectionRange": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 23}}, "detail": "PDTC_mutation_gene_list = list(PDTC_mutation_df.columns)", "children": []}, {"name": "PDTC_mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 68}}, "selectionRange": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 28}}, "detail": "PDTC_mutation_cell_line_list = list(PDTC_mutation_df.index.unique())", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 55}}, "selectionRange": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 11}}, "detail": "mutation_df = pd.concat([mutation_df,PDTC_mutation_df])", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 46}}, "selectionRange": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 58}}, "selectionRange": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 36}}, "selectionRange": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 11}}, "detail": "file_handle = open(drug_target_file)", "children": []}, {"name": "drug_target_map", "kind": 13, "range": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 20}}, "selectionRange": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 15}}, "detail": "drug_target_map = {}", "children": []}, {"name": "drug_target_list", "kind": 13, "range": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 21}}, "selectionRange": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 16}}, "detail": "drug_target_list = []", "children": []}, {"name": "line", "kind": 13, "range": {"start": {"line": 230, "character": 0}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 230, "character": 4}, "end": {"line": 230, "character": 8}}, "detail": "for line in file_handle: new_line = line.rstrip().split(\"\\t\") drug = new_line[0] target_list=new_line[1].split(',') if drug != \"Drug\": target_list_str = \"\" for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\" drug = drug.strip() drug_target_map[drug] = [] if ',' not in target_list_str: drug_target_map[drug].append(target_list_str.strip()) drug_target_list.append(target_list_str.strip()) else: target_list = target_list_str.split(',') for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "new_line", "kind": 13, "range": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 40}}, "selectionRange": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 12}}, "detail": "new_line = line.rstrip().split(\"\\t\")", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 22}}, "selectionRange": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 8}}, "detail": "drug = new_line[0]", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 38}}, "selectionRange": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 15}}, "detail": "target_list=new_line[1].split(',')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 28}}, "selectionRange": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 23}}, "detail": "target_list_str = \"\"", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 237, "character": 8}, "end": {"line": 242, "character": 0}}, "selectionRange": {"start": {"line": 237, "character": 12}, "end": {"line": 237, "character": 13}}, "detail": "for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 65}}, "selectionRange": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 71}}, "selectionRange": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 27}}, "selectionRange": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 12}}, "detail": "drug = drug.strip()", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 52}}, "selectionRange": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 23}}, "detail": "target_list = target_list_str.split(',')", "children": []}, {"name": "target", "kind": 13, "range": {"start": {"line": 250, "character": 12}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 250, "character": 16}, "end": {"line": 250, "character": 22}}, "detail": "for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "drug_target_map", "kind": 13, "range": {"start": {"line": 259, "character": 0}, "end": {"line": 259, "character": 20}}, "selectionRange": {"start": {"line": 259, "character": 0}, "end": {"line": 259, "character": 15}}, "detail": "drug_target_map = {}", "children": []}, {"name": "drug_target_list", "kind": 13, "range": {"start": {"line": 260, "character": 0}, "end": {"line": 260, "character": 21}}, "selectionRange": {"start": {"line": 260, "character": 0}, "end": {"line": 260, "character": 16}}, "detail": "drug_target_list = []", "children": []}, {"name": "line", "kind": 13, "range": {"start": {"line": 261, "character": 0}, "end": {"line": 284, "character": 0}}, "selectionRange": {"start": {"line": 261, "character": 4}, "end": {"line": 261, "character": 8}}, "detail": "for line in file_handle: new_line = line.rstrip().split(\"\\t\") drug = new_line[0] target_list=new_line[1].split(',') if drug != \"Drug\": target_list_str = \"\" for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\" drug = drug.strip() drug_target_map[drug] = [] if ',' not in target_list_str: drug_target_map[drug].append(target_list_str.strip()) drug_target_list.append(target_list_str.strip()) else: target_list = target_list_str.split(',') for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "new_line", "kind": 13, "range": {"start": {"line": 263, "character": 4}, "end": {"line": 263, "character": 40}}, "selectionRange": {"start": {"line": 263, "character": 4}, "end": {"line": 263, "character": 12}}, "detail": "new_line = line.rstrip().split(\"\\t\")", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 264, "character": 4}, "end": {"line": 264, "character": 22}}, "selectionRange": {"start": {"line": 264, "character": 4}, "end": {"line": 264, "character": 8}}, "detail": "drug = new_line[0]", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 265, "character": 4}, "end": {"line": 265, "character": 38}}, "selectionRange": {"start": {"line": 265, "character": 4}, "end": {"line": 265, "character": 15}}, "detail": "target_list=new_line[1].split(',')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 267, "character": 8}, "end": {"line": 267, "character": 28}}, "selectionRange": {"start": {"line": 267, "character": 8}, "end": {"line": 267, "character": 23}}, "detail": "target_list_str = \"\"", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 268, "character": 8}, "end": {"line": 273, "character": 0}}, "selectionRange": {"start": {"line": 268, "character": 12}, "end": {"line": 268, "character": 13}}, "detail": "for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 270, "character": 16}, "end": {"line": 270, "character": 65}}, "selectionRange": {"start": {"line": 270, "character": 16}, "end": {"line": 270, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 272, "character": 16}, "end": {"line": 272, "character": 71}}, "selectionRange": {"start": {"line": 272, "character": 16}, "end": {"line": 272, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 273, "character": 8}, "end": {"line": 273, "character": 27}}, "selectionRange": {"start": {"line": 273, "character": 8}, "end": {"line": 273, "character": 12}}, "detail": "drug = drug.strip()", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 280, "character": 12}, "end": {"line": 280, "character": 52}}, "selectionRange": {"start": {"line": 280, "character": 12}, "end": {"line": 280, "character": 23}}, "detail": "target_list = target_list_str.split(',')", "children": []}, {"name": "target", "kind": 13, "range": {"start": {"line": 281, "character": 12}, "end": {"line": 284, "character": 0}}, "selectionRange": {"start": {"line": 281, "character": 16}, "end": {"line": 281, "character": 22}}, "detail": "for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "drugs_legend", "kind": 13, "range": {"start": {"line": 287, "character": 0}, "end": {"line": 287, "character": 85}}, "selectionRange": {"start": {"line": 287, "character": 0}, "end": {"line": 287, "character": 12}}, "detail": "drugs_legend = pd.read_csv('/data/GDSC/Screened_Compounds.csv', sep=',', index_col=0)", "children": []}, {"name": "drug2id_mapping", "kind": 13, "range": {"start": {"line": 289, "character": 0}, "end": {"line": 289, "character": 20}}, "selectionRange": {"start": {"line": 289, "character": 0}, "end": {"line": 289, "character": 15}}, "detail": "drug2id_mapping = {}", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 291, "character": 0}, "end": {"line": 294, "character": 0}}, "selectionRange": {"start": {"line": 291, "character": 4}, "end": {"line": 291, "character": 9}}, "detail": "for index in list(drugs_legend.index) : drug_name = drugs_legend.loc[index,'Drug Name'] drug2id_mapping[ drug_name ] = index", "children": []}, {"name": "drug_name", "kind": 13, "range": {"start": {"line": 292, "character": 4}, "end": {"line": 292, "character": 51}}, "selectionRange": {"start": {"line": 292, "character": 4}, "end": {"line": 292, "character": 13}}, "detail": "drug_name = drugs_legend.loc[index,'Drug Name']", "children": []}, {"name": "valid_gene_list", "kind": 13, "range": {"start": {"line": 299, "character": 0}, "end": {"line": 299, "character": 92}}, "selectionRange": {"start": {"line": 299, "character": 0}, "end": {"line": 299, "character": 15}}, "detail": "valid_gene_list = list(set(drug_target_list) | set(exp_gene_list) | set(mutation_gene_list))", "children": []}, {"name": "network_list", "kind": 13, "range": {"start": {"line": 305, "character": 0}, "end": {"line": 305, "character": 82}}, "selectionRange": {"start": {"line": 305, "character": 0}, "end": {"line": 305, "character": 12}}, "detail": "network_list = [new_network_file+inbiomap_file, new_network_file+pathwaycomm_file]", "children": []}, {"name": "gene_neighbor_map", "kind": 13, "range": {"start": {"line": 306, "character": 0}, "end": {"line": 306, "character": 64}}, "selectionRange": {"start": {"line": 306, "character": 0}, "end": {"line": 306, "character": 17}}, "detail": "gene_neighbor_map = load_network(network_list, valid_gene_list)", "children": []}, {"name": "gene_name_df", "kind": 13, "range": {"start": {"line": 312, "character": 0}, "end": {"line": 312, "character": 89}}, "selectionRange": {"start": {"line": 312, "character": 0}, "end": {"line": 312, "character": 12}}, "detail": "gene_name_df = pd.read_table('/data/HUGO_protein-coding_gene.tsv',index_col=25, sep='\\t')", "children": []}, {"name": "gene_name_map", "kind": 13, "range": {"start": {"line": 318, "character": 0}, "end": {"line": 318, "character": 18}}, "selectionRange": {"start": {"line": 318, "character": 0}, "end": {"line": 318, "character": 13}}, "detail": "gene_name_map = {}", "children": []}, {"name": "uniprot_gene", "kind": 13, "range": {"start": {"line": 320, "character": 0}, "end": {"line": 329, "character": 0}}, "selectionRange": {"start": {"line": 320, "character": 4}, "end": {"line": 320, "character": 16}}, "detail": "for uniprot_gene in gene_name_df.index: if isinstance(uniprot_gene, type('aaa')) == False: continue if isinstance(gene_name_df.loc[uniprot_gene, 'symbol'], type('aaa')) == False: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol'][0] else: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 76}}, "selectionRange": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "uniprot_gene_set", "kind": 13, "range": {"start": {"line": 336, "character": 0}, "end": {"line": 336, "character": 24}}, "selectionRange": {"start": {"line": 336, "character": 0}, "end": {"line": 336, "character": 16}}, "detail": "uniprot_gene_set = set()", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 338, "character": 0}, "end": {"line": 347, "character": 0}}, "selectionRange": {"start": {"line": 338, "character": 4}, "end": {"line": 338, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 343, "character": 4}, "end": {"line": 343, "character": 74}}, "selectionRange": {"start": {"line": 343, "character": 4}, "end": {"line": 343, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 345, "character": 4}, "end": {"line": 347, "character": 0}}, "selectionRange": {"start": {"line": 345, "character": 8}, "end": {"line": 345, "character": 12}}, "detail": "for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "query_gene_set", "kind": 13, "range": {"start": {"line": 350, "character": 0}, "end": {"line": 350, "character": 19}}, "selectionRange": {"start": {"line": 350, "character": 0}, "end": {"line": 350, "character": 14}}, "detail": "query_gene_set = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 352, "character": 0}, "end": {"line": 355, "character": 0}}, "selectionRange": {"start": {"line": 352, "character": 4}, "end": {"line": 352, "character": 8}}, "detail": "for gene in uniprot_gene_set: if gene not in gene_name_map: query_gene_set.append(gene)", "children": []}, {"name": "query_gene_list", "kind": 13, "range": {"start": {"line": 358, "character": 0}, "end": {"line": 358, "character": 38}}, "selectionRange": {"start": {"line": 358, "character": 0}, "end": {"line": 358, "character": 15}}, "detail": "query_gene_list = list(query_gene_set)", "children": []}, {"name": "mg", "kind": 13, "range": {"start": {"line": 360, "character": 0}, "end": {"line": 360, "character": 24}}, "selectionRange": {"start": {"line": 360, "character": 0}, "end": {"line": 360, "character": 2}}, "detail": "mg = mygene.MyGeneInfo()", "children": []}, {"name": "out", "kind": 13, "range": {"start": {"line": 361, "character": 0}, "end": {"line": 361, "character": 87}}, "selectionRange": {"start": {"line": 361, "character": 0}, "end": {"line": 361, "character": 3}}, "detail": "out = mg.querymany(query_gene_list, scopes='uniprot', fields='symbol', species='human')", "children": []}, {"name": "not_found_gene_list", "kind": 13, "range": {"start": {"line": 363, "character": 0}, "end": {"line": 363, "character": 24}}, "selectionRange": {"start": {"line": 363, "character": 0}, "end": {"line": 363, "character": 19}}, "detail": "not_found_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 365, "character": 0}, "end": {"line": 370, "character": 0}}, "selectionRange": {"start": {"line": 365, "character": 4}, "end": {"line": 365, "character": 5}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 365, "character": 0}, "end": {"line": 370, "character": 0}}, "selectionRange": {"start": {"line": 365, "character": 7}, "end": {"line": 365, "character": 11}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 377, "character": 0}, "end": {"line": 377, "character": 76}}, "selectionRange": {"start": {"line": 377, "character": 0}, "end": {"line": 377, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 379, "character": 0}, "end": {"line": 401, "character": 0}}, "selectionRange": {"start": {"line": 379, "character": 4}, "end": {"line": 379, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') complex_symbol_list = [] for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] ) for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 384, "character": 4}, "end": {"line": 384, "character": 74}}, "selectionRange": {"start": {"line": 384, "character": 4}, "end": {"line": 384, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "complex_symbol_list", "kind": 13, "range": {"start": {"line": 386, "character": 4}, "end": {"line": 386, "character": 28}}, "selectionRange": {"start": {"line": 386, "character": 4}, "end": {"line": 386, "character": 23}}, "detail": "complex_symbol_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 388, "character": 4}, "end": {"line": 391, "character": 0}}, "selectionRange": {"start": {"line": 388, "character": 8}, "end": {"line": 388, "character": 12}}, "detail": "for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] )", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 392, "character": 4}, "end": {"line": 401, "character": 0}}, "selectionRange": {"start": {"line": 392, "character": 8}, "end": {"line": 392, "character": 13}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 392, "character": 4}, "end": {"line": 401, "character": 0}}, "selectionRange": {"start": {"line": 392, "character": 15}, "end": {"line": 392, "character": 20}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene_exp_neighbor_map", "kind": 13, "range": {"start": {"line": 406, "character": 0}, "end": {"line": 406, "character": 26}}, "selectionRange": {"start": {"line": 406, "character": 0}, "end": {"line": 406, "character": 21}}, "detail": "gene_exp_neighbor_map = {}", "children": []}, {"name": "exp_matrix", "kind": 13, "range": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 26}}, "selectionRange": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 10}}, "detail": "exp_matrix = exp_df.values", "children": []}, {"name": "P", "kind": 13, "range": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 79}}, "selectionRange": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 1}}, "detail": "P = 1 - cdist(np.transpose(exp_matrix), np.transpose(exp_matrix),'correlation')", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 411, "character": 0}, "end": {"line": 425, "character": 0}}, "selectionRange": {"start": {"line": 411, "character": 4}, "end": {"line": 411, "character": 5}}, "detail": "for i in range(len(exp_gene_list)): gene1 = exp_gene_list[i] gene_exp_neighbor_map[gene1] = set() for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2) if gene1 not in gene_exp_neighbor_map[gene1]: print (gene1, 'not in itself?', P[i,i])", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 413, "character": 4}, "end": {"line": 413, "character": 28}}, "selectionRange": {"start": {"line": 413, "character": 4}, "end": {"line": 413, "character": 9}}, "detail": "gene1 = exp_gene_list[i]", "children": []}, {"name": "j", "kind": 13, "range": {"start": {"line": 416, "character": 4}, "end": {"line": 422, "character": 0}}, "selectionRange": {"start": {"line": 416, "character": 8}, "end": {"line": 416, "character": 9}}, "detail": "for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 418, "character": 8}, "end": {"line": 418, "character": 32}}, "selectionRange": {"start": {"line": 418, "character": 8}, "end": {"line": 418, "character": 13}}, "detail": "gene2 = exp_gene_list[j]", "children": []}, {"name": "drug_feature_list", "kind": 13, "range": {"start": {"line": 433, "character": 0}, "end": {"line": 433, "character": 22}}, "selectionRange": {"start": {"line": 433, "character": 0}, "end": {"line": 433, "character": 17}}, "detail": "drug_feature_list = []", "children": []}, {"name": "drug_neighbor_map", "kind": 13, "range": {"start": {"line": 434, "character": 0}, "end": {"line": 434, "character": 22}}, "selectionRange": {"start": {"line": 434, "character": 0}, "end": {"line": 434, "character": 17}}, "detail": "drug_neighbor_map = {}", "children": []}, {"name": "selected_drug_list", "kind": 13, "range": {"start": {"line": 435, "character": 0}, "end": {"line": 435, "character": 23}}, "selectionRange": {"start": {"line": 435, "character": 0}, "end": {"line": 435, "character": 18}}, "detail": "selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 437, "character": 0}, "end": {"line": 454, "character": 0}}, "selectionRange": {"start": {"line": 437, "character": 4}, "end": {"line": 437, "character": 8}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 437, "character": 0}, "end": {"line": 454, "character": 0}}, "selectionRange": {"start": {"line": 437, "character": 10}, "end": {"line": 437, "character": 21}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 440, "character": 8}, "end": {"line": 450, "character": 0}}, "selectionRange": {"start": {"line": 440, "character": 12}, "end": {"line": 440, "character": 16}}, "detail": "for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene]", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 468, "character": 0}, "end": {"line": 468, "character": 52}}, "selectionRange": {"start": {"line": 468, "character": 0}, "end": {"line": 468, "character": 5}}, "detail": "drugs = pd.read_csv(drug_cell_line_file,index_col=2)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 93}}, "selectionRange": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 5}}, "detail": "drugs = drugs.drop([\"DATASET_VERSION\",\"IC50_RESULTS_ID\",\"MAX_CONC_MICROMOLAR\",\"RMSE\"],axis=1)", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 470, "character": 0}, "end": {"line": 470, "character": 49}}, "selectionRange": {"start": {"line": 470, "character": 0}, "end": {"line": 470, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 472, "character": 0}, "end": {"line": 472, "character": 28}}, "selectionRange": {"start": {"line": 472, "character": 0}, "end": {"line": 472, "character": 9}}, "detail": "drug_list = drugs[\"DRUG_ID\"]", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 473, "character": 0}, "end": {"line": 473, "character": 16}}, "selectionRange": {"start": {"line": 473, "character": 0}, "end": {"line": 473, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 483, "character": 0}, "end": {"line": 483, "character": 71}}, "selectionRange": {"start": {"line": 483, "character": 0}, "end": {"line": 483, "character": 10}}, "detail": "PDTC_drugs = pd.read_csv(PDTC_drug_cell_line_file,sep='\\t',index_col=0)", "children": []}, {"name": "PDTC_drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 59}}, "selectionRange": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 25}}, "detail": "PDTC_drugs_cell_line_list = list(PDTC_drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 486, "character": 0}, "end": {"line": 486, "character": 39}}, "selectionRange": {"start": {"line": 486, "character": 0}, "end": {"line": 486, "character": 9}}, "detail": "drug_list = PDTC_drugs[\"Drug\"].tolist()", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 487, "character": 0}, "end": {"line": 487, "character": 16}}, "selectionRange": {"start": {"line": 487, "character": 0}, "end": {"line": 487, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 488, "character": 0}, "end": {"line": 493, "character": 0}}, "selectionRange": {"start": {"line": 488, "character": 4}, "end": {"line": 488, "character": 5}}, "detail": "for i in drug_list: if i in drug2id_mapping.keys(): new_drug_id.append(drug2id_mapping[i]) else: new_drug_id.append(0)", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 495, "character": 0}, "end": {"line": 495, "character": 84}}, "selectionRange": {"start": {"line": 495, "character": 0}, "end": {"line": 495, "character": 10}}, "detail": "PDTC_drugs = PDTC_drugs.drop([\"Drug\",\"iC50\",\"D1_CONC\",\"D5_CONC\",\"perc.iC50\"],axis=1)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 503, "character": 0}, "end": {"line": 503, "character": 37}}, "selectionRange": {"start": {"line": 503, "character": 0}, "end": {"line": 503, "character": 5}}, "detail": "drugs = pd.concat([drugs,PDTC_drugs])", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 510, "character": 0}, "end": {"line": 510, "character": 49}}, "selectionRange": {"start": {"line": 510, "character": 0}, "end": {"line": 510, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "cell_line_list", "kind": 13, "range": {"start": {"line": 516, "character": 0}, "end": {"line": 516, "character": 102}}, "selectionRange": {"start": {"line": 516, "character": 0}, "end": {"line": 516, "character": 14}}, "detail": "cell_line_list = list(set(drugs_cell_line_list)&set(exp_cell_line_list)&set(mutation_cell_line_list) )", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 523, "character": 0}, "end": {"line": 523, "character": 66}}, "selectionRange": {"start": {"line": 523, "character": 0}, "end": {"line": 523, "character": 16}}, "detail": "cell_line_legend = pd.read_csv(cell_line_detail_file, index_col=1)", "children": []}, {"name": "PDTC_cell_line", "kind": 13, "range": {"start": {"line": 524, "character": 0}, "end": {"line": 524, "character": 206}}, "selectionRange": {"start": {"line": 524, "character": 0}, "end": {"line": 524, "character": 14}}, "detail": "PDTC_cell_line = pd.DataFrame({'Line': [\"BRCA\"]*len(PDTC_exp_cell_line_list), 'Site':[\"PDTC\"]*len(PDTC_exp_cell_line_list),\"Histology\":[\"breast\"]*len(PDTC_exp_cell_line_list)},index=PDTC_exp_cell_line_list)", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 525, "character": 0}, "end": {"line": 525, "character": 63}}, "selectionRange": {"start": {"line": 525, "character": 0}, "end": {"line": 525, "character": 16}}, "detail": "cell_line_legend = pd.concat([cell_line_legend,PDTC_cell_line])", "children": []}, {"name": "tissue_map", "kind": 13, "range": {"start": {"line": 528, "character": 0}, "end": {"line": 528, "character": 15}}, "selectionRange": {"start": {"line": 528, "character": 0}, "end": {"line": 528, "character": 10}}, "detail": "tissue_map = {}", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 530, "character": 0}, "end": {"line": 538, "character": 0}}, "selectionRange": {"start": {"line": 530, "character": 4}, "end": {"line": 530, "character": 13}}, "detail": "for cell_line in cell_line_list: tissue = cell_line_legend.loc[cell_line,'Site'] if tissue not in tissue_map: tissue_map[tissue] = [] tissue_map[tissue].append(cell_line)", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 532, "character": 4}, "end": {"line": 532, "character": 51}}, "selectionRange": {"start": {"line": 532, "character": 4}, "end": {"line": 532, "character": 10}}, "detail": "tissue = cell_line_legend.loc[cell_line,'Site']", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 539, "character": 0}, "end": {"line": 539, "character": 23}}, "selectionRange": {"start": {"line": 539, "character": 0}, "end": {"line": 539, "character": 19}}, "detail": "large_tissue_number = 0", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 540, "character": 0}, "end": {"line": 546, "character": 0}}, "selectionRange": {"start": {"line": 540, "character": 4}, "end": {"line": 540, "character": 10}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 540, "character": 0}, "end": {"line": 546, "character": 0}}, "selectionRange": {"start": {"line": 540, "character": 12}, "end": {"line": 540, "character": 21}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 543, "character": 8}, "end": {"line": 543, "character": 32}}, "selectionRange": {"start": {"line": 543, "character": 8}, "end": {"line": 543, "character": 27}}, "detail": "large_tissue_number += 1", "children": []}, {"name": "new_exp_gene_list", "kind": 13, "range": {"start": {"line": 566, "character": 0}, "end": {"line": 566, "character": 22}}, "selectionRange": {"start": {"line": 566, "character": 0}, "end": {"line": 566, "character": 17}}, "detail": "new_exp_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 567, "character": 0}, "end": {"line": 570, "character": 0}}, "selectionRange": {"start": {"line": 567, "character": 4}, "end": {"line": 567, "character": 5}}, "detail": "for i in exp_gene_list: if i in valid_gene_list: new_exp_gene_list.append(i)", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 41}}, "selectionRange": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 38}}, "selectionRange": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 72}}, "selectionRange": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 43}}, "selectionRange": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 68}}, "selectionRange": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 58}}, "selectionRange": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 68}}, "selectionRange": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "new_data_file", "kind": 13, "range": {"start": {"line": 597, "character": 0}, "end": {"line": 597, "character": 18}}, "selectionRange": {"start": {"line": 597, "character": 0}, "end": {"line": 597, "character": 13}}, "detail": "new_data_file = ''", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 601, "character": 0}, "end": {"line": 601, "character": 41}}, "selectionRange": {"start": {"line": 601, "character": 0}, "end": {"line": 601, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 602, "character": 0}, "end": {"line": 602, "character": 38}}, "selectionRange": {"start": {"line": 602, "character": 0}, "end": {"line": 602, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 603, "character": 0}, "end": {"line": 603, "character": 72}}, "selectionRange": {"start": {"line": 603, "character": 0}, "end": {"line": 603, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 605, "character": 0}, "end": {"line": 605, "character": 43}}, "selectionRange": {"start": {"line": 605, "character": 0}, "end": {"line": 605, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 606, "character": 0}, "end": {"line": 606, "character": 68}}, "selectionRange": {"start": {"line": 606, "character": 0}, "end": {"line": 606, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 613, "character": 0}, "end": {"line": 613, "character": 58}}, "selectionRange": {"start": {"line": 613, "character": 0}, "end": {"line": 613, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 614, "character": 0}, "end": {"line": 614, "character": 68}}, "selectionRange": {"start": {"line": 614, "character": 0}, "end": {"line": 614, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "rename_selected_drug_list", "kind": 13, "range": {"start": {"line": 618, "character": 0}, "end": {"line": 618, "character": 30}}, "selectionRange": {"start": {"line": 618, "character": 0}, "end": {"line": 618, "character": 25}}, "detail": "rename_selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 620, "character": 0}, "end": {"line": 690, "character": 0}}, "selectionRange": {"start": {"line": 620, "character": 4}, "end": {"line": 620, "character": 8}}, "detail": "for drug in selected_drug_list: print(drug) if drug not in drug2id_mapping: print('drug name wrong', drug) else: cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]] feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) ) feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) ) print(len(feature_exp_gene_list) + len(feature_mut_gene_list)) if len(feature_exp_gene_list) + len(feature_mut_gene_list) == 0: continue feature_description = [] drug_tissue_map = {} drug = drug.replace(' ','_') rename_selected_drug_list.append(drug) if drug == 'Nutlin-3a_(-)': drug = 'Nutlin-3a' drug_folder = '/data/merged/drug_feature/' + drug + '/' if not os.path.exists(drug_folder): os.makedirs(drug_folder) for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description)) file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\") pickle.dump(drug_tissue_map,file_handle) file_handle.close()", "children": []}, {"name": "cell_line_drug_matrix", "kind": 13, "range": {"start": {"line": 628, "character": 8}, "end": {"line": 628, "character": 84}}, "selectionRange": {"start": {"line": 628, "character": 8}, "end": {"line": 628, "character": 29}}, "detail": "cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]]", "children": []}, {"name": "feature_exp_gene_list", "kind": 13, "range": {"start": {"line": 633, "character": 8}, "end": {"line": 633, "character": 98}}, "selectionRange": {"start": {"line": 633, "character": 8}, "end": {"line": 633, "character": 29}}, "detail": "feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) )", "children": []}, {"name": "feature_mut_gene_list", "kind": 13, "range": {"start": {"line": 634, "character": 8}, "end": {"line": 634, "character": 98}}, "selectionRange": {"start": {"line": 634, "character": 8}, "end": {"line": 634, "character": 29}}, "detail": "feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) )", "children": []}, {"name": "feature_description", "kind": 13, "range": {"start": {"line": 638, "character": 8}, "end": {"line": 638, "character": 32}}, "selectionRange": {"start": {"line": 638, "character": 8}, "end": {"line": 638, "character": 27}}, "detail": "feature_description = []", "children": []}, {"name": "drug_tissue_map", "kind": 13, "range": {"start": {"line": 640, "character": 8}, "end": {"line": 640, "character": 28}}, "selectionRange": {"start": {"line": 640, "character": 8}, "end": {"line": 640, "character": 23}}, "detail": "drug_tissue_map = {}", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 642, "character": 8}, "end": {"line": 642, "character": 36}}, "selectionRange": {"start": {"line": 642, "character": 8}, "end": {"line": 642, "character": 12}}, "detail": "drug = drug.replace(' ','_')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 648, "character": 12}, "end": {"line": 648, "character": 30}}, "selectionRange": {"start": {"line": 648, "character": 12}, "end": {"line": 648, "character": 16}}, "detail": "drug = 'Nutlin-3a'", "children": []}, {"name": "drug_folder", "kind": 13, "range": {"start": {"line": 650, "character": 8}, "end": {"line": 650, "character": 63}}, "selectionRange": {"start": {"line": 650, "character": 8}, "end": {"line": 650, "character": 19}}, "detail": "drug_folder = '/data/merged/drug_feature/' + drug + '/'", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 656, "character": 8}, "end": {"line": 686, "character": 0}}, "selectionRange": {"start": {"line": 656, "character": 12}, "end": {"line": 656, "character": 18}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "tissue_cell_line_list", "kind": 13, "range": {"start": {"line": 656, "character": 8}, "end": {"line": 686, "character": 0}}, "selectionRange": {"start": {"line": 656, "character": 20}, "end": {"line": 656, "character": 41}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 659, "character": 12}, "end": {"line": 659, "character": 103}}, "selectionRange": {"start": {"line": 659, "character": 12}, "end": {"line": 659, "character": 35}}, "detail": "drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list )", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 660, "character": 12}, "end": {"line": 660, "character": 67}}, "selectionRange": {"start": {"line": 660, "character": 12}, "end": {"line": 660, "character": 35}}, "detail": "drug_specific_cell_line = list(drug_specific_cell_line)", "children": []}, {"name": "feature_list", "kind": 13, "range": {"start": {"line": 663, "character": 12}, "end": {"line": 663, "character": 29}}, "selectionRange": {"start": {"line": 663, "character": 12}, "end": {"line": 663, "character": 24}}, "detail": "feature_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 667, "character": 16}, "end": {"line": 669, "character": 0}}, "selectionRange": {"start": {"line": 667, "character": 20}, "end": {"line": 667, "character": 24}}, "detail": "for gene in feature_exp_gene_list: feature_description.append(gene+'_expression')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 672, "character": 16}, "end": {"line": 674, "character": 0}}, "selectionRange": {"start": {"line": 672, "character": 20}, "end": {"line": 672, "character": 24}}, "detail": "for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation')", "children": []}, {"name": "feature", "kind": 13, "range": {"start": {"line": 675, "character": 12}, "end": {"line": 675, "character": 58}}, "selectionRange": {"start": {"line": 675, "character": 12}, "end": {"line": 675, "character": 19}}, "detail": "feature = np.concatenate(feature_list, axis=1)", "children": []}, {"name": "label", "kind": 13, "range": {"start": {"line": 677, "character": 12}, "end": {"line": 677, "character": 88}}, "selectionRange": {"start": {"line": 677, "character": 12}, "end": {"line": 677, "character": 17}}, "detail": "label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 687, "character": 8}, "end": {"line": 687, "character": 84}}, "selectionRange": {"start": {"line": 687, "character": 8}, "end": {"line": 687, "character": 19}}, "detail": "file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\")", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 691, "character": 0}, "end": {"line": 691, "character": 52}}, "selectionRange": {"start": {"line": 691, "character": 0}, "end": {"line": 691, "character": 11}}, "detail": "file_handle = open('rename_selected_drug_list', 'w')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 692, "character": 0}, "end": {"line": 694, "character": 0}}, "selectionRange": {"start": {"line": 692, "character": 4}, "end": {"line": 692, "character": 8}}, "detail": "for drug in rename_selected_drug_list: file_handle.writelines(drug+ '\\n')", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 712, "character": 0}, "end": {"line": 712, "character": 13}}, "selectionRange": {"start": {"line": 712, "character": 7}, "end": {"line": 712, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cell_line_loc", "kind": 13, "range": {"start": {"line": 718, "character": 0}, "end": {"line": 718, "character": 84}}, "selectionRange": {"start": {"line": 718, "character": 0}, "end": {"line": 718, "character": 13}}, "detail": "cell_line_loc = '/cellar/users/samsonfong/Projects/tcrp-v2/from-ma/cell_line_lists/'", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 724, "character": 0}, "end": {"line": 726, "character": 0}}, "selectionRange": {"start": {"line": 724, "character": 53}, "end": {"line": 724, "character": 54}}, "detail": "with open('/data/drug_feature/KU-55933/KU', 'rb') as f: tmap= pickle.load(f)", "children": []}, {"name": "tmap", "kind": 13, "range": {"start": {"line": 725, "character": 4}, "end": {"line": 725, "character": 24}}, "selectionRange": {"start": {"line": 725, "character": 4}, "end": {"line": 725, "character": 8}}, "detail": "tmap= pickle.load(f)", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 743, "character": 0}, "end": {"line": 743, "character": 68}}, "selectionRange": {"start": {"line": 743, "character": 0}, "end": {"line": 743, "character": 1}}, "detail": "f = np.load('/data/drug_feature/KU-55933/lung_KU-55933_feature.npy')", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 66, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 67, "result": [{"name": "matplotlib", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 17}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 17}}, "detail": "module matplotlib", "children": []}, {"name": "os", "kind": 2, "range": {"start": {"line": 10, "character": 0}, "end": {"line": 10, "character": 9}}, "selectionRange": {"start": {"line": 10, "character": 7}, "end": {"line": 10, "character": 9}}, "detail": "module os", "children": []}, {"name": "pd", "kind": 2, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 11, "character": 19}}, "selectionRange": {"start": {"line": 11, "character": 17}, "end": {"line": 11, "character": 19}}, "detail": "module pd", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 12, "character": 0}, "end": {"line": 12, "character": 18}}, "selectionRange": {"start": {"line": 12, "character": 16}, "end": {"line": 12, "character": 18}}, "detail": "module np", "children": []}, {"name": "sys", "kind": 2, "range": {"start": {"line": 13, "character": 0}, "end": {"line": 13, "character": 10}}, "selectionRange": {"start": {"line": 13, "character": 7}, "end": {"line": 13, "character": 10}}, "detail": "module sys", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 14, "character": 0}, "end": {"line": 14, "character": 13}}, "selectionRange": {"start": {"line": 14, "character": 7}, "end": {"line": 14, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cdist", "kind": 12, "range": {"start": {"line": 15, "character": 0}, "end": {"line": 15, "character": 40}}, "selectionRange": {"start": {"line": 15, "character": 35}, "end": {"line": 15, "character": 40}}, "detail": "def cdist", "children": []}, {"name": "math", "kind": 2, "range": {"start": {"line": 16, "character": 0}, "end": {"line": 16, "character": 11}}, "selectionRange": {"start": {"line": 16, "character": 7}, "end": {"line": 16, "character": 11}}, "detail": "module math", "children": []}, {"name": "nx", "kind": 2, "range": {"start": {"line": 17, "character": 0}, "end": {"line": 17, "character": 21}}, "selectionRange": {"start": {"line": 17, "character": 19}, "end": {"line": 17, "character": 21}}, "detail": "module nx", "children": []}, {"name": "nxacc", "kind": 2, "range": {"start": {"line": 18, "character": 0}, "end": {"line": 18, "character": 56}}, "selectionRange": {"start": {"line": 18, "character": 51}, "end": {"line": 18, "character": 56}}, "detail": "module nxacc", "children": []}, {"name": "nxadag", "kind": 2, "range": {"start": {"line": 19, "character": 0}, "end": {"line": 19, "character": 40}}, "selectionRange": {"start": {"line": 19, "character": 34}, "end": {"line": 19, "character": 40}}, "detail": "module nxadag", "children": []}, {"name": "plt", "kind": 2, "range": {"start": {"line": 20, "character": 0}, "end": {"line": 20, "character": 31}}, "selectionRange": {"start": {"line": 20, "character": 28}, "end": {"line": 20, "character": 31}}, "detail": "module plt", "children": []}, {"name": "sns", "kind": 2, "range": {"start": {"line": 21, "character": 0}, "end": {"line": 21, "character": 21}}, "selectionRange": {"start": {"line": 21, "character": 18}, "end": {"line": 21, "character": 21}}, "detail": "module sns", "children": []}, {"name": "itertools", "kind": 2, "range": {"start": {"line": 22, "character": 0}, "end": {"line": 22, "character": 16}}, "selectionRange": {"start": {"line": 22, "character": 7}, "end": {"line": 22, "character": 16}}, "detail": "module itertools", "children": []}, {"name": "mygene", "kind": 2, "range": {"start": {"line": 23, "character": 0}, "end": {"line": 23, "character": 13}}, "selectionRange": {"start": {"line": 23, "character": 7}, "end": {"line": 23, "character": 13}}, "detail": "module mygene", "children": []}, {"name": "re", "kind": 2, "range": {"start": {"line": 24, "character": 0}, "end": {"line": 24, "character": 9}}, "selectionRange": {"start": {"line": 24, "character": 7}, "end": {"line": 24, "character": 9}}, "detail": "module re", "children": []}, {"name": "selected_exp_gene_list", "kind": 13, "range": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 95}}, "selectionRange": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 22}}, "detail": "selected_exp_gene_list = pd.read_csv(\"/data/common_exp_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "selected_mut_gene_list", "kind": 13, "range": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 95}}, "selectionRange": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 22}}, "detail": "selected_mut_gene_list = pd.read_csv(\"/data/common_mut_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "load_network", "kind": 12, "range": {"start": {"line": 37, "character": 0}, "end": {"line": 65, "character": 28}}, "selectionRange": {"start": {"line": 37, "character": 4}, "end": {"line": 37, "character": 16}}, "detail": "def load_network", "children": []}, {"name": "load_name_space", "kind": 12, "range": {"start": {"line": 67, "character": 0}, "end": {"line": 79, "character": 21}}, "selectionRange": {"start": {"line": 67, "character": 4}, "end": {"line": 67, "character": 19}}, "detail": "def load_name_space", "children": []}, {"name": "list2index", "kind": 12, "range": {"start": {"line": 81, "character": 0}, "end": {"line": 88, "character": 41}}, "selectionRange": {"start": {"line": 81, "character": 4}, "end": {"line": 81, "character": 14}}, "detail": "def list2index", "children": []}, {"name": "PDTC_data_file", "kind": 13, "range": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 30}}, "selectionRange": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 14}}, "detail": "PDTC_data_file = '/data/PTDC/'", "children": []}, {"name": "PDTC_exp_data_file", "kind": 13, "range": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 60}}, "selectionRange": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 18}}, "detail": "PDTC_exp_data_file = PDTC_data_file + 'ExpressionModels.tsv'", "children": []}, {"name": "PDTC_drug_cell_line_file", "kind": 13, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 72}}, "selectionRange": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 24}}, "detail": "PDTC_drug_cell_line_file = PDTC_data_file + 'DrugResponsesAUCModels.tsv'", "children": []}, {"name": "PDTC_mutation_data_file", "kind": 13, "range": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 59}}, "selectionRange": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 23}}, "detail": "PDTC_mutation_data_file = PDTC_data_file + 'SNVsModels.tsv'", "children": []}, {"name": "PDTC_drug_target_file", "kind": 13, "range": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 47}}, "selectionRange": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 21}}, "detail": "PDTC_drug_target_file ='/data/drug_targets.tsv'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 37}}, "selectionRange": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 46}}, "selectionRange": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "data_file", "kind": 13, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 25}}, "selectionRange": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 9}}, "detail": "data_file = '/data/GDSC/'", "children": []}, {"name": "new_network_file", "kind": 13, "range": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 27}}, "selectionRange": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 16}}, "detail": "new_network_file = '/data/'", "children": []}, {"name": "exp_data_file", "kind": 13, "range": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 61}}, "selectionRange": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 13}}, "detail": "exp_data_file = data_file + 'Cell_line_RMA_proc_basalExp.txt'", "children": []}, {"name": "drug_cell_line_file", "kind": 13, "range": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 64}}, "selectionRange": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 19}}, "detail": "drug_cell_line_file = data_file + 'v17_fitted_dose_response.csv'", "children": []}, {"name": "cell_line_detail_file", "kind": 13, "range": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 60}}, "selectionRange": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 21}}, "detail": "cell_line_detail_file = data_file + 'Cell_Lines_Details.csv'", "children": []}, {"name": "mutation_data_file", "kind": 13, "range": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 51}}, "selectionRange": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 18}}, "detail": "mutation_data_file = data_file + 'WES_variants.csv'", "children": []}, {"name": "drug_target_file", "kind": 13, "range": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 42}}, "selectionRange": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 16}}, "detail": "drug_target_file ='/data/drug_targets.tsv'", "children": []}, {"name": "feature_folder", "kind": 13, "range": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 27}}, "selectionRange": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 14}}, "detail": "feature_folder = 'feature/'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 37}}, "selectionRange": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 46}}, "selectionRange": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 58}}, "selectionRange": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 6}}, "detail": "exp_df = pd.read_csv(exp_data_file, sep='\\t', index_col=0)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 21}}, "selectionRange": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 6}}, "detail": "exp_df = exp_df.T[1:]", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 56}}, "selectionRange": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 6}}, "detail": "exp_df = exp_df.rename(columns={np.nan: 'NO_GENE_NAME'})", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 43}}, "selectionRange": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 6}}, "detail": "exp_df = exp_df.drop('NO_GENE_NAME',axis=1)", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 138, "character": 0}, "end": {"line": 140, "character": 26}}, "selectionRange": {"start": {"line": 138, "character": 4}, "end": {"line": 138, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 142, "character": 0}, "end": {"line": 142, "character": 44}}, "selectionRange": {"start": {"line": 142, "character": 7}, "end": {"line": 142, "character": 12}}, "detail": "exp_df.index = exp_df.index.map(stripNumber)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 40}}, "selectionRange": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 6}}, "detail": "exp_df = exp_df.groupby(level=0).first()", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 39}}, "selectionRange": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 6}}, "detail": "exp_df = exp_df[selected_exp_gene_list]", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 36}}, "selectionRange": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 48}}, "selectionRange": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 78}}, "selectionRange": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 11}}, "detail": "PDTC_exp_df = pd.read_csv(PDTC_exp_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 31}}, "selectionRange": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df.T[1:]", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 160, "character": 0}, "end": {"line": 162, "character": 26}}, "selectionRange": {"start": {"line": 160, "character": 4}, "end": {"line": 160, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 49}}, "selectionRange": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df[selected_exp_gene_list]", "children": []}, {"name": "PDTC_exp_gene_list", "kind": 13, "range": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 46}}, "selectionRange": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 18}}, "detail": "PDTC_exp_gene_list = list(PDTC_exp_df.columns)", "children": []}, {"name": "PDTC_exp_cell_line_list", "kind": 13, "range": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 58}}, "selectionRange": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 23}}, "detail": "PDTC_exp_cell_line_list = list(PDTC_exp_df.index.unique())", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 40}}, "selectionRange": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 6}}, "detail": "exp_df = pd.concat([exp_df,PDTC_exp_df])", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 36}}, "selectionRange": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 48}}, "selectionRange": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "maf", "kind": 13, "range": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 69}}, "selectionRange": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 3}}, "detail": "maf = pd.read_csv(mutation_data_file, sep=',', index_col=0).fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 75}}, "selectionRange": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 11}}, "detail": "mutation_df = maf.groupby(['COSMIC_ID', 'Gene']).size().unstack().fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 49}}, "selectionRange": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 11}}, "detail": "mutation_df = mutation_df[selected_mut_gene_list]", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 46}}, "selectionRange": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 58}}, "selectionRange": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "PDTC_maf", "kind": 13, "range": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 80}}, "selectionRange": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 8}}, "detail": "PDTC_maf = pd.read_csv(PDTC_mutation_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 61}}, "selectionRange": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_maf.replace(to_replace=\"NO\",value=0.0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 82}}, "selectionRange": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_mutation_df.replace(to_replace=\"chr*\",value=1.0,regex=True)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 47}}, "selectionRange": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df.transpose()", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 59}}, "selectionRange": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df[selected_mut_gene_list]", "children": []}, {"name": "PDTC_mutation_gene_list", "kind": 13, "range": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 56}}, "selectionRange": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 23}}, "detail": "PDTC_mutation_gene_list = list(PDTC_mutation_df.columns)", "children": []}, {"name": "PDTC_mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 68}}, "selectionRange": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 28}}, "detail": "PDTC_mutation_cell_line_list = list(PDTC_mutation_df.index.unique())", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 55}}, "selectionRange": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 11}}, "detail": "mutation_df = pd.concat([mutation_df,PDTC_mutation_df])", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 46}}, "selectionRange": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 58}}, "selectionRange": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 36}}, "selectionRange": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 11}}, "detail": "file_handle = open(drug_target_file)", "children": []}, {"name": "drug_target_map", "kind": 13, "range": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 20}}, "selectionRange": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 15}}, "detail": "drug_target_map = {}", "children": []}, {"name": "drug_target_list", "kind": 13, "range": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 21}}, "selectionRange": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 16}}, "detail": "drug_target_list = []", "children": []}, {"name": "line", "kind": 13, "range": {"start": {"line": 230, "character": 0}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 230, "character": 4}, "end": {"line": 230, "character": 8}}, "detail": "for line in file_handle: new_line = line.rstrip().split(\"\\t\") drug = new_line[0] target_list=new_line[1].split(',') if drug != \"Drug\": target_list_str = \"\" for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\" drug = drug.strip() drug_target_map[drug] = [] if ',' not in target_list_str: drug_target_map[drug].append(target_list_str.strip()) drug_target_list.append(target_list_str.strip()) else: target_list = target_list_str.split(',') for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "new_line", "kind": 13, "range": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 40}}, "selectionRange": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 12}}, "detail": "new_line = line.rstrip().split(\"\\t\")", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 22}}, "selectionRange": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 8}}, "detail": "drug = new_line[0]", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 38}}, "selectionRange": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 15}}, "detail": "target_list=new_line[1].split(',')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 28}}, "selectionRange": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 23}}, "detail": "target_list_str = \"\"", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 237, "character": 8}, "end": {"line": 242, "character": 0}}, "selectionRange": {"start": {"line": 237, "character": 12}, "end": {"line": 237, "character": 13}}, "detail": "for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 65}}, "selectionRange": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 71}}, "selectionRange": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 27}}, "selectionRange": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 12}}, "detail": "drug = drug.strip()", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 52}}, "selectionRange": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 23}}, "detail": "target_list = target_list_str.split(',')", "children": []}, {"name": "target", "kind": 13, "range": {"start": {"line": 250, "character": 12}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 250, "character": 16}, "end": {"line": 250, "character": 22}}, "detail": "for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "drug_target_map", "kind": 13, "range": {"start": {"line": 259, "character": 0}, "end": {"line": 259, "character": 20}}, "selectionRange": {"start": {"line": 259, "character": 0}, "end": {"line": 259, "character": 15}}, "detail": "drug_target_map = {}", "children": []}, {"name": "drug_target_list", "kind": 13, "range": {"start": {"line": 260, "character": 0}, "end": {"line": 260, "character": 21}}, "selectionRange": {"start": {"line": 260, "character": 0}, "end": {"line": 260, "character": 16}}, "detail": "drug_target_list = []", "children": []}, {"name": "line", "kind": 13, "range": {"start": {"line": 261, "character": 0}, "end": {"line": 284, "character": 0}}, "selectionRange": {"start": {"line": 261, "character": 4}, "end": {"line": 261, "character": 8}}, "detail": "for line in file_handle: new_line = line.rstrip().split(\"\\t\") drug = new_line[0] target_list=new_line[1].split(',') if drug != \"Drug\": target_list_str = \"\" for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\" drug = drug.strip() drug_target_map[drug] = [] if ',' not in target_list_str: drug_target_map[drug].append(target_list_str.strip()) drug_target_list.append(target_list_str.strip()) else: target_list = target_list_str.split(',') for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "new_line", "kind": 13, "range": {"start": {"line": 263, "character": 4}, "end": {"line": 263, "character": 40}}, "selectionRange": {"start": {"line": 263, "character": 4}, "end": {"line": 263, "character": 12}}, "detail": "new_line = line.rstrip().split(\"\\t\")", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 264, "character": 4}, "end": {"line": 264, "character": 22}}, "selectionRange": {"start": {"line": 264, "character": 4}, "end": {"line": 264, "character": 8}}, "detail": "drug = new_line[0]", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 265, "character": 4}, "end": {"line": 265, "character": 38}}, "selectionRange": {"start": {"line": 265, "character": 4}, "end": {"line": 265, "character": 15}}, "detail": "target_list=new_line[1].split(',')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 267, "character": 8}, "end": {"line": 267, "character": 28}}, "selectionRange": {"start": {"line": 267, "character": 8}, "end": {"line": 267, "character": 23}}, "detail": "target_list_str = \"\"", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 268, "character": 8}, "end": {"line": 273, "character": 0}}, "selectionRange": {"start": {"line": 268, "character": 12}, "end": {"line": 268, "character": 13}}, "detail": "for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 270, "character": 16}, "end": {"line": 270, "character": 65}}, "selectionRange": {"start": {"line": 270, "character": 16}, "end": {"line": 270, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 272, "character": 16}, "end": {"line": 272, "character": 71}}, "selectionRange": {"start": {"line": 272, "character": 16}, "end": {"line": 272, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 273, "character": 8}, "end": {"line": 273, "character": 27}}, "selectionRange": {"start": {"line": 273, "character": 8}, "end": {"line": 273, "character": 12}}, "detail": "drug = drug.strip()", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 280, "character": 12}, "end": {"line": 280, "character": 52}}, "selectionRange": {"start": {"line": 280, "character": 12}, "end": {"line": 280, "character": 23}}, "detail": "target_list = target_list_str.split(',')", "children": []}, {"name": "target", "kind": 13, "range": {"start": {"line": 281, "character": 12}, "end": {"line": 284, "character": 0}}, "selectionRange": {"start": {"line": 281, "character": 16}, "end": {"line": 281, "character": 22}}, "detail": "for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "drugs_legend", "kind": 13, "range": {"start": {"line": 287, "character": 0}, "end": {"line": 287, "character": 85}}, "selectionRange": {"start": {"line": 287, "character": 0}, "end": {"line": 287, "character": 12}}, "detail": "drugs_legend = pd.read_csv('/data/GDSC/Screened_Compounds.csv', sep=',', index_col=0)", "children": []}, {"name": "drug2id_mapping", "kind": 13, "range": {"start": {"line": 289, "character": 0}, "end": {"line": 289, "character": 20}}, "selectionRange": {"start": {"line": 289, "character": 0}, "end": {"line": 289, "character": 15}}, "detail": "drug2id_mapping = {}", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 291, "character": 0}, "end": {"line": 294, "character": 0}}, "selectionRange": {"start": {"line": 291, "character": 4}, "end": {"line": 291, "character": 9}}, "detail": "for index in list(drugs_legend.index) : drug_name = drugs_legend.loc[index,'Drug Name'] drug2id_mapping[ drug_name ] = index", "children": []}, {"name": "drug_name", "kind": 13, "range": {"start": {"line": 292, "character": 4}, "end": {"line": 292, "character": 51}}, "selectionRange": {"start": {"line": 292, "character": 4}, "end": {"line": 292, "character": 13}}, "detail": "drug_name = drugs_legend.loc[index,'Drug Name']", "children": []}, {"name": "valid_gene_list", "kind": 13, "range": {"start": {"line": 299, "character": 0}, "end": {"line": 299, "character": 92}}, "selectionRange": {"start": {"line": 299, "character": 0}, "end": {"line": 299, "character": 15}}, "detail": "valid_gene_list = list(set(drug_target_list) | set(exp_gene_list) | set(mutation_gene_list))", "children": []}, {"name": "network_list", "kind": 13, "range": {"start": {"line": 305, "character": 0}, "end": {"line": 305, "character": 82}}, "selectionRange": {"start": {"line": 305, "character": 0}, "end": {"line": 305, "character": 12}}, "detail": "network_list = [new_network_file+inbiomap_file, new_network_file+pathwaycomm_file]", "children": []}, {"name": "gene_neighbor_map", "kind": 13, "range": {"start": {"line": 306, "character": 0}, "end": {"line": 306, "character": 64}}, "selectionRange": {"start": {"line": 306, "character": 0}, "end": {"line": 306, "character": 17}}, "detail": "gene_neighbor_map = load_network(network_list, valid_gene_list)", "children": []}, {"name": "gene_name_df", "kind": 13, "range": {"start": {"line": 312, "character": 0}, "end": {"line": 312, "character": 89}}, "selectionRange": {"start": {"line": 312, "character": 0}, "end": {"line": 312, "character": 12}}, "detail": "gene_name_df = pd.read_table('/data/HUGO_protein-coding_gene.tsv',index_col=25, sep='\\t')", "children": []}, {"name": "gene_name_map", "kind": 13, "range": {"start": {"line": 318, "character": 0}, "end": {"line": 318, "character": 18}}, "selectionRange": {"start": {"line": 318, "character": 0}, "end": {"line": 318, "character": 13}}, "detail": "gene_name_map = {}", "children": []}, {"name": "uniprot_gene", "kind": 13, "range": {"start": {"line": 320, "character": 0}, "end": {"line": 329, "character": 0}}, "selectionRange": {"start": {"line": 320, "character": 4}, "end": {"line": 320, "character": 16}}, "detail": "for uniprot_gene in gene_name_df.index: if isinstance(uniprot_gene, type('aaa')) == False: continue if isinstance(gene_name_df.loc[uniprot_gene, 'symbol'], type('aaa')) == False: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol'][0] else: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 76}}, "selectionRange": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "uniprot_gene_set", "kind": 13, "range": {"start": {"line": 336, "character": 0}, "end": {"line": 336, "character": 24}}, "selectionRange": {"start": {"line": 336, "character": 0}, "end": {"line": 336, "character": 16}}, "detail": "uniprot_gene_set = set()", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 338, "character": 0}, "end": {"line": 347, "character": 0}}, "selectionRange": {"start": {"line": 338, "character": 4}, "end": {"line": 338, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 343, "character": 4}, "end": {"line": 343, "character": 74}}, "selectionRange": {"start": {"line": 343, "character": 4}, "end": {"line": 343, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 345, "character": 4}, "end": {"line": 347, "character": 0}}, "selectionRange": {"start": {"line": 345, "character": 8}, "end": {"line": 345, "character": 12}}, "detail": "for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "query_gene_set", "kind": 13, "range": {"start": {"line": 350, "character": 0}, "end": {"line": 350, "character": 19}}, "selectionRange": {"start": {"line": 350, "character": 0}, "end": {"line": 350, "character": 14}}, "detail": "query_gene_set = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 352, "character": 0}, "end": {"line": 355, "character": 0}}, "selectionRange": {"start": {"line": 352, "character": 4}, "end": {"line": 352, "character": 8}}, "detail": "for gene in uniprot_gene_set: if gene not in gene_name_map: query_gene_set.append(gene)", "children": []}, {"name": "query_gene_list", "kind": 13, "range": {"start": {"line": 358, "character": 0}, "end": {"line": 358, "character": 38}}, "selectionRange": {"start": {"line": 358, "character": 0}, "end": {"line": 358, "character": 15}}, "detail": "query_gene_list = list(query_gene_set)", "children": []}, {"name": "mg", "kind": 13, "range": {"start": {"line": 360, "character": 0}, "end": {"line": 360, "character": 24}}, "selectionRange": {"start": {"line": 360, "character": 0}, "end": {"line": 360, "character": 2}}, "detail": "mg = mygene.MyGeneInfo()", "children": []}, {"name": "out", "kind": 13, "range": {"start": {"line": 361, "character": 0}, "end": {"line": 361, "character": 87}}, "selectionRange": {"start": {"line": 361, "character": 0}, "end": {"line": 361, "character": 3}}, "detail": "out = mg.querymany(query_gene_list, scopes='uniprot', fields='symbol', species='human')", "children": []}, {"name": "not_found_gene_list", "kind": 13, "range": {"start": {"line": 363, "character": 0}, "end": {"line": 363, "character": 24}}, "selectionRange": {"start": {"line": 363, "character": 0}, "end": {"line": 363, "character": 19}}, "detail": "not_found_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 365, "character": 0}, "end": {"line": 370, "character": 0}}, "selectionRange": {"start": {"line": 365, "character": 4}, "end": {"line": 365, "character": 5}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 365, "character": 0}, "end": {"line": 370, "character": 0}}, "selectionRange": {"start": {"line": 365, "character": 7}, "end": {"line": 365, "character": 11}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 377, "character": 0}, "end": {"line": 377, "character": 76}}, "selectionRange": {"start": {"line": 377, "character": 0}, "end": {"line": 377, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 379, "character": 0}, "end": {"line": 401, "character": 0}}, "selectionRange": {"start": {"line": 379, "character": 4}, "end": {"line": 379, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') complex_symbol_list = [] for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] ) for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 384, "character": 4}, "end": {"line": 384, "character": 74}}, "selectionRange": {"start": {"line": 384, "character": 4}, "end": {"line": 384, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "complex_symbol_list", "kind": 13, "range": {"start": {"line": 386, "character": 4}, "end": {"line": 386, "character": 28}}, "selectionRange": {"start": {"line": 386, "character": 4}, "end": {"line": 386, "character": 23}}, "detail": "complex_symbol_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 388, "character": 4}, "end": {"line": 391, "character": 0}}, "selectionRange": {"start": {"line": 388, "character": 8}, "end": {"line": 388, "character": 12}}, "detail": "for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] )", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 392, "character": 4}, "end": {"line": 401, "character": 0}}, "selectionRange": {"start": {"line": 392, "character": 8}, "end": {"line": 392, "character": 13}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 392, "character": 4}, "end": {"line": 401, "character": 0}}, "selectionRange": {"start": {"line": 392, "character": 15}, "end": {"line": 392, "character": 20}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene_exp_neighbor_map", "kind": 13, "range": {"start": {"line": 406, "character": 0}, "end": {"line": 406, "character": 26}}, "selectionRange": {"start": {"line": 406, "character": 0}, "end": {"line": 406, "character": 21}}, "detail": "gene_exp_neighbor_map = {}", "children": []}, {"name": "exp_matrix", "kind": 13, "range": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 26}}, "selectionRange": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 10}}, "detail": "exp_matrix = exp_df.values", "children": []}, {"name": "P", "kind": 13, "range": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 79}}, "selectionRange": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 1}}, "detail": "P = 1 - cdist(np.transpose(exp_matrix), np.transpose(exp_matrix),'correlation')", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 411, "character": 0}, "end": {"line": 425, "character": 0}}, "selectionRange": {"start": {"line": 411, "character": 4}, "end": {"line": 411, "character": 5}}, "detail": "for i in range(len(exp_gene_list)): gene1 = exp_gene_list[i] gene_exp_neighbor_map[gene1] = set() for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2) if gene1 not in gene_exp_neighbor_map[gene1]: print (gene1, 'not in itself?', P[i,i])", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 413, "character": 4}, "end": {"line": 413, "character": 28}}, "selectionRange": {"start": {"line": 413, "character": 4}, "end": {"line": 413, "character": 9}}, "detail": "gene1 = exp_gene_list[i]", "children": []}, {"name": "j", "kind": 13, "range": {"start": {"line": 416, "character": 4}, "end": {"line": 422, "character": 0}}, "selectionRange": {"start": {"line": 416, "character": 8}, "end": {"line": 416, "character": 9}}, "detail": "for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 418, "character": 8}, "end": {"line": 418, "character": 32}}, "selectionRange": {"start": {"line": 418, "character": 8}, "end": {"line": 418, "character": 13}}, "detail": "gene2 = exp_gene_list[j]", "children": []}, {"name": "drug_feature_list", "kind": 13, "range": {"start": {"line": 433, "character": 0}, "end": {"line": 433, "character": 22}}, "selectionRange": {"start": {"line": 433, "character": 0}, "end": {"line": 433, "character": 17}}, "detail": "drug_feature_list = []", "children": []}, {"name": "drug_neighbor_map", "kind": 13, "range": {"start": {"line": 434, "character": 0}, "end": {"line": 434, "character": 22}}, "selectionRange": {"start": {"line": 434, "character": 0}, "end": {"line": 434, "character": 17}}, "detail": "drug_neighbor_map = {}", "children": []}, {"name": "selected_drug_list", "kind": 13, "range": {"start": {"line": 435, "character": 0}, "end": {"line": 435, "character": 23}}, "selectionRange": {"start": {"line": 435, "character": 0}, "end": {"line": 435, "character": 18}}, "detail": "selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 437, "character": 0}, "end": {"line": 454, "character": 0}}, "selectionRange": {"start": {"line": 437, "character": 4}, "end": {"line": 437, "character": 8}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 437, "character": 0}, "end": {"line": 454, "character": 0}}, "selectionRange": {"start": {"line": 437, "character": 10}, "end": {"line": 437, "character": 21}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 440, "character": 8}, "end": {"line": 450, "character": 0}}, "selectionRange": {"start": {"line": 440, "character": 12}, "end": {"line": 440, "character": 16}}, "detail": "for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene]", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 468, "character": 0}, "end": {"line": 468, "character": 52}}, "selectionRange": {"start": {"line": 468, "character": 0}, "end": {"line": 468, "character": 5}}, "detail": "drugs = pd.read_csv(drug_cell_line_file,index_col=2)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 93}}, "selectionRange": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 5}}, "detail": "drugs = drugs.drop([\"DATASET_VERSION\",\"IC50_RESULTS_ID\",\"MAX_CONC_MICROMOLAR\",\"RMSE\"],axis=1)", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 470, "character": 0}, "end": {"line": 470, "character": 49}}, "selectionRange": {"start": {"line": 470, "character": 0}, "end": {"line": 470, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 472, "character": 0}, "end": {"line": 472, "character": 28}}, "selectionRange": {"start": {"line": 472, "character": 0}, "end": {"line": 472, "character": 9}}, "detail": "drug_list = drugs[\"DRUG_ID\"]", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 473, "character": 0}, "end": {"line": 473, "character": 16}}, "selectionRange": {"start": {"line": 473, "character": 0}, "end": {"line": 473, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 483, "character": 0}, "end": {"line": 483, "character": 71}}, "selectionRange": {"start": {"line": 483, "character": 0}, "end": {"line": 483, "character": 10}}, "detail": "PDTC_drugs = pd.read_csv(PDTC_drug_cell_line_file,sep='\\t',index_col=0)", "children": []}, {"name": "PDTC_drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 59}}, "selectionRange": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 25}}, "detail": "PDTC_drugs_cell_line_list = list(PDTC_drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 486, "character": 0}, "end": {"line": 486, "character": 39}}, "selectionRange": {"start": {"line": 486, "character": 0}, "end": {"line": 486, "character": 9}}, "detail": "drug_list = PDTC_drugs[\"Drug\"].tolist()", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 487, "character": 0}, "end": {"line": 487, "character": 16}}, "selectionRange": {"start": {"line": 487, "character": 0}, "end": {"line": 487, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 488, "character": 0}, "end": {"line": 493, "character": 0}}, "selectionRange": {"start": {"line": 488, "character": 4}, "end": {"line": 488, "character": 5}}, "detail": "for i in drug_list: if i in drug2id_mapping.keys(): new_drug_id.append(drug2id_mapping[i]) else: new_drug_id.append(0)", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 495, "character": 0}, "end": {"line": 495, "character": 84}}, "selectionRange": {"start": {"line": 495, "character": 0}, "end": {"line": 495, "character": 10}}, "detail": "PDTC_drugs = PDTC_drugs.drop([\"Drug\",\"iC50\",\"D1_CONC\",\"D5_CONC\",\"perc.iC50\"],axis=1)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 503, "character": 0}, "end": {"line": 503, "character": 37}}, "selectionRange": {"start": {"line": 503, "character": 0}, "end": {"line": 503, "character": 5}}, "detail": "drugs = pd.concat([drugs,PDTC_drugs])", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 510, "character": 0}, "end": {"line": 510, "character": 49}}, "selectionRange": {"start": {"line": 510, "character": 0}, "end": {"line": 510, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "cell_line_list", "kind": 13, "range": {"start": {"line": 516, "character": 0}, "end": {"line": 516, "character": 102}}, "selectionRange": {"start": {"line": 516, "character": 0}, "end": {"line": 516, "character": 14}}, "detail": "cell_line_list = list(set(drugs_cell_line_list)&set(exp_cell_line_list)&set(mutation_cell_line_list) )", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 523, "character": 0}, "end": {"line": 523, "character": 66}}, "selectionRange": {"start": {"line": 523, "character": 0}, "end": {"line": 523, "character": 16}}, "detail": "cell_line_legend = pd.read_csv(cell_line_detail_file, index_col=1)", "children": []}, {"name": "PDTC_cell_line", "kind": 13, "range": {"start": {"line": 524, "character": 0}, "end": {"line": 524, "character": 206}}, "selectionRange": {"start": {"line": 524, "character": 0}, "end": {"line": 524, "character": 14}}, "detail": "PDTC_cell_line = pd.DataFrame({'Line': [\"BRCA\"]*len(PDTC_exp_cell_line_list), 'Site':[\"PDTC\"]*len(PDTC_exp_cell_line_list),\"Histology\":[\"breast\"]*len(PDTC_exp_cell_line_list)},index=PDTC_exp_cell_line_list)", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 525, "character": 0}, "end": {"line": 525, "character": 63}}, "selectionRange": {"start": {"line": 525, "character": 0}, "end": {"line": 525, "character": 16}}, "detail": "cell_line_legend = pd.concat([cell_line_legend,PDTC_cell_line])", "children": []}, {"name": "tissue_map", "kind": 13, "range": {"start": {"line": 528, "character": 0}, "end": {"line": 528, "character": 15}}, "selectionRange": {"start": {"line": 528, "character": 0}, "end": {"line": 528, "character": 10}}, "detail": "tissue_map = {}", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 530, "character": 0}, "end": {"line": 538, "character": 0}}, "selectionRange": {"start": {"line": 530, "character": 4}, "end": {"line": 530, "character": 13}}, "detail": "for cell_line in cell_line_list: tissue = cell_line_legend.loc[cell_line,'Site'] if tissue not in tissue_map: tissue_map[tissue] = [] tissue_map[tissue].append(cell_line)", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 532, "character": 4}, "end": {"line": 532, "character": 51}}, "selectionRange": {"start": {"line": 532, "character": 4}, "end": {"line": 532, "character": 10}}, "detail": "tissue = cell_line_legend.loc[cell_line,'Site']", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 539, "character": 0}, "end": {"line": 539, "character": 23}}, "selectionRange": {"start": {"line": 539, "character": 0}, "end": {"line": 539, "character": 19}}, "detail": "large_tissue_number = 0", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 540, "character": 0}, "end": {"line": 546, "character": 0}}, "selectionRange": {"start": {"line": 540, "character": 4}, "end": {"line": 540, "character": 10}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 540, "character": 0}, "end": {"line": 546, "character": 0}}, "selectionRange": {"start": {"line": 540, "character": 12}, "end": {"line": 540, "character": 21}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 543, "character": 8}, "end": {"line": 543, "character": 32}}, "selectionRange": {"start": {"line": 543, "character": 8}, "end": {"line": 543, "character": 27}}, "detail": "large_tissue_number += 1", "children": []}, {"name": "new_exp_gene_list", "kind": 13, "range": {"start": {"line": 566, "character": 0}, "end": {"line": 566, "character": 22}}, "selectionRange": {"start": {"line": 566, "character": 0}, "end": {"line": 566, "character": 17}}, "detail": "new_exp_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 567, "character": 0}, "end": {"line": 570, "character": 0}}, "selectionRange": {"start": {"line": 567, "character": 4}, "end": {"line": 567, "character": 5}}, "detail": "for i in exp_gene_list: if i in valid_gene_list: new_exp_gene_list.append(i)", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 41}}, "selectionRange": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 38}}, "selectionRange": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 72}}, "selectionRange": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 43}}, "selectionRange": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 68}}, "selectionRange": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 58}}, "selectionRange": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 68}}, "selectionRange": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "new_data_file", "kind": 13, "range": {"start": {"line": 597, "character": 0}, "end": {"line": 597, "character": 18}}, "selectionRange": {"start": {"line": 597, "character": 0}, "end": {"line": 597, "character": 13}}, "detail": "new_data_file = ''", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 601, "character": 0}, "end": {"line": 601, "character": 41}}, "selectionRange": {"start": {"line": 601, "character": 0}, "end": {"line": 601, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 602, "character": 0}, "end": {"line": 602, "character": 38}}, "selectionRange": {"start": {"line": 602, "character": 0}, "end": {"line": 602, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 603, "character": 0}, "end": {"line": 603, "character": 72}}, "selectionRange": {"start": {"line": 603, "character": 0}, "end": {"line": 603, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 605, "character": 0}, "end": {"line": 605, "character": 43}}, "selectionRange": {"start": {"line": 605, "character": 0}, "end": {"line": 605, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 606, "character": 0}, "end": {"line": 606, "character": 68}}, "selectionRange": {"start": {"line": 606, "character": 0}, "end": {"line": 606, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 613, "character": 0}, "end": {"line": 613, "character": 58}}, "selectionRange": {"start": {"line": 613, "character": 0}, "end": {"line": 613, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 614, "character": 0}, "end": {"line": 614, "character": 68}}, "selectionRange": {"start": {"line": 614, "character": 0}, "end": {"line": 614, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "rename_selected_drug_list", "kind": 13, "range": {"start": {"line": 618, "character": 0}, "end": {"line": 618, "character": 30}}, "selectionRange": {"start": {"line": 618, "character": 0}, "end": {"line": 618, "character": 25}}, "detail": "rename_selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 620, "character": 0}, "end": {"line": 690, "character": 0}}, "selectionRange": {"start": {"line": 620, "character": 4}, "end": {"line": 620, "character": 8}}, "detail": "for drug in selected_drug_list: print(drug) if drug not in drug2id_mapping: print('drug name wrong', drug) else: cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]] feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) ) feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) ) print(len(feature_exp_gene_list) + len(feature_mut_gene_list)) if len(feature_exp_gene_list) + len(feature_mut_gene_list) == 0: continue feature_description = [] drug_tissue_map = {} drug = drug.replace(' ','_') rename_selected_drug_list.append(drug) if drug == 'Nutlin-3a_(-)': drug = 'Nutlin-3a' drug_folder = '/data/merged/drug_feature/' + drug + '/' if not os.path.exists(drug_folder): os.makedirs(drug_folder) for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description)) file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\") pickle.dump(drug_tissue_map,file_handle) file_handle.close()", "children": []}, {"name": "cell_line_drug_matrix", "kind": 13, "range": {"start": {"line": 628, "character": 8}, "end": {"line": 628, "character": 84}}, "selectionRange": {"start": {"line": 628, "character": 8}, "end": {"line": 628, "character": 29}}, "detail": "cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]]", "children": []}, {"name": "feature_exp_gene_list", "kind": 13, "range": {"start": {"line": 633, "character": 8}, "end": {"line": 633, "character": 98}}, "selectionRange": {"start": {"line": 633, "character": 8}, "end": {"line": 633, "character": 29}}, "detail": "feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) )", "children": []}, {"name": "feature_mut_gene_list", "kind": 13, "range": {"start": {"line": 634, "character": 8}, "end": {"line": 634, "character": 98}}, "selectionRange": {"start": {"line": 634, "character": 8}, "end": {"line": 634, "character": 29}}, "detail": "feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) )", "children": []}, {"name": "feature_description", "kind": 13, "range": {"start": {"line": 638, "character": 8}, "end": {"line": 638, "character": 32}}, "selectionRange": {"start": {"line": 638, "character": 8}, "end": {"line": 638, "character": 27}}, "detail": "feature_description = []", "children": []}, {"name": "drug_tissue_map", "kind": 13, "range": {"start": {"line": 640, "character": 8}, "end": {"line": 640, "character": 28}}, "selectionRange": {"start": {"line": 640, "character": 8}, "end": {"line": 640, "character": 23}}, "detail": "drug_tissue_map = {}", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 642, "character": 8}, "end": {"line": 642, "character": 36}}, "selectionRange": {"start": {"line": 642, "character": 8}, "end": {"line": 642, "character": 12}}, "detail": "drug = drug.replace(' ','_')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 648, "character": 12}, "end": {"line": 648, "character": 30}}, "selectionRange": {"start": {"line": 648, "character": 12}, "end": {"line": 648, "character": 16}}, "detail": "drug = 'Nutlin-3a'", "children": []}, {"name": "drug_folder", "kind": 13, "range": {"start": {"line": 650, "character": 8}, "end": {"line": 650, "character": 63}}, "selectionRange": {"start": {"line": 650, "character": 8}, "end": {"line": 650, "character": 19}}, "detail": "drug_folder = '/data/merged/drug_feature/' + drug + '/'", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 656, "character": 8}, "end": {"line": 686, "character": 0}}, "selectionRange": {"start": {"line": 656, "character": 12}, "end": {"line": 656, "character": 18}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "tissue_cell_line_list", "kind": 13, "range": {"start": {"line": 656, "character": 8}, "end": {"line": 686, "character": 0}}, "selectionRange": {"start": {"line": 656, "character": 20}, "end": {"line": 656, "character": 41}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 659, "character": 12}, "end": {"line": 659, "character": 103}}, "selectionRange": {"start": {"line": 659, "character": 12}, "end": {"line": 659, "character": 35}}, "detail": "drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list )", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 660, "character": 12}, "end": {"line": 660, "character": 67}}, "selectionRange": {"start": {"line": 660, "character": 12}, "end": {"line": 660, "character": 35}}, "detail": "drug_specific_cell_line = list(drug_specific_cell_line)", "children": []}, {"name": "feature_list", "kind": 13, "range": {"start": {"line": 663, "character": 12}, "end": {"line": 663, "character": 29}}, "selectionRange": {"start": {"line": 663, "character": 12}, "end": {"line": 663, "character": 24}}, "detail": "feature_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 667, "character": 16}, "end": {"line": 669, "character": 0}}, "selectionRange": {"start": {"line": 667, "character": 20}, "end": {"line": 667, "character": 24}}, "detail": "for gene in feature_exp_gene_list: feature_description.append(gene+'_expression')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 672, "character": 16}, "end": {"line": 674, "character": 0}}, "selectionRange": {"start": {"line": 672, "character": 20}, "end": {"line": 672, "character": 24}}, "detail": "for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation')", "children": []}, {"name": "feature", "kind": 13, "range": {"start": {"line": 675, "character": 12}, "end": {"line": 675, "character": 58}}, "selectionRange": {"start": {"line": 675, "character": 12}, "end": {"line": 675, "character": 19}}, "detail": "feature = np.concatenate(feature_list, axis=1)", "children": []}, {"name": "label", "kind": 13, "range": {"start": {"line": 677, "character": 12}, "end": {"line": 677, "character": 88}}, "selectionRange": {"start": {"line": 677, "character": 12}, "end": {"line": 677, "character": 17}}, "detail": "label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 687, "character": 8}, "end": {"line": 687, "character": 84}}, "selectionRange": {"start": {"line": 687, "character": 8}, "end": {"line": 687, "character": 19}}, "detail": "file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\")", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 691, "character": 0}, "end": {"line": 691, "character": 52}}, "selectionRange": {"start": {"line": 691, "character": 0}, "end": {"line": 691, "character": 11}}, "detail": "file_handle = open('rename_selected_drug_list', 'w')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 692, "character": 0}, "end": {"line": 694, "character": 0}}, "selectionRange": {"start": {"line": 692, "character": 4}, "end": {"line": 692, "character": 8}}, "detail": "for drug in rename_selected_drug_list: file_handle.writelines(drug+ '\\n')", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 712, "character": 0}, "end": {"line": 712, "character": 13}}, "selectionRange": {"start": {"line": 712, "character": 7}, "end": {"line": 712, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cell_line_loc", "kind": 13, "range": {"start": {"line": 718, "character": 0}, "end": {"line": 718, "character": 84}}, "selectionRange": {"start": {"line": 718, "character": 0}, "end": {"line": 718, "character": 13}}, "detail": "cell_line_loc = '/cellar/users/samsonfong/Projects/tcrp-v2/from-ma/cell_line_lists/'", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 724, "character": 0}, "end": {"line": 726, "character": 0}}, "selectionRange": {"start": {"line": 724, "character": 53}, "end": {"line": 724, "character": 54}}, "detail": "with open('/data/drug_feature/KU-55933/KU', 'rb') as f: tmap= pickle.load(f)", "children": []}, {"name": "tmap", "kind": 13, "range": {"start": {"line": 725, "character": 4}, "end": {"line": 725, "character": 24}}, "selectionRange": {"start": {"line": 725, "character": 4}, "end": {"line": 725, "character": 8}}, "detail": "tmap= pickle.load(f)", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 743, "character": 0}, "end": {"line": 743, "character": 68}}, "selectionRange": {"start": {"line": 743, "character": 0}, "end": {"line": 743, "character": 1}}, "detail": "f = np.load('/data/drug_feature/KU-55933/lung_KU-55933_feature.npy')", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 68, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 69, "result": [{"name": "matplotlib", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 17}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 17}}, "detail": "module matplotlib", "children": []}, {"name": "os", "kind": 2, "range": {"start": {"line": 10, "character": 0}, "end": {"line": 10, "character": 9}}, "selectionRange": {"start": {"line": 10, "character": 7}, "end": {"line": 10, "character": 9}}, "detail": "module os", "children": []}, {"name": "pd", "kind": 2, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 11, "character": 19}}, "selectionRange": {"start": {"line": 11, "character": 17}, "end": {"line": 11, "character": 19}}, "detail": "module pd", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 12, "character": 0}, "end": {"line": 12, "character": 18}}, "selectionRange": {"start": {"line": 12, "character": 16}, "end": {"line": 12, "character": 18}}, "detail": "module np", "children": []}, {"name": "sys", "kind": 2, "range": {"start": {"line": 13, "character": 0}, "end": {"line": 13, "character": 10}}, "selectionRange": {"start": {"line": 13, "character": 7}, "end": {"line": 13, "character": 10}}, "detail": "module sys", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 14, "character": 0}, "end": {"line": 14, "character": 13}}, "selectionRange": {"start": {"line": 14, "character": 7}, "end": {"line": 14, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cdist", "kind": 12, "range": {"start": {"line": 15, "character": 0}, "end": {"line": 15, "character": 40}}, "selectionRange": {"start": {"line": 15, "character": 35}, "end": {"line": 15, "character": 40}}, "detail": "def cdist", "children": []}, {"name": "math", "kind": 2, "range": {"start": {"line": 16, "character": 0}, "end": {"line": 16, "character": 11}}, "selectionRange": {"start": {"line": 16, "character": 7}, "end": {"line": 16, "character": 11}}, "detail": "module math", "children": []}, {"name": "nx", "kind": 2, "range": {"start": {"line": 17, "character": 0}, "end": {"line": 17, "character": 21}}, "selectionRange": {"start": {"line": 17, "character": 19}, "end": {"line": 17, "character": 21}}, "detail": "module nx", "children": []}, {"name": "nxacc", "kind": 2, "range": {"start": {"line": 18, "character": 0}, "end": {"line": 18, "character": 56}}, "selectionRange": {"start": {"line": 18, "character": 51}, "end": {"line": 18, "character": 56}}, "detail": "module nxacc", "children": []}, {"name": "nxadag", "kind": 2, "range": {"start": {"line": 19, "character": 0}, "end": {"line": 19, "character": 40}}, "selectionRange": {"start": {"line": 19, "character": 34}, "end": {"line": 19, "character": 40}}, "detail": "module nxadag", "children": []}, {"name": "plt", "kind": 2, "range": {"start": {"line": 20, "character": 0}, "end": {"line": 20, "character": 31}}, "selectionRange": {"start": {"line": 20, "character": 28}, "end": {"line": 20, "character": 31}}, "detail": "module plt", "children": []}, {"name": "sns", "kind": 2, "range": {"start": {"line": 21, "character": 0}, "end": {"line": 21, "character": 21}}, "selectionRange": {"start": {"line": 21, "character": 18}, "end": {"line": 21, "character": 21}}, "detail": "module sns", "children": []}, {"name": "itertools", "kind": 2, "range": {"start": {"line": 22, "character": 0}, "end": {"line": 22, "character": 16}}, "selectionRange": {"start": {"line": 22, "character": 7}, "end": {"line": 22, "character": 16}}, "detail": "module itertools", "children": []}, {"name": "mygene", "kind": 2, "range": {"start": {"line": 23, "character": 0}, "end": {"line": 23, "character": 13}}, "selectionRange": {"start": {"line": 23, "character": 7}, "end": {"line": 23, "character": 13}}, "detail": "module mygene", "children": []}, {"name": "re", "kind": 2, "range": {"start": {"line": 24, "character": 0}, "end": {"line": 24, "character": 9}}, "selectionRange": {"start": {"line": 24, "character": 7}, "end": {"line": 24, "character": 9}}, "detail": "module re", "children": []}, {"name": "selected_exp_gene_list", "kind": 13, "range": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 95}}, "selectionRange": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 22}}, "detail": "selected_exp_gene_list = pd.read_csv(\"/data/common_exp_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "selected_mut_gene_list", "kind": 13, "range": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 95}}, "selectionRange": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 22}}, "detail": "selected_mut_gene_list = pd.read_csv(\"/data/common_mut_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "load_network", "kind": 12, "range": {"start": {"line": 37, "character": 0}, "end": {"line": 65, "character": 28}}, "selectionRange": {"start": {"line": 37, "character": 4}, "end": {"line": 37, "character": 16}}, "detail": "def load_network", "children": []}, {"name": "load_name_space", "kind": 12, "range": {"start": {"line": 67, "character": 0}, "end": {"line": 79, "character": 21}}, "selectionRange": {"start": {"line": 67, "character": 4}, "end": {"line": 67, "character": 19}}, "detail": "def load_name_space", "children": []}, {"name": "list2index", "kind": 12, "range": {"start": {"line": 81, "character": 0}, "end": {"line": 88, "character": 41}}, "selectionRange": {"start": {"line": 81, "character": 4}, "end": {"line": 81, "character": 14}}, "detail": "def list2index", "children": []}, {"name": "PDTC_data_file", "kind": 13, "range": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 30}}, "selectionRange": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 14}}, "detail": "PDTC_data_file = '/data/PTDC/'", "children": []}, {"name": "PDTC_exp_data_file", "kind": 13, "range": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 60}}, "selectionRange": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 18}}, "detail": "PDTC_exp_data_file = PDTC_data_file + 'ExpressionModels.tsv'", "children": []}, {"name": "PDTC_drug_cell_line_file", "kind": 13, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 72}}, "selectionRange": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 24}}, "detail": "PDTC_drug_cell_line_file = PDTC_data_file + 'DrugResponsesAUCModels.tsv'", "children": []}, {"name": "PDTC_mutation_data_file", "kind": 13, "range": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 59}}, "selectionRange": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 23}}, "detail": "PDTC_mutation_data_file = PDTC_data_file + 'SNVsModels.tsv'", "children": []}, {"name": "PDTC_drug_target_file", "kind": 13, "range": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 47}}, "selectionRange": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 21}}, "detail": "PDTC_drug_target_file ='/data/drug_targets.tsv'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 37}}, "selectionRange": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 46}}, "selectionRange": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "data_file", "kind": 13, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 25}}, "selectionRange": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 9}}, "detail": "data_file = '/data/GDSC/'", "children": []}, {"name": "new_network_file", "kind": 13, "range": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 27}}, "selectionRange": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 16}}, "detail": "new_network_file = '/data/'", "children": []}, {"name": "exp_data_file", "kind": 13, "range": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 61}}, "selectionRange": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 13}}, "detail": "exp_data_file = data_file + 'Cell_line_RMA_proc_basalExp.txt'", "children": []}, {"name": "drug_cell_line_file", "kind": 13, "range": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 64}}, "selectionRange": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 19}}, "detail": "drug_cell_line_file = data_file + 'v17_fitted_dose_response.csv'", "children": []}, {"name": "cell_line_detail_file", "kind": 13, "range": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 60}}, "selectionRange": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 21}}, "detail": "cell_line_detail_file = data_file + 'Cell_Lines_Details.csv'", "children": []}, {"name": "mutation_data_file", "kind": 13, "range": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 51}}, "selectionRange": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 18}}, "detail": "mutation_data_file = data_file + 'WES_variants.csv'", "children": []}, {"name": "drug_target_file", "kind": 13, "range": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 42}}, "selectionRange": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 16}}, "detail": "drug_target_file ='/data/drug_targets.tsv'", "children": []}, {"name": "feature_folder", "kind": 13, "range": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 27}}, "selectionRange": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 14}}, "detail": "feature_folder = 'feature/'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 37}}, "selectionRange": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 46}}, "selectionRange": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 58}}, "selectionRange": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 6}}, "detail": "exp_df = pd.read_csv(exp_data_file, sep='\\t', index_col=0)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 21}}, "selectionRange": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 6}}, "detail": "exp_df = exp_df.T[1:]", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 56}}, "selectionRange": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 6}}, "detail": "exp_df = exp_df.rename(columns={np.nan: 'NO_GENE_NAME'})", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 43}}, "selectionRange": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 6}}, "detail": "exp_df = exp_df.drop('NO_GENE_NAME',axis=1)", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 138, "character": 0}, "end": {"line": 140, "character": 26}}, "selectionRange": {"start": {"line": 138, "character": 4}, "end": {"line": 138, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 142, "character": 0}, "end": {"line": 142, "character": 44}}, "selectionRange": {"start": {"line": 142, "character": 7}, "end": {"line": 142, "character": 12}}, "detail": "exp_df.index = exp_df.index.map(stripNumber)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 40}}, "selectionRange": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 6}}, "detail": "exp_df = exp_df.groupby(level=0).first()", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 39}}, "selectionRange": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 6}}, "detail": "exp_df = exp_df[selected_exp_gene_list]", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 36}}, "selectionRange": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 48}}, "selectionRange": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 78}}, "selectionRange": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 11}}, "detail": "PDTC_exp_df = pd.read_csv(PDTC_exp_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 31}}, "selectionRange": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df.T[1:]", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 160, "character": 0}, "end": {"line": 162, "character": 26}}, "selectionRange": {"start": {"line": 160, "character": 4}, "end": {"line": 160, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 49}}, "selectionRange": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df[selected_exp_gene_list]", "children": []}, {"name": "PDTC_exp_gene_list", "kind": 13, "range": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 46}}, "selectionRange": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 18}}, "detail": "PDTC_exp_gene_list = list(PDTC_exp_df.columns)", "children": []}, {"name": "PDTC_exp_cell_line_list", "kind": 13, "range": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 58}}, "selectionRange": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 23}}, "detail": "PDTC_exp_cell_line_list = list(PDTC_exp_df.index.unique())", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 40}}, "selectionRange": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 6}}, "detail": "exp_df = pd.concat([exp_df,PDTC_exp_df])", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 36}}, "selectionRange": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 48}}, "selectionRange": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "maf", "kind": 13, "range": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 69}}, "selectionRange": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 3}}, "detail": "maf = pd.read_csv(mutation_data_file, sep=',', index_col=0).fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 75}}, "selectionRange": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 11}}, "detail": "mutation_df = maf.groupby(['COSMIC_ID', 'Gene']).size().unstack().fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 49}}, "selectionRange": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 11}}, "detail": "mutation_df = mutation_df[selected_mut_gene_list]", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 46}}, "selectionRange": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 58}}, "selectionRange": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "PDTC_maf", "kind": 13, "range": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 80}}, "selectionRange": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 8}}, "detail": "PDTC_maf = pd.read_csv(PDTC_mutation_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 61}}, "selectionRange": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_maf.replace(to_replace=\"NO\",value=0.0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 82}}, "selectionRange": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_mutation_df.replace(to_replace=\"chr*\",value=1.0,regex=True)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 47}}, "selectionRange": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df.transpose()", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 59}}, "selectionRange": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df[selected_mut_gene_list]", "children": []}, {"name": "PDTC_mutation_gene_list", "kind": 13, "range": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 56}}, "selectionRange": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 23}}, "detail": "PDTC_mutation_gene_list = list(PDTC_mutation_df.columns)", "children": []}, {"name": "PDTC_mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 68}}, "selectionRange": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 28}}, "detail": "PDTC_mutation_cell_line_list = list(PDTC_mutation_df.index.unique())", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 55}}, "selectionRange": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 11}}, "detail": "mutation_df = pd.concat([mutation_df,PDTC_mutation_df])", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 46}}, "selectionRange": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 58}}, "selectionRange": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 36}}, "selectionRange": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 11}}, "detail": "file_handle = open(drug_target_file)", "children": []}, {"name": "drug_target_map", "kind": 13, "range": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 20}}, "selectionRange": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 15}}, "detail": "drug_target_map = {}", "children": []}, {"name": "drug_target_list", "kind": 13, "range": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 21}}, "selectionRange": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 16}}, "detail": "drug_target_list = []", "children": []}, {"name": "line", "kind": 13, "range": {"start": {"line": 230, "character": 0}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 230, "character": 4}, "end": {"line": 230, "character": 8}}, "detail": "for line in file_handle: new_line = line.rstrip().split(\"\\t\") drug = new_line[0] target_list=new_line[1].split(',') if drug != \"Drug\": target_list_str = \"\" for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\" drug = drug.strip() drug_target_map[drug] = [] if ',' not in target_list_str: drug_target_map[drug].append(target_list_str.strip()) drug_target_list.append(target_list_str.strip()) else: target_list = target_list_str.split(',') for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "new_line", "kind": 13, "range": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 40}}, "selectionRange": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 12}}, "detail": "new_line = line.rstrip().split(\"\\t\")", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 22}}, "selectionRange": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 8}}, "detail": "drug = new_line[0]", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 38}}, "selectionRange": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 15}}, "detail": "target_list=new_line[1].split(',')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 28}}, "selectionRange": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 23}}, "detail": "target_list_str = \"\"", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 237, "character": 8}, "end": {"line": 242, "character": 0}}, "selectionRange": {"start": {"line": 237, "character": 12}, "end": {"line": 237, "character": 13}}, "detail": "for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 65}}, "selectionRange": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 71}}, "selectionRange": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 27}}, "selectionRange": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 12}}, "detail": "drug = drug.strip()", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 52}}, "selectionRange": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 23}}, "detail": "target_list = target_list_str.split(',')", "children": []}, {"name": "target", "kind": 13, "range": {"start": {"line": 250, "character": 12}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 250, "character": 16}, "end": {"line": 250, "character": 22}}, "detail": "for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "drug_target_map", "kind": 13, "range": {"start": {"line": 259, "character": 0}, "end": {"line": 259, "character": 20}}, "selectionRange": {"start": {"line": 259, "character": 0}, "end": {"line": 259, "character": 15}}, "detail": "drug_target_map = {}", "children": []}, {"name": "drug_target_list", "kind": 13, "range": {"start": {"line": 260, "character": 0}, "end": {"line": 260, "character": 21}}, "selectionRange": {"start": {"line": 260, "character": 0}, "end": {"line": 260, "character": 16}}, "detail": "drug_target_list = []", "children": []}, {"name": "line", "kind": 13, "range": {"start": {"line": 261, "character": 0}, "end": {"line": 284, "character": 0}}, "selectionRange": {"start": {"line": 261, "character": 4}, "end": {"line": 261, "character": 8}}, "detail": "for line in file_handle: new_line = line.rstrip().split(\"\\t\") drug = new_line[0] target_list=new_line[1].split(',') if drug != \"Drug\": target_list_str = \"\" for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\" drug = drug.strip() drug_target_map[drug] = [] if ',' not in target_list_str: drug_target_map[drug].append(target_list_str.strip()) drug_target_list.append(target_list_str.strip()) else: target_list = target_list_str.split(',') for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "new_line", "kind": 13, "range": {"start": {"line": 263, "character": 4}, "end": {"line": 263, "character": 40}}, "selectionRange": {"start": {"line": 263, "character": 4}, "end": {"line": 263, "character": 12}}, "detail": "new_line = line.rstrip().split(\"\\t\")", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 264, "character": 4}, "end": {"line": 264, "character": 22}}, "selectionRange": {"start": {"line": 264, "character": 4}, "end": {"line": 264, "character": 8}}, "detail": "drug = new_line[0]", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 265, "character": 4}, "end": {"line": 265, "character": 38}}, "selectionRange": {"start": {"line": 265, "character": 4}, "end": {"line": 265, "character": 15}}, "detail": "target_list=new_line[1].split(',')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 267, "character": 8}, "end": {"line": 267, "character": 28}}, "selectionRange": {"start": {"line": 267, "character": 8}, "end": {"line": 267, "character": 23}}, "detail": "target_list_str = \"\"", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 268, "character": 8}, "end": {"line": 273, "character": 0}}, "selectionRange": {"start": {"line": 268, "character": 12}, "end": {"line": 268, "character": 13}}, "detail": "for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 270, "character": 16}, "end": {"line": 270, "character": 65}}, "selectionRange": {"start": {"line": 270, "character": 16}, "end": {"line": 270, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 272, "character": 16}, "end": {"line": 272, "character": 71}}, "selectionRange": {"start": {"line": 272, "character": 16}, "end": {"line": 272, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 273, "character": 8}, "end": {"line": 273, "character": 27}}, "selectionRange": {"start": {"line": 273, "character": 8}, "end": {"line": 273, "character": 12}}, "detail": "drug = drug.strip()", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 280, "character": 12}, "end": {"line": 280, "character": 52}}, "selectionRange": {"start": {"line": 280, "character": 12}, "end": {"line": 280, "character": 23}}, "detail": "target_list = target_list_str.split(',')", "children": []}, {"name": "target", "kind": 13, "range": {"start": {"line": 281, "character": 12}, "end": {"line": 284, "character": 0}}, "selectionRange": {"start": {"line": 281, "character": 16}, "end": {"line": 281, "character": 22}}, "detail": "for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "drugs_legend", "kind": 13, "range": {"start": {"line": 287, "character": 0}, "end": {"line": 287, "character": 85}}, "selectionRange": {"start": {"line": 287, "character": 0}, "end": {"line": 287, "character": 12}}, "detail": "drugs_legend = pd.read_csv('/data/GDSC/Screened_Compounds.csv', sep=',', index_col=0)", "children": []}, {"name": "drug2id_mapping", "kind": 13, "range": {"start": {"line": 289, "character": 0}, "end": {"line": 289, "character": 20}}, "selectionRange": {"start": {"line": 289, "character": 0}, "end": {"line": 289, "character": 15}}, "detail": "drug2id_mapping = {}", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 291, "character": 0}, "end": {"line": 294, "character": 0}}, "selectionRange": {"start": {"line": 291, "character": 4}, "end": {"line": 291, "character": 9}}, "detail": "for index in list(drugs_legend.index) : drug_name = drugs_legend.loc[index,'Drug Name'] drug2id_mapping[ drug_name ] = index", "children": []}, {"name": "drug_name", "kind": 13, "range": {"start": {"line": 292, "character": 4}, "end": {"line": 292, "character": 51}}, "selectionRange": {"start": {"line": 292, "character": 4}, "end": {"line": 292, "character": 13}}, "detail": "drug_name = drugs_legend.loc[index,'Drug Name']", "children": []}, {"name": "valid_gene_list", "kind": 13, "range": {"start": {"line": 299, "character": 0}, "end": {"line": 299, "character": 92}}, "selectionRange": {"start": {"line": 299, "character": 0}, "end": {"line": 299, "character": 15}}, "detail": "valid_gene_list = list(set(drug_target_list) | set(exp_gene_list) | set(mutation_gene_list))", "children": []}, {"name": "network_list", "kind": 13, "range": {"start": {"line": 305, "character": 0}, "end": {"line": 305, "character": 82}}, "selectionRange": {"start": {"line": 305, "character": 0}, "end": {"line": 305, "character": 12}}, "detail": "network_list = [new_network_file+inbiomap_file, new_network_file+pathwaycomm_file]", "children": []}, {"name": "gene_neighbor_map", "kind": 13, "range": {"start": {"line": 306, "character": 0}, "end": {"line": 306, "character": 64}}, "selectionRange": {"start": {"line": 306, "character": 0}, "end": {"line": 306, "character": 17}}, "detail": "gene_neighbor_map = load_network(network_list, valid_gene_list)", "children": []}, {"name": "gene_name_df", "kind": 13, "range": {"start": {"line": 312, "character": 0}, "end": {"line": 312, "character": 89}}, "selectionRange": {"start": {"line": 312, "character": 0}, "end": {"line": 312, "character": 12}}, "detail": "gene_name_df = pd.read_table('/data/HUGO_protein-coding_gene.tsv',index_col=25, sep='\\t')", "children": []}, {"name": "gene_name_map", "kind": 13, "range": {"start": {"line": 318, "character": 0}, "end": {"line": 318, "character": 18}}, "selectionRange": {"start": {"line": 318, "character": 0}, "end": {"line": 318, "character": 13}}, "detail": "gene_name_map = {}", "children": []}, {"name": "uniprot_gene", "kind": 13, "range": {"start": {"line": 320, "character": 0}, "end": {"line": 329, "character": 0}}, "selectionRange": {"start": {"line": 320, "character": 4}, "end": {"line": 320, "character": 16}}, "detail": "for uniprot_gene in gene_name_df.index: if isinstance(uniprot_gene, type('aaa')) == False: continue if isinstance(gene_name_df.loc[uniprot_gene, 'symbol'], type('aaa')) == False: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol'][0] else: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 76}}, "selectionRange": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "uniprot_gene_set", "kind": 13, "range": {"start": {"line": 336, "character": 0}, "end": {"line": 336, "character": 24}}, "selectionRange": {"start": {"line": 336, "character": 0}, "end": {"line": 336, "character": 16}}, "detail": "uniprot_gene_set = set()", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 338, "character": 0}, "end": {"line": 347, "character": 0}}, "selectionRange": {"start": {"line": 338, "character": 4}, "end": {"line": 338, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 343, "character": 4}, "end": {"line": 343, "character": 74}}, "selectionRange": {"start": {"line": 343, "character": 4}, "end": {"line": 343, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 345, "character": 4}, "end": {"line": 347, "character": 0}}, "selectionRange": {"start": {"line": 345, "character": 8}, "end": {"line": 345, "character": 12}}, "detail": "for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "query_gene_set", "kind": 13, "range": {"start": {"line": 350, "character": 0}, "end": {"line": 350, "character": 19}}, "selectionRange": {"start": {"line": 350, "character": 0}, "end": {"line": 350, "character": 14}}, "detail": "query_gene_set = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 352, "character": 0}, "end": {"line": 355, "character": 0}}, "selectionRange": {"start": {"line": 352, "character": 4}, "end": {"line": 352, "character": 8}}, "detail": "for gene in uniprot_gene_set: if gene not in gene_name_map: query_gene_set.append(gene)", "children": []}, {"name": "query_gene_list", "kind": 13, "range": {"start": {"line": 358, "character": 0}, "end": {"line": 358, "character": 38}}, "selectionRange": {"start": {"line": 358, "character": 0}, "end": {"line": 358, "character": 15}}, "detail": "query_gene_list = list(query_gene_set)", "children": []}, {"name": "mg", "kind": 13, "range": {"start": {"line": 360, "character": 0}, "end": {"line": 360, "character": 24}}, "selectionRange": {"start": {"line": 360, "character": 0}, "end": {"line": 360, "character": 2}}, "detail": "mg = mygene.MyGeneInfo()", "children": []}, {"name": "out", "kind": 13, "range": {"start": {"line": 361, "character": 0}, "end": {"line": 361, "character": 87}}, "selectionRange": {"start": {"line": 361, "character": 0}, "end": {"line": 361, "character": 3}}, "detail": "out = mg.querymany(query_gene_list, scopes='uniprot', fields='symbol', species='human')", "children": []}, {"name": "not_found_gene_list", "kind": 13, "range": {"start": {"line": 363, "character": 0}, "end": {"line": 363, "character": 24}}, "selectionRange": {"start": {"line": 363, "character": 0}, "end": {"line": 363, "character": 19}}, "detail": "not_found_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 365, "character": 0}, "end": {"line": 370, "character": 0}}, "selectionRange": {"start": {"line": 365, "character": 4}, "end": {"line": 365, "character": 5}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 365, "character": 0}, "end": {"line": 370, "character": 0}}, "selectionRange": {"start": {"line": 365, "character": 7}, "end": {"line": 365, "character": 11}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 377, "character": 0}, "end": {"line": 377, "character": 76}}, "selectionRange": {"start": {"line": 377, "character": 0}, "end": {"line": 377, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 379, "character": 0}, "end": {"line": 401, "character": 0}}, "selectionRange": {"start": {"line": 379, "character": 4}, "end": {"line": 379, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') complex_symbol_list = [] for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] ) for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 384, "character": 4}, "end": {"line": 384, "character": 74}}, "selectionRange": {"start": {"line": 384, "character": 4}, "end": {"line": 384, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "complex_symbol_list", "kind": 13, "range": {"start": {"line": 386, "character": 4}, "end": {"line": 386, "character": 28}}, "selectionRange": {"start": {"line": 386, "character": 4}, "end": {"line": 386, "character": 23}}, "detail": "complex_symbol_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 388, "character": 4}, "end": {"line": 391, "character": 0}}, "selectionRange": {"start": {"line": 388, "character": 8}, "end": {"line": 388, "character": 12}}, "detail": "for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] )", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 392, "character": 4}, "end": {"line": 401, "character": 0}}, "selectionRange": {"start": {"line": 392, "character": 8}, "end": {"line": 392, "character": 13}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 392, "character": 4}, "end": {"line": 401, "character": 0}}, "selectionRange": {"start": {"line": 392, "character": 15}, "end": {"line": 392, "character": 20}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene_exp_neighbor_map", "kind": 13, "range": {"start": {"line": 406, "character": 0}, "end": {"line": 406, "character": 26}}, "selectionRange": {"start": {"line": 406, "character": 0}, "end": {"line": 406, "character": 21}}, "detail": "gene_exp_neighbor_map = {}", "children": []}, {"name": "exp_matrix", "kind": 13, "range": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 26}}, "selectionRange": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 10}}, "detail": "exp_matrix = exp_df.values", "children": []}, {"name": "P", "kind": 13, "range": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 79}}, "selectionRange": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 1}}, "detail": "P = 1 - cdist(np.transpose(exp_matrix), np.transpose(exp_matrix),'correlation')", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 411, "character": 0}, "end": {"line": 425, "character": 0}}, "selectionRange": {"start": {"line": 411, "character": 4}, "end": {"line": 411, "character": 5}}, "detail": "for i in range(len(exp_gene_list)): gene1 = exp_gene_list[i] gene_exp_neighbor_map[gene1] = set() for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2) if gene1 not in gene_exp_neighbor_map[gene1]: print (gene1, 'not in itself?', P[i,i])", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 413, "character": 4}, "end": {"line": 413, "character": 28}}, "selectionRange": {"start": {"line": 413, "character": 4}, "end": {"line": 413, "character": 9}}, "detail": "gene1 = exp_gene_list[i]", "children": []}, {"name": "j", "kind": 13, "range": {"start": {"line": 416, "character": 4}, "end": {"line": 422, "character": 0}}, "selectionRange": {"start": {"line": 416, "character": 8}, "end": {"line": 416, "character": 9}}, "detail": "for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 418, "character": 8}, "end": {"line": 418, "character": 32}}, "selectionRange": {"start": {"line": 418, "character": 8}, "end": {"line": 418, "character": 13}}, "detail": "gene2 = exp_gene_list[j]", "children": []}, {"name": "drug_feature_list", "kind": 13, "range": {"start": {"line": 433, "character": 0}, "end": {"line": 433, "character": 22}}, "selectionRange": {"start": {"line": 433, "character": 0}, "end": {"line": 433, "character": 17}}, "detail": "drug_feature_list = []", "children": []}, {"name": "drug_neighbor_map", "kind": 13, "range": {"start": {"line": 434, "character": 0}, "end": {"line": 434, "character": 22}}, "selectionRange": {"start": {"line": 434, "character": 0}, "end": {"line": 434, "character": 17}}, "detail": "drug_neighbor_map = {}", "children": []}, {"name": "selected_drug_list", "kind": 13, "range": {"start": {"line": 435, "character": 0}, "end": {"line": 435, "character": 23}}, "selectionRange": {"start": {"line": 435, "character": 0}, "end": {"line": 435, "character": 18}}, "detail": "selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 437, "character": 0}, "end": {"line": 454, "character": 0}}, "selectionRange": {"start": {"line": 437, "character": 4}, "end": {"line": 437, "character": 8}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 437, "character": 0}, "end": {"line": 454, "character": 0}}, "selectionRange": {"start": {"line": 437, "character": 10}, "end": {"line": 437, "character": 21}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 440, "character": 8}, "end": {"line": 450, "character": 0}}, "selectionRange": {"start": {"line": 440, "character": 12}, "end": {"line": 440, "character": 16}}, "detail": "for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene]", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 468, "character": 0}, "end": {"line": 468, "character": 52}}, "selectionRange": {"start": {"line": 468, "character": 0}, "end": {"line": 468, "character": 5}}, "detail": "drugs = pd.read_csv(drug_cell_line_file,index_col=2)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 93}}, "selectionRange": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 5}}, "detail": "drugs = drugs.drop([\"DATASET_VERSION\",\"IC50_RESULTS_ID\",\"MAX_CONC_MICROMOLAR\",\"RMSE\"],axis=1)", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 470, "character": 0}, "end": {"line": 470, "character": 49}}, "selectionRange": {"start": {"line": 470, "character": 0}, "end": {"line": 470, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 472, "character": 0}, "end": {"line": 472, "character": 28}}, "selectionRange": {"start": {"line": 472, "character": 0}, "end": {"line": 472, "character": 9}}, "detail": "drug_list = drugs[\"DRUG_ID\"]", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 473, "character": 0}, "end": {"line": 473, "character": 16}}, "selectionRange": {"start": {"line": 473, "character": 0}, "end": {"line": 473, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 483, "character": 0}, "end": {"line": 483, "character": 71}}, "selectionRange": {"start": {"line": 483, "character": 0}, "end": {"line": 483, "character": 10}}, "detail": "PDTC_drugs = pd.read_csv(PDTC_drug_cell_line_file,sep='\\t',index_col=0)", "children": []}, {"name": "PDTC_drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 59}}, "selectionRange": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 25}}, "detail": "PDTC_drugs_cell_line_list = list(PDTC_drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 486, "character": 0}, "end": {"line": 486, "character": 39}}, "selectionRange": {"start": {"line": 486, "character": 0}, "end": {"line": 486, "character": 9}}, "detail": "drug_list = PDTC_drugs[\"Drug\"].tolist()", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 487, "character": 0}, "end": {"line": 487, "character": 16}}, "selectionRange": {"start": {"line": 487, "character": 0}, "end": {"line": 487, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 488, "character": 0}, "end": {"line": 493, "character": 0}}, "selectionRange": {"start": {"line": 488, "character": 4}, "end": {"line": 488, "character": 5}}, "detail": "for i in drug_list: if i in drug2id_mapping.keys(): new_drug_id.append(drug2id_mapping[i]) else: new_drug_id.append(0)", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 495, "character": 0}, "end": {"line": 495, "character": 84}}, "selectionRange": {"start": {"line": 495, "character": 0}, "end": {"line": 495, "character": 10}}, "detail": "PDTC_drugs = PDTC_drugs.drop([\"Drug\",\"iC50\",\"D1_CONC\",\"D5_CONC\",\"perc.iC50\"],axis=1)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 503, "character": 0}, "end": {"line": 503, "character": 37}}, "selectionRange": {"start": {"line": 503, "character": 0}, "end": {"line": 503, "character": 5}}, "detail": "drugs = pd.concat([drugs,PDTC_drugs])", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 510, "character": 0}, "end": {"line": 510, "character": 49}}, "selectionRange": {"start": {"line": 510, "character": 0}, "end": {"line": 510, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "cell_line_list", "kind": 13, "range": {"start": {"line": 516, "character": 0}, "end": {"line": 516, "character": 102}}, "selectionRange": {"start": {"line": 516, "character": 0}, "end": {"line": 516, "character": 14}}, "detail": "cell_line_list = list(set(drugs_cell_line_list)&set(exp_cell_line_list)&set(mutation_cell_line_list) )", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 523, "character": 0}, "end": {"line": 523, "character": 66}}, "selectionRange": {"start": {"line": 523, "character": 0}, "end": {"line": 523, "character": 16}}, "detail": "cell_line_legend = pd.read_csv(cell_line_detail_file, index_col=1)", "children": []}, {"name": "PDTC_cell_line", "kind": 13, "range": {"start": {"line": 524, "character": 0}, "end": {"line": 524, "character": 206}}, "selectionRange": {"start": {"line": 524, "character": 0}, "end": {"line": 524, "character": 14}}, "detail": "PDTC_cell_line = pd.DataFrame({'Line': [\"BRCA\"]*len(PDTC_exp_cell_line_list), 'Site':[\"PDTC\"]*len(PDTC_exp_cell_line_list),\"Histology\":[\"breast\"]*len(PDTC_exp_cell_line_list)},index=PDTC_exp_cell_line_list)", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 525, "character": 0}, "end": {"line": 525, "character": 63}}, "selectionRange": {"start": {"line": 525, "character": 0}, "end": {"line": 525, "character": 16}}, "detail": "cell_line_legend = pd.concat([cell_line_legend,PDTC_cell_line])", "children": []}, {"name": "tissue_map", "kind": 13, "range": {"start": {"line": 528, "character": 0}, "end": {"line": 528, "character": 15}}, "selectionRange": {"start": {"line": 528, "character": 0}, "end": {"line": 528, "character": 10}}, "detail": "tissue_map = {}", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 530, "character": 0}, "end": {"line": 538, "character": 0}}, "selectionRange": {"start": {"line": 530, "character": 4}, "end": {"line": 530, "character": 13}}, "detail": "for cell_line in cell_line_list: tissue = cell_line_legend.loc[cell_line,'Site'] if tissue not in tissue_map: tissue_map[tissue] = [] tissue_map[tissue].append(cell_line)", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 532, "character": 4}, "end": {"line": 532, "character": 51}}, "selectionRange": {"start": {"line": 532, "character": 4}, "end": {"line": 532, "character": 10}}, "detail": "tissue = cell_line_legend.loc[cell_line,'Site']", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 539, "character": 0}, "end": {"line": 539, "character": 23}}, "selectionRange": {"start": {"line": 539, "character": 0}, "end": {"line": 539, "character": 19}}, "detail": "large_tissue_number = 0", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 540, "character": 0}, "end": {"line": 546, "character": 0}}, "selectionRange": {"start": {"line": 540, "character": 4}, "end": {"line": 540, "character": 10}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 540, "character": 0}, "end": {"line": 546, "character": 0}}, "selectionRange": {"start": {"line": 540, "character": 12}, "end": {"line": 540, "character": 21}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 543, "character": 8}, "end": {"line": 543, "character": 32}}, "selectionRange": {"start": {"line": 543, "character": 8}, "end": {"line": 543, "character": 27}}, "detail": "large_tissue_number += 1", "children": []}, {"name": "new_exp_gene_list", "kind": 13, "range": {"start": {"line": 566, "character": 0}, "end": {"line": 566, "character": 22}}, "selectionRange": {"start": {"line": 566, "character": 0}, "end": {"line": 566, "character": 17}}, "detail": "new_exp_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 567, "character": 0}, "end": {"line": 570, "character": 0}}, "selectionRange": {"start": {"line": 567, "character": 4}, "end": {"line": 567, "character": 5}}, "detail": "for i in exp_gene_list: if i in valid_gene_list: new_exp_gene_list.append(i)", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 41}}, "selectionRange": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 38}}, "selectionRange": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 72}}, "selectionRange": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 43}}, "selectionRange": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 68}}, "selectionRange": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 58}}, "selectionRange": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 68}}, "selectionRange": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "new_data_file", "kind": 13, "range": {"start": {"line": 597, "character": 0}, "end": {"line": 597, "character": 18}}, "selectionRange": {"start": {"line": 597, "character": 0}, "end": {"line": 597, "character": 13}}, "detail": "new_data_file = ''", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 601, "character": 0}, "end": {"line": 601, "character": 41}}, "selectionRange": {"start": {"line": 601, "character": 0}, "end": {"line": 601, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 602, "character": 0}, "end": {"line": 602, "character": 38}}, "selectionRange": {"start": {"line": 602, "character": 0}, "end": {"line": 602, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 603, "character": 0}, "end": {"line": 603, "character": 72}}, "selectionRange": {"start": {"line": 603, "character": 0}, "end": {"line": 603, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 605, "character": 0}, "end": {"line": 605, "character": 43}}, "selectionRange": {"start": {"line": 605, "character": 0}, "end": {"line": 605, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 606, "character": 0}, "end": {"line": 606, "character": 68}}, "selectionRange": {"start": {"line": 606, "character": 0}, "end": {"line": 606, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 613, "character": 0}, "end": {"line": 613, "character": 58}}, "selectionRange": {"start": {"line": 613, "character": 0}, "end": {"line": 613, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 614, "character": 0}, "end": {"line": 614, "character": 68}}, "selectionRange": {"start": {"line": 614, "character": 0}, "end": {"line": 614, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "rename_selected_drug_list", "kind": 13, "range": {"start": {"line": 618, "character": 0}, "end": {"line": 618, "character": 30}}, "selectionRange": {"start": {"line": 618, "character": 0}, "end": {"line": 618, "character": 25}}, "detail": "rename_selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 620, "character": 0}, "end": {"line": 690, "character": 0}}, "selectionRange": {"start": {"line": 620, "character": 4}, "end": {"line": 620, "character": 8}}, "detail": "for drug in selected_drug_list: print(drug) if drug not in drug2id_mapping: print('drug name wrong', drug) else: cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]] feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) ) feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) ) print(len(feature_exp_gene_list) + len(feature_mut_gene_list)) if len(feature_exp_gene_list) + len(feature_mut_gene_list) == 0: continue feature_description = [] drug_tissue_map = {} drug = drug.replace(' ','_') rename_selected_drug_list.append(drug) if drug == 'Nutlin-3a_(-)': drug = 'Nutlin-3a' drug_folder = '/data/merged/drug_feature/' + drug + '/' if not os.path.exists(drug_folder): os.makedirs(drug_folder) for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description)) file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\") pickle.dump(drug_tissue_map,file_handle) file_handle.close()", "children": []}, {"name": "cell_line_drug_matrix", "kind": 13, "range": {"start": {"line": 628, "character": 8}, "end": {"line": 628, "character": 84}}, "selectionRange": {"start": {"line": 628, "character": 8}, "end": {"line": 628, "character": 29}}, "detail": "cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]]", "children": []}, {"name": "feature_exp_gene_list", "kind": 13, "range": {"start": {"line": 633, "character": 8}, "end": {"line": 633, "character": 98}}, "selectionRange": {"start": {"line": 633, "character": 8}, "end": {"line": 633, "character": 29}}, "detail": "feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) )", "children": []}, {"name": "feature_mut_gene_list", "kind": 13, "range": {"start": {"line": 634, "character": 8}, "end": {"line": 634, "character": 98}}, "selectionRange": {"start": {"line": 634, "character": 8}, "end": {"line": 634, "character": 29}}, "detail": "feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) )", "children": []}, {"name": "feature_description", "kind": 13, "range": {"start": {"line": 638, "character": 8}, "end": {"line": 638, "character": 32}}, "selectionRange": {"start": {"line": 638, "character": 8}, "end": {"line": 638, "character": 27}}, "detail": "feature_description = []", "children": []}, {"name": "drug_tissue_map", "kind": 13, "range": {"start": {"line": 640, "character": 8}, "end": {"line": 640, "character": 28}}, "selectionRange": {"start": {"line": 640, "character": 8}, "end": {"line": 640, "character": 23}}, "detail": "drug_tissue_map = {}", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 642, "character": 8}, "end": {"line": 642, "character": 36}}, "selectionRange": {"start": {"line": 642, "character": 8}, "end": {"line": 642, "character": 12}}, "detail": "drug = drug.replace(' ','_')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 648, "character": 12}, "end": {"line": 648, "character": 30}}, "selectionRange": {"start": {"line": 648, "character": 12}, "end": {"line": 648, "character": 16}}, "detail": "drug = 'Nutlin-3a'", "children": []}, {"name": "drug_folder", "kind": 13, "range": {"start": {"line": 650, "character": 8}, "end": {"line": 650, "character": 63}}, "selectionRange": {"start": {"line": 650, "character": 8}, "end": {"line": 650, "character": 19}}, "detail": "drug_folder = '/data/merged/drug_feature/' + drug + '/'", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 656, "character": 8}, "end": {"line": 686, "character": 0}}, "selectionRange": {"start": {"line": 656, "character": 12}, "end": {"line": 656, "character": 18}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "tissue_cell_line_list", "kind": 13, "range": {"start": {"line": 656, "character": 8}, "end": {"line": 686, "character": 0}}, "selectionRange": {"start": {"line": 656, "character": 20}, "end": {"line": 656, "character": 41}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 659, "character": 12}, "end": {"line": 659, "character": 103}}, "selectionRange": {"start": {"line": 659, "character": 12}, "end": {"line": 659, "character": 35}}, "detail": "drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list )", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 660, "character": 12}, "end": {"line": 660, "character": 67}}, "selectionRange": {"start": {"line": 660, "character": 12}, "end": {"line": 660, "character": 35}}, "detail": "drug_specific_cell_line = list(drug_specific_cell_line)", "children": []}, {"name": "feature_list", "kind": 13, "range": {"start": {"line": 663, "character": 12}, "end": {"line": 663, "character": 29}}, "selectionRange": {"start": {"line": 663, "character": 12}, "end": {"line": 663, "character": 24}}, "detail": "feature_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 667, "character": 16}, "end": {"line": 669, "character": 0}}, "selectionRange": {"start": {"line": 667, "character": 20}, "end": {"line": 667, "character": 24}}, "detail": "for gene in feature_exp_gene_list: feature_description.append(gene+'_expression')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 672, "character": 16}, "end": {"line": 674, "character": 0}}, "selectionRange": {"start": {"line": 672, "character": 20}, "end": {"line": 672, "character": 24}}, "detail": "for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation')", "children": []}, {"name": "feature", "kind": 13, "range": {"start": {"line": 675, "character": 12}, "end": {"line": 675, "character": 58}}, "selectionRange": {"start": {"line": 675, "character": 12}, "end": {"line": 675, "character": 19}}, "detail": "feature = np.concatenate(feature_list, axis=1)", "children": []}, {"name": "label", "kind": 13, "range": {"start": {"line": 677, "character": 12}, "end": {"line": 677, "character": 88}}, "selectionRange": {"start": {"line": 677, "character": 12}, "end": {"line": 677, "character": 17}}, "detail": "label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 687, "character": 8}, "end": {"line": 687, "character": 84}}, "selectionRange": {"start": {"line": 687, "character": 8}, "end": {"line": 687, "character": 19}}, "detail": "file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\")", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 691, "character": 0}, "end": {"line": 691, "character": 52}}, "selectionRange": {"start": {"line": 691, "character": 0}, "end": {"line": 691, "character": 11}}, "detail": "file_handle = open('rename_selected_drug_list', 'w')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 692, "character": 0}, "end": {"line": 694, "character": 0}}, "selectionRange": {"start": {"line": 692, "character": 4}, "end": {"line": 692, "character": 8}}, "detail": "for drug in rename_selected_drug_list: file_handle.writelines(drug+ '\\n')", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 712, "character": 0}, "end": {"line": 712, "character": 13}}, "selectionRange": {"start": {"line": 712, "character": 7}, "end": {"line": 712, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cell_line_loc", "kind": 13, "range": {"start": {"line": 718, "character": 0}, "end": {"line": 718, "character": 84}}, "selectionRange": {"start": {"line": 718, "character": 0}, "end": {"line": 718, "character": 13}}, "detail": "cell_line_loc = '/cellar/users/samsonfong/Projects/tcrp-v2/from-ma/cell_line_lists/'", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 724, "character": 0}, "end": {"line": 726, "character": 0}}, "selectionRange": {"start": {"line": 724, "character": 53}, "end": {"line": 724, "character": 54}}, "detail": "with open('/data/drug_feature/KU-55933/KU', 'rb') as f: tmap= pickle.load(f)", "children": []}, {"name": "tmap", "kind": 13, "range": {"start": {"line": 725, "character": 4}, "end": {"line": 725, "character": 24}}, "selectionRange": {"start": {"line": 725, "character": 4}, "end": {"line": 725, "character": 8}}, "detail": "tmap= pickle.load(f)", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 743, "character": 0}, "end": {"line": 743, "character": 68}}, "selectionRange": {"start": {"line": 743, "character": 0}, "end": {"line": 743, "character": 1}}, "detail": "f = np.load('/data/drug_feature/KU-55933/lung_KU-55933_feature.npy')", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///root/capsule/code/process_merged.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 70, "result": [{"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///root/capsule/code/process_merged.py", "version": 3}, "edits": [{"range": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 0}}, "newText": "def jls_extract_def():\n    "}, {"range": {"start": {"line": 227, "character": 0}, "end": {"line": 227, "character": 0}}, "newText": "    \n    return file_handle\n\n\nfile_handle = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 71, "result": [{"name": "matplotlib", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 17}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 17}}, "detail": "module matplotlib", "children": []}, {"name": "os", "kind": 2, "range": {"start": {"line": 10, "character": 0}, "end": {"line": 10, "character": 9}}, "selectionRange": {"start": {"line": 10, "character": 7}, "end": {"line": 10, "character": 9}}, "detail": "module os", "children": []}, {"name": "pd", "kind": 2, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 11, "character": 19}}, "selectionRange": {"start": {"line": 11, "character": 17}, "end": {"line": 11, "character": 19}}, "detail": "module pd", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 12, "character": 0}, "end": {"line": 12, "character": 18}}, "selectionRange": {"start": {"line": 12, "character": 16}, "end": {"line": 12, "character": 18}}, "detail": "module np", "children": []}, {"name": "sys", "kind": 2, "range": {"start": {"line": 13, "character": 0}, "end": {"line": 13, "character": 10}}, "selectionRange": {"start": {"line": 13, "character": 7}, "end": {"line": 13, "character": 10}}, "detail": "module sys", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 14, "character": 0}, "end": {"line": 14, "character": 13}}, "selectionRange": {"start": {"line": 14, "character": 7}, "end": {"line": 14, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cdist", "kind": 12, "range": {"start": {"line": 15, "character": 0}, "end": {"line": 15, "character": 40}}, "selectionRange": {"start": {"line": 15, "character": 35}, "end": {"line": 15, "character": 40}}, "detail": "def cdist", "children": []}, {"name": "math", "kind": 2, "range": {"start": {"line": 16, "character": 0}, "end": {"line": 16, "character": 11}}, "selectionRange": {"start": {"line": 16, "character": 7}, "end": {"line": 16, "character": 11}}, "detail": "module math", "children": []}, {"name": "nx", "kind": 2, "range": {"start": {"line": 17, "character": 0}, "end": {"line": 17, "character": 21}}, "selectionRange": {"start": {"line": 17, "character": 19}, "end": {"line": 17, "character": 21}}, "detail": "module nx", "children": []}, {"name": "nxacc", "kind": 2, "range": {"start": {"line": 18, "character": 0}, "end": {"line": 18, "character": 56}}, "selectionRange": {"start": {"line": 18, "character": 51}, "end": {"line": 18, "character": 56}}, "detail": "module nxacc", "children": []}, {"name": "nxadag", "kind": 2, "range": {"start": {"line": 19, "character": 0}, "end": {"line": 19, "character": 40}}, "selectionRange": {"start": {"line": 19, "character": 34}, "end": {"line": 19, "character": 40}}, "detail": "module nxadag", "children": []}, {"name": "plt", "kind": 2, "range": {"start": {"line": 20, "character": 0}, "end": {"line": 20, "character": 31}}, "selectionRange": {"start": {"line": 20, "character": 28}, "end": {"line": 20, "character": 31}}, "detail": "module plt", "children": []}, {"name": "sns", "kind": 2, "range": {"start": {"line": 21, "character": 0}, "end": {"line": 21, "character": 21}}, "selectionRange": {"start": {"line": 21, "character": 18}, "end": {"line": 21, "character": 21}}, "detail": "module sns", "children": []}, {"name": "itertools", "kind": 2, "range": {"start": {"line": 22, "character": 0}, "end": {"line": 22, "character": 16}}, "selectionRange": {"start": {"line": 22, "character": 7}, "end": {"line": 22, "character": 16}}, "detail": "module itertools", "children": []}, {"name": "mygene", "kind": 2, "range": {"start": {"line": 23, "character": 0}, "end": {"line": 23, "character": 13}}, "selectionRange": {"start": {"line": 23, "character": 7}, "end": {"line": 23, "character": 13}}, "detail": "module mygene", "children": []}, {"name": "re", "kind": 2, "range": {"start": {"line": 24, "character": 0}, "end": {"line": 24, "character": 9}}, "selectionRange": {"start": {"line": 24, "character": 7}, "end": {"line": 24, "character": 9}}, "detail": "module re", "children": []}, {"name": "selected_exp_gene_list", "kind": 13, "range": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 95}}, "selectionRange": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 22}}, "detail": "selected_exp_gene_list = pd.read_csv(\"/data/common_exp_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "selected_mut_gene_list", "kind": 13, "range": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 95}}, "selectionRange": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 22}}, "detail": "selected_mut_gene_list = pd.read_csv(\"/data/common_mut_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "load_network", "kind": 12, "range": {"start": {"line": 37, "character": 0}, "end": {"line": 65, "character": 28}}, "selectionRange": {"start": {"line": 37, "character": 4}, "end": {"line": 37, "character": 16}}, "detail": "def load_network", "children": []}, {"name": "load_name_space", "kind": 12, "range": {"start": {"line": 67, "character": 0}, "end": {"line": 79, "character": 21}}, "selectionRange": {"start": {"line": 67, "character": 4}, "end": {"line": 67, "character": 19}}, "detail": "def load_name_space", "children": []}, {"name": "list2index", "kind": 12, "range": {"start": {"line": 81, "character": 0}, "end": {"line": 88, "character": 41}}, "selectionRange": {"start": {"line": 81, "character": 4}, "end": {"line": 81, "character": 14}}, "detail": "def list2index", "children": []}, {"name": "PDTC_data_file", "kind": 13, "range": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 30}}, "selectionRange": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 14}}, "detail": "PDTC_data_file = '/data/PTDC/'", "children": []}, {"name": "PDTC_exp_data_file", "kind": 13, "range": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 60}}, "selectionRange": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 18}}, "detail": "PDTC_exp_data_file = PDTC_data_file + 'ExpressionModels.tsv'", "children": []}, {"name": "PDTC_drug_cell_line_file", "kind": 13, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 72}}, "selectionRange": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 24}}, "detail": "PDTC_drug_cell_line_file = PDTC_data_file + 'DrugResponsesAUCModels.tsv'", "children": []}, {"name": "PDTC_mutation_data_file", "kind": 13, "range": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 59}}, "selectionRange": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 23}}, "detail": "PDTC_mutation_data_file = PDTC_data_file + 'SNVsModels.tsv'", "children": []}, {"name": "PDTC_drug_target_file", "kind": 13, "range": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 47}}, "selectionRange": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 21}}, "detail": "PDTC_drug_target_file ='/data/drug_targets.tsv'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 37}}, "selectionRange": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 46}}, "selectionRange": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "data_file", "kind": 13, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 25}}, "selectionRange": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 9}}, "detail": "data_file = '/data/GDSC/'", "children": []}, {"name": "new_network_file", "kind": 13, "range": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 27}}, "selectionRange": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 16}}, "detail": "new_network_file = '/data/'", "children": []}, {"name": "exp_data_file", "kind": 13, "range": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 61}}, "selectionRange": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 13}}, "detail": "exp_data_file = data_file + 'Cell_line_RMA_proc_basalExp.txt'", "children": []}, {"name": "drug_cell_line_file", "kind": 13, "range": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 64}}, "selectionRange": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 19}}, "detail": "drug_cell_line_file = data_file + 'v17_fitted_dose_response.csv'", "children": []}, {"name": "cell_line_detail_file", "kind": 13, "range": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 60}}, "selectionRange": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 21}}, "detail": "cell_line_detail_file = data_file + 'Cell_Lines_Details.csv'", "children": []}, {"name": "mutation_data_file", "kind": 13, "range": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 51}}, "selectionRange": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 18}}, "detail": "mutation_data_file = data_file + 'WES_variants.csv'", "children": []}, {"name": "drug_target_file", "kind": 13, "range": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 42}}, "selectionRange": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 16}}, "detail": "drug_target_file ='/data/drug_targets.tsv'", "children": []}, {"name": "feature_folder", "kind": 13, "range": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 27}}, "selectionRange": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 14}}, "detail": "feature_folder = 'feature/'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 37}}, "selectionRange": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 46}}, "selectionRange": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 58}}, "selectionRange": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 6}}, "detail": "exp_df = pd.read_csv(exp_data_file, sep='\\t', index_col=0)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 21}}, "selectionRange": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 6}}, "detail": "exp_df = exp_df.T[1:]", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 56}}, "selectionRange": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 6}}, "detail": "exp_df = exp_df.rename(columns={np.nan: 'NO_GENE_NAME'})", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 43}}, "selectionRange": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 6}}, "detail": "exp_df = exp_df.drop('NO_GENE_NAME',axis=1)", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 138, "character": 0}, "end": {"line": 140, "character": 26}}, "selectionRange": {"start": {"line": 138, "character": 4}, "end": {"line": 138, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 142, "character": 0}, "end": {"line": 142, "character": 44}}, "selectionRange": {"start": {"line": 142, "character": 7}, "end": {"line": 142, "character": 12}}, "detail": "exp_df.index = exp_df.index.map(stripNumber)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 40}}, "selectionRange": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 6}}, "detail": "exp_df = exp_df.groupby(level=0).first()", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 39}}, "selectionRange": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 6}}, "detail": "exp_df = exp_df[selected_exp_gene_list]", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 36}}, "selectionRange": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 48}}, "selectionRange": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 78}}, "selectionRange": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 11}}, "detail": "PDTC_exp_df = pd.read_csv(PDTC_exp_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 31}}, "selectionRange": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df.T[1:]", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 160, "character": 0}, "end": {"line": 162, "character": 26}}, "selectionRange": {"start": {"line": 160, "character": 4}, "end": {"line": 160, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 49}}, "selectionRange": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df[selected_exp_gene_list]", "children": []}, {"name": "PDTC_exp_gene_list", "kind": 13, "range": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 46}}, "selectionRange": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 18}}, "detail": "PDTC_exp_gene_list = list(PDTC_exp_df.columns)", "children": []}, {"name": "PDTC_exp_cell_line_list", "kind": 13, "range": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 58}}, "selectionRange": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 23}}, "detail": "PDTC_exp_cell_line_list = list(PDTC_exp_df.index.unique())", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 40}}, "selectionRange": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 6}}, "detail": "exp_df = pd.concat([exp_df,PDTC_exp_df])", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 36}}, "selectionRange": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 48}}, "selectionRange": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "maf", "kind": 13, "range": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 69}}, "selectionRange": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 3}}, "detail": "maf = pd.read_csv(mutation_data_file, sep=',', index_col=0).fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 75}}, "selectionRange": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 11}}, "detail": "mutation_df = maf.groupby(['COSMIC_ID', 'Gene']).size().unstack().fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 49}}, "selectionRange": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 11}}, "detail": "mutation_df = mutation_df[selected_mut_gene_list]", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 46}}, "selectionRange": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 58}}, "selectionRange": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "PDTC_maf", "kind": 13, "range": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 80}}, "selectionRange": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 8}}, "detail": "PDTC_maf = pd.read_csv(PDTC_mutation_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 61}}, "selectionRange": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_maf.replace(to_replace=\"NO\",value=0.0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 82}}, "selectionRange": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_mutation_df.replace(to_replace=\"chr*\",value=1.0,regex=True)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 47}}, "selectionRange": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df.transpose()", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 59}}, "selectionRange": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df[selected_mut_gene_list]", "children": []}, {"name": "PDTC_mutation_gene_list", "kind": 13, "range": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 56}}, "selectionRange": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 23}}, "detail": "PDTC_mutation_gene_list = list(PDTC_mutation_df.columns)", "children": []}, {"name": "PDTC_mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 68}}, "selectionRange": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 28}}, "detail": "PDTC_mutation_cell_line_list = list(PDTC_mutation_df.index.unique())", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 55}}, "selectionRange": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 11}}, "detail": "mutation_df = pd.concat([mutation_df,PDTC_mutation_df])", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 46}}, "selectionRange": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 58}}, "selectionRange": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 36}}, "selectionRange": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 11}}, "detail": "file_handle = open(drug_target_file)", "children": []}, {"name": "drug_target_map", "kind": 13, "range": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 20}}, "selectionRange": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 15}}, "detail": "drug_target_map = {}", "children": []}, {"name": "drug_target_list", "kind": 13, "range": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 21}}, "selectionRange": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 16}}, "detail": "drug_target_list = []", "children": []}, {"name": "line", "kind": 13, "range": {"start": {"line": 230, "character": 0}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 230, "character": 4}, "end": {"line": 230, "character": 8}}, "detail": "for line in file_handle: new_line = line.rstrip().split(\"\\t\") drug = new_line[0] target_list=new_line[1].split(',') if drug != \"Drug\": target_list_str = \"\" for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\" drug = drug.strip() drug_target_map[drug] = [] if ',' not in target_list_str: drug_target_map[drug].append(target_list_str.strip()) drug_target_list.append(target_list_str.strip()) else: target_list = target_list_str.split(',') for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "new_line", "kind": 13, "range": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 40}}, "selectionRange": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 12}}, "detail": "new_line = line.rstrip().split(\"\\t\")", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 22}}, "selectionRange": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 8}}, "detail": "drug = new_line[0]", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 38}}, "selectionRange": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 15}}, "detail": "target_list=new_line[1].split(',')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 28}}, "selectionRange": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 23}}, "detail": "target_list_str = \"\"", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 237, "character": 8}, "end": {"line": 242, "character": 0}}, "selectionRange": {"start": {"line": 237, "character": 12}, "end": {"line": 237, "character": 13}}, "detail": "for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 65}}, "selectionRange": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 71}}, "selectionRange": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 27}}, "selectionRange": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 12}}, "detail": "drug = drug.strip()", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 52}}, "selectionRange": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 23}}, "detail": "target_list = target_list_str.split(',')", "children": []}, {"name": "target", "kind": 13, "range": {"start": {"line": 250, "character": 12}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 250, "character": 16}, "end": {"line": 250, "character": 22}}, "detail": "for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "drugs_legend", "kind": 13, "range": {"start": {"line": 261, "character": 0}, "end": {"line": 261, "character": 85}}, "selectionRange": {"start": {"line": 261, "character": 0}, "end": {"line": 261, "character": 12}}, "detail": "drugs_legend = pd.read_csv('/data/GDSC/Screened_Compounds.csv', sep=',', index_col=0)", "children": []}, {"name": "drug2id_mapping", "kind": 13, "range": {"start": {"line": 263, "character": 0}, "end": {"line": 263, "character": 20}}, "selectionRange": {"start": {"line": 263, "character": 0}, "end": {"line": 263, "character": 15}}, "detail": "drug2id_mapping = {}", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 265, "character": 0}, "end": {"line": 268, "character": 0}}, "selectionRange": {"start": {"line": 265, "character": 4}, "end": {"line": 265, "character": 9}}, "detail": "for index in list(drugs_legend.index) : drug_name = drugs_legend.loc[index,'Drug Name'] drug2id_mapping[ drug_name ] = index", "children": []}, {"name": "drug_name", "kind": 13, "range": {"start": {"line": 266, "character": 4}, "end": {"line": 266, "character": 51}}, "selectionRange": {"start": {"line": 266, "character": 4}, "end": {"line": 266, "character": 13}}, "detail": "drug_name = drugs_legend.loc[index,'Drug Name']", "children": []}, {"name": "valid_gene_list", "kind": 13, "range": {"start": {"line": 273, "character": 0}, "end": {"line": 273, "character": 92}}, "selectionRange": {"start": {"line": 273, "character": 0}, "end": {"line": 273, "character": 15}}, "detail": "valid_gene_list = list(set(drug_target_list) | set(exp_gene_list) | set(mutation_gene_list))", "children": []}, {"name": "network_list", "kind": 13, "range": {"start": {"line": 279, "character": 0}, "end": {"line": 279, "character": 82}}, "selectionRange": {"start": {"line": 279, "character": 0}, "end": {"line": 279, "character": 12}}, "detail": "network_list = [new_network_file+inbiomap_file, new_network_file+pathwaycomm_file]", "children": []}, {"name": "gene_neighbor_map", "kind": 13, "range": {"start": {"line": 280, "character": 0}, "end": {"line": 280, "character": 64}}, "selectionRange": {"start": {"line": 280, "character": 0}, "end": {"line": 280, "character": 17}}, "detail": "gene_neighbor_map = load_network(network_list, valid_gene_list)", "children": []}, {"name": "gene_name_df", "kind": 13, "range": {"start": {"line": 286, "character": 0}, "end": {"line": 286, "character": 89}}, "selectionRange": {"start": {"line": 286, "character": 0}, "end": {"line": 286, "character": 12}}, "detail": "gene_name_df = pd.read_table('/data/HUGO_protein-coding_gene.tsv',index_col=25, sep='\\t')", "children": []}, {"name": "gene_name_map", "kind": 13, "range": {"start": {"line": 292, "character": 0}, "end": {"line": 292, "character": 18}}, "selectionRange": {"start": {"line": 292, "character": 0}, "end": {"line": 292, "character": 13}}, "detail": "gene_name_map = {}", "children": []}, {"name": "uniprot_gene", "kind": 13, "range": {"start": {"line": 294, "character": 0}, "end": {"line": 303, "character": 0}}, "selectionRange": {"start": {"line": 294, "character": 4}, "end": {"line": 294, "character": 16}}, "detail": "for uniprot_gene in gene_name_df.index: if isinstance(uniprot_gene, type('aaa')) == False: continue if isinstance(gene_name_df.loc[uniprot_gene, 'symbol'], type('aaa')) == False: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol'][0] else: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 308, "character": 0}, "end": {"line": 308, "character": 76}}, "selectionRange": {"start": {"line": 308, "character": 0}, "end": {"line": 308, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "uniprot_gene_set", "kind": 13, "range": {"start": {"line": 310, "character": 0}, "end": {"line": 310, "character": 24}}, "selectionRange": {"start": {"line": 310, "character": 0}, "end": {"line": 310, "character": 16}}, "detail": "uniprot_gene_set = set()", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 312, "character": 0}, "end": {"line": 321, "character": 0}}, "selectionRange": {"start": {"line": 312, "character": 4}, "end": {"line": 312, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 317, "character": 4}, "end": {"line": 317, "character": 74}}, "selectionRange": {"start": {"line": 317, "character": 4}, "end": {"line": 317, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 319, "character": 4}, "end": {"line": 321, "character": 0}}, "selectionRange": {"start": {"line": 319, "character": 8}, "end": {"line": 319, "character": 12}}, "detail": "for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "query_gene_set", "kind": 13, "range": {"start": {"line": 324, "character": 0}, "end": {"line": 324, "character": 19}}, "selectionRange": {"start": {"line": 324, "character": 0}, "end": {"line": 324, "character": 14}}, "detail": "query_gene_set = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 326, "character": 0}, "end": {"line": 329, "character": 0}}, "selectionRange": {"start": {"line": 326, "character": 4}, "end": {"line": 326, "character": 8}}, "detail": "for gene in uniprot_gene_set: if gene not in gene_name_map: query_gene_set.append(gene)", "children": []}, {"name": "query_gene_list", "kind": 13, "range": {"start": {"line": 332, "character": 0}, "end": {"line": 332, "character": 38}}, "selectionRange": {"start": {"line": 332, "character": 0}, "end": {"line": 332, "character": 15}}, "detail": "query_gene_list = list(query_gene_set)", "children": []}, {"name": "mg", "kind": 13, "range": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 24}}, "selectionRange": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 2}}, "detail": "mg = mygene.MyGeneInfo()", "children": []}, {"name": "out", "kind": 13, "range": {"start": {"line": 335, "character": 0}, "end": {"line": 335, "character": 87}}, "selectionRange": {"start": {"line": 335, "character": 0}, "end": {"line": 335, "character": 3}}, "detail": "out = mg.querymany(query_gene_list, scopes='uniprot', fields='symbol', species='human')", "children": []}, {"name": "not_found_gene_list", "kind": 13, "range": {"start": {"line": 337, "character": 0}, "end": {"line": 337, "character": 24}}, "selectionRange": {"start": {"line": 337, "character": 0}, "end": {"line": 337, "character": 19}}, "detail": "not_found_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 339, "character": 0}, "end": {"line": 344, "character": 0}}, "selectionRange": {"start": {"line": 339, "character": 4}, "end": {"line": 339, "character": 5}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 339, "character": 0}, "end": {"line": 344, "character": 0}}, "selectionRange": {"start": {"line": 339, "character": 7}, "end": {"line": 339, "character": 11}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 351, "character": 0}, "end": {"line": 351, "character": 76}}, "selectionRange": {"start": {"line": 351, "character": 0}, "end": {"line": 351, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 353, "character": 0}, "end": {"line": 375, "character": 0}}, "selectionRange": {"start": {"line": 353, "character": 4}, "end": {"line": 353, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') complex_symbol_list = [] for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] ) for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 358, "character": 4}, "end": {"line": 358, "character": 74}}, "selectionRange": {"start": {"line": 358, "character": 4}, "end": {"line": 358, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "complex_symbol_list", "kind": 13, "range": {"start": {"line": 360, "character": 4}, "end": {"line": 360, "character": 28}}, "selectionRange": {"start": {"line": 360, "character": 4}, "end": {"line": 360, "character": 23}}, "detail": "complex_symbol_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 362, "character": 4}, "end": {"line": 365, "character": 0}}, "selectionRange": {"start": {"line": 362, "character": 8}, "end": {"line": 362, "character": 12}}, "detail": "for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] )", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 366, "character": 4}, "end": {"line": 375, "character": 0}}, "selectionRange": {"start": {"line": 366, "character": 8}, "end": {"line": 366, "character": 13}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 366, "character": 4}, "end": {"line": 375, "character": 0}}, "selectionRange": {"start": {"line": 366, "character": 15}, "end": {"line": 366, "character": 20}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene_exp_neighbor_map", "kind": 13, "range": {"start": {"line": 380, "character": 0}, "end": {"line": 380, "character": 26}}, "selectionRange": {"start": {"line": 380, "character": 0}, "end": {"line": 380, "character": 21}}, "detail": "gene_exp_neighbor_map = {}", "children": []}, {"name": "exp_matrix", "kind": 13, "range": {"start": {"line": 381, "character": 0}, "end": {"line": 381, "character": 26}}, "selectionRange": {"start": {"line": 381, "character": 0}, "end": {"line": 381, "character": 10}}, "detail": "exp_matrix = exp_df.values", "children": []}, {"name": "P", "kind": 13, "range": {"start": {"line": 383, "character": 0}, "end": {"line": 383, "character": 79}}, "selectionRange": {"start": {"line": 383, "character": 0}, "end": {"line": 383, "character": 1}}, "detail": "P = 1 - cdist(np.transpose(exp_matrix), np.transpose(exp_matrix),'correlation')", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 385, "character": 0}, "end": {"line": 399, "character": 0}}, "selectionRange": {"start": {"line": 385, "character": 4}, "end": {"line": 385, "character": 5}}, "detail": "for i in range(len(exp_gene_list)): gene1 = exp_gene_list[i] gene_exp_neighbor_map[gene1] = set() for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2) if gene1 not in gene_exp_neighbor_map[gene1]: print (gene1, 'not in itself?', P[i,i])", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 387, "character": 4}, "end": {"line": 387, "character": 28}}, "selectionRange": {"start": {"line": 387, "character": 4}, "end": {"line": 387, "character": 9}}, "detail": "gene1 = exp_gene_list[i]", "children": []}, {"name": "j", "kind": 13, "range": {"start": {"line": 390, "character": 4}, "end": {"line": 396, "character": 0}}, "selectionRange": {"start": {"line": 390, "character": 8}, "end": {"line": 390, "character": 9}}, "detail": "for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 392, "character": 8}, "end": {"line": 392, "character": 32}}, "selectionRange": {"start": {"line": 392, "character": 8}, "end": {"line": 392, "character": 13}}, "detail": "gene2 = exp_gene_list[j]", "children": []}, {"name": "drug_feature_list", "kind": 13, "range": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 22}}, "selectionRange": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 17}}, "detail": "drug_feature_list = []", "children": []}, {"name": "drug_neighbor_map", "kind": 13, "range": {"start": {"line": 408, "character": 0}, "end": {"line": 408, "character": 22}}, "selectionRange": {"start": {"line": 408, "character": 0}, "end": {"line": 408, "character": 17}}, "detail": "drug_neighbor_map = {}", "children": []}, {"name": "selected_drug_list", "kind": 13, "range": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 23}}, "selectionRange": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 18}}, "detail": "selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 411, "character": 0}, "end": {"line": 428, "character": 0}}, "selectionRange": {"start": {"line": 411, "character": 4}, "end": {"line": 411, "character": 8}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 411, "character": 0}, "end": {"line": 428, "character": 0}}, "selectionRange": {"start": {"line": 411, "character": 10}, "end": {"line": 411, "character": 21}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 414, "character": 8}, "end": {"line": 424, "character": 0}}, "selectionRange": {"start": {"line": 414, "character": 12}, "end": {"line": 414, "character": 16}}, "detail": "for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene]", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 442, "character": 0}, "end": {"line": 442, "character": 52}}, "selectionRange": {"start": {"line": 442, "character": 0}, "end": {"line": 442, "character": 5}}, "detail": "drugs = pd.read_csv(drug_cell_line_file,index_col=2)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 443, "character": 0}, "end": {"line": 443, "character": 93}}, "selectionRange": {"start": {"line": 443, "character": 0}, "end": {"line": 443, "character": 5}}, "detail": "drugs = drugs.drop([\"DATASET_VERSION\",\"IC50_RESULTS_ID\",\"MAX_CONC_MICROMOLAR\",\"RMSE\"],axis=1)", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 444, "character": 0}, "end": {"line": 444, "character": 49}}, "selectionRange": {"start": {"line": 444, "character": 0}, "end": {"line": 444, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 446, "character": 0}, "end": {"line": 446, "character": 28}}, "selectionRange": {"start": {"line": 446, "character": 0}, "end": {"line": 446, "character": 9}}, "detail": "drug_list = drugs[\"DRUG_ID\"]", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 447, "character": 0}, "end": {"line": 447, "character": 16}}, "selectionRange": {"start": {"line": 447, "character": 0}, "end": {"line": 447, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 457, "character": 0}, "end": {"line": 457, "character": 71}}, "selectionRange": {"start": {"line": 457, "character": 0}, "end": {"line": 457, "character": 10}}, "detail": "PDTC_drugs = pd.read_csv(PDTC_drug_cell_line_file,sep='\\t',index_col=0)", "children": []}, {"name": "PDTC_drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 458, "character": 0}, "end": {"line": 458, "character": 59}}, "selectionRange": {"start": {"line": 458, "character": 0}, "end": {"line": 458, "character": 25}}, "detail": "PDTC_drugs_cell_line_list = list(PDTC_drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 460, "character": 0}, "end": {"line": 460, "character": 39}}, "selectionRange": {"start": {"line": 460, "character": 0}, "end": {"line": 460, "character": 9}}, "detail": "drug_list = PDTC_drugs[\"Drug\"].tolist()", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 461, "character": 0}, "end": {"line": 461, "character": 16}}, "selectionRange": {"start": {"line": 461, "character": 0}, "end": {"line": 461, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 462, "character": 0}, "end": {"line": 467, "character": 0}}, "selectionRange": {"start": {"line": 462, "character": 4}, "end": {"line": 462, "character": 5}}, "detail": "for i in drug_list: if i in drug2id_mapping.keys(): new_drug_id.append(drug2id_mapping[i]) else: new_drug_id.append(0)", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 84}}, "selectionRange": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 10}}, "detail": "PDTC_drugs = PDTC_drugs.drop([\"Drug\",\"iC50\",\"D1_CONC\",\"D5_CONC\",\"perc.iC50\"],axis=1)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 477, "character": 0}, "end": {"line": 477, "character": 37}}, "selectionRange": {"start": {"line": 477, "character": 0}, "end": {"line": 477, "character": 5}}, "detail": "drugs = pd.concat([drugs,PDTC_drugs])", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 49}}, "selectionRange": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "cell_line_list", "kind": 13, "range": {"start": {"line": 490, "character": 0}, "end": {"line": 490, "character": 102}}, "selectionRange": {"start": {"line": 490, "character": 0}, "end": {"line": 490, "character": 14}}, "detail": "cell_line_list = list(set(drugs_cell_line_list)&set(exp_cell_line_list)&set(mutation_cell_line_list) )", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 497, "character": 0}, "end": {"line": 497, "character": 66}}, "selectionRange": {"start": {"line": 497, "character": 0}, "end": {"line": 497, "character": 16}}, "detail": "cell_line_legend = pd.read_csv(cell_line_detail_file, index_col=1)", "children": []}, {"name": "PDTC_cell_line", "kind": 13, "range": {"start": {"line": 498, "character": 0}, "end": {"line": 498, "character": 206}}, "selectionRange": {"start": {"line": 498, "character": 0}, "end": {"line": 498, "character": 14}}, "detail": "PDTC_cell_line = pd.DataFrame({'Line': [\"BRCA\"]*len(PDTC_exp_cell_line_list), 'Site':[\"PDTC\"]*len(PDTC_exp_cell_line_list),\"Histology\":[\"breast\"]*len(PDTC_exp_cell_line_list)},index=PDTC_exp_cell_line_list)", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 499, "character": 0}, "end": {"line": 499, "character": 63}}, "selectionRange": {"start": {"line": 499, "character": 0}, "end": {"line": 499, "character": 16}}, "detail": "cell_line_legend = pd.concat([cell_line_legend,PDTC_cell_line])", "children": []}, {"name": "tissue_map", "kind": 13, "range": {"start": {"line": 502, "character": 0}, "end": {"line": 502, "character": 15}}, "selectionRange": {"start": {"line": 502, "character": 0}, "end": {"line": 502, "character": 10}}, "detail": "tissue_map = {}", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 504, "character": 0}, "end": {"line": 512, "character": 0}}, "selectionRange": {"start": {"line": 504, "character": 4}, "end": {"line": 504, "character": 13}}, "detail": "for cell_line in cell_line_list: tissue = cell_line_legend.loc[cell_line,'Site'] if tissue not in tissue_map: tissue_map[tissue] = [] tissue_map[tissue].append(cell_line)", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 506, "character": 4}, "end": {"line": 506, "character": 51}}, "selectionRange": {"start": {"line": 506, "character": 4}, "end": {"line": 506, "character": 10}}, "detail": "tissue = cell_line_legend.loc[cell_line,'Site']", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 513, "character": 0}, "end": {"line": 513, "character": 23}}, "selectionRange": {"start": {"line": 513, "character": 0}, "end": {"line": 513, "character": 19}}, "detail": "large_tissue_number = 0", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 514, "character": 0}, "end": {"line": 520, "character": 0}}, "selectionRange": {"start": {"line": 514, "character": 4}, "end": {"line": 514, "character": 10}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 514, "character": 0}, "end": {"line": 520, "character": 0}}, "selectionRange": {"start": {"line": 514, "character": 12}, "end": {"line": 514, "character": 21}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 517, "character": 8}, "end": {"line": 517, "character": 32}}, "selectionRange": {"start": {"line": 517, "character": 8}, "end": {"line": 517, "character": 27}}, "detail": "large_tissue_number += 1", "children": []}, {"name": "new_exp_gene_list", "kind": 13, "range": {"start": {"line": 540, "character": 0}, "end": {"line": 540, "character": 22}}, "selectionRange": {"start": {"line": 540, "character": 0}, "end": {"line": 540, "character": 17}}, "detail": "new_exp_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 541, "character": 0}, "end": {"line": 544, "character": 0}}, "selectionRange": {"start": {"line": 541, "character": 4}, "end": {"line": 541, "character": 5}}, "detail": "for i in exp_gene_list: if i in valid_gene_list: new_exp_gene_list.append(i)", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 549, "character": 0}, "end": {"line": 549, "character": 41}}, "selectionRange": {"start": {"line": 549, "character": 0}, "end": {"line": 549, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 550, "character": 0}, "end": {"line": 550, "character": 38}}, "selectionRange": {"start": {"line": 550, "character": 0}, "end": {"line": 550, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 551, "character": 0}, "end": {"line": 551, "character": 72}}, "selectionRange": {"start": {"line": 551, "character": 0}, "end": {"line": 551, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 553, "character": 0}, "end": {"line": 553, "character": 43}}, "selectionRange": {"start": {"line": 553, "character": 0}, "end": {"line": 553, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 554, "character": 0}, "end": {"line": 554, "character": 68}}, "selectionRange": {"start": {"line": 554, "character": 0}, "end": {"line": 554, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 561, "character": 0}, "end": {"line": 561, "character": 58}}, "selectionRange": {"start": {"line": 561, "character": 0}, "end": {"line": 561, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 562, "character": 0}, "end": {"line": 562, "character": 68}}, "selectionRange": {"start": {"line": 562, "character": 0}, "end": {"line": 562, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "new_data_file", "kind": 13, "range": {"start": {"line": 571, "character": 0}, "end": {"line": 571, "character": 18}}, "selectionRange": {"start": {"line": 571, "character": 0}, "end": {"line": 571, "character": 13}}, "detail": "new_data_file = ''", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 41}}, "selectionRange": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 38}}, "selectionRange": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 72}}, "selectionRange": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 43}}, "selectionRange": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 68}}, "selectionRange": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 58}}, "selectionRange": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 68}}, "selectionRange": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "rename_selected_drug_list", "kind": 13, "range": {"start": {"line": 592, "character": 0}, "end": {"line": 592, "character": 30}}, "selectionRange": {"start": {"line": 592, "character": 0}, "end": {"line": 592, "character": 25}}, "detail": "rename_selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 594, "character": 0}, "end": {"line": 664, "character": 0}}, "selectionRange": {"start": {"line": 594, "character": 4}, "end": {"line": 594, "character": 8}}, "detail": "for drug in selected_drug_list: print(drug) if drug not in drug2id_mapping: print('drug name wrong', drug) else: cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]] feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) ) feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) ) print(len(feature_exp_gene_list) + len(feature_mut_gene_list)) if len(feature_exp_gene_list) + len(feature_mut_gene_list) == 0: continue feature_description = [] drug_tissue_map = {} drug = drug.replace(' ','_') rename_selected_drug_list.append(drug) if drug == 'Nutlin-3a_(-)': drug = 'Nutlin-3a' drug_folder = '/data/merged/drug_feature/' + drug + '/' if not os.path.exists(drug_folder): os.makedirs(drug_folder) for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description)) file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\") pickle.dump(drug_tissue_map,file_handle) file_handle.close()", "children": []}, {"name": "cell_line_drug_matrix", "kind": 13, "range": {"start": {"line": 602, "character": 8}, "end": {"line": 602, "character": 84}}, "selectionRange": {"start": {"line": 602, "character": 8}, "end": {"line": 602, "character": 29}}, "detail": "cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]]", "children": []}, {"name": "feature_exp_gene_list", "kind": 13, "range": {"start": {"line": 607, "character": 8}, "end": {"line": 607, "character": 98}}, "selectionRange": {"start": {"line": 607, "character": 8}, "end": {"line": 607, "character": 29}}, "detail": "feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) )", "children": []}, {"name": "feature_mut_gene_list", "kind": 13, "range": {"start": {"line": 608, "character": 8}, "end": {"line": 608, "character": 98}}, "selectionRange": {"start": {"line": 608, "character": 8}, "end": {"line": 608, "character": 29}}, "detail": "feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) )", "children": []}, {"name": "feature_description", "kind": 13, "range": {"start": {"line": 612, "character": 8}, "end": {"line": 612, "character": 32}}, "selectionRange": {"start": {"line": 612, "character": 8}, "end": {"line": 612, "character": 27}}, "detail": "feature_description = []", "children": []}, {"name": "drug_tissue_map", "kind": 13, "range": {"start": {"line": 614, "character": 8}, "end": {"line": 614, "character": 28}}, "selectionRange": {"start": {"line": 614, "character": 8}, "end": {"line": 614, "character": 23}}, "detail": "drug_tissue_map = {}", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 616, "character": 8}, "end": {"line": 616, "character": 36}}, "selectionRange": {"start": {"line": 616, "character": 8}, "end": {"line": 616, "character": 12}}, "detail": "drug = drug.replace(' ','_')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 622, "character": 12}, "end": {"line": 622, "character": 30}}, "selectionRange": {"start": {"line": 622, "character": 12}, "end": {"line": 622, "character": 16}}, "detail": "drug = 'Nutlin-3a'", "children": []}, {"name": "drug_folder", "kind": 13, "range": {"start": {"line": 624, "character": 8}, "end": {"line": 624, "character": 63}}, "selectionRange": {"start": {"line": 624, "character": 8}, "end": {"line": 624, "character": 19}}, "detail": "drug_folder = '/data/merged/drug_feature/' + drug + '/'", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 630, "character": 8}, "end": {"line": 660, "character": 0}}, "selectionRange": {"start": {"line": 630, "character": 12}, "end": {"line": 630, "character": 18}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "tissue_cell_line_list", "kind": 13, "range": {"start": {"line": 630, "character": 8}, "end": {"line": 660, "character": 0}}, "selectionRange": {"start": {"line": 630, "character": 20}, "end": {"line": 630, "character": 41}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 633, "character": 12}, "end": {"line": 633, "character": 103}}, "selectionRange": {"start": {"line": 633, "character": 12}, "end": {"line": 633, "character": 35}}, "detail": "drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list )", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 634, "character": 12}, "end": {"line": 634, "character": 67}}, "selectionRange": {"start": {"line": 634, "character": 12}, "end": {"line": 634, "character": 35}}, "detail": "drug_specific_cell_line = list(drug_specific_cell_line)", "children": []}, {"name": "feature_list", "kind": 13, "range": {"start": {"line": 637, "character": 12}, "end": {"line": 637, "character": 29}}, "selectionRange": {"start": {"line": 637, "character": 12}, "end": {"line": 637, "character": 24}}, "detail": "feature_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 641, "character": 16}, "end": {"line": 643, "character": 0}}, "selectionRange": {"start": {"line": 641, "character": 20}, "end": {"line": 641, "character": 24}}, "detail": "for gene in feature_exp_gene_list: feature_description.append(gene+'_expression')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 646, "character": 16}, "end": {"line": 648, "character": 0}}, "selectionRange": {"start": {"line": 646, "character": 20}, "end": {"line": 646, "character": 24}}, "detail": "for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation')", "children": []}, {"name": "feature", "kind": 13, "range": {"start": {"line": 649, "character": 12}, "end": {"line": 649, "character": 58}}, "selectionRange": {"start": {"line": 649, "character": 12}, "end": {"line": 649, "character": 19}}, "detail": "feature = np.concatenate(feature_list, axis=1)", "children": []}, {"name": "label", "kind": 13, "range": {"start": {"line": 651, "character": 12}, "end": {"line": 651, "character": 88}}, "selectionRange": {"start": {"line": 651, "character": 12}, "end": {"line": 651, "character": 17}}, "detail": "label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 661, "character": 8}, "end": {"line": 661, "character": 84}}, "selectionRange": {"start": {"line": 661, "character": 8}, "end": {"line": 661, "character": 19}}, "detail": "file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\")", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 665, "character": 0}, "end": {"line": 665, "character": 52}}, "selectionRange": {"start": {"line": 665, "character": 0}, "end": {"line": 665, "character": 11}}, "detail": "file_handle = open('rename_selected_drug_list', 'w')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 666, "character": 0}, "end": {"line": 668, "character": 0}}, "selectionRange": {"start": {"line": 666, "character": 4}, "end": {"line": 666, "character": 8}}, "detail": "for drug in rename_selected_drug_list: file_handle.writelines(drug+ '\\n')", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 686, "character": 0}, "end": {"line": 686, "character": 13}}, "selectionRange": {"start": {"line": 686, "character": 7}, "end": {"line": 686, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cell_line_loc", "kind": 13, "range": {"start": {"line": 692, "character": 0}, "end": {"line": 692, "character": 84}}, "selectionRange": {"start": {"line": 692, "character": 0}, "end": {"line": 692, "character": 13}}, "detail": "cell_line_loc = '/cellar/users/samsonfong/Projects/tcrp-v2/from-ma/cell_line_lists/'", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 698, "character": 0}, "end": {"line": 700, "character": 0}}, "selectionRange": {"start": {"line": 698, "character": 53}, "end": {"line": 698, "character": 54}}, "detail": "with open('/data/drug_feature/KU-55933/KU', 'rb') as f: tmap= pickle.load(f)", "children": []}, {"name": "tmap", "kind": 13, "range": {"start": {"line": 699, "character": 4}, "end": {"line": 699, "character": 24}}, "selectionRange": {"start": {"line": 699, "character": 4}, "end": {"line": 699, "character": 8}}, "detail": "tmap= pickle.load(f)", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 717, "character": 0}, "end": {"line": 717, "character": 68}}, "selectionRange": {"start": {"line": 717, "character": 0}, "end": {"line": 717, "character": 1}}, "detail": "f = np.load('/data/drug_feature/KU-55933/lung_KU-55933_feature.npy')", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 72, "result": {"contents": {"kind": "markdown", "value": "```python\nstatement str(object='', /) -> str\n```\n---\n```python\nPDTC_mutation_data_file = PDTC_data_file + 'SNVsModels.tsv'\n```\n**Full name:** `code.process_merged.PDTC_mutation_data_file`"}, "range": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 23}}}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 73, "result": {"contents": {"kind": "markdown", "value": "```python\ndata_file = '/data/GDSC/'\n```\n---\n**Full name:** `code.process_merged.data_file`"}, "range": {"start": {"line": 114, "character": 22}, "end": {"line": 114, "character": 31}}}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 74, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 75, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 76, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 77, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 78, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 79, "result": [{"name": "matplotlib", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 17}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 17}}, "detail": "module matplotlib", "children": []}, {"name": "os", "kind": 2, "range": {"start": {"line": 10, "character": 0}, "end": {"line": 10, "character": 9}}, "selectionRange": {"start": {"line": 10, "character": 7}, "end": {"line": 10, "character": 9}}, "detail": "module os", "children": []}, {"name": "pd", "kind": 2, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 11, "character": 19}}, "selectionRange": {"start": {"line": 11, "character": 17}, "end": {"line": 11, "character": 19}}, "detail": "module pd", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 12, "character": 0}, "end": {"line": 12, "character": 18}}, "selectionRange": {"start": {"line": 12, "character": 16}, "end": {"line": 12, "character": 18}}, "detail": "module np", "children": []}, {"name": "sys", "kind": 2, "range": {"start": {"line": 13, "character": 0}, "end": {"line": 13, "character": 10}}, "selectionRange": {"start": {"line": 13, "character": 7}, "end": {"line": 13, "character": 10}}, "detail": "module sys", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 14, "character": 0}, "end": {"line": 14, "character": 13}}, "selectionRange": {"start": {"line": 14, "character": 7}, "end": {"line": 14, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cdist", "kind": 12, "range": {"start": {"line": 15, "character": 0}, "end": {"line": 15, "character": 40}}, "selectionRange": {"start": {"line": 15, "character": 35}, "end": {"line": 15, "character": 40}}, "detail": "def cdist", "children": []}, {"name": "math", "kind": 2, "range": {"start": {"line": 16, "character": 0}, "end": {"line": 16, "character": 11}}, "selectionRange": {"start": {"line": 16, "character": 7}, "end": {"line": 16, "character": 11}}, "detail": "module math", "children": []}, {"name": "nx", "kind": 2, "range": {"start": {"line": 17, "character": 0}, "end": {"line": 17, "character": 21}}, "selectionRange": {"start": {"line": 17, "character": 19}, "end": {"line": 17, "character": 21}}, "detail": "module nx", "children": []}, {"name": "nxacc", "kind": 2, "range": {"start": {"line": 18, "character": 0}, "end": {"line": 18, "character": 56}}, "selectionRange": {"start": {"line": 18, "character": 51}, "end": {"line": 18, "character": 56}}, "detail": "module nxacc", "children": []}, {"name": "nxadag", "kind": 2, "range": {"start": {"line": 19, "character": 0}, "end": {"line": 19, "character": 40}}, "selectionRange": {"start": {"line": 19, "character": 34}, "end": {"line": 19, "character": 40}}, "detail": "module nxadag", "children": []}, {"name": "plt", "kind": 2, "range": {"start": {"line": 20, "character": 0}, "end": {"line": 20, "character": 31}}, "selectionRange": {"start": {"line": 20, "character": 28}, "end": {"line": 20, "character": 31}}, "detail": "module plt", "children": []}, {"name": "sns", "kind": 2, "range": {"start": {"line": 21, "character": 0}, "end": {"line": 21, "character": 21}}, "selectionRange": {"start": {"line": 21, "character": 18}, "end": {"line": 21, "character": 21}}, "detail": "module sns", "children": []}, {"name": "itertools", "kind": 2, "range": {"start": {"line": 22, "character": 0}, "end": {"line": 22, "character": 16}}, "selectionRange": {"start": {"line": 22, "character": 7}, "end": {"line": 22, "character": 16}}, "detail": "module itertools", "children": []}, {"name": "mygene", "kind": 2, "range": {"start": {"line": 23, "character": 0}, "end": {"line": 23, "character": 13}}, "selectionRange": {"start": {"line": 23, "character": 7}, "end": {"line": 23, "character": 13}}, "detail": "module mygene", "children": []}, {"name": "re", "kind": 2, "range": {"start": {"line": 24, "character": 0}, "end": {"line": 24, "character": 9}}, "selectionRange": {"start": {"line": 24, "character": 7}, "end": {"line": 24, "character": 9}}, "detail": "module re", "children": []}, {"name": "selected_exp_gene_list", "kind": 13, "range": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 95}}, "selectionRange": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 22}}, "detail": "selected_exp_gene_list = pd.read_csv(\"/data/common_exp_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "selected_mut_gene_list", "kind": 13, "range": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 95}}, "selectionRange": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 22}}, "detail": "selected_mut_gene_list = pd.read_csv(\"/data/common_mut_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "load_network", "kind": 12, "range": {"start": {"line": 37, "character": 0}, "end": {"line": 65, "character": 28}}, "selectionRange": {"start": {"line": 37, "character": 4}, "end": {"line": 37, "character": 16}}, "detail": "def load_network", "children": []}, {"name": "load_name_space", "kind": 12, "range": {"start": {"line": 67, "character": 0}, "end": {"line": 79, "character": 21}}, "selectionRange": {"start": {"line": 67, "character": 4}, "end": {"line": 67, "character": 19}}, "detail": "def load_name_space", "children": []}, {"name": "list2index", "kind": 12, "range": {"start": {"line": 81, "character": 0}, "end": {"line": 88, "character": 41}}, "selectionRange": {"start": {"line": 81, "character": 4}, "end": {"line": 81, "character": 14}}, "detail": "def list2index", "children": []}, {"name": "PDTC_data_file", "kind": 13, "range": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 30}}, "selectionRange": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 14}}, "detail": "PDTC_data_file = '/data/PTDC/'", "children": []}, {"name": "PDTC_exp_data_file", "kind": 13, "range": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 60}}, "selectionRange": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 18}}, "detail": "PDTC_exp_data_file = PDTC_data_file + 'ExpressionModels.tsv'", "children": []}, {"name": "PDTC_drug_cell_line_file", "kind": 13, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 72}}, "selectionRange": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 24}}, "detail": "PDTC_drug_cell_line_file = PDTC_data_file + 'DrugResponsesAUCModels.tsv'", "children": []}, {"name": "PDTC_mutation_data_file", "kind": 13, "range": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 59}}, "selectionRange": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 23}}, "detail": "PDTC_mutation_data_file = PDTC_data_file + 'SNVsModels.tsv'", "children": []}, {"name": "PDTC_drug_target_file", "kind": 13, "range": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 47}}, "selectionRange": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 21}}, "detail": "PDTC_drug_target_file ='/data/drug_targets.tsv'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 37}}, "selectionRange": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 46}}, "selectionRange": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "data_file", "kind": 13, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 25}}, "selectionRange": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 9}}, "detail": "data_file = '/data/GDSC/'", "children": []}, {"name": "new_network_file", "kind": 13, "range": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 27}}, "selectionRange": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 16}}, "detail": "new_network_file = '/data/'", "children": []}, {"name": "exp_data_file", "kind": 13, "range": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 61}}, "selectionRange": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 13}}, "detail": "exp_data_file = data_file + 'Cell_line_RMA_proc_basalExp.txt'", "children": []}, {"name": "drug_cell_line_file", "kind": 13, "range": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 64}}, "selectionRange": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 19}}, "detail": "drug_cell_line_file = data_file + 'v17_fitted_dose_response.csv'", "children": []}, {"name": "cell_line_detail_file", "kind": 13, "range": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 60}}, "selectionRange": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 21}}, "detail": "cell_line_detail_file = data_file + 'Cell_Lines_Details.csv'", "children": []}, {"name": "mutation_data_file", "kind": 13, "range": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 51}}, "selectionRange": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 18}}, "detail": "mutation_data_file = data_file + 'WES_variants.csv'", "children": []}, {"name": "drug_target_file", "kind": 13, "range": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 42}}, "selectionRange": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 16}}, "detail": "drug_target_file ='/data/drug_targets.tsv'", "children": []}, {"name": "feature_folder", "kind": 13, "range": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 27}}, "selectionRange": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 14}}, "detail": "feature_folder = 'feature/'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 37}}, "selectionRange": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 46}}, "selectionRange": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 58}}, "selectionRange": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 6}}, "detail": "exp_df = pd.read_csv(exp_data_file, sep='\\t', index_col=0)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 21}}, "selectionRange": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 6}}, "detail": "exp_df = exp_df.T[1:]", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 56}}, "selectionRange": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 6}}, "detail": "exp_df = exp_df.rename(columns={np.nan: 'NO_GENE_NAME'})", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 43}}, "selectionRange": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 6}}, "detail": "exp_df = exp_df.drop('NO_GENE_NAME',axis=1)", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 138, "character": 0}, "end": {"line": 140, "character": 26}}, "selectionRange": {"start": {"line": 138, "character": 4}, "end": {"line": 138, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 142, "character": 0}, "end": {"line": 142, "character": 44}}, "selectionRange": {"start": {"line": 142, "character": 7}, "end": {"line": 142, "character": 12}}, "detail": "exp_df.index = exp_df.index.map(stripNumber)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 40}}, "selectionRange": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 6}}, "detail": "exp_df = exp_df.groupby(level=0).first()", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 39}}, "selectionRange": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 6}}, "detail": "exp_df = exp_df[selected_exp_gene_list]", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 36}}, "selectionRange": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 48}}, "selectionRange": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 78}}, "selectionRange": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 11}}, "detail": "PDTC_exp_df = pd.read_csv(PDTC_exp_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 31}}, "selectionRange": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df.T[1:]", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 160, "character": 0}, "end": {"line": 162, "character": 26}}, "selectionRange": {"start": {"line": 160, "character": 4}, "end": {"line": 160, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 49}}, "selectionRange": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df[selected_exp_gene_list]", "children": []}, {"name": "PDTC_exp_gene_list", "kind": 13, "range": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 46}}, "selectionRange": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 18}}, "detail": "PDTC_exp_gene_list = list(PDTC_exp_df.columns)", "children": []}, {"name": "PDTC_exp_cell_line_list", "kind": 13, "range": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 58}}, "selectionRange": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 23}}, "detail": "PDTC_exp_cell_line_list = list(PDTC_exp_df.index.unique())", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 40}}, "selectionRange": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 6}}, "detail": "exp_df = pd.concat([exp_df,PDTC_exp_df])", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 36}}, "selectionRange": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 48}}, "selectionRange": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "maf", "kind": 13, "range": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 69}}, "selectionRange": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 3}}, "detail": "maf = pd.read_csv(mutation_data_file, sep=',', index_col=0).fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 75}}, "selectionRange": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 11}}, "detail": "mutation_df = maf.groupby(['COSMIC_ID', 'Gene']).size().unstack().fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 49}}, "selectionRange": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 11}}, "detail": "mutation_df = mutation_df[selected_mut_gene_list]", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 46}}, "selectionRange": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 58}}, "selectionRange": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "PDTC_maf", "kind": 13, "range": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 80}}, "selectionRange": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 8}}, "detail": "PDTC_maf = pd.read_csv(PDTC_mutation_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 61}}, "selectionRange": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_maf.replace(to_replace=\"NO\",value=0.0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 82}}, "selectionRange": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_mutation_df.replace(to_replace=\"chr*\",value=1.0,regex=True)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 47}}, "selectionRange": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df.transpose()", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 59}}, "selectionRange": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df[selected_mut_gene_list]", "children": []}, {"name": "PDTC_mutation_gene_list", "kind": 13, "range": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 56}}, "selectionRange": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 23}}, "detail": "PDTC_mutation_gene_list = list(PDTC_mutation_df.columns)", "children": []}, {"name": "PDTC_mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 68}}, "selectionRange": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 28}}, "detail": "PDTC_mutation_cell_line_list = list(PDTC_mutation_df.index.unique())", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 55}}, "selectionRange": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 11}}, "detail": "mutation_df = pd.concat([mutation_df,PDTC_mutation_df])", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 46}}, "selectionRange": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 58}}, "selectionRange": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 36}}, "selectionRange": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 11}}, "detail": "file_handle = open(drug_target_file)", "children": []}, {"name": "drug_target_map", "kind": 13, "range": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 20}}, "selectionRange": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 15}}, "detail": "drug_target_map = {}", "children": []}, {"name": "drug_target_list", "kind": 13, "range": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 21}}, "selectionRange": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 16}}, "detail": "drug_target_list = []", "children": []}, {"name": "line", "kind": 13, "range": {"start": {"line": 230, "character": 0}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 230, "character": 4}, "end": {"line": 230, "character": 8}}, "detail": "for line in file_handle: new_line = line.rstrip().split(\"\\t\") drug = new_line[0] target_list=new_line[1].split(',') if drug != \"Drug\": target_list_str = \"\" for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\" drug = drug.strip() drug_target_map[drug] = [] if ',' not in target_list_str: drug_target_map[drug].append(target_list_str.strip()) drug_target_list.append(target_list_str.strip()) else: target_list = target_list_str.split(',') for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "new_line", "kind": 13, "range": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 40}}, "selectionRange": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 12}}, "detail": "new_line = line.rstrip().split(\"\\t\")", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 22}}, "selectionRange": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 8}}, "detail": "drug = new_line[0]", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 38}}, "selectionRange": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 15}}, "detail": "target_list=new_line[1].split(',')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 28}}, "selectionRange": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 23}}, "detail": "target_list_str = \"\"", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 237, "character": 8}, "end": {"line": 242, "character": 0}}, "selectionRange": {"start": {"line": 237, "character": 12}, "end": {"line": 237, "character": 13}}, "detail": "for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 65}}, "selectionRange": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 71}}, "selectionRange": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 27}}, "selectionRange": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 12}}, "detail": "drug = drug.strip()", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 52}}, "selectionRange": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 23}}, "detail": "target_list = target_list_str.split(',')", "children": []}, {"name": "target", "kind": 13, "range": {"start": {"line": 250, "character": 12}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 250, "character": 16}, "end": {"line": 250, "character": 22}}, "detail": "for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "drugs_legend", "kind": 13, "range": {"start": {"line": 261, "character": 0}, "end": {"line": 261, "character": 85}}, "selectionRange": {"start": {"line": 261, "character": 0}, "end": {"line": 261, "character": 12}}, "detail": "drugs_legend = pd.read_csv('/data/GDSC/Screened_Compounds.csv', sep=',', index_col=0)", "children": []}, {"name": "drug2id_mapping", "kind": 13, "range": {"start": {"line": 263, "character": 0}, "end": {"line": 263, "character": 20}}, "selectionRange": {"start": {"line": 263, "character": 0}, "end": {"line": 263, "character": 15}}, "detail": "drug2id_mapping = {}", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 265, "character": 0}, "end": {"line": 268, "character": 0}}, "selectionRange": {"start": {"line": 265, "character": 4}, "end": {"line": 265, "character": 9}}, "detail": "for index in list(drugs_legend.index) : drug_name = drugs_legend.loc[index,'Drug Name'] drug2id_mapping[ drug_name ] = index", "children": []}, {"name": "drug_name", "kind": 13, "range": {"start": {"line": 266, "character": 4}, "end": {"line": 266, "character": 51}}, "selectionRange": {"start": {"line": 266, "character": 4}, "end": {"line": 266, "character": 13}}, "detail": "drug_name = drugs_legend.loc[index,'Drug Name']", "children": []}, {"name": "valid_gene_list", "kind": 13, "range": {"start": {"line": 273, "character": 0}, "end": {"line": 273, "character": 92}}, "selectionRange": {"start": {"line": 273, "character": 0}, "end": {"line": 273, "character": 15}}, "detail": "valid_gene_list = list(set(drug_target_list) | set(exp_gene_list) | set(mutation_gene_list))", "children": []}, {"name": "network_list", "kind": 13, "range": {"start": {"line": 279, "character": 0}, "end": {"line": 279, "character": 82}}, "selectionRange": {"start": {"line": 279, "character": 0}, "end": {"line": 279, "character": 12}}, "detail": "network_list = [new_network_file+inbiomap_file, new_network_file+pathwaycomm_file]", "children": []}, {"name": "gene_neighbor_map", "kind": 13, "range": {"start": {"line": 280, "character": 0}, "end": {"line": 280, "character": 64}}, "selectionRange": {"start": {"line": 280, "character": 0}, "end": {"line": 280, "character": 17}}, "detail": "gene_neighbor_map = load_network(network_list, valid_gene_list)", "children": []}, {"name": "gene_name_df", "kind": 13, "range": {"start": {"line": 286, "character": 0}, "end": {"line": 286, "character": 89}}, "selectionRange": {"start": {"line": 286, "character": 0}, "end": {"line": 286, "character": 12}}, "detail": "gene_name_df = pd.read_table('/data/HUGO_protein-coding_gene.tsv',index_col=25, sep='\\t')", "children": []}, {"name": "gene_name_map", "kind": 13, "range": {"start": {"line": 292, "character": 0}, "end": {"line": 292, "character": 18}}, "selectionRange": {"start": {"line": 292, "character": 0}, "end": {"line": 292, "character": 13}}, "detail": "gene_name_map = {}", "children": []}, {"name": "uniprot_gene", "kind": 13, "range": {"start": {"line": 294, "character": 0}, "end": {"line": 303, "character": 0}}, "selectionRange": {"start": {"line": 294, "character": 4}, "end": {"line": 294, "character": 16}}, "detail": "for uniprot_gene in gene_name_df.index: if isinstance(uniprot_gene, type('aaa')) == False: continue if isinstance(gene_name_df.loc[uniprot_gene, 'symbol'], type('aaa')) == False: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol'][0] else: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 308, "character": 0}, "end": {"line": 308, "character": 76}}, "selectionRange": {"start": {"line": 308, "character": 0}, "end": {"line": 308, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "uniprot_gene_set", "kind": 13, "range": {"start": {"line": 310, "character": 0}, "end": {"line": 310, "character": 24}}, "selectionRange": {"start": {"line": 310, "character": 0}, "end": {"line": 310, "character": 16}}, "detail": "uniprot_gene_set = set()", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 312, "character": 0}, "end": {"line": 321, "character": 0}}, "selectionRange": {"start": {"line": 312, "character": 4}, "end": {"line": 312, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 317, "character": 4}, "end": {"line": 317, "character": 74}}, "selectionRange": {"start": {"line": 317, "character": 4}, "end": {"line": 317, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 319, "character": 4}, "end": {"line": 321, "character": 0}}, "selectionRange": {"start": {"line": 319, "character": 8}, "end": {"line": 319, "character": 12}}, "detail": "for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "query_gene_set", "kind": 13, "range": {"start": {"line": 324, "character": 0}, "end": {"line": 324, "character": 19}}, "selectionRange": {"start": {"line": 324, "character": 0}, "end": {"line": 324, "character": 14}}, "detail": "query_gene_set = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 326, "character": 0}, "end": {"line": 329, "character": 0}}, "selectionRange": {"start": {"line": 326, "character": 4}, "end": {"line": 326, "character": 8}}, "detail": "for gene in uniprot_gene_set: if gene not in gene_name_map: query_gene_set.append(gene)", "children": []}, {"name": "query_gene_list", "kind": 13, "range": {"start": {"line": 332, "character": 0}, "end": {"line": 332, "character": 38}}, "selectionRange": {"start": {"line": 332, "character": 0}, "end": {"line": 332, "character": 15}}, "detail": "query_gene_list = list(query_gene_set)", "children": []}, {"name": "mg", "kind": 13, "range": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 24}}, "selectionRange": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 2}}, "detail": "mg = mygene.MyGeneInfo()", "children": []}, {"name": "out", "kind": 13, "range": {"start": {"line": 335, "character": 0}, "end": {"line": 335, "character": 87}}, "selectionRange": {"start": {"line": 335, "character": 0}, "end": {"line": 335, "character": 3}}, "detail": "out = mg.querymany(query_gene_list, scopes='uniprot', fields='symbol', species='human')", "children": []}, {"name": "not_found_gene_list", "kind": 13, "range": {"start": {"line": 337, "character": 0}, "end": {"line": 337, "character": 24}}, "selectionRange": {"start": {"line": 337, "character": 0}, "end": {"line": 337, "character": 19}}, "detail": "not_found_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 339, "character": 0}, "end": {"line": 344, "character": 0}}, "selectionRange": {"start": {"line": 339, "character": 4}, "end": {"line": 339, "character": 5}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 339, "character": 0}, "end": {"line": 344, "character": 0}}, "selectionRange": {"start": {"line": 339, "character": 7}, "end": {"line": 339, "character": 11}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 351, "character": 0}, "end": {"line": 351, "character": 76}}, "selectionRange": {"start": {"line": 351, "character": 0}, "end": {"line": 351, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 353, "character": 0}, "end": {"line": 375, "character": 0}}, "selectionRange": {"start": {"line": 353, "character": 4}, "end": {"line": 353, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') complex_symbol_list = [] for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] ) for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 358, "character": 4}, "end": {"line": 358, "character": 74}}, "selectionRange": {"start": {"line": 358, "character": 4}, "end": {"line": 358, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "complex_symbol_list", "kind": 13, "range": {"start": {"line": 360, "character": 4}, "end": {"line": 360, "character": 28}}, "selectionRange": {"start": {"line": 360, "character": 4}, "end": {"line": 360, "character": 23}}, "detail": "complex_symbol_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 362, "character": 4}, "end": {"line": 365, "character": 0}}, "selectionRange": {"start": {"line": 362, "character": 8}, "end": {"line": 362, "character": 12}}, "detail": "for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] )", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 366, "character": 4}, "end": {"line": 375, "character": 0}}, "selectionRange": {"start": {"line": 366, "character": 8}, "end": {"line": 366, "character": 13}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 366, "character": 4}, "end": {"line": 375, "character": 0}}, "selectionRange": {"start": {"line": 366, "character": 15}, "end": {"line": 366, "character": 20}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene_exp_neighbor_map", "kind": 13, "range": {"start": {"line": 380, "character": 0}, "end": {"line": 380, "character": 26}}, "selectionRange": {"start": {"line": 380, "character": 0}, "end": {"line": 380, "character": 21}}, "detail": "gene_exp_neighbor_map = {}", "children": []}, {"name": "exp_matrix", "kind": 13, "range": {"start": {"line": 381, "character": 0}, "end": {"line": 381, "character": 26}}, "selectionRange": {"start": {"line": 381, "character": 0}, "end": {"line": 381, "character": 10}}, "detail": "exp_matrix = exp_df.values", "children": []}, {"name": "P", "kind": 13, "range": {"start": {"line": 383, "character": 0}, "end": {"line": 383, "character": 79}}, "selectionRange": {"start": {"line": 383, "character": 0}, "end": {"line": 383, "character": 1}}, "detail": "P = 1 - cdist(np.transpose(exp_matrix), np.transpose(exp_matrix),'correlation')", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 385, "character": 0}, "end": {"line": 399, "character": 0}}, "selectionRange": {"start": {"line": 385, "character": 4}, "end": {"line": 385, "character": 5}}, "detail": "for i in range(len(exp_gene_list)): gene1 = exp_gene_list[i] gene_exp_neighbor_map[gene1] = set() for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2) if gene1 not in gene_exp_neighbor_map[gene1]: print (gene1, 'not in itself?', P[i,i])", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 387, "character": 4}, "end": {"line": 387, "character": 28}}, "selectionRange": {"start": {"line": 387, "character": 4}, "end": {"line": 387, "character": 9}}, "detail": "gene1 = exp_gene_list[i]", "children": []}, {"name": "j", "kind": 13, "range": {"start": {"line": 390, "character": 4}, "end": {"line": 396, "character": 0}}, "selectionRange": {"start": {"line": 390, "character": 8}, "end": {"line": 390, "character": 9}}, "detail": "for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 392, "character": 8}, "end": {"line": 392, "character": 32}}, "selectionRange": {"start": {"line": 392, "character": 8}, "end": {"line": 392, "character": 13}}, "detail": "gene2 = exp_gene_list[j]", "children": []}, {"name": "drug_feature_list", "kind": 13, "range": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 22}}, "selectionRange": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 17}}, "detail": "drug_feature_list = []", "children": []}, {"name": "drug_neighbor_map", "kind": 13, "range": {"start": {"line": 408, "character": 0}, "end": {"line": 408, "character": 22}}, "selectionRange": {"start": {"line": 408, "character": 0}, "end": {"line": 408, "character": 17}}, "detail": "drug_neighbor_map = {}", "children": []}, {"name": "selected_drug_list", "kind": 13, "range": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 23}}, "selectionRange": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 18}}, "detail": "selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 411, "character": 0}, "end": {"line": 428, "character": 0}}, "selectionRange": {"start": {"line": 411, "character": 4}, "end": {"line": 411, "character": 8}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 411, "character": 0}, "end": {"line": 428, "character": 0}}, "selectionRange": {"start": {"line": 411, "character": 10}, "end": {"line": 411, "character": 21}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 414, "character": 8}, "end": {"line": 424, "character": 0}}, "selectionRange": {"start": {"line": 414, "character": 12}, "end": {"line": 414, "character": 16}}, "detail": "for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene]", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 442, "character": 0}, "end": {"line": 442, "character": 52}}, "selectionRange": {"start": {"line": 442, "character": 0}, "end": {"line": 442, "character": 5}}, "detail": "drugs = pd.read_csv(drug_cell_line_file,index_col=2)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 443, "character": 0}, "end": {"line": 443, "character": 93}}, "selectionRange": {"start": {"line": 443, "character": 0}, "end": {"line": 443, "character": 5}}, "detail": "drugs = drugs.drop([\"DATASET_VERSION\",\"IC50_RESULTS_ID\",\"MAX_CONC_MICROMOLAR\",\"RMSE\"],axis=1)", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 444, "character": 0}, "end": {"line": 444, "character": 49}}, "selectionRange": {"start": {"line": 444, "character": 0}, "end": {"line": 444, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 446, "character": 0}, "end": {"line": 446, "character": 28}}, "selectionRange": {"start": {"line": 446, "character": 0}, "end": {"line": 446, "character": 9}}, "detail": "drug_list = drugs[\"DRUG_ID\"]", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 447, "character": 0}, "end": {"line": 447, "character": 16}}, "selectionRange": {"start": {"line": 447, "character": 0}, "end": {"line": 447, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 457, "character": 0}, "end": {"line": 457, "character": 71}}, "selectionRange": {"start": {"line": 457, "character": 0}, "end": {"line": 457, "character": 10}}, "detail": "PDTC_drugs = pd.read_csv(PDTC_drug_cell_line_file,sep='\\t',index_col=0)", "children": []}, {"name": "PDTC_drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 458, "character": 0}, "end": {"line": 458, "character": 59}}, "selectionRange": {"start": {"line": 458, "character": 0}, "end": {"line": 458, "character": 25}}, "detail": "PDTC_drugs_cell_line_list = list(PDTC_drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 460, "character": 0}, "end": {"line": 460, "character": 39}}, "selectionRange": {"start": {"line": 460, "character": 0}, "end": {"line": 460, "character": 9}}, "detail": "drug_list = PDTC_drugs[\"Drug\"].tolist()", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 461, "character": 0}, "end": {"line": 461, "character": 16}}, "selectionRange": {"start": {"line": 461, "character": 0}, "end": {"line": 461, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 462, "character": 0}, "end": {"line": 467, "character": 0}}, "selectionRange": {"start": {"line": 462, "character": 4}, "end": {"line": 462, "character": 5}}, "detail": "for i in drug_list: if i in drug2id_mapping.keys(): new_drug_id.append(drug2id_mapping[i]) else: new_drug_id.append(0)", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 84}}, "selectionRange": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 10}}, "detail": "PDTC_drugs = PDTC_drugs.drop([\"Drug\",\"iC50\",\"D1_CONC\",\"D5_CONC\",\"perc.iC50\"],axis=1)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 477, "character": 0}, "end": {"line": 477, "character": 37}}, "selectionRange": {"start": {"line": 477, "character": 0}, "end": {"line": 477, "character": 5}}, "detail": "drugs = pd.concat([drugs,PDTC_drugs])", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 49}}, "selectionRange": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "cell_line_list", "kind": 13, "range": {"start": {"line": 490, "character": 0}, "end": {"line": 490, "character": 102}}, "selectionRange": {"start": {"line": 490, "character": 0}, "end": {"line": 490, "character": 14}}, "detail": "cell_line_list = list(set(drugs_cell_line_list)&set(exp_cell_line_list)&set(mutation_cell_line_list) )", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 497, "character": 0}, "end": {"line": 497, "character": 66}}, "selectionRange": {"start": {"line": 497, "character": 0}, "end": {"line": 497, "character": 16}}, "detail": "cell_line_legend = pd.read_csv(cell_line_detail_file, index_col=1)", "children": []}, {"name": "PDTC_cell_line", "kind": 13, "range": {"start": {"line": 498, "character": 0}, "end": {"line": 498, "character": 206}}, "selectionRange": {"start": {"line": 498, "character": 0}, "end": {"line": 498, "character": 14}}, "detail": "PDTC_cell_line = pd.DataFrame({'Line': [\"BRCA\"]*len(PDTC_exp_cell_line_list), 'Site':[\"PDTC\"]*len(PDTC_exp_cell_line_list),\"Histology\":[\"breast\"]*len(PDTC_exp_cell_line_list)},index=PDTC_exp_cell_line_list)", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 499, "character": 0}, "end": {"line": 499, "character": 63}}, "selectionRange": {"start": {"line": 499, "character": 0}, "end": {"line": 499, "character": 16}}, "detail": "cell_line_legend = pd.concat([cell_line_legend,PDTC_cell_line])", "children": []}, {"name": "tissue_map", "kind": 13, "range": {"start": {"line": 502, "character": 0}, "end": {"line": 502, "character": 15}}, "selectionRange": {"start": {"line": 502, "character": 0}, "end": {"line": 502, "character": 10}}, "detail": "tissue_map = {}", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 504, "character": 0}, "end": {"line": 512, "character": 0}}, "selectionRange": {"start": {"line": 504, "character": 4}, "end": {"line": 504, "character": 13}}, "detail": "for cell_line in cell_line_list: tissue = cell_line_legend.loc[cell_line,'Site'] if tissue not in tissue_map: tissue_map[tissue] = [] tissue_map[tissue].append(cell_line)", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 506, "character": 4}, "end": {"line": 506, "character": 51}}, "selectionRange": {"start": {"line": 506, "character": 4}, "end": {"line": 506, "character": 10}}, "detail": "tissue = cell_line_legend.loc[cell_line,'Site']", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 513, "character": 0}, "end": {"line": 513, "character": 23}}, "selectionRange": {"start": {"line": 513, "character": 0}, "end": {"line": 513, "character": 19}}, "detail": "large_tissue_number = 0", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 514, "character": 0}, "end": {"line": 520, "character": 0}}, "selectionRange": {"start": {"line": 514, "character": 4}, "end": {"line": 514, "character": 10}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 514, "character": 0}, "end": {"line": 520, "character": 0}}, "selectionRange": {"start": {"line": 514, "character": 12}, "end": {"line": 514, "character": 21}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 517, "character": 8}, "end": {"line": 517, "character": 32}}, "selectionRange": {"start": {"line": 517, "character": 8}, "end": {"line": 517, "character": 27}}, "detail": "large_tissue_number += 1", "children": []}, {"name": "new_exp_gene_list", "kind": 13, "range": {"start": {"line": 540, "character": 0}, "end": {"line": 540, "character": 22}}, "selectionRange": {"start": {"line": 540, "character": 0}, "end": {"line": 540, "character": 17}}, "detail": "new_exp_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 541, "character": 0}, "end": {"line": 544, "character": 0}}, "selectionRange": {"start": {"line": 541, "character": 4}, "end": {"line": 541, "character": 5}}, "detail": "for i in exp_gene_list: if i in valid_gene_list: new_exp_gene_list.append(i)", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 549, "character": 0}, "end": {"line": 549, "character": 41}}, "selectionRange": {"start": {"line": 549, "character": 0}, "end": {"line": 549, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 550, "character": 0}, "end": {"line": 550, "character": 38}}, "selectionRange": {"start": {"line": 550, "character": 0}, "end": {"line": 550, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 551, "character": 0}, "end": {"line": 551, "character": 72}}, "selectionRange": {"start": {"line": 551, "character": 0}, "end": {"line": 551, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 553, "character": 0}, "end": {"line": 553, "character": 43}}, "selectionRange": {"start": {"line": 553, "character": 0}, "end": {"line": 553, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 554, "character": 0}, "end": {"line": 554, "character": 68}}, "selectionRange": {"start": {"line": 554, "character": 0}, "end": {"line": 554, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 561, "character": 0}, "end": {"line": 561, "character": 58}}, "selectionRange": {"start": {"line": 561, "character": 0}, "end": {"line": 561, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 562, "character": 0}, "end": {"line": 562, "character": 68}}, "selectionRange": {"start": {"line": 562, "character": 0}, "end": {"line": 562, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "new_data_file", "kind": 13, "range": {"start": {"line": 571, "character": 0}, "end": {"line": 571, "character": 18}}, "selectionRange": {"start": {"line": 571, "character": 0}, "end": {"line": 571, "character": 13}}, "detail": "new_data_file = ''", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 41}}, "selectionRange": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 38}}, "selectionRange": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 72}}, "selectionRange": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 43}}, "selectionRange": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 68}}, "selectionRange": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 58}}, "selectionRange": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 68}}, "selectionRange": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "rename_selected_drug_list", "kind": 13, "range": {"start": {"line": 592, "character": 0}, "end": {"line": 592, "character": 30}}, "selectionRange": {"start": {"line": 592, "character": 0}, "end": {"line": 592, "character": 25}}, "detail": "rename_selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 594, "character": 0}, "end": {"line": 664, "character": 0}}, "selectionRange": {"start": {"line": 594, "character": 4}, "end": {"line": 594, "character": 8}}, "detail": "for drug in selected_drug_list: print(drug) if drug not in drug2id_mapping: print('drug name wrong', drug) else: cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]] feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) ) feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) ) print(len(feature_exp_gene_list) + len(feature_mut_gene_list)) if len(feature_exp_gene_list) + len(feature_mut_gene_list) == 0: continue feature_description = [] drug_tissue_map = {} drug = drug.replace(' ','_') rename_selected_drug_list.append(drug) if drug == 'Nutlin-3a_(-)': drug = 'Nutlin-3a' drug_folder = '/data/merged/drug_feature/' + drug + '/' if not os.path.exists(drug_folder): os.makedirs(drug_folder) for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description)) file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\") pickle.dump(drug_tissue_map,file_handle) file_handle.close()", "children": []}, {"name": "cell_line_drug_matrix", "kind": 13, "range": {"start": {"line": 602, "character": 8}, "end": {"line": 602, "character": 84}}, "selectionRange": {"start": {"line": 602, "character": 8}, "end": {"line": 602, "character": 29}}, "detail": "cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]]", "children": []}, {"name": "feature_exp_gene_list", "kind": 13, "range": {"start": {"line": 607, "character": 8}, "end": {"line": 607, "character": 98}}, "selectionRange": {"start": {"line": 607, "character": 8}, "end": {"line": 607, "character": 29}}, "detail": "feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) )", "children": []}, {"name": "feature_mut_gene_list", "kind": 13, "range": {"start": {"line": 608, "character": 8}, "end": {"line": 608, "character": 98}}, "selectionRange": {"start": {"line": 608, "character": 8}, "end": {"line": 608, "character": 29}}, "detail": "feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) )", "children": []}, {"name": "feature_description", "kind": 13, "range": {"start": {"line": 612, "character": 8}, "end": {"line": 612, "character": 32}}, "selectionRange": {"start": {"line": 612, "character": 8}, "end": {"line": 612, "character": 27}}, "detail": "feature_description = []", "children": []}, {"name": "drug_tissue_map", "kind": 13, "range": {"start": {"line": 614, "character": 8}, "end": {"line": 614, "character": 28}}, "selectionRange": {"start": {"line": 614, "character": 8}, "end": {"line": 614, "character": 23}}, "detail": "drug_tissue_map = {}", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 616, "character": 8}, "end": {"line": 616, "character": 36}}, "selectionRange": {"start": {"line": 616, "character": 8}, "end": {"line": 616, "character": 12}}, "detail": "drug = drug.replace(' ','_')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 622, "character": 12}, "end": {"line": 622, "character": 30}}, "selectionRange": {"start": {"line": 622, "character": 12}, "end": {"line": 622, "character": 16}}, "detail": "drug = 'Nutlin-3a'", "children": []}, {"name": "drug_folder", "kind": 13, "range": {"start": {"line": 624, "character": 8}, "end": {"line": 624, "character": 63}}, "selectionRange": {"start": {"line": 624, "character": 8}, "end": {"line": 624, "character": 19}}, "detail": "drug_folder = '/data/merged/drug_feature/' + drug + '/'", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 630, "character": 8}, "end": {"line": 660, "character": 0}}, "selectionRange": {"start": {"line": 630, "character": 12}, "end": {"line": 630, "character": 18}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "tissue_cell_line_list", "kind": 13, "range": {"start": {"line": 630, "character": 8}, "end": {"line": 660, "character": 0}}, "selectionRange": {"start": {"line": 630, "character": 20}, "end": {"line": 630, "character": 41}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 633, "character": 12}, "end": {"line": 633, "character": 103}}, "selectionRange": {"start": {"line": 633, "character": 12}, "end": {"line": 633, "character": 35}}, "detail": "drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list )", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 634, "character": 12}, "end": {"line": 634, "character": 67}}, "selectionRange": {"start": {"line": 634, "character": 12}, "end": {"line": 634, "character": 35}}, "detail": "drug_specific_cell_line = list(drug_specific_cell_line)", "children": []}, {"name": "feature_list", "kind": 13, "range": {"start": {"line": 637, "character": 12}, "end": {"line": 637, "character": 29}}, "selectionRange": {"start": {"line": 637, "character": 12}, "end": {"line": 637, "character": 24}}, "detail": "feature_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 641, "character": 16}, "end": {"line": 643, "character": 0}}, "selectionRange": {"start": {"line": 641, "character": 20}, "end": {"line": 641, "character": 24}}, "detail": "for gene in feature_exp_gene_list: feature_description.append(gene+'_expression')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 646, "character": 16}, "end": {"line": 648, "character": 0}}, "selectionRange": {"start": {"line": 646, "character": 20}, "end": {"line": 646, "character": 24}}, "detail": "for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation')", "children": []}, {"name": "feature", "kind": 13, "range": {"start": {"line": 649, "character": 12}, "end": {"line": 649, "character": 58}}, "selectionRange": {"start": {"line": 649, "character": 12}, "end": {"line": 649, "character": 19}}, "detail": "feature = np.concatenate(feature_list, axis=1)", "children": []}, {"name": "label", "kind": 13, "range": {"start": {"line": 651, "character": 12}, "end": {"line": 651, "character": 88}}, "selectionRange": {"start": {"line": 651, "character": 12}, "end": {"line": 651, "character": 17}}, "detail": "label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 661, "character": 8}, "end": {"line": 661, "character": 84}}, "selectionRange": {"start": {"line": 661, "character": 8}, "end": {"line": 661, "character": 19}}, "detail": "file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\")", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 665, "character": 0}, "end": {"line": 665, "character": 52}}, "selectionRange": {"start": {"line": 665, "character": 0}, "end": {"line": 665, "character": 11}}, "detail": "file_handle = open('rename_selected_drug_list', 'w')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 666, "character": 0}, "end": {"line": 668, "character": 0}}, "selectionRange": {"start": {"line": 666, "character": 4}, "end": {"line": 666, "character": 8}}, "detail": "for drug in rename_selected_drug_list: file_handle.writelines(drug+ '\\n')", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 686, "character": 0}, "end": {"line": 686, "character": 13}}, "selectionRange": {"start": {"line": 686, "character": 7}, "end": {"line": 686, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cell_line_loc", "kind": 13, "range": {"start": {"line": 692, "character": 0}, "end": {"line": 692, "character": 84}}, "selectionRange": {"start": {"line": 692, "character": 0}, "end": {"line": 692, "character": 13}}, "detail": "cell_line_loc = '/cellar/users/samsonfong/Projects/tcrp-v2/from-ma/cell_line_lists/'", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 698, "character": 0}, "end": {"line": 700, "character": 0}}, "selectionRange": {"start": {"line": 698, "character": 53}, "end": {"line": 698, "character": 54}}, "detail": "with open('/data/drug_feature/KU-55933/KU', 'rb') as f: tmap= pickle.load(f)", "children": []}, {"name": "tmap", "kind": 13, "range": {"start": {"line": 699, "character": 4}, "end": {"line": 699, "character": 24}}, "selectionRange": {"start": {"line": 699, "character": 4}, "end": {"line": 699, "character": 8}}, "detail": "tmap= pickle.load(f)", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 717, "character": 0}, "end": {"line": 717, "character": 68}}, "selectionRange": {"start": {"line": 717, "character": 0}, "end": {"line": 717, "character": 1}}, "detail": "f = np.load('/data/drug_feature/KU-55933/lung_KU-55933_feature.npy')", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 80, "result": [{"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///root/capsule/code/process_merged.py", "version": 3}, "edits": [{"range": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 0}}, "newText": "def jls_extract_def():\n    "}, {"range": {"start": {"line": 227, "character": 0}, "end": {"line": 227, "character": 0}}, "newText": "    \n    return file_handle\n\n\nfile_handle = jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 81, "result": {"contents": {"kind": "markdown", "value": "```python\nPDTC_drug_target_file ='/data/drug_targets.tsv'\n```\n---\n**Full name:** `code.process_merged.PDTC_drug_target_file`"}, "range": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 21}}}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 82, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 83, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///root/capsule/code/process_merged.py", "version": 3}, "edits": [{"range": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 0}}, "newText": "jls_extract_var = '/data/drug_targets.tsv'\n"}, {"range": {"start": {"line": 101, "character": 23}, "end": {"line": 101, "character": 45}}, "newText": "jls_extract_"}, {"range": {"start": {"line": 101, "character": 46}, "end": {"line": 101, "character": 47}}, "newText": "ar"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///root/capsule/code/process_merged.py", "version": 3}, "edits": [{"range": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 0}}, "newText": "def jls_extract_def():\n    return '/data/drug_targets.tsv'\n\n\n"}, {"range": {"start": {"line": 101, "character": 23}, "end": {"line": 101, "character": 47}}, "newText": "jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 84, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 85, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 86, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 87, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 88, "result": [{"title": "Inline variable", "kind": "refactor.inline", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///root/capsule/code/process_merged.py", "version": 3}, "edits": [{"range": {"start": {"line": 119, "character": 0}, "end": {"line": 120, "character": 0}}, "newText": ""}, {"range": {"start": {"line": 226, "character": 19}, "end": {"line": 226, "character": 35}}, "newText": "'/data/drug_targets.tsv'"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 89, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///root/capsule/code/process_merged.py", "version": 3}, "edits": [{"range": {"start": {"line": 661, "character": 8}, "end": {"line": 661, "character": 8}}, "newText": "jls_extract_var = drug+'_tissue_cell_line_list.pkl'\n        "}, {"range": {"start": {"line": 661, "character": 45}, "end": {"line": 661, "character": 78}}, "newText": "jls_extract_var"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///root/capsule/code/process_merged.py", "version": 3}, "edits": [{"range": {"start": {"line": 661, "character": 8}, "end": {"line": 661, "character": 8}}, "newText": "def jls_extract_def():\n            return drug+'_tissue_cell_line_list.pkl'\n\n\n        "}, {"range": {"start": {"line": 661, "character": 45}, "end": {"line": 661, "character": 78}}, "newText": "jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 90, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 91, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 92, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 93, "result": [{"title": "Inline variable", "kind": "refactor.inline", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///root/capsule/code/process_merged.py", "version": 3}, "edits": [{"range": {"start": {"line": 119, "character": 0}, "end": {"line": 120, "character": 0}}, "newText": ""}, {"range": {"start": {"line": 226, "character": 19}, "end": {"line": 226, "character": 35}}, "newText": "'/data/drug_targets.tsv'"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 94, "result": [{"title": "Inline variable", "kind": "refactor.inline", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///root/capsule/code/process_merged.py", "version": 3}, "edits": [{"range": {"start": {"line": 229, "character": 0}, "end": {"line": 230, "character": 0}}, "newText": ""}, {"range": {"start": {"line": 247, "character": 12}, "end": {"line": 247, "character": 28}}, "newText": "([])"}, {"range": {"start": {"line": 252, "character": 16}, "end": {"line": 252, "character": 32}}, "newText": "([])"}, {"range": {"start": {"line": 273, "character": 27}, "end": {"line": 273, "character": 43}}, "newText": "[]"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 95, "result": [{"title": "Inline variable", "kind": "refactor.inline", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///root/capsule/code/process_merged.py", "version": 3}, "edits": [{"range": {"start": {"line": 229, "character": 0}, "end": {"line": 230, "character": 0}}, "newText": ""}, {"range": {"start": {"line": 247, "character": 12}, "end": {"line": 247, "character": 28}}, "newText": "([])"}, {"range": {"start": {"line": 252, "character": 16}, "end": {"line": 252, "character": 32}}, "newText": "([])"}, {"range": {"start": {"line": 273, "character": 27}, "end": {"line": 273, "character": 43}}, "newText": "[]"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 96, "result": [{"title": "Inline variable", "kind": "refactor.inline", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///root/capsule/code/process_merged.py", "version": 3}, "edits": [{"range": {"start": {"line": 229, "character": 0}, "end": {"line": 230, "character": 0}}, "newText": ""}, {"range": {"start": {"line": 247, "character": 12}, "end": {"line": 247, "character": 28}}, "newText": "([])"}, {"range": {"start": {"line": 252, "character": 16}, "end": {"line": 252, "character": 32}}, "newText": "([])"}, {"range": {"start": {"line": 273, "character": 27}, "end": {"line": 273, "character": 43}}, "newText": "[]"}]}]}}, {"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///root/capsule/code/process_merged.py", "version": 3}, "edits": [{"range": {"start": {"line": 247, "character": 12}, "end": {"line": 247, "character": 28}}, "newText": "jls_extract_var = drug_target_list\n            jls_extract_var"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///root/capsule/code/process_merged.py", "version": 3}, "edits": [{"range": {"start": {"line": 247, "character": 13}, "end": {"line": 247, "character": 28}}, "newText": "ef jls_extract_def():\n                return drug_target_list\n\n\n            jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 97, "result": [{"title": "Inline variable", "kind": "refactor.inline", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///root/capsule/code/process_merged.py", "version": 3}, "edits": [{"range": {"start": {"line": 229, "character": 0}, "end": {"line": 230, "character": 0}}, "newText": ""}, {"range": {"start": {"line": 247, "character": 12}, "end": {"line": 247, "character": 28}}, "newText": "([])"}, {"range": {"start": {"line": 252, "character": 16}, "end": {"line": 252, "character": 32}}, "newText": "([])"}, {"range": {"start": {"line": 273, "character": 27}, "end": {"line": 273, "character": 43}}, "newText": "[]"}]}]}}, {"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///root/capsule/code/process_merged.py", "version": 3}, "edits": [{"range": {"start": {"line": 252, "character": 16}, "end": {"line": 252, "character": 32}}, "newText": "jls_extract_var = drug_target_list\n                jls_extract_var"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///root/capsule/code/process_merged.py", "version": 3}, "edits": [{"range": {"start": {"line": 252, "character": 17}, "end": {"line": 252, "character": 32}}, "newText": "ef jls_extract_def():\n                    return drug_target_list\n\n\n                jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 98, "result": {"contents": {"kind": "markdown", "value": "```python\ngo_tab_map[line[0]] = line[1]\n```\n---\n**Full name:** `code.process_merged.load_name_space.go_tab_map`"}, "range": {"start": {"line": 79, "character": 11}, "end": {"line": 79, "character": 21}}}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 99, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 100, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 101, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///root/capsule/code/process_merged.py", "version": 3}, "edits": [{"range": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 0}}, "newText": "jls_extract_var = '/data/drug_targets.tsv'\n"}, {"range": {"start": {"line": 101, "character": 23}, "end": {"line": 101, "character": 45}}, "newText": "jls_extract_"}, {"range": {"start": {"line": 101, "character": 46}, "end": {"line": 101, "character": 47}}, "newText": "ar"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///root/capsule/code/process_merged.py", "version": 3}, "edits": [{"range": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 0}}, "newText": "def jls_extract_def():\n    return '/data/drug_targets.tsv'\n\n\n"}, {"range": {"start": {"line": 101, "character": 23}, "end": {"line": 101, "character": 47}}, "newText": "jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 102, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 103, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 104, "result": {"contents": {"kind": "markdown", "value": "```python\nPDTC_data_file = '/data/PTDC/'\n```\n---\n**Full name:** `code.process_merged.PDTC_data_file`"}, "range": {"start": {"line": 100, "character": 26}, "end": {"line": 100, "character": 40}}}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///root/capsule/code/process_merged.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///root/capsule/code/process_merged.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 105, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///root/capsule/code/process_merged.py", "version": 5}, "edits": [{"range": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 0}}, "newText": "jls_extract_var = '/data/dr.tsv'\n"}, {"range": {"start": {"line": 101, "character": 23}, "end": {"line": 101, "character": 35}}, "newText": "jls_extract_"}, {"range": {"start": {"line": 101, "character": 36}, "end": {"line": 101, "character": 37}}, "newText": "ar"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///root/capsule/code/process_merged.py", "version": 5}, "edits": [{"range": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 0}}, "newText": "def jls_extract_def():\n    return '/data/dr.tsv'\n\n\n"}, {"range": {"start": {"line": 101, "character": 23}, "end": {"line": 101, "character": 37}}, "newText": "jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 106, "result": [{"name": "matplotlib", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 17}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 17}}, "detail": "module matplotlib", "children": []}, {"name": "os", "kind": 2, "range": {"start": {"line": 10, "character": 0}, "end": {"line": 10, "character": 9}}, "selectionRange": {"start": {"line": 10, "character": 7}, "end": {"line": 10, "character": 9}}, "detail": "module os", "children": []}, {"name": "pd", "kind": 2, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 11, "character": 19}}, "selectionRange": {"start": {"line": 11, "character": 17}, "end": {"line": 11, "character": 19}}, "detail": "module pd", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 12, "character": 0}, "end": {"line": 12, "character": 18}}, "selectionRange": {"start": {"line": 12, "character": 16}, "end": {"line": 12, "character": 18}}, "detail": "module np", "children": []}, {"name": "sys", "kind": 2, "range": {"start": {"line": 13, "character": 0}, "end": {"line": 13, "character": 10}}, "selectionRange": {"start": {"line": 13, "character": 7}, "end": {"line": 13, "character": 10}}, "detail": "module sys", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 14, "character": 0}, "end": {"line": 14, "character": 13}}, "selectionRange": {"start": {"line": 14, "character": 7}, "end": {"line": 14, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cdist", "kind": 12, "range": {"start": {"line": 15, "character": 0}, "end": {"line": 15, "character": 40}}, "selectionRange": {"start": {"line": 15, "character": 35}, "end": {"line": 15, "character": 40}}, "detail": "def cdist", "children": []}, {"name": "math", "kind": 2, "range": {"start": {"line": 16, "character": 0}, "end": {"line": 16, "character": 11}}, "selectionRange": {"start": {"line": 16, "character": 7}, "end": {"line": 16, "character": 11}}, "detail": "module math", "children": []}, {"name": "nx", "kind": 2, "range": {"start": {"line": 17, "character": 0}, "end": {"line": 17, "character": 21}}, "selectionRange": {"start": {"line": 17, "character": 19}, "end": {"line": 17, "character": 21}}, "detail": "module nx", "children": []}, {"name": "nxacc", "kind": 2, "range": {"start": {"line": 18, "character": 0}, "end": {"line": 18, "character": 56}}, "selectionRange": {"start": {"line": 18, "character": 51}, "end": {"line": 18, "character": 56}}, "detail": "module nxacc", "children": []}, {"name": "nxadag", "kind": 2, "range": {"start": {"line": 19, "character": 0}, "end": {"line": 19, "character": 40}}, "selectionRange": {"start": {"line": 19, "character": 34}, "end": {"line": 19, "character": 40}}, "detail": "module nxadag", "children": []}, {"name": "plt", "kind": 2, "range": {"start": {"line": 20, "character": 0}, "end": {"line": 20, "character": 31}}, "selectionRange": {"start": {"line": 20, "character": 28}, "end": {"line": 20, "character": 31}}, "detail": "module plt", "children": []}, {"name": "sns", "kind": 2, "range": {"start": {"line": 21, "character": 0}, "end": {"line": 21, "character": 21}}, "selectionRange": {"start": {"line": 21, "character": 18}, "end": {"line": 21, "character": 21}}, "detail": "module sns", "children": []}, {"name": "itertools", "kind": 2, "range": {"start": {"line": 22, "character": 0}, "end": {"line": 22, "character": 16}}, "selectionRange": {"start": {"line": 22, "character": 7}, "end": {"line": 22, "character": 16}}, "detail": "module itertools", "children": []}, {"name": "mygene", "kind": 2, "range": {"start": {"line": 23, "character": 0}, "end": {"line": 23, "character": 13}}, "selectionRange": {"start": {"line": 23, "character": 7}, "end": {"line": 23, "character": 13}}, "detail": "module mygene", "children": []}, {"name": "re", "kind": 2, "range": {"start": {"line": 24, "character": 0}, "end": {"line": 24, "character": 9}}, "selectionRange": {"start": {"line": 24, "character": 7}, "end": {"line": 24, "character": 9}}, "detail": "module re", "children": []}, {"name": "selected_exp_gene_list", "kind": 13, "range": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 95}}, "selectionRange": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 22}}, "detail": "selected_exp_gene_list = pd.read_csv(\"/data/common_exp_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "selected_mut_gene_list", "kind": 13, "range": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 95}}, "selectionRange": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 22}}, "detail": "selected_mut_gene_list = pd.read_csv(\"/data/common_mut_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "load_network", "kind": 12, "range": {"start": {"line": 37, "character": 0}, "end": {"line": 65, "character": 28}}, "selectionRange": {"start": {"line": 37, "character": 4}, "end": {"line": 37, "character": 16}}, "detail": "def load_network", "children": []}, {"name": "load_name_space", "kind": 12, "range": {"start": {"line": 67, "character": 0}, "end": {"line": 79, "character": 21}}, "selectionRange": {"start": {"line": 67, "character": 4}, "end": {"line": 67, "character": 19}}, "detail": "def load_name_space", "children": []}, {"name": "list2index", "kind": 12, "range": {"start": {"line": 81, "character": 0}, "end": {"line": 88, "character": 41}}, "selectionRange": {"start": {"line": 81, "character": 4}, "end": {"line": 81, "character": 14}}, "detail": "def list2index", "children": []}, {"name": "PDTC_data_file", "kind": 13, "range": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 30}}, "selectionRange": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 14}}, "detail": "PDTC_data_file = '/data/PTDC/'", "children": []}, {"name": "PDTC_exp_data_file", "kind": 13, "range": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 60}}, "selectionRange": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 18}}, "detail": "PDTC_exp_data_file = PDTC_data_file + 'ExpressionModels.tsv'", "children": []}, {"name": "PDTC_drug_cell_line_file", "kind": 13, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 72}}, "selectionRange": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 24}}, "detail": "PDTC_drug_cell_line_file = PDTC_data_file + 'DrugResponsesAUCModels.tsv'", "children": []}, {"name": "PDTC_mutation_data_file", "kind": 13, "range": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 59}}, "selectionRange": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 23}}, "detail": "PDTC_mutation_data_file = PDTC_data_file + 'SNVsModels.tsv'", "children": []}, {"name": "PDTC_drug_target_file", "kind": 13, "range": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 37}}, "selectionRange": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 21}}, "detail": "PDTC_drug_target_file ='/data/dr.tsv'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 37}}, "selectionRange": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 46}}, "selectionRange": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "data_file", "kind": 13, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 25}}, "selectionRange": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 9}}, "detail": "data_file = '/data/GDSC/'", "children": []}, {"name": "new_network_file", "kind": 13, "range": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 27}}, "selectionRange": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 16}}, "detail": "new_network_file = '/data/'", "children": []}, {"name": "exp_data_file", "kind": 13, "range": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 61}}, "selectionRange": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 13}}, "detail": "exp_data_file = data_file + 'Cell_line_RMA_proc_basalExp.txt'", "children": []}, {"name": "drug_cell_line_file", "kind": 13, "range": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 64}}, "selectionRange": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 19}}, "detail": "drug_cell_line_file = data_file + 'v17_fitted_dose_response.csv'", "children": []}, {"name": "cell_line_detail_file", "kind": 13, "range": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 60}}, "selectionRange": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 21}}, "detail": "cell_line_detail_file = data_file + 'Cell_Lines_Details.csv'", "children": []}, {"name": "mutation_data_file", "kind": 13, "range": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 51}}, "selectionRange": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 18}}, "detail": "mutation_data_file = data_file + 'WES_variants.csv'", "children": []}, {"name": "drug_target_file", "kind": 13, "range": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 42}}, "selectionRange": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 16}}, "detail": "drug_target_file ='/data/drug_targets.tsv'", "children": []}, {"name": "feature_folder", "kind": 13, "range": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 27}}, "selectionRange": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 14}}, "detail": "feature_folder = 'feature/'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 37}}, "selectionRange": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 46}}, "selectionRange": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 58}}, "selectionRange": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 6}}, "detail": "exp_df = pd.read_csv(exp_data_file, sep='\\t', index_col=0)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 21}}, "selectionRange": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 6}}, "detail": "exp_df = exp_df.T[1:]", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 56}}, "selectionRange": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 6}}, "detail": "exp_df = exp_df.rename(columns={np.nan: 'NO_GENE_NAME'})", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 43}}, "selectionRange": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 6}}, "detail": "exp_df = exp_df.drop('NO_GENE_NAME',axis=1)", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 138, "character": 0}, "end": {"line": 140, "character": 26}}, "selectionRange": {"start": {"line": 138, "character": 4}, "end": {"line": 138, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 142, "character": 0}, "end": {"line": 142, "character": 44}}, "selectionRange": {"start": {"line": 142, "character": 7}, "end": {"line": 142, "character": 12}}, "detail": "exp_df.index = exp_df.index.map(stripNumber)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 40}}, "selectionRange": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 6}}, "detail": "exp_df = exp_df.groupby(level=0).first()", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 39}}, "selectionRange": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 6}}, "detail": "exp_df = exp_df[selected_exp_gene_list]", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 36}}, "selectionRange": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 48}}, "selectionRange": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 78}}, "selectionRange": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 11}}, "detail": "PDTC_exp_df = pd.read_csv(PDTC_exp_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 31}}, "selectionRange": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df.T[1:]", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 160, "character": 0}, "end": {"line": 162, "character": 26}}, "selectionRange": {"start": {"line": 160, "character": 4}, "end": {"line": 160, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 49}}, "selectionRange": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df[selected_exp_gene_list]", "children": []}, {"name": "PDTC_exp_gene_list", "kind": 13, "range": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 46}}, "selectionRange": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 18}}, "detail": "PDTC_exp_gene_list = list(PDTC_exp_df.columns)", "children": []}, {"name": "PDTC_exp_cell_line_list", "kind": 13, "range": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 58}}, "selectionRange": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 23}}, "detail": "PDTC_exp_cell_line_list = list(PDTC_exp_df.index.unique())", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 40}}, "selectionRange": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 6}}, "detail": "exp_df = pd.concat([exp_df,PDTC_exp_df])", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 36}}, "selectionRange": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 48}}, "selectionRange": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "maf", "kind": 13, "range": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 69}}, "selectionRange": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 3}}, "detail": "maf = pd.read_csv(mutation_data_file, sep=',', index_col=0).fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 75}}, "selectionRange": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 11}}, "detail": "mutation_df = maf.groupby(['COSMIC_ID', 'Gene']).size().unstack().fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 49}}, "selectionRange": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 11}}, "detail": "mutation_df = mutation_df[selected_mut_gene_list]", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 46}}, "selectionRange": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 58}}, "selectionRange": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "PDTC_maf", "kind": 13, "range": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 80}}, "selectionRange": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 8}}, "detail": "PDTC_maf = pd.read_csv(PDTC_mutation_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 61}}, "selectionRange": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_maf.replace(to_replace=\"NO\",value=0.0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 82}}, "selectionRange": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_mutation_df.replace(to_replace=\"chr*\",value=1.0,regex=True)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 47}}, "selectionRange": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df.transpose()", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 59}}, "selectionRange": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df[selected_mut_gene_list]", "children": []}, {"name": "PDTC_mutation_gene_list", "kind": 13, "range": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 56}}, "selectionRange": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 23}}, "detail": "PDTC_mutation_gene_list = list(PDTC_mutation_df.columns)", "children": []}, {"name": "PDTC_mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 68}}, "selectionRange": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 28}}, "detail": "PDTC_mutation_cell_line_list = list(PDTC_mutation_df.index.unique())", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 55}}, "selectionRange": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 11}}, "detail": "mutation_df = pd.concat([mutation_df,PDTC_mutation_df])", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 46}}, "selectionRange": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 58}}, "selectionRange": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 36}}, "selectionRange": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 11}}, "detail": "file_handle = open(drug_target_file)", "children": []}, {"name": "drug_target_map", "kind": 13, "range": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 20}}, "selectionRange": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 15}}, "detail": "drug_target_map = {}", "children": []}, {"name": "drug_target_list", "kind": 13, "range": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 21}}, "selectionRange": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 16}}, "detail": "drug_target_list = []", "children": []}, {"name": "line", "kind": 13, "range": {"start": {"line": 230, "character": 0}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 230, "character": 4}, "end": {"line": 230, "character": 8}}, "detail": "for line in file_handle: new_line = line.rstrip().split(\"\\t\") drug = new_line[0] target_list=new_line[1].split(',') if drug != \"Drug\": target_list_str = \"\" for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\" drug = drug.strip() drug_target_map[drug] = [] if ',' not in target_list_str: drug_target_map[drug].append(target_list_str.strip()) drug_target_list.append(target_list_str.strip()) else: target_list = target_list_str.split(',') for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "new_line", "kind": 13, "range": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 40}}, "selectionRange": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 12}}, "detail": "new_line = line.rstrip().split(\"\\t\")", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 22}}, "selectionRange": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 8}}, "detail": "drug = new_line[0]", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 38}}, "selectionRange": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 15}}, "detail": "target_list=new_line[1].split(',')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 28}}, "selectionRange": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 23}}, "detail": "target_list_str = \"\"", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 237, "character": 8}, "end": {"line": 242, "character": 0}}, "selectionRange": {"start": {"line": 237, "character": 12}, "end": {"line": 237, "character": 13}}, "detail": "for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 65}}, "selectionRange": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 71}}, "selectionRange": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 27}}, "selectionRange": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 12}}, "detail": "drug = drug.strip()", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 52}}, "selectionRange": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 23}}, "detail": "target_list = target_list_str.split(',')", "children": []}, {"name": "target", "kind": 13, "range": {"start": {"line": 250, "character": 12}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 250, "character": 16}, "end": {"line": 250, "character": 22}}, "detail": "for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "drugs_legend", "kind": 13, "range": {"start": {"line": 261, "character": 0}, "end": {"line": 261, "character": 85}}, "selectionRange": {"start": {"line": 261, "character": 0}, "end": {"line": 261, "character": 12}}, "detail": "drugs_legend = pd.read_csv('/data/GDSC/Screened_Compounds.csv', sep=',', index_col=0)", "children": []}, {"name": "drug2id_mapping", "kind": 13, "range": {"start": {"line": 263, "character": 0}, "end": {"line": 263, "character": 20}}, "selectionRange": {"start": {"line": 263, "character": 0}, "end": {"line": 263, "character": 15}}, "detail": "drug2id_mapping = {}", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 265, "character": 0}, "end": {"line": 268, "character": 0}}, "selectionRange": {"start": {"line": 265, "character": 4}, "end": {"line": 265, "character": 9}}, "detail": "for index in list(drugs_legend.index) : drug_name = drugs_legend.loc[index,'Drug Name'] drug2id_mapping[ drug_name ] = index", "children": []}, {"name": "drug_name", "kind": 13, "range": {"start": {"line": 266, "character": 4}, "end": {"line": 266, "character": 51}}, "selectionRange": {"start": {"line": 266, "character": 4}, "end": {"line": 266, "character": 13}}, "detail": "drug_name = drugs_legend.loc[index,'Drug Name']", "children": []}, {"name": "valid_gene_list", "kind": 13, "range": {"start": {"line": 273, "character": 0}, "end": {"line": 273, "character": 92}}, "selectionRange": {"start": {"line": 273, "character": 0}, "end": {"line": 273, "character": 15}}, "detail": "valid_gene_list = list(set(drug_target_list) | set(exp_gene_list) | set(mutation_gene_list))", "children": []}, {"name": "network_list", "kind": 13, "range": {"start": {"line": 279, "character": 0}, "end": {"line": 279, "character": 82}}, "selectionRange": {"start": {"line": 279, "character": 0}, "end": {"line": 279, "character": 12}}, "detail": "network_list = [new_network_file+inbiomap_file, new_network_file+pathwaycomm_file]", "children": []}, {"name": "gene_neighbor_map", "kind": 13, "range": {"start": {"line": 280, "character": 0}, "end": {"line": 280, "character": 64}}, "selectionRange": {"start": {"line": 280, "character": 0}, "end": {"line": 280, "character": 17}}, "detail": "gene_neighbor_map = load_network(network_list, valid_gene_list)", "children": []}, {"name": "gene_name_df", "kind": 13, "range": {"start": {"line": 286, "character": 0}, "end": {"line": 286, "character": 89}}, "selectionRange": {"start": {"line": 286, "character": 0}, "end": {"line": 286, "character": 12}}, "detail": "gene_name_df = pd.read_table('/data/HUGO_protein-coding_gene.tsv',index_col=25, sep='\\t')", "children": []}, {"name": "gene_name_map", "kind": 13, "range": {"start": {"line": 292, "character": 0}, "end": {"line": 292, "character": 18}}, "selectionRange": {"start": {"line": 292, "character": 0}, "end": {"line": 292, "character": 13}}, "detail": "gene_name_map = {}", "children": []}, {"name": "uniprot_gene", "kind": 13, "range": {"start": {"line": 294, "character": 0}, "end": {"line": 303, "character": 0}}, "selectionRange": {"start": {"line": 294, "character": 4}, "end": {"line": 294, "character": 16}}, "detail": "for uniprot_gene in gene_name_df.index: if isinstance(uniprot_gene, type('aaa')) == False: continue if isinstance(gene_name_df.loc[uniprot_gene, 'symbol'], type('aaa')) == False: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol'][0] else: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 308, "character": 0}, "end": {"line": 308, "character": 76}}, "selectionRange": {"start": {"line": 308, "character": 0}, "end": {"line": 308, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "uniprot_gene_set", "kind": 13, "range": {"start": {"line": 310, "character": 0}, "end": {"line": 310, "character": 24}}, "selectionRange": {"start": {"line": 310, "character": 0}, "end": {"line": 310, "character": 16}}, "detail": "uniprot_gene_set = set()", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 312, "character": 0}, "end": {"line": 321, "character": 0}}, "selectionRange": {"start": {"line": 312, "character": 4}, "end": {"line": 312, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 317, "character": 4}, "end": {"line": 317, "character": 74}}, "selectionRange": {"start": {"line": 317, "character": 4}, "end": {"line": 317, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 319, "character": 4}, "end": {"line": 321, "character": 0}}, "selectionRange": {"start": {"line": 319, "character": 8}, "end": {"line": 319, "character": 12}}, "detail": "for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "query_gene_set", "kind": 13, "range": {"start": {"line": 324, "character": 0}, "end": {"line": 324, "character": 19}}, "selectionRange": {"start": {"line": 324, "character": 0}, "end": {"line": 324, "character": 14}}, "detail": "query_gene_set = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 326, "character": 0}, "end": {"line": 329, "character": 0}}, "selectionRange": {"start": {"line": 326, "character": 4}, "end": {"line": 326, "character": 8}}, "detail": "for gene in uniprot_gene_set: if gene not in gene_name_map: query_gene_set.append(gene)", "children": []}, {"name": "query_gene_list", "kind": 13, "range": {"start": {"line": 332, "character": 0}, "end": {"line": 332, "character": 38}}, "selectionRange": {"start": {"line": 332, "character": 0}, "end": {"line": 332, "character": 15}}, "detail": "query_gene_list = list(query_gene_set)", "children": []}, {"name": "mg", "kind": 13, "range": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 24}}, "selectionRange": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 2}}, "detail": "mg = mygene.MyGeneInfo()", "children": []}, {"name": "out", "kind": 13, "range": {"start": {"line": 335, "character": 0}, "end": {"line": 335, "character": 87}}, "selectionRange": {"start": {"line": 335, "character": 0}, "end": {"line": 335, "character": 3}}, "detail": "out = mg.querymany(query_gene_list, scopes='uniprot', fields='symbol', species='human')", "children": []}, {"name": "not_found_gene_list", "kind": 13, "range": {"start": {"line": 337, "character": 0}, "end": {"line": 337, "character": 24}}, "selectionRange": {"start": {"line": 337, "character": 0}, "end": {"line": 337, "character": 19}}, "detail": "not_found_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 339, "character": 0}, "end": {"line": 344, "character": 0}}, "selectionRange": {"start": {"line": 339, "character": 4}, "end": {"line": 339, "character": 5}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 339, "character": 0}, "end": {"line": 344, "character": 0}}, "selectionRange": {"start": {"line": 339, "character": 7}, "end": {"line": 339, "character": 11}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 351, "character": 0}, "end": {"line": 351, "character": 76}}, "selectionRange": {"start": {"line": 351, "character": 0}, "end": {"line": 351, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 353, "character": 0}, "end": {"line": 375, "character": 0}}, "selectionRange": {"start": {"line": 353, "character": 4}, "end": {"line": 353, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') complex_symbol_list = [] for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] ) for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 358, "character": 4}, "end": {"line": 358, "character": 74}}, "selectionRange": {"start": {"line": 358, "character": 4}, "end": {"line": 358, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "complex_symbol_list", "kind": 13, "range": {"start": {"line": 360, "character": 4}, "end": {"line": 360, "character": 28}}, "selectionRange": {"start": {"line": 360, "character": 4}, "end": {"line": 360, "character": 23}}, "detail": "complex_symbol_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 362, "character": 4}, "end": {"line": 365, "character": 0}}, "selectionRange": {"start": {"line": 362, "character": 8}, "end": {"line": 362, "character": 12}}, "detail": "for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] )", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 366, "character": 4}, "end": {"line": 375, "character": 0}}, "selectionRange": {"start": {"line": 366, "character": 8}, "end": {"line": 366, "character": 13}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 366, "character": 4}, "end": {"line": 375, "character": 0}}, "selectionRange": {"start": {"line": 366, "character": 15}, "end": {"line": 366, "character": 20}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene_exp_neighbor_map", "kind": 13, "range": {"start": {"line": 380, "character": 0}, "end": {"line": 380, "character": 26}}, "selectionRange": {"start": {"line": 380, "character": 0}, "end": {"line": 380, "character": 21}}, "detail": "gene_exp_neighbor_map = {}", "children": []}, {"name": "exp_matrix", "kind": 13, "range": {"start": {"line": 381, "character": 0}, "end": {"line": 381, "character": 26}}, "selectionRange": {"start": {"line": 381, "character": 0}, "end": {"line": 381, "character": 10}}, "detail": "exp_matrix = exp_df.values", "children": []}, {"name": "P", "kind": 13, "range": {"start": {"line": 383, "character": 0}, "end": {"line": 383, "character": 79}}, "selectionRange": {"start": {"line": 383, "character": 0}, "end": {"line": 383, "character": 1}}, "detail": "P = 1 - cdist(np.transpose(exp_matrix), np.transpose(exp_matrix),'correlation')", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 385, "character": 0}, "end": {"line": 399, "character": 0}}, "selectionRange": {"start": {"line": 385, "character": 4}, "end": {"line": 385, "character": 5}}, "detail": "for i in range(len(exp_gene_list)): gene1 = exp_gene_list[i] gene_exp_neighbor_map[gene1] = set() for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2) if gene1 not in gene_exp_neighbor_map[gene1]: print (gene1, 'not in itself?', P[i,i])", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 387, "character": 4}, "end": {"line": 387, "character": 28}}, "selectionRange": {"start": {"line": 387, "character": 4}, "end": {"line": 387, "character": 9}}, "detail": "gene1 = exp_gene_list[i]", "children": []}, {"name": "j", "kind": 13, "range": {"start": {"line": 390, "character": 4}, "end": {"line": 396, "character": 0}}, "selectionRange": {"start": {"line": 390, "character": 8}, "end": {"line": 390, "character": 9}}, "detail": "for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 392, "character": 8}, "end": {"line": 392, "character": 32}}, "selectionRange": {"start": {"line": 392, "character": 8}, "end": {"line": 392, "character": 13}}, "detail": "gene2 = exp_gene_list[j]", "children": []}, {"name": "drug_feature_list", "kind": 13, "range": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 22}}, "selectionRange": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 17}}, "detail": "drug_feature_list = []", "children": []}, {"name": "drug_neighbor_map", "kind": 13, "range": {"start": {"line": 408, "character": 0}, "end": {"line": 408, "character": 22}}, "selectionRange": {"start": {"line": 408, "character": 0}, "end": {"line": 408, "character": 17}}, "detail": "drug_neighbor_map = {}", "children": []}, {"name": "selected_drug_list", "kind": 13, "range": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 23}}, "selectionRange": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 18}}, "detail": "selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 411, "character": 0}, "end": {"line": 428, "character": 0}}, "selectionRange": {"start": {"line": 411, "character": 4}, "end": {"line": 411, "character": 8}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 411, "character": 0}, "end": {"line": 428, "character": 0}}, "selectionRange": {"start": {"line": 411, "character": 10}, "end": {"line": 411, "character": 21}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 414, "character": 8}, "end": {"line": 424, "character": 0}}, "selectionRange": {"start": {"line": 414, "character": 12}, "end": {"line": 414, "character": 16}}, "detail": "for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene]", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 442, "character": 0}, "end": {"line": 442, "character": 52}}, "selectionRange": {"start": {"line": 442, "character": 0}, "end": {"line": 442, "character": 5}}, "detail": "drugs = pd.read_csv(drug_cell_line_file,index_col=2)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 443, "character": 0}, "end": {"line": 443, "character": 93}}, "selectionRange": {"start": {"line": 443, "character": 0}, "end": {"line": 443, "character": 5}}, "detail": "drugs = drugs.drop([\"DATASET_VERSION\",\"IC50_RESULTS_ID\",\"MAX_CONC_MICROMOLAR\",\"RMSE\"],axis=1)", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 444, "character": 0}, "end": {"line": 444, "character": 49}}, "selectionRange": {"start": {"line": 444, "character": 0}, "end": {"line": 444, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 446, "character": 0}, "end": {"line": 446, "character": 28}}, "selectionRange": {"start": {"line": 446, "character": 0}, "end": {"line": 446, "character": 9}}, "detail": "drug_list = drugs[\"DRUG_ID\"]", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 447, "character": 0}, "end": {"line": 447, "character": 16}}, "selectionRange": {"start": {"line": 447, "character": 0}, "end": {"line": 447, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 457, "character": 0}, "end": {"line": 457, "character": 71}}, "selectionRange": {"start": {"line": 457, "character": 0}, "end": {"line": 457, "character": 10}}, "detail": "PDTC_drugs = pd.read_csv(PDTC_drug_cell_line_file,sep='\\t',index_col=0)", "children": []}, {"name": "PDTC_drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 458, "character": 0}, "end": {"line": 458, "character": 59}}, "selectionRange": {"start": {"line": 458, "character": 0}, "end": {"line": 458, "character": 25}}, "detail": "PDTC_drugs_cell_line_list = list(PDTC_drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 460, "character": 0}, "end": {"line": 460, "character": 39}}, "selectionRange": {"start": {"line": 460, "character": 0}, "end": {"line": 460, "character": 9}}, "detail": "drug_list = PDTC_drugs[\"Drug\"].tolist()", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 461, "character": 0}, "end": {"line": 461, "character": 16}}, "selectionRange": {"start": {"line": 461, "character": 0}, "end": {"line": 461, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 462, "character": 0}, "end": {"line": 467, "character": 0}}, "selectionRange": {"start": {"line": 462, "character": 4}, "end": {"line": 462, "character": 5}}, "detail": "for i in drug_list: if i in drug2id_mapping.keys(): new_drug_id.append(drug2id_mapping[i]) else: new_drug_id.append(0)", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 84}}, "selectionRange": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 10}}, "detail": "PDTC_drugs = PDTC_drugs.drop([\"Drug\",\"iC50\",\"D1_CONC\",\"D5_CONC\",\"perc.iC50\"],axis=1)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 477, "character": 0}, "end": {"line": 477, "character": 37}}, "selectionRange": {"start": {"line": 477, "character": 0}, "end": {"line": 477, "character": 5}}, "detail": "drugs = pd.concat([drugs,PDTC_drugs])", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 49}}, "selectionRange": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "cell_line_list", "kind": 13, "range": {"start": {"line": 490, "character": 0}, "end": {"line": 490, "character": 102}}, "selectionRange": {"start": {"line": 490, "character": 0}, "end": {"line": 490, "character": 14}}, "detail": "cell_line_list = list(set(drugs_cell_line_list)&set(exp_cell_line_list)&set(mutation_cell_line_list) )", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 497, "character": 0}, "end": {"line": 497, "character": 66}}, "selectionRange": {"start": {"line": 497, "character": 0}, "end": {"line": 497, "character": 16}}, "detail": "cell_line_legend = pd.read_csv(cell_line_detail_file, index_col=1)", "children": []}, {"name": "PDTC_cell_line", "kind": 13, "range": {"start": {"line": 498, "character": 0}, "end": {"line": 498, "character": 206}}, "selectionRange": {"start": {"line": 498, "character": 0}, "end": {"line": 498, "character": 14}}, "detail": "PDTC_cell_line = pd.DataFrame({'Line': [\"BRCA\"]*len(PDTC_exp_cell_line_list), 'Site':[\"PDTC\"]*len(PDTC_exp_cell_line_list),\"Histology\":[\"breast\"]*len(PDTC_exp_cell_line_list)},index=PDTC_exp_cell_line_list)", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 499, "character": 0}, "end": {"line": 499, "character": 63}}, "selectionRange": {"start": {"line": 499, "character": 0}, "end": {"line": 499, "character": 16}}, "detail": "cell_line_legend = pd.concat([cell_line_legend,PDTC_cell_line])", "children": []}, {"name": "tissue_map", "kind": 13, "range": {"start": {"line": 502, "character": 0}, "end": {"line": 502, "character": 15}}, "selectionRange": {"start": {"line": 502, "character": 0}, "end": {"line": 502, "character": 10}}, "detail": "tissue_map = {}", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 504, "character": 0}, "end": {"line": 512, "character": 0}}, "selectionRange": {"start": {"line": 504, "character": 4}, "end": {"line": 504, "character": 13}}, "detail": "for cell_line in cell_line_list: tissue = cell_line_legend.loc[cell_line,'Site'] if tissue not in tissue_map: tissue_map[tissue] = [] tissue_map[tissue].append(cell_line)", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 506, "character": 4}, "end": {"line": 506, "character": 51}}, "selectionRange": {"start": {"line": 506, "character": 4}, "end": {"line": 506, "character": 10}}, "detail": "tissue = cell_line_legend.loc[cell_line,'Site']", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 513, "character": 0}, "end": {"line": 513, "character": 23}}, "selectionRange": {"start": {"line": 513, "character": 0}, "end": {"line": 513, "character": 19}}, "detail": "large_tissue_number = 0", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 514, "character": 0}, "end": {"line": 520, "character": 0}}, "selectionRange": {"start": {"line": 514, "character": 4}, "end": {"line": 514, "character": 10}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 514, "character": 0}, "end": {"line": 520, "character": 0}}, "selectionRange": {"start": {"line": 514, "character": 12}, "end": {"line": 514, "character": 21}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 517, "character": 8}, "end": {"line": 517, "character": 32}}, "selectionRange": {"start": {"line": 517, "character": 8}, "end": {"line": 517, "character": 27}}, "detail": "large_tissue_number += 1", "children": []}, {"name": "new_exp_gene_list", "kind": 13, "range": {"start": {"line": 540, "character": 0}, "end": {"line": 540, "character": 22}}, "selectionRange": {"start": {"line": 540, "character": 0}, "end": {"line": 540, "character": 17}}, "detail": "new_exp_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 541, "character": 0}, "end": {"line": 544, "character": 0}}, "selectionRange": {"start": {"line": 541, "character": 4}, "end": {"line": 541, "character": 5}}, "detail": "for i in exp_gene_list: if i in valid_gene_list: new_exp_gene_list.append(i)", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 549, "character": 0}, "end": {"line": 549, "character": 41}}, "selectionRange": {"start": {"line": 549, "character": 0}, "end": {"line": 549, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 550, "character": 0}, "end": {"line": 550, "character": 38}}, "selectionRange": {"start": {"line": 550, "character": 0}, "end": {"line": 550, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 551, "character": 0}, "end": {"line": 551, "character": 72}}, "selectionRange": {"start": {"line": 551, "character": 0}, "end": {"line": 551, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 553, "character": 0}, "end": {"line": 553, "character": 43}}, "selectionRange": {"start": {"line": 553, "character": 0}, "end": {"line": 553, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 554, "character": 0}, "end": {"line": 554, "character": 68}}, "selectionRange": {"start": {"line": 554, "character": 0}, "end": {"line": 554, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 561, "character": 0}, "end": {"line": 561, "character": 58}}, "selectionRange": {"start": {"line": 561, "character": 0}, "end": {"line": 561, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 562, "character": 0}, "end": {"line": 562, "character": 68}}, "selectionRange": {"start": {"line": 562, "character": 0}, "end": {"line": 562, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "new_data_file", "kind": 13, "range": {"start": {"line": 571, "character": 0}, "end": {"line": 571, "character": 18}}, "selectionRange": {"start": {"line": 571, "character": 0}, "end": {"line": 571, "character": 13}}, "detail": "new_data_file = ''", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 41}}, "selectionRange": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 38}}, "selectionRange": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 72}}, "selectionRange": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 43}}, "selectionRange": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 68}}, "selectionRange": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 58}}, "selectionRange": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 68}}, "selectionRange": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "rename_selected_drug_list", "kind": 13, "range": {"start": {"line": 592, "character": 0}, "end": {"line": 592, "character": 30}}, "selectionRange": {"start": {"line": 592, "character": 0}, "end": {"line": 592, "character": 25}}, "detail": "rename_selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 594, "character": 0}, "end": {"line": 664, "character": 0}}, "selectionRange": {"start": {"line": 594, "character": 4}, "end": {"line": 594, "character": 8}}, "detail": "for drug in selected_drug_list: print(drug) if drug not in drug2id_mapping: print('drug name wrong', drug) else: cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]] feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) ) feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) ) print(len(feature_exp_gene_list) + len(feature_mut_gene_list)) if len(feature_exp_gene_list) + len(feature_mut_gene_list) == 0: continue feature_description = [] drug_tissue_map = {} drug = drug.replace(' ','_') rename_selected_drug_list.append(drug) if drug == 'Nutlin-3a_(-)': drug = 'Nutlin-3a' drug_folder = '/data/merged/drug_feature/' + drug + '/' if not os.path.exists(drug_folder): os.makedirs(drug_folder) for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description)) file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\") pickle.dump(drug_tissue_map,file_handle) file_handle.close()", "children": []}, {"name": "cell_line_drug_matrix", "kind": 13, "range": {"start": {"line": 602, "character": 8}, "end": {"line": 602, "character": 84}}, "selectionRange": {"start": {"line": 602, "character": 8}, "end": {"line": 602, "character": 29}}, "detail": "cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]]", "children": []}, {"name": "feature_exp_gene_list", "kind": 13, "range": {"start": {"line": 607, "character": 8}, "end": {"line": 607, "character": 98}}, "selectionRange": {"start": {"line": 607, "character": 8}, "end": {"line": 607, "character": 29}}, "detail": "feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) )", "children": []}, {"name": "feature_mut_gene_list", "kind": 13, "range": {"start": {"line": 608, "character": 8}, "end": {"line": 608, "character": 98}}, "selectionRange": {"start": {"line": 608, "character": 8}, "end": {"line": 608, "character": 29}}, "detail": "feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) )", "children": []}, {"name": "feature_description", "kind": 13, "range": {"start": {"line": 612, "character": 8}, "end": {"line": 612, "character": 32}}, "selectionRange": {"start": {"line": 612, "character": 8}, "end": {"line": 612, "character": 27}}, "detail": "feature_description = []", "children": []}, {"name": "drug_tissue_map", "kind": 13, "range": {"start": {"line": 614, "character": 8}, "end": {"line": 614, "character": 28}}, "selectionRange": {"start": {"line": 614, "character": 8}, "end": {"line": 614, "character": 23}}, "detail": "drug_tissue_map = {}", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 616, "character": 8}, "end": {"line": 616, "character": 36}}, "selectionRange": {"start": {"line": 616, "character": 8}, "end": {"line": 616, "character": 12}}, "detail": "drug = drug.replace(' ','_')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 622, "character": 12}, "end": {"line": 622, "character": 30}}, "selectionRange": {"start": {"line": 622, "character": 12}, "end": {"line": 622, "character": 16}}, "detail": "drug = 'Nutlin-3a'", "children": []}, {"name": "drug_folder", "kind": 13, "range": {"start": {"line": 624, "character": 8}, "end": {"line": 624, "character": 63}}, "selectionRange": {"start": {"line": 624, "character": 8}, "end": {"line": 624, "character": 19}}, "detail": "drug_folder = '/data/merged/drug_feature/' + drug + '/'", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 630, "character": 8}, "end": {"line": 660, "character": 0}}, "selectionRange": {"start": {"line": 630, "character": 12}, "end": {"line": 630, "character": 18}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "tissue_cell_line_list", "kind": 13, "range": {"start": {"line": 630, "character": 8}, "end": {"line": 660, "character": 0}}, "selectionRange": {"start": {"line": 630, "character": 20}, "end": {"line": 630, "character": 41}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 633, "character": 12}, "end": {"line": 633, "character": 103}}, "selectionRange": {"start": {"line": 633, "character": 12}, "end": {"line": 633, "character": 35}}, "detail": "drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list )", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 634, "character": 12}, "end": {"line": 634, "character": 67}}, "selectionRange": {"start": {"line": 634, "character": 12}, "end": {"line": 634, "character": 35}}, "detail": "drug_specific_cell_line = list(drug_specific_cell_line)", "children": []}, {"name": "feature_list", "kind": 13, "range": {"start": {"line": 637, "character": 12}, "end": {"line": 637, "character": 29}}, "selectionRange": {"start": {"line": 637, "character": 12}, "end": {"line": 637, "character": 24}}, "detail": "feature_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 641, "character": 16}, "end": {"line": 643, "character": 0}}, "selectionRange": {"start": {"line": 641, "character": 20}, "end": {"line": 641, "character": 24}}, "detail": "for gene in feature_exp_gene_list: feature_description.append(gene+'_expression')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 646, "character": 16}, "end": {"line": 648, "character": 0}}, "selectionRange": {"start": {"line": 646, "character": 20}, "end": {"line": 646, "character": 24}}, "detail": "for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation')", "children": []}, {"name": "feature", "kind": 13, "range": {"start": {"line": 649, "character": 12}, "end": {"line": 649, "character": 58}}, "selectionRange": {"start": {"line": 649, "character": 12}, "end": {"line": 649, "character": 19}}, "detail": "feature = np.concatenate(feature_list, axis=1)", "children": []}, {"name": "label", "kind": 13, "range": {"start": {"line": 651, "character": 12}, "end": {"line": 651, "character": 88}}, "selectionRange": {"start": {"line": 651, "character": 12}, "end": {"line": 651, "character": 17}}, "detail": "label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 661, "character": 8}, "end": {"line": 661, "character": 84}}, "selectionRange": {"start": {"line": 661, "character": 8}, "end": {"line": 661, "character": 19}}, "detail": "file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\")", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 665, "character": 0}, "end": {"line": 665, "character": 52}}, "selectionRange": {"start": {"line": 665, "character": 0}, "end": {"line": 665, "character": 11}}, "detail": "file_handle = open('rename_selected_drug_list', 'w')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 666, "character": 0}, "end": {"line": 668, "character": 0}}, "selectionRange": {"start": {"line": 666, "character": 4}, "end": {"line": 666, "character": 8}}, "detail": "for drug in rename_selected_drug_list: file_handle.writelines(drug+ '\\n')", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 686, "character": 0}, "end": {"line": 686, "character": 13}}, "selectionRange": {"start": {"line": 686, "character": 7}, "end": {"line": 686, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cell_line_loc", "kind": 13, "range": {"start": {"line": 692, "character": 0}, "end": {"line": 692, "character": 84}}, "selectionRange": {"start": {"line": 692, "character": 0}, "end": {"line": 692, "character": 13}}, "detail": "cell_line_loc = '/cellar/users/samsonfong/Projects/tcrp-v2/from-ma/cell_line_lists/'", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 698, "character": 0}, "end": {"line": 700, "character": 0}}, "selectionRange": {"start": {"line": 698, "character": 53}, "end": {"line": 698, "character": 54}}, "detail": "with open('/data/drug_feature/KU-55933/KU', 'rb') as f: tmap= pickle.load(f)", "children": []}, {"name": "tmap", "kind": 13, "range": {"start": {"line": 699, "character": 4}, "end": {"line": 699, "character": 24}}, "selectionRange": {"start": {"line": 699, "character": 4}, "end": {"line": 699, "character": 8}}, "detail": "tmap= pickle.load(f)", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 717, "character": 0}, "end": {"line": 717, "character": 68}}, "selectionRange": {"start": {"line": 717, "character": 0}, "end": {"line": 717, "character": 1}}, "detail": "f = np.load('/data/drug_feature/KU-55933/lung_KU-55933_feature.npy')", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///root/capsule/code/process_merged.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///root/capsule/code/process_merged.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///root/capsule/code/process_merged.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 107, "result": {"contents": {"kind": "markdown", "value": "```python\nPDTC_data_file = '/data/PTDC/'\n```\n---\n**Full name:** `code.process_merged.PDTC_data_file`"}, "range": {"start": {"line": 100, "character": 26}, "end": {"line": 100, "character": 40}}}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 108, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///root/capsule/code/process_merged.py", "version": 8}, "edits": [{"range": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 0}}, "newText": "jls_extract_var = '/data/drug-.tsv'\n"}, {"range": {"start": {"line": 101, "character": 23}, "end": {"line": 101, "character": 38}}, "newText": "jls_extract_"}, {"range": {"start": {"line": 101, "character": 39}, "end": {"line": 101, "character": 40}}, "newText": "ar"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///root/capsule/code/process_merged.py", "version": 8}, "edits": [{"range": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 0}}, "newText": "def jls_extract_def():\n    return '/data/drug-.tsv'\n\n\n"}, {"range": {"start": {"line": 101, "character": 23}, "end": {"line": 101, "character": 40}}, "newText": "jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///root/capsule/code/process_merged.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///root/capsule/code/process_merged.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///root/capsule/code/process_merged.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 109, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///root/capsule/code/process_merged.py", "version": 11}, "edits": [{"range": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 0}}, "newText": "jls_extract_var = '/data/drug_t.tsv'\n"}, {"range": {"start": {"line": 101, "character": 23}, "end": {"line": 101, "character": 39}}, "newText": "jls_extract_"}, {"range": {"start": {"line": 101, "character": 40}, "end": {"line": 101, "character": 41}}, "newText": "ar"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///root/capsule/code/process_merged.py", "version": 11}, "edits": [{"range": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 0}}, "newText": "def jls_extract_def():\n    return '/data/drug_t.tsv'\n\n\n"}, {"range": {"start": {"line": 101, "character": 23}, "end": {"line": 101, "character": 41}}, "newText": "jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///root/capsule/code/process_merged.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///root/capsule/code/process_merged.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///root/capsule/code/process_merged.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///root/capsule/code/process_merged.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///root/capsule/code/process_merged.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///root/capsule/code/process_merged.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///root/capsule/code/process_merged.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///root/capsule/code/process_merged.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 110, "result": {"contents": {"kind": "markdown", "value": "```python\nPDTC_data_file = '/data/PTDC/'\n```\n---\n**Full name:** `code.process_merged.PDTC_data_file`"}, "range": {"start": {"line": 100, "character": 26}, "end": {"line": 100, "character": 40}}}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 111, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///root/capsule/code/process_merged.py", "version": 19}, "edits": [{"range": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 0}}, "newText": "jls_extract_var = '/data/drug_target_.tsv'\n"}, {"range": {"start": {"line": 101, "character": 23}, "end": {"line": 101, "character": 45}}, "newText": "jls_extract_"}, {"range": {"start": {"line": 101, "character": 46}, "end": {"line": 101, "character": 47}}, "newText": "ar"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///root/capsule/code/process_merged.py", "version": 19}, "edits": [{"range": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 0}}, "newText": "def jls_extract_def():\n    return '/data/drug_target_.tsv'\n\n\n"}, {"range": {"start": {"line": 101, "character": 23}, "end": {"line": 101, "character": 47}}, "newText": "jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///root/capsule/code/process_merged.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///root/capsule/code/process_merged.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///root/capsule/code/process_merged.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///root/capsule/code/process_merged.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 112, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///root/capsule/code/process_merged.py", "version": 23}, "edits": [{"range": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 0}}, "newText": "jls_extract_var = '/data/drug_target_list.tsv'\n"}, {"range": {"start": {"line": 101, "character": 23}, "end": {"line": 101, "character": 49}}, "newText": "jls_extract_"}, {"range": {"start": {"line": 101, "character": 50}, "end": {"line": 101, "character": 51}}, "newText": "ar"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///root/capsule/code/process_merged.py", "version": 23}, "edits": [{"range": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 0}}, "newText": "def jls_extract_def():\n    return '/data/drug_target_list.tsv'\n\n\n"}, {"range": {"start": {"line": 101, "character": 23}, "end": {"line": 101, "character": 51}}, "newText": "jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 113, "result": [{"name": "matplotlib", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 17}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 17}}, "detail": "module matplotlib", "children": []}, {"name": "os", "kind": 2, "range": {"start": {"line": 10, "character": 0}, "end": {"line": 10, "character": 9}}, "selectionRange": {"start": {"line": 10, "character": 7}, "end": {"line": 10, "character": 9}}, "detail": "module os", "children": []}, {"name": "pd", "kind": 2, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 11, "character": 19}}, "selectionRange": {"start": {"line": 11, "character": 17}, "end": {"line": 11, "character": 19}}, "detail": "module pd", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 12, "character": 0}, "end": {"line": 12, "character": 18}}, "selectionRange": {"start": {"line": 12, "character": 16}, "end": {"line": 12, "character": 18}}, "detail": "module np", "children": []}, {"name": "sys", "kind": 2, "range": {"start": {"line": 13, "character": 0}, "end": {"line": 13, "character": 10}}, "selectionRange": {"start": {"line": 13, "character": 7}, "end": {"line": 13, "character": 10}}, "detail": "module sys", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 14, "character": 0}, "end": {"line": 14, "character": 13}}, "selectionRange": {"start": {"line": 14, "character": 7}, "end": {"line": 14, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cdist", "kind": 12, "range": {"start": {"line": 15, "character": 0}, "end": {"line": 15, "character": 40}}, "selectionRange": {"start": {"line": 15, "character": 35}, "end": {"line": 15, "character": 40}}, "detail": "def cdist", "children": []}, {"name": "math", "kind": 2, "range": {"start": {"line": 16, "character": 0}, "end": {"line": 16, "character": 11}}, "selectionRange": {"start": {"line": 16, "character": 7}, "end": {"line": 16, "character": 11}}, "detail": "module math", "children": []}, {"name": "nx", "kind": 2, "range": {"start": {"line": 17, "character": 0}, "end": {"line": 17, "character": 21}}, "selectionRange": {"start": {"line": 17, "character": 19}, "end": {"line": 17, "character": 21}}, "detail": "module nx", "children": []}, {"name": "nxacc", "kind": 2, "range": {"start": {"line": 18, "character": 0}, "end": {"line": 18, "character": 56}}, "selectionRange": {"start": {"line": 18, "character": 51}, "end": {"line": 18, "character": 56}}, "detail": "module nxacc", "children": []}, {"name": "nxadag", "kind": 2, "range": {"start": {"line": 19, "character": 0}, "end": {"line": 19, "character": 40}}, "selectionRange": {"start": {"line": 19, "character": 34}, "end": {"line": 19, "character": 40}}, "detail": "module nxadag", "children": []}, {"name": "plt", "kind": 2, "range": {"start": {"line": 20, "character": 0}, "end": {"line": 20, "character": 31}}, "selectionRange": {"start": {"line": 20, "character": 28}, "end": {"line": 20, "character": 31}}, "detail": "module plt", "children": []}, {"name": "sns", "kind": 2, "range": {"start": {"line": 21, "character": 0}, "end": {"line": 21, "character": 21}}, "selectionRange": {"start": {"line": 21, "character": 18}, "end": {"line": 21, "character": 21}}, "detail": "module sns", "children": []}, {"name": "itertools", "kind": 2, "range": {"start": {"line": 22, "character": 0}, "end": {"line": 22, "character": 16}}, "selectionRange": {"start": {"line": 22, "character": 7}, "end": {"line": 22, "character": 16}}, "detail": "module itertools", "children": []}, {"name": "mygene", "kind": 2, "range": {"start": {"line": 23, "character": 0}, "end": {"line": 23, "character": 13}}, "selectionRange": {"start": {"line": 23, "character": 7}, "end": {"line": 23, "character": 13}}, "detail": "module mygene", "children": []}, {"name": "re", "kind": 2, "range": {"start": {"line": 24, "character": 0}, "end": {"line": 24, "character": 9}}, "selectionRange": {"start": {"line": 24, "character": 7}, "end": {"line": 24, "character": 9}}, "detail": "module re", "children": []}, {"name": "selected_exp_gene_list", "kind": 13, "range": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 95}}, "selectionRange": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 22}}, "detail": "selected_exp_gene_list = pd.read_csv(\"/data/common_exp_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "selected_mut_gene_list", "kind": 13, "range": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 95}}, "selectionRange": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 22}}, "detail": "selected_mut_gene_list = pd.read_csv(\"/data/common_mut_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "load_network", "kind": 12, "range": {"start": {"line": 37, "character": 0}, "end": {"line": 65, "character": 28}}, "selectionRange": {"start": {"line": 37, "character": 4}, "end": {"line": 37, "character": 16}}, "detail": "def load_network", "children": []}, {"name": "load_name_space", "kind": 12, "range": {"start": {"line": 67, "character": 0}, "end": {"line": 79, "character": 21}}, "selectionRange": {"start": {"line": 67, "character": 4}, "end": {"line": 67, "character": 19}}, "detail": "def load_name_space", "children": []}, {"name": "list2index", "kind": 12, "range": {"start": {"line": 81, "character": 0}, "end": {"line": 88, "character": 41}}, "selectionRange": {"start": {"line": 81, "character": 4}, "end": {"line": 81, "character": 14}}, "detail": "def list2index", "children": []}, {"name": "PDTC_data_file", "kind": 13, "range": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 30}}, "selectionRange": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 14}}, "detail": "PDTC_data_file = '/data/PTDC/'", "children": []}, {"name": "PDTC_exp_data_file", "kind": 13, "range": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 60}}, "selectionRange": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 18}}, "detail": "PDTC_exp_data_file = PDTC_data_file + 'ExpressionModels.tsv'", "children": []}, {"name": "PDTC_drug_cell_line_file", "kind": 13, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 72}}, "selectionRange": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 24}}, "detail": "PDTC_drug_cell_line_file = PDTC_data_file + 'DrugResponsesAUCModels.tsv'", "children": []}, {"name": "PDTC_mutation_data_file", "kind": 13, "range": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 59}}, "selectionRange": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 23}}, "detail": "PDTC_mutation_data_file = PDTC_data_file + 'SNVsModels.tsv'", "children": []}, {"name": "PDTC_drug_target_file", "kind": 13, "range": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 51}}, "selectionRange": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 21}}, "detail": "PDTC_drug_target_file ='/data/drug_target_list.tsv'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 37}}, "selectionRange": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 46}}, "selectionRange": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "data_file", "kind": 13, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 25}}, "selectionRange": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 9}}, "detail": "data_file = '/data/GDSC/'", "children": []}, {"name": "new_network_file", "kind": 13, "range": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 27}}, "selectionRange": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 16}}, "detail": "new_network_file = '/data/'", "children": []}, {"name": "exp_data_file", "kind": 13, "range": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 61}}, "selectionRange": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 13}}, "detail": "exp_data_file = data_file + 'Cell_line_RMA_proc_basalExp.txt'", "children": []}, {"name": "drug_cell_line_file", "kind": 13, "range": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 64}}, "selectionRange": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 19}}, "detail": "drug_cell_line_file = data_file + 'v17_fitted_dose_response.csv'", "children": []}, {"name": "cell_line_detail_file", "kind": 13, "range": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 60}}, "selectionRange": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 21}}, "detail": "cell_line_detail_file = data_file + 'Cell_Lines_Details.csv'", "children": []}, {"name": "mutation_data_file", "kind": 13, "range": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 51}}, "selectionRange": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 18}}, "detail": "mutation_data_file = data_file + 'WES_variants.csv'", "children": []}, {"name": "drug_target_file", "kind": 13, "range": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 42}}, "selectionRange": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 16}}, "detail": "drug_target_file ='/data/drug_targets.tsv'", "children": []}, {"name": "feature_folder", "kind": 13, "range": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 27}}, "selectionRange": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 14}}, "detail": "feature_folder = 'feature/'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 37}}, "selectionRange": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 46}}, "selectionRange": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 58}}, "selectionRange": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 6}}, "detail": "exp_df = pd.read_csv(exp_data_file, sep='\\t', index_col=0)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 21}}, "selectionRange": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 6}}, "detail": "exp_df = exp_df.T[1:]", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 56}}, "selectionRange": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 6}}, "detail": "exp_df = exp_df.rename(columns={np.nan: 'NO_GENE_NAME'})", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 43}}, "selectionRange": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 6}}, "detail": "exp_df = exp_df.drop('NO_GENE_NAME',axis=1)", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 138, "character": 0}, "end": {"line": 140, "character": 26}}, "selectionRange": {"start": {"line": 138, "character": 4}, "end": {"line": 138, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 142, "character": 0}, "end": {"line": 142, "character": 44}}, "selectionRange": {"start": {"line": 142, "character": 7}, "end": {"line": 142, "character": 12}}, "detail": "exp_df.index = exp_df.index.map(stripNumber)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 40}}, "selectionRange": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 6}}, "detail": "exp_df = exp_df.groupby(level=0).first()", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 39}}, "selectionRange": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 6}}, "detail": "exp_df = exp_df[selected_exp_gene_list]", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 36}}, "selectionRange": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 48}}, "selectionRange": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 78}}, "selectionRange": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 11}}, "detail": "PDTC_exp_df = pd.read_csv(PDTC_exp_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 31}}, "selectionRange": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df.T[1:]", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 160, "character": 0}, "end": {"line": 162, "character": 26}}, "selectionRange": {"start": {"line": 160, "character": 4}, "end": {"line": 160, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 49}}, "selectionRange": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df[selected_exp_gene_list]", "children": []}, {"name": "PDTC_exp_gene_list", "kind": 13, "range": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 46}}, "selectionRange": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 18}}, "detail": "PDTC_exp_gene_list = list(PDTC_exp_df.columns)", "children": []}, {"name": "PDTC_exp_cell_line_list", "kind": 13, "range": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 58}}, "selectionRange": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 23}}, "detail": "PDTC_exp_cell_line_list = list(PDTC_exp_df.index.unique())", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 40}}, "selectionRange": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 6}}, "detail": "exp_df = pd.concat([exp_df,PDTC_exp_df])", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 36}}, "selectionRange": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 48}}, "selectionRange": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "maf", "kind": 13, "range": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 69}}, "selectionRange": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 3}}, "detail": "maf = pd.read_csv(mutation_data_file, sep=',', index_col=0).fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 75}}, "selectionRange": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 11}}, "detail": "mutation_df = maf.groupby(['COSMIC_ID', 'Gene']).size().unstack().fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 49}}, "selectionRange": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 11}}, "detail": "mutation_df = mutation_df[selected_mut_gene_list]", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 46}}, "selectionRange": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 58}}, "selectionRange": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "PDTC_maf", "kind": 13, "range": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 80}}, "selectionRange": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 8}}, "detail": "PDTC_maf = pd.read_csv(PDTC_mutation_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 61}}, "selectionRange": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_maf.replace(to_replace=\"NO\",value=0.0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 82}}, "selectionRange": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_mutation_df.replace(to_replace=\"chr*\",value=1.0,regex=True)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 47}}, "selectionRange": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df.transpose()", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 59}}, "selectionRange": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df[selected_mut_gene_list]", "children": []}, {"name": "PDTC_mutation_gene_list", "kind": 13, "range": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 56}}, "selectionRange": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 23}}, "detail": "PDTC_mutation_gene_list = list(PDTC_mutation_df.columns)", "children": []}, {"name": "PDTC_mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 68}}, "selectionRange": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 28}}, "detail": "PDTC_mutation_cell_line_list = list(PDTC_mutation_df.index.unique())", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 55}}, "selectionRange": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 11}}, "detail": "mutation_df = pd.concat([mutation_df,PDTC_mutation_df])", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 46}}, "selectionRange": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 58}}, "selectionRange": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 36}}, "selectionRange": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 11}}, "detail": "file_handle = open(drug_target_file)", "children": []}, {"name": "drug_target_map", "kind": 13, "range": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 20}}, "selectionRange": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 15}}, "detail": "drug_target_map = {}", "children": []}, {"name": "drug_target_list", "kind": 13, "range": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 21}}, "selectionRange": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 16}}, "detail": "drug_target_list = []", "children": []}, {"name": "line", "kind": 13, "range": {"start": {"line": 230, "character": 0}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 230, "character": 4}, "end": {"line": 230, "character": 8}}, "detail": "for line in file_handle: new_line = line.rstrip().split(\"\\t\") drug = new_line[0] target_list=new_line[1].split(',') if drug != \"Drug\": target_list_str = \"\" for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\" drug = drug.strip() drug_target_map[drug] = [] if ',' not in target_list_str: drug_target_map[drug].append(target_list_str.strip()) drug_target_list.append(target_list_str.strip()) else: target_list = target_list_str.split(',') for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "new_line", "kind": 13, "range": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 40}}, "selectionRange": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 12}}, "detail": "new_line = line.rstrip().split(\"\\t\")", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 22}}, "selectionRange": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 8}}, "detail": "drug = new_line[0]", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 38}}, "selectionRange": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 15}}, "detail": "target_list=new_line[1].split(',')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 28}}, "selectionRange": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 23}}, "detail": "target_list_str = \"\"", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 237, "character": 8}, "end": {"line": 242, "character": 0}}, "selectionRange": {"start": {"line": 237, "character": 12}, "end": {"line": 237, "character": 13}}, "detail": "for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 65}}, "selectionRange": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 71}}, "selectionRange": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 27}}, "selectionRange": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 12}}, "detail": "drug = drug.strip()", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 52}}, "selectionRange": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 23}}, "detail": "target_list = target_list_str.split(',')", "children": []}, {"name": "target", "kind": 13, "range": {"start": {"line": 250, "character": 12}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 250, "character": 16}, "end": {"line": 250, "character": 22}}, "detail": "for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "drugs_legend", "kind": 13, "range": {"start": {"line": 261, "character": 0}, "end": {"line": 261, "character": 85}}, "selectionRange": {"start": {"line": 261, "character": 0}, "end": {"line": 261, "character": 12}}, "detail": "drugs_legend = pd.read_csv('/data/GDSC/Screened_Compounds.csv', sep=',', index_col=0)", "children": []}, {"name": "drug2id_mapping", "kind": 13, "range": {"start": {"line": 263, "character": 0}, "end": {"line": 263, "character": 20}}, "selectionRange": {"start": {"line": 263, "character": 0}, "end": {"line": 263, "character": 15}}, "detail": "drug2id_mapping = {}", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 265, "character": 0}, "end": {"line": 268, "character": 0}}, "selectionRange": {"start": {"line": 265, "character": 4}, "end": {"line": 265, "character": 9}}, "detail": "for index in list(drugs_legend.index) : drug_name = drugs_legend.loc[index,'Drug Name'] drug2id_mapping[ drug_name ] = index", "children": []}, {"name": "drug_name", "kind": 13, "range": {"start": {"line": 266, "character": 4}, "end": {"line": 266, "character": 51}}, "selectionRange": {"start": {"line": 266, "character": 4}, "end": {"line": 266, "character": 13}}, "detail": "drug_name = drugs_legend.loc[index,'Drug Name']", "children": []}, {"name": "valid_gene_list", "kind": 13, "range": {"start": {"line": 273, "character": 0}, "end": {"line": 273, "character": 92}}, "selectionRange": {"start": {"line": 273, "character": 0}, "end": {"line": 273, "character": 15}}, "detail": "valid_gene_list = list(set(drug_target_list) | set(exp_gene_list) | set(mutation_gene_list))", "children": []}, {"name": "network_list", "kind": 13, "range": {"start": {"line": 279, "character": 0}, "end": {"line": 279, "character": 82}}, "selectionRange": {"start": {"line": 279, "character": 0}, "end": {"line": 279, "character": 12}}, "detail": "network_list = [new_network_file+inbiomap_file, new_network_file+pathwaycomm_file]", "children": []}, {"name": "gene_neighbor_map", "kind": 13, "range": {"start": {"line": 280, "character": 0}, "end": {"line": 280, "character": 64}}, "selectionRange": {"start": {"line": 280, "character": 0}, "end": {"line": 280, "character": 17}}, "detail": "gene_neighbor_map = load_network(network_list, valid_gene_list)", "children": []}, {"name": "gene_name_df", "kind": 13, "range": {"start": {"line": 286, "character": 0}, "end": {"line": 286, "character": 89}}, "selectionRange": {"start": {"line": 286, "character": 0}, "end": {"line": 286, "character": 12}}, "detail": "gene_name_df = pd.read_table('/data/HUGO_protein-coding_gene.tsv',index_col=25, sep='\\t')", "children": []}, {"name": "gene_name_map", "kind": 13, "range": {"start": {"line": 292, "character": 0}, "end": {"line": 292, "character": 18}}, "selectionRange": {"start": {"line": 292, "character": 0}, "end": {"line": 292, "character": 13}}, "detail": "gene_name_map = {}", "children": []}, {"name": "uniprot_gene", "kind": 13, "range": {"start": {"line": 294, "character": 0}, "end": {"line": 303, "character": 0}}, "selectionRange": {"start": {"line": 294, "character": 4}, "end": {"line": 294, "character": 16}}, "detail": "for uniprot_gene in gene_name_df.index: if isinstance(uniprot_gene, type('aaa')) == False: continue if isinstance(gene_name_df.loc[uniprot_gene, 'symbol'], type('aaa')) == False: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol'][0] else: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 308, "character": 0}, "end": {"line": 308, "character": 76}}, "selectionRange": {"start": {"line": 308, "character": 0}, "end": {"line": 308, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "uniprot_gene_set", "kind": 13, "range": {"start": {"line": 310, "character": 0}, "end": {"line": 310, "character": 24}}, "selectionRange": {"start": {"line": 310, "character": 0}, "end": {"line": 310, "character": 16}}, "detail": "uniprot_gene_set = set()", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 312, "character": 0}, "end": {"line": 321, "character": 0}}, "selectionRange": {"start": {"line": 312, "character": 4}, "end": {"line": 312, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 317, "character": 4}, "end": {"line": 317, "character": 74}}, "selectionRange": {"start": {"line": 317, "character": 4}, "end": {"line": 317, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 319, "character": 4}, "end": {"line": 321, "character": 0}}, "selectionRange": {"start": {"line": 319, "character": 8}, "end": {"line": 319, "character": 12}}, "detail": "for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "query_gene_set", "kind": 13, "range": {"start": {"line": 324, "character": 0}, "end": {"line": 324, "character": 19}}, "selectionRange": {"start": {"line": 324, "character": 0}, "end": {"line": 324, "character": 14}}, "detail": "query_gene_set = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 326, "character": 0}, "end": {"line": 329, "character": 0}}, "selectionRange": {"start": {"line": 326, "character": 4}, "end": {"line": 326, "character": 8}}, "detail": "for gene in uniprot_gene_set: if gene not in gene_name_map: query_gene_set.append(gene)", "children": []}, {"name": "query_gene_list", "kind": 13, "range": {"start": {"line": 332, "character": 0}, "end": {"line": 332, "character": 38}}, "selectionRange": {"start": {"line": 332, "character": 0}, "end": {"line": 332, "character": 15}}, "detail": "query_gene_list = list(query_gene_set)", "children": []}, {"name": "mg", "kind": 13, "range": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 24}}, "selectionRange": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 2}}, "detail": "mg = mygene.MyGeneInfo()", "children": []}, {"name": "out", "kind": 13, "range": {"start": {"line": 335, "character": 0}, "end": {"line": 335, "character": 87}}, "selectionRange": {"start": {"line": 335, "character": 0}, "end": {"line": 335, "character": 3}}, "detail": "out = mg.querymany(query_gene_list, scopes='uniprot', fields='symbol', species='human')", "children": []}, {"name": "not_found_gene_list", "kind": 13, "range": {"start": {"line": 337, "character": 0}, "end": {"line": 337, "character": 24}}, "selectionRange": {"start": {"line": 337, "character": 0}, "end": {"line": 337, "character": 19}}, "detail": "not_found_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 339, "character": 0}, "end": {"line": 344, "character": 0}}, "selectionRange": {"start": {"line": 339, "character": 4}, "end": {"line": 339, "character": 5}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 339, "character": 0}, "end": {"line": 344, "character": 0}}, "selectionRange": {"start": {"line": 339, "character": 7}, "end": {"line": 339, "character": 11}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 351, "character": 0}, "end": {"line": 351, "character": 76}}, "selectionRange": {"start": {"line": 351, "character": 0}, "end": {"line": 351, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 353, "character": 0}, "end": {"line": 375, "character": 0}}, "selectionRange": {"start": {"line": 353, "character": 4}, "end": {"line": 353, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') complex_symbol_list = [] for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] ) for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 358, "character": 4}, "end": {"line": 358, "character": 74}}, "selectionRange": {"start": {"line": 358, "character": 4}, "end": {"line": 358, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "complex_symbol_list", "kind": 13, "range": {"start": {"line": 360, "character": 4}, "end": {"line": 360, "character": 28}}, "selectionRange": {"start": {"line": 360, "character": 4}, "end": {"line": 360, "character": 23}}, "detail": "complex_symbol_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 362, "character": 4}, "end": {"line": 365, "character": 0}}, "selectionRange": {"start": {"line": 362, "character": 8}, "end": {"line": 362, "character": 12}}, "detail": "for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] )", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 366, "character": 4}, "end": {"line": 375, "character": 0}}, "selectionRange": {"start": {"line": 366, "character": 8}, "end": {"line": 366, "character": 13}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 366, "character": 4}, "end": {"line": 375, "character": 0}}, "selectionRange": {"start": {"line": 366, "character": 15}, "end": {"line": 366, "character": 20}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene_exp_neighbor_map", "kind": 13, "range": {"start": {"line": 380, "character": 0}, "end": {"line": 380, "character": 26}}, "selectionRange": {"start": {"line": 380, "character": 0}, "end": {"line": 380, "character": 21}}, "detail": "gene_exp_neighbor_map = {}", "children": []}, {"name": "exp_matrix", "kind": 13, "range": {"start": {"line": 381, "character": 0}, "end": {"line": 381, "character": 26}}, "selectionRange": {"start": {"line": 381, "character": 0}, "end": {"line": 381, "character": 10}}, "detail": "exp_matrix = exp_df.values", "children": []}, {"name": "P", "kind": 13, "range": {"start": {"line": 383, "character": 0}, "end": {"line": 383, "character": 79}}, "selectionRange": {"start": {"line": 383, "character": 0}, "end": {"line": 383, "character": 1}}, "detail": "P = 1 - cdist(np.transpose(exp_matrix), np.transpose(exp_matrix),'correlation')", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 385, "character": 0}, "end": {"line": 399, "character": 0}}, "selectionRange": {"start": {"line": 385, "character": 4}, "end": {"line": 385, "character": 5}}, "detail": "for i in range(len(exp_gene_list)): gene1 = exp_gene_list[i] gene_exp_neighbor_map[gene1] = set() for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2) if gene1 not in gene_exp_neighbor_map[gene1]: print (gene1, 'not in itself?', P[i,i])", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 387, "character": 4}, "end": {"line": 387, "character": 28}}, "selectionRange": {"start": {"line": 387, "character": 4}, "end": {"line": 387, "character": 9}}, "detail": "gene1 = exp_gene_list[i]", "children": []}, {"name": "j", "kind": 13, "range": {"start": {"line": 390, "character": 4}, "end": {"line": 396, "character": 0}}, "selectionRange": {"start": {"line": 390, "character": 8}, "end": {"line": 390, "character": 9}}, "detail": "for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 392, "character": 8}, "end": {"line": 392, "character": 32}}, "selectionRange": {"start": {"line": 392, "character": 8}, "end": {"line": 392, "character": 13}}, "detail": "gene2 = exp_gene_list[j]", "children": []}, {"name": "drug_feature_list", "kind": 13, "range": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 22}}, "selectionRange": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 17}}, "detail": "drug_feature_list = []", "children": []}, {"name": "drug_neighbor_map", "kind": 13, "range": {"start": {"line": 408, "character": 0}, "end": {"line": 408, "character": 22}}, "selectionRange": {"start": {"line": 408, "character": 0}, "end": {"line": 408, "character": 17}}, "detail": "drug_neighbor_map = {}", "children": []}, {"name": "selected_drug_list", "kind": 13, "range": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 23}}, "selectionRange": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 18}}, "detail": "selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 411, "character": 0}, "end": {"line": 428, "character": 0}}, "selectionRange": {"start": {"line": 411, "character": 4}, "end": {"line": 411, "character": 8}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 411, "character": 0}, "end": {"line": 428, "character": 0}}, "selectionRange": {"start": {"line": 411, "character": 10}, "end": {"line": 411, "character": 21}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 414, "character": 8}, "end": {"line": 424, "character": 0}}, "selectionRange": {"start": {"line": 414, "character": 12}, "end": {"line": 414, "character": 16}}, "detail": "for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene]", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 442, "character": 0}, "end": {"line": 442, "character": 52}}, "selectionRange": {"start": {"line": 442, "character": 0}, "end": {"line": 442, "character": 5}}, "detail": "drugs = pd.read_csv(drug_cell_line_file,index_col=2)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 443, "character": 0}, "end": {"line": 443, "character": 93}}, "selectionRange": {"start": {"line": 443, "character": 0}, "end": {"line": 443, "character": 5}}, "detail": "drugs = drugs.drop([\"DATASET_VERSION\",\"IC50_RESULTS_ID\",\"MAX_CONC_MICROMOLAR\",\"RMSE\"],axis=1)", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 444, "character": 0}, "end": {"line": 444, "character": 49}}, "selectionRange": {"start": {"line": 444, "character": 0}, "end": {"line": 444, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 446, "character": 0}, "end": {"line": 446, "character": 28}}, "selectionRange": {"start": {"line": 446, "character": 0}, "end": {"line": 446, "character": 9}}, "detail": "drug_list = drugs[\"DRUG_ID\"]", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 447, "character": 0}, "end": {"line": 447, "character": 16}}, "selectionRange": {"start": {"line": 447, "character": 0}, "end": {"line": 447, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 457, "character": 0}, "end": {"line": 457, "character": 71}}, "selectionRange": {"start": {"line": 457, "character": 0}, "end": {"line": 457, "character": 10}}, "detail": "PDTC_drugs = pd.read_csv(PDTC_drug_cell_line_file,sep='\\t',index_col=0)", "children": []}, {"name": "PDTC_drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 458, "character": 0}, "end": {"line": 458, "character": 59}}, "selectionRange": {"start": {"line": 458, "character": 0}, "end": {"line": 458, "character": 25}}, "detail": "PDTC_drugs_cell_line_list = list(PDTC_drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 460, "character": 0}, "end": {"line": 460, "character": 39}}, "selectionRange": {"start": {"line": 460, "character": 0}, "end": {"line": 460, "character": 9}}, "detail": "drug_list = PDTC_drugs[\"Drug\"].tolist()", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 461, "character": 0}, "end": {"line": 461, "character": 16}}, "selectionRange": {"start": {"line": 461, "character": 0}, "end": {"line": 461, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 462, "character": 0}, "end": {"line": 467, "character": 0}}, "selectionRange": {"start": {"line": 462, "character": 4}, "end": {"line": 462, "character": 5}}, "detail": "for i in drug_list: if i in drug2id_mapping.keys(): new_drug_id.append(drug2id_mapping[i]) else: new_drug_id.append(0)", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 84}}, "selectionRange": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 10}}, "detail": "PDTC_drugs = PDTC_drugs.drop([\"Drug\",\"iC50\",\"D1_CONC\",\"D5_CONC\",\"perc.iC50\"],axis=1)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 477, "character": 0}, "end": {"line": 477, "character": 37}}, "selectionRange": {"start": {"line": 477, "character": 0}, "end": {"line": 477, "character": 5}}, "detail": "drugs = pd.concat([drugs,PDTC_drugs])", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 49}}, "selectionRange": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "cell_line_list", "kind": 13, "range": {"start": {"line": 490, "character": 0}, "end": {"line": 490, "character": 102}}, "selectionRange": {"start": {"line": 490, "character": 0}, "end": {"line": 490, "character": 14}}, "detail": "cell_line_list = list(set(drugs_cell_line_list)&set(exp_cell_line_list)&set(mutation_cell_line_list) )", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 497, "character": 0}, "end": {"line": 497, "character": 66}}, "selectionRange": {"start": {"line": 497, "character": 0}, "end": {"line": 497, "character": 16}}, "detail": "cell_line_legend = pd.read_csv(cell_line_detail_file, index_col=1)", "children": []}, {"name": "PDTC_cell_line", "kind": 13, "range": {"start": {"line": 498, "character": 0}, "end": {"line": 498, "character": 206}}, "selectionRange": {"start": {"line": 498, "character": 0}, "end": {"line": 498, "character": 14}}, "detail": "PDTC_cell_line = pd.DataFrame({'Line': [\"BRCA\"]*len(PDTC_exp_cell_line_list), 'Site':[\"PDTC\"]*len(PDTC_exp_cell_line_list),\"Histology\":[\"breast\"]*len(PDTC_exp_cell_line_list)},index=PDTC_exp_cell_line_list)", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 499, "character": 0}, "end": {"line": 499, "character": 63}}, "selectionRange": {"start": {"line": 499, "character": 0}, "end": {"line": 499, "character": 16}}, "detail": "cell_line_legend = pd.concat([cell_line_legend,PDTC_cell_line])", "children": []}, {"name": "tissue_map", "kind": 13, "range": {"start": {"line": 502, "character": 0}, "end": {"line": 502, "character": 15}}, "selectionRange": {"start": {"line": 502, "character": 0}, "end": {"line": 502, "character": 10}}, "detail": "tissue_map = {}", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 504, "character": 0}, "end": {"line": 512, "character": 0}}, "selectionRange": {"start": {"line": 504, "character": 4}, "end": {"line": 504, "character": 13}}, "detail": "for cell_line in cell_line_list: tissue = cell_line_legend.loc[cell_line,'Site'] if tissue not in tissue_map: tissue_map[tissue] = [] tissue_map[tissue].append(cell_line)", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 506, "character": 4}, "end": {"line": 506, "character": 51}}, "selectionRange": {"start": {"line": 506, "character": 4}, "end": {"line": 506, "character": 10}}, "detail": "tissue = cell_line_legend.loc[cell_line,'Site']", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 513, "character": 0}, "end": {"line": 513, "character": 23}}, "selectionRange": {"start": {"line": 513, "character": 0}, "end": {"line": 513, "character": 19}}, "detail": "large_tissue_number = 0", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 514, "character": 0}, "end": {"line": 520, "character": 0}}, "selectionRange": {"start": {"line": 514, "character": 4}, "end": {"line": 514, "character": 10}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 514, "character": 0}, "end": {"line": 520, "character": 0}}, "selectionRange": {"start": {"line": 514, "character": 12}, "end": {"line": 514, "character": 21}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 517, "character": 8}, "end": {"line": 517, "character": 32}}, "selectionRange": {"start": {"line": 517, "character": 8}, "end": {"line": 517, "character": 27}}, "detail": "large_tissue_number += 1", "children": []}, {"name": "new_exp_gene_list", "kind": 13, "range": {"start": {"line": 540, "character": 0}, "end": {"line": 540, "character": 22}}, "selectionRange": {"start": {"line": 540, "character": 0}, "end": {"line": 540, "character": 17}}, "detail": "new_exp_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 541, "character": 0}, "end": {"line": 544, "character": 0}}, "selectionRange": {"start": {"line": 541, "character": 4}, "end": {"line": 541, "character": 5}}, "detail": "for i in exp_gene_list: if i in valid_gene_list: new_exp_gene_list.append(i)", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 549, "character": 0}, "end": {"line": 549, "character": 41}}, "selectionRange": {"start": {"line": 549, "character": 0}, "end": {"line": 549, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 550, "character": 0}, "end": {"line": 550, "character": 38}}, "selectionRange": {"start": {"line": 550, "character": 0}, "end": {"line": 550, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 551, "character": 0}, "end": {"line": 551, "character": 72}}, "selectionRange": {"start": {"line": 551, "character": 0}, "end": {"line": 551, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 553, "character": 0}, "end": {"line": 553, "character": 43}}, "selectionRange": {"start": {"line": 553, "character": 0}, "end": {"line": 553, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 554, "character": 0}, "end": {"line": 554, "character": 68}}, "selectionRange": {"start": {"line": 554, "character": 0}, "end": {"line": 554, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 561, "character": 0}, "end": {"line": 561, "character": 58}}, "selectionRange": {"start": {"line": 561, "character": 0}, "end": {"line": 561, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 562, "character": 0}, "end": {"line": 562, "character": 68}}, "selectionRange": {"start": {"line": 562, "character": 0}, "end": {"line": 562, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "new_data_file", "kind": 13, "range": {"start": {"line": 571, "character": 0}, "end": {"line": 571, "character": 18}}, "selectionRange": {"start": {"line": 571, "character": 0}, "end": {"line": 571, "character": 13}}, "detail": "new_data_file = ''", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 41}}, "selectionRange": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 38}}, "selectionRange": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 72}}, "selectionRange": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 43}}, "selectionRange": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 68}}, "selectionRange": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 58}}, "selectionRange": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 68}}, "selectionRange": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "rename_selected_drug_list", "kind": 13, "range": {"start": {"line": 592, "character": 0}, "end": {"line": 592, "character": 30}}, "selectionRange": {"start": {"line": 592, "character": 0}, "end": {"line": 592, "character": 25}}, "detail": "rename_selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 594, "character": 0}, "end": {"line": 664, "character": 0}}, "selectionRange": {"start": {"line": 594, "character": 4}, "end": {"line": 594, "character": 8}}, "detail": "for drug in selected_drug_list: print(drug) if drug not in drug2id_mapping: print('drug name wrong', drug) else: cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]] feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) ) feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) ) print(len(feature_exp_gene_list) + len(feature_mut_gene_list)) if len(feature_exp_gene_list) + len(feature_mut_gene_list) == 0: continue feature_description = [] drug_tissue_map = {} drug = drug.replace(' ','_') rename_selected_drug_list.append(drug) if drug == 'Nutlin-3a_(-)': drug = 'Nutlin-3a' drug_folder = '/data/merged/drug_feature/' + drug + '/' if not os.path.exists(drug_folder): os.makedirs(drug_folder) for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description)) file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\") pickle.dump(drug_tissue_map,file_handle) file_handle.close()", "children": []}, {"name": "cell_line_drug_matrix", "kind": 13, "range": {"start": {"line": 602, "character": 8}, "end": {"line": 602, "character": 84}}, "selectionRange": {"start": {"line": 602, "character": 8}, "end": {"line": 602, "character": 29}}, "detail": "cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]]", "children": []}, {"name": "feature_exp_gene_list", "kind": 13, "range": {"start": {"line": 607, "character": 8}, "end": {"line": 607, "character": 98}}, "selectionRange": {"start": {"line": 607, "character": 8}, "end": {"line": 607, "character": 29}}, "detail": "feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) )", "children": []}, {"name": "feature_mut_gene_list", "kind": 13, "range": {"start": {"line": 608, "character": 8}, "end": {"line": 608, "character": 98}}, "selectionRange": {"start": {"line": 608, "character": 8}, "end": {"line": 608, "character": 29}}, "detail": "feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) )", "children": []}, {"name": "feature_description", "kind": 13, "range": {"start": {"line": 612, "character": 8}, "end": {"line": 612, "character": 32}}, "selectionRange": {"start": {"line": 612, "character": 8}, "end": {"line": 612, "character": 27}}, "detail": "feature_description = []", "children": []}, {"name": "drug_tissue_map", "kind": 13, "range": {"start": {"line": 614, "character": 8}, "end": {"line": 614, "character": 28}}, "selectionRange": {"start": {"line": 614, "character": 8}, "end": {"line": 614, "character": 23}}, "detail": "drug_tissue_map = {}", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 616, "character": 8}, "end": {"line": 616, "character": 36}}, "selectionRange": {"start": {"line": 616, "character": 8}, "end": {"line": 616, "character": 12}}, "detail": "drug = drug.replace(' ','_')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 622, "character": 12}, "end": {"line": 622, "character": 30}}, "selectionRange": {"start": {"line": 622, "character": 12}, "end": {"line": 622, "character": 16}}, "detail": "drug = 'Nutlin-3a'", "children": []}, {"name": "drug_folder", "kind": 13, "range": {"start": {"line": 624, "character": 8}, "end": {"line": 624, "character": 63}}, "selectionRange": {"start": {"line": 624, "character": 8}, "end": {"line": 624, "character": 19}}, "detail": "drug_folder = '/data/merged/drug_feature/' + drug + '/'", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 630, "character": 8}, "end": {"line": 660, "character": 0}}, "selectionRange": {"start": {"line": 630, "character": 12}, "end": {"line": 630, "character": 18}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "tissue_cell_line_list", "kind": 13, "range": {"start": {"line": 630, "character": 8}, "end": {"line": 660, "character": 0}}, "selectionRange": {"start": {"line": 630, "character": 20}, "end": {"line": 630, "character": 41}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 633, "character": 12}, "end": {"line": 633, "character": 103}}, "selectionRange": {"start": {"line": 633, "character": 12}, "end": {"line": 633, "character": 35}}, "detail": "drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list )", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 634, "character": 12}, "end": {"line": 634, "character": 67}}, "selectionRange": {"start": {"line": 634, "character": 12}, "end": {"line": 634, "character": 35}}, "detail": "drug_specific_cell_line = list(drug_specific_cell_line)", "children": []}, {"name": "feature_list", "kind": 13, "range": {"start": {"line": 637, "character": 12}, "end": {"line": 637, "character": 29}}, "selectionRange": {"start": {"line": 637, "character": 12}, "end": {"line": 637, "character": 24}}, "detail": "feature_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 641, "character": 16}, "end": {"line": 643, "character": 0}}, "selectionRange": {"start": {"line": 641, "character": 20}, "end": {"line": 641, "character": 24}}, "detail": "for gene in feature_exp_gene_list: feature_description.append(gene+'_expression')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 646, "character": 16}, "end": {"line": 648, "character": 0}}, "selectionRange": {"start": {"line": 646, "character": 20}, "end": {"line": 646, "character": 24}}, "detail": "for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation')", "children": []}, {"name": "feature", "kind": 13, "range": {"start": {"line": 649, "character": 12}, "end": {"line": 649, "character": 58}}, "selectionRange": {"start": {"line": 649, "character": 12}, "end": {"line": 649, "character": 19}}, "detail": "feature = np.concatenate(feature_list, axis=1)", "children": []}, {"name": "label", "kind": 13, "range": {"start": {"line": 651, "character": 12}, "end": {"line": 651, "character": 88}}, "selectionRange": {"start": {"line": 651, "character": 12}, "end": {"line": 651, "character": 17}}, "detail": "label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 661, "character": 8}, "end": {"line": 661, "character": 84}}, "selectionRange": {"start": {"line": 661, "character": 8}, "end": {"line": 661, "character": 19}}, "detail": "file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\")", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 665, "character": 0}, "end": {"line": 665, "character": 52}}, "selectionRange": {"start": {"line": 665, "character": 0}, "end": {"line": 665, "character": 11}}, "detail": "file_handle = open('rename_selected_drug_list', 'w')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 666, "character": 0}, "end": {"line": 668, "character": 0}}, "selectionRange": {"start": {"line": 666, "character": 4}, "end": {"line": 666, "character": 8}}, "detail": "for drug in rename_selected_drug_list: file_handle.writelines(drug+ '\\n')", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 686, "character": 0}, "end": {"line": 686, "character": 13}}, "selectionRange": {"start": {"line": 686, "character": 7}, "end": {"line": 686, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cell_line_loc", "kind": 13, "range": {"start": {"line": 692, "character": 0}, "end": {"line": 692, "character": 84}}, "selectionRange": {"start": {"line": 692, "character": 0}, "end": {"line": 692, "character": 13}}, "detail": "cell_line_loc = '/cellar/users/samsonfong/Projects/tcrp-v2/from-ma/cell_line_lists/'", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 698, "character": 0}, "end": {"line": 700, "character": 0}}, "selectionRange": {"start": {"line": 698, "character": 53}, "end": {"line": 698, "character": 54}}, "detail": "with open('/data/drug_feature/KU-55933/KU', 'rb') as f: tmap= pickle.load(f)", "children": []}, {"name": "tmap", "kind": 13, "range": {"start": {"line": 699, "character": 4}, "end": {"line": 699, "character": 24}}, "selectionRange": {"start": {"line": 699, "character": 4}, "end": {"line": 699, "character": 8}}, "detail": "tmap= pickle.load(f)", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 717, "character": 0}, "end": {"line": 717, "character": 68}}, "selectionRange": {"start": {"line": 717, "character": 0}, "end": {"line": 717, "character": 1}}, "detail": "f = np.load('/data/drug_feature/KU-55933/lung_KU-55933_feature.npy')", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 114, "result": null}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///root/capsule/code/process_merged.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 115, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///root/capsule/code/process_merged.py", "version": 23}, "edits": [{"range": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 0}}, "newText": "jls_extract_var = '/data/drug_target_list.tsv'\n"}, {"range": {"start": {"line": 101, "character": 23}, "end": {"line": 101, "character": 49}}, "newText": "jls_extract_"}, {"range": {"start": {"line": 101, "character": 50}, "end": {"line": 101, "character": 51}}, "newText": "ar"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///root/capsule/code/process_merged.py", "version": 23}, "edits": [{"range": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 0}}, "newText": "def jls_extract_def():\n    return '/data/drug_target_list.tsv'\n\n\n"}, {"range": {"start": {"line": 101, "character": 23}, "end": {"line": 101, "character": 51}}, "newText": "jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///root/capsule/code/process_merged.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 116, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///root/capsule/code/process_merged.py", "version": 6}, "edits": [{"range": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 0}}, "newText": "jls_extract_var = '/data/drug_target_list.tsv'\n"}, {"range": {"start": {"line": 101, "character": 23}, "end": {"line": 101, "character": 49}}, "newText": "jls_extract_"}, {"range": {"start": {"line": 101, "character": 50}, "end": {"line": 101, "character": 51}}, "newText": "ar"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///root/capsule/code/process_merged.py", "version": 6}, "edits": [{"range": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 0}}, "newText": "def jls_extract_def():\n    return '/data/drug_target_list.tsv'\n\n\n"}, {"range": {"start": {"line": 101, "character": 23}, "end": {"line": 101, "character": 51}}, "newText": "jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///root/capsule/code/process_merged.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///root/capsule/code/process_merged.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 117, "result": [{"title": "Extract expression into variable 'jls_extract_var'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///root/capsule/code/process_merged.py", "version": 25}, "edits": [{"range": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 0}}, "newText": "jls_extract_var = '/data/drug_target_list.csv'\n"}, {"range": {"start": {"line": 101, "character": 23}, "end": {"line": 101, "character": 49}}, "newText": "jls_extract_"}, {"range": {"start": {"line": 101, "character": 50}, "end": {"line": 101, "character": 51}}, "newText": "ar"}]}]}}, {"title": "Extract expression into function 'jls_extract_def'", "kind": "refactor.extract", "edit": {"documentChanges": [{"textDocument": {"uri": "file:///root/capsule/code/process_merged.py", "version": 25}, "edits": [{"range": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 0}}, "newText": "def jls_extract_def():\n    return '/data/drug_target_list.csv'\n\n\n"}, {"range": {"start": {"line": 101, "character": 23}, "end": {"line": 101, "character": 51}}, "newText": "jls_extract_def()"}]}]}}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 118, "result": [{"name": "matplotlib", "kind": 2, "range": {"start": {"line": 6, "character": 0}, "end": {"line": 6, "character": 17}}, "selectionRange": {"start": {"line": 6, "character": 7}, "end": {"line": 6, "character": 17}}, "detail": "module matplotlib", "children": []}, {"name": "os", "kind": 2, "range": {"start": {"line": 10, "character": 0}, "end": {"line": 10, "character": 9}}, "selectionRange": {"start": {"line": 10, "character": 7}, "end": {"line": 10, "character": 9}}, "detail": "module os", "children": []}, {"name": "pd", "kind": 2, "range": {"start": {"line": 11, "character": 0}, "end": {"line": 11, "character": 19}}, "selectionRange": {"start": {"line": 11, "character": 17}, "end": {"line": 11, "character": 19}}, "detail": "module pd", "children": []}, {"name": "np", "kind": 2, "range": {"start": {"line": 12, "character": 0}, "end": {"line": 12, "character": 18}}, "selectionRange": {"start": {"line": 12, "character": 16}, "end": {"line": 12, "character": 18}}, "detail": "module np", "children": []}, {"name": "sys", "kind": 2, "range": {"start": {"line": 13, "character": 0}, "end": {"line": 13, "character": 10}}, "selectionRange": {"start": {"line": 13, "character": 7}, "end": {"line": 13, "character": 10}}, "detail": "module sys", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 14, "character": 0}, "end": {"line": 14, "character": 13}}, "selectionRange": {"start": {"line": 14, "character": 7}, "end": {"line": 14, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cdist", "kind": 12, "range": {"start": {"line": 15, "character": 0}, "end": {"line": 15, "character": 40}}, "selectionRange": {"start": {"line": 15, "character": 35}, "end": {"line": 15, "character": 40}}, "detail": "def cdist", "children": []}, {"name": "math", "kind": 2, "range": {"start": {"line": 16, "character": 0}, "end": {"line": 16, "character": 11}}, "selectionRange": {"start": {"line": 16, "character": 7}, "end": {"line": 16, "character": 11}}, "detail": "module math", "children": []}, {"name": "nx", "kind": 2, "range": {"start": {"line": 17, "character": 0}, "end": {"line": 17, "character": 21}}, "selectionRange": {"start": {"line": 17, "character": 19}, "end": {"line": 17, "character": 21}}, "detail": "module nx", "children": []}, {"name": "nxacc", "kind": 2, "range": {"start": {"line": 18, "character": 0}, "end": {"line": 18, "character": 56}}, "selectionRange": {"start": {"line": 18, "character": 51}, "end": {"line": 18, "character": 56}}, "detail": "module nxacc", "children": []}, {"name": "nxadag", "kind": 2, "range": {"start": {"line": 19, "character": 0}, "end": {"line": 19, "character": 40}}, "selectionRange": {"start": {"line": 19, "character": 34}, "end": {"line": 19, "character": 40}}, "detail": "module nxadag", "children": []}, {"name": "plt", "kind": 2, "range": {"start": {"line": 20, "character": 0}, "end": {"line": 20, "character": 31}}, "selectionRange": {"start": {"line": 20, "character": 28}, "end": {"line": 20, "character": 31}}, "detail": "module plt", "children": []}, {"name": "sns", "kind": 2, "range": {"start": {"line": 21, "character": 0}, "end": {"line": 21, "character": 21}}, "selectionRange": {"start": {"line": 21, "character": 18}, "end": {"line": 21, "character": 21}}, "detail": "module sns", "children": []}, {"name": "itertools", "kind": 2, "range": {"start": {"line": 22, "character": 0}, "end": {"line": 22, "character": 16}}, "selectionRange": {"start": {"line": 22, "character": 7}, "end": {"line": 22, "character": 16}}, "detail": "module itertools", "children": []}, {"name": "mygene", "kind": 2, "range": {"start": {"line": 23, "character": 0}, "end": {"line": 23, "character": 13}}, "selectionRange": {"start": {"line": 23, "character": 7}, "end": {"line": 23, "character": 13}}, "detail": "module mygene", "children": []}, {"name": "re", "kind": 2, "range": {"start": {"line": 24, "character": 0}, "end": {"line": 24, "character": 9}}, "selectionRange": {"start": {"line": 24, "character": 7}, "end": {"line": 24, "character": 9}}, "detail": "module re", "children": []}, {"name": "selected_exp_gene_list", "kind": 13, "range": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 95}}, "selectionRange": {"start": {"line": 30, "character": 0}, "end": {"line": 30, "character": 22}}, "detail": "selected_exp_gene_list = pd.read_csv(\"/data/common_exp_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "selected_mut_gene_list", "kind": 13, "range": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 95}}, "selectionRange": {"start": {"line": 31, "character": 0}, "end": {"line": 31, "character": 22}}, "detail": "selected_mut_gene_list = pd.read_csv(\"/data/common_mut_features.tsv\",sep=\"\\t\")[\"Gene\"].tolist()", "children": []}, {"name": "load_network", "kind": 12, "range": {"start": {"line": 37, "character": 0}, "end": {"line": 65, "character": 28}}, "selectionRange": {"start": {"line": 37, "character": 4}, "end": {"line": 37, "character": 16}}, "detail": "def load_network", "children": []}, {"name": "load_name_space", "kind": 12, "range": {"start": {"line": 67, "character": 0}, "end": {"line": 79, "character": 21}}, "selectionRange": {"start": {"line": 67, "character": 4}, "end": {"line": 67, "character": 19}}, "detail": "def load_name_space", "children": []}, {"name": "list2index", "kind": 12, "range": {"start": {"line": 81, "character": 0}, "end": {"line": 88, "character": 41}}, "selectionRange": {"start": {"line": 81, "character": 4}, "end": {"line": 81, "character": 14}}, "detail": "def list2index", "children": []}, {"name": "PDTC_data_file", "kind": 13, "range": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 30}}, "selectionRange": {"start": {"line": 94, "character": 0}, "end": {"line": 94, "character": 14}}, "detail": "PDTC_data_file = '/data/PTDC/'", "children": []}, {"name": "PDTC_exp_data_file", "kind": 13, "range": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 60}}, "selectionRange": {"start": {"line": 95, "character": 0}, "end": {"line": 95, "character": 18}}, "detail": "PDTC_exp_data_file = PDTC_data_file + 'ExpressionModels.tsv'", "children": []}, {"name": "PDTC_drug_cell_line_file", "kind": 13, "range": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 72}}, "selectionRange": {"start": {"line": 96, "character": 0}, "end": {"line": 96, "character": 24}}, "detail": "PDTC_drug_cell_line_file = PDTC_data_file + 'DrugResponsesAUCModels.tsv'", "children": []}, {"name": "PDTC_mutation_data_file", "kind": 13, "range": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 59}}, "selectionRange": {"start": {"line": 100, "character": 0}, "end": {"line": 100, "character": 23}}, "detail": "PDTC_mutation_data_file = PDTC_data_file + 'SNVsModels.tsv'", "children": []}, {"name": "PDTC_drug_target_file", "kind": 13, "range": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 51}}, "selectionRange": {"start": {"line": 101, "character": 0}, "end": {"line": 101, "character": 21}}, "detail": "PDTC_drug_target_file ='/data/drug_target_list.csv'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 37}}, "selectionRange": {"start": {"line": 103, "character": 0}, "end": {"line": 103, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 46}}, "selectionRange": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "data_file", "kind": 13, "range": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 25}}, "selectionRange": {"start": {"line": 109, "character": 0}, "end": {"line": 109, "character": 9}}, "detail": "data_file = '/data/GDSC/'", "children": []}, {"name": "new_network_file", "kind": 13, "range": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 27}}, "selectionRange": {"start": {"line": 110, "character": 0}, "end": {"line": 110, "character": 16}}, "detail": "new_network_file = '/data/'", "children": []}, {"name": "exp_data_file", "kind": 13, "range": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 61}}, "selectionRange": {"start": {"line": 112, "character": 0}, "end": {"line": 112, "character": 13}}, "detail": "exp_data_file = data_file + 'Cell_line_RMA_proc_basalExp.txt'", "children": []}, {"name": "drug_cell_line_file", "kind": 13, "range": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 64}}, "selectionRange": {"start": {"line": 114, "character": 0}, "end": {"line": 114, "character": 19}}, "detail": "drug_cell_line_file = data_file + 'v17_fitted_dose_response.csv'", "children": []}, {"name": "cell_line_detail_file", "kind": 13, "range": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 60}}, "selectionRange": {"start": {"line": 117, "character": 0}, "end": {"line": 117, "character": 21}}, "detail": "cell_line_detail_file = data_file + 'Cell_Lines_Details.csv'", "children": []}, {"name": "mutation_data_file", "kind": 13, "range": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 51}}, "selectionRange": {"start": {"line": 118, "character": 0}, "end": {"line": 118, "character": 18}}, "detail": "mutation_data_file = data_file + 'WES_variants.csv'", "children": []}, {"name": "drug_target_file", "kind": 13, "range": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 42}}, "selectionRange": {"start": {"line": 119, "character": 0}, "end": {"line": 119, "character": 16}}, "detail": "drug_target_file ='/data/drug_targets.tsv'", "children": []}, {"name": "feature_folder", "kind": 13, "range": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 27}}, "selectionRange": {"start": {"line": 121, "character": 0}, "end": {"line": 121, "character": 14}}, "detail": "feature_folder = 'feature/'", "children": []}, {"name": "inbiomap_file", "kind": 13, "range": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 37}}, "selectionRange": {"start": {"line": 123, "character": 0}, "end": {"line": 123, "character": 13}}, "detail": "inbiomap_file = 'InBioMap_Symbol.sif'", "children": []}, {"name": "pathwaycomm_file", "kind": 13, "range": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 46}}, "selectionRange": {"start": {"line": 124, "character": 0}, "end": {"line": 124, "character": 16}}, "detail": "pathwaycomm_file = 'PathwayCommons_Symbol.sif'", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 58}}, "selectionRange": {"start": {"line": 133, "character": 0}, "end": {"line": 133, "character": 6}}, "detail": "exp_df = pd.read_csv(exp_data_file, sep='\\t', index_col=0)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 21}}, "selectionRange": {"start": {"line": 134, "character": 0}, "end": {"line": 134, "character": 6}}, "detail": "exp_df = exp_df.T[1:]", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 56}}, "selectionRange": {"start": {"line": 135, "character": 0}, "end": {"line": 135, "character": 6}}, "detail": "exp_df = exp_df.rename(columns={np.nan: 'NO_GENE_NAME'})", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 43}}, "selectionRange": {"start": {"line": 136, "character": 0}, "end": {"line": 136, "character": 6}}, "detail": "exp_df = exp_df.drop('NO_GENE_NAME',axis=1)", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 138, "character": 0}, "end": {"line": 140, "character": 26}}, "selectionRange": {"start": {"line": 138, "character": 4}, "end": {"line": 138, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 142, "character": 0}, "end": {"line": 142, "character": 44}}, "selectionRange": {"start": {"line": 142, "character": 7}, "end": {"line": 142, "character": 12}}, "detail": "exp_df.index = exp_df.index.map(stripNumber)", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 40}}, "selectionRange": {"start": {"line": 143, "character": 0}, "end": {"line": 143, "character": 6}}, "detail": "exp_df = exp_df.groupby(level=0).first()", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 39}}, "selectionRange": {"start": {"line": 145, "character": 0}, "end": {"line": 145, "character": 6}}, "detail": "exp_df = exp_df[selected_exp_gene_list]", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 36}}, "selectionRange": {"start": {"line": 146, "character": 0}, "end": {"line": 146, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 48}}, "selectionRange": {"start": {"line": 147, "character": 0}, "end": {"line": 147, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 78}}, "selectionRange": {"start": {"line": 155, "character": 0}, "end": {"line": 155, "character": 11}}, "detail": "PDTC_exp_df = pd.read_csv(PDTC_exp_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 31}}, "selectionRange": {"start": {"line": 156, "character": 0}, "end": {"line": 156, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df.T[1:]", "children": []}, {"name": "stripNumber", "kind": 12, "range": {"start": {"line": 160, "character": 0}, "end": {"line": 162, "character": 26}}, "selectionRange": {"start": {"line": 160, "character": 4}, "end": {"line": 160, "character": 15}}, "detail": "def stripNumber", "children": []}, {"name": "PDTC_exp_df", "kind": 13, "range": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 49}}, "selectionRange": {"start": {"line": 166, "character": 0}, "end": {"line": 166, "character": 11}}, "detail": "PDTC_exp_df = PDTC_exp_df[selected_exp_gene_list]", "children": []}, {"name": "PDTC_exp_gene_list", "kind": 13, "range": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 46}}, "selectionRange": {"start": {"line": 168, "character": 0}, "end": {"line": 168, "character": 18}}, "detail": "PDTC_exp_gene_list = list(PDTC_exp_df.columns)", "children": []}, {"name": "PDTC_exp_cell_line_list", "kind": 13, "range": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 58}}, "selectionRange": {"start": {"line": 169, "character": 0}, "end": {"line": 169, "character": 23}}, "detail": "PDTC_exp_cell_line_list = list(PDTC_exp_df.index.unique())", "children": []}, {"name": "exp_df", "kind": 13, "range": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 40}}, "selectionRange": {"start": {"line": 175, "character": 0}, "end": {"line": 175, "character": 6}}, "detail": "exp_df = pd.concat([exp_df,PDTC_exp_df])", "children": []}, {"name": "exp_gene_list", "kind": 13, "range": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 36}}, "selectionRange": {"start": {"line": 176, "character": 0}, "end": {"line": 176, "character": 13}}, "detail": "exp_gene_list = list(exp_df.columns)", "children": []}, {"name": "exp_cell_line_list", "kind": 13, "range": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 48}}, "selectionRange": {"start": {"line": 177, "character": 0}, "end": {"line": 177, "character": 18}}, "detail": "exp_cell_line_list = list(exp_df.index.unique())", "children": []}, {"name": "maf", "kind": 13, "range": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 69}}, "selectionRange": {"start": {"line": 183, "character": 0}, "end": {"line": 183, "character": 3}}, "detail": "maf = pd.read_csv(mutation_data_file, sep=',', index_col=0).fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 75}}, "selectionRange": {"start": {"line": 184, "character": 0}, "end": {"line": 184, "character": 11}}, "detail": "mutation_df = maf.groupby(['COSMIC_ID', 'Gene']).size().unstack().fillna(0)", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 49}}, "selectionRange": {"start": {"line": 185, "character": 0}, "end": {"line": 185, "character": 11}}, "detail": "mutation_df = mutation_df[selected_mut_gene_list]", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 46}}, "selectionRange": {"start": {"line": 188, "character": 0}, "end": {"line": 188, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 58}}, "selectionRange": {"start": {"line": 189, "character": 0}, "end": {"line": 189, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "PDTC_maf", "kind": 13, "range": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 80}}, "selectionRange": {"start": {"line": 198, "character": 0}, "end": {"line": 198, "character": 8}}, "detail": "PDTC_maf = pd.read_csv(PDTC_mutation_data_file, sep='\\t', index_col=0).fillna(0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 61}}, "selectionRange": {"start": {"line": 199, "character": 0}, "end": {"line": 199, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_maf.replace(to_replace=\"NO\",value=0.0)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 82}}, "selectionRange": {"start": {"line": 200, "character": 0}, "end": {"line": 200, "character": 16}}, "detail": "PDTC_mutation_df= PDTC_mutation_df.replace(to_replace=\"chr*\",value=1.0,regex=True)", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 47}}, "selectionRange": {"start": {"line": 202, "character": 0}, "end": {"line": 202, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df.transpose()", "children": []}, {"name": "PDTC_mutation_df", "kind": 13, "range": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 59}}, "selectionRange": {"start": {"line": 203, "character": 0}, "end": {"line": 203, "character": 16}}, "detail": "PDTC_mutation_df = PDTC_mutation_df[selected_mut_gene_list]", "children": []}, {"name": "PDTC_mutation_gene_list", "kind": 13, "range": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 56}}, "selectionRange": {"start": {"line": 204, "character": 0}, "end": {"line": 204, "character": 23}}, "detail": "PDTC_mutation_gene_list = list(PDTC_mutation_df.columns)", "children": []}, {"name": "PDTC_mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 68}}, "selectionRange": {"start": {"line": 205, "character": 0}, "end": {"line": 205, "character": 28}}, "detail": "PDTC_mutation_cell_line_list = list(PDTC_mutation_df.index.unique())", "children": []}, {"name": "mutation_df", "kind": 13, "range": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 55}}, "selectionRange": {"start": {"line": 212, "character": 0}, "end": {"line": 212, "character": 11}}, "detail": "mutation_df = pd.concat([mutation_df,PDTC_mutation_df])", "children": []}, {"name": "mutation_gene_list", "kind": 13, "range": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 46}}, "selectionRange": {"start": {"line": 213, "character": 0}, "end": {"line": 213, "character": 18}}, "detail": "mutation_gene_list = list(mutation_df.columns)", "children": []}, {"name": "mutation_cell_line_list", "kind": 13, "range": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 58}}, "selectionRange": {"start": {"line": 214, "character": 0}, "end": {"line": 214, "character": 23}}, "detail": "mutation_cell_line_list = list(mutation_df.index.unique())", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 36}}, "selectionRange": {"start": {"line": 226, "character": 0}, "end": {"line": 226, "character": 11}}, "detail": "file_handle = open(drug_target_file)", "children": []}, {"name": "drug_target_map", "kind": 13, "range": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 20}}, "selectionRange": {"start": {"line": 228, "character": 0}, "end": {"line": 228, "character": 15}}, "detail": "drug_target_map = {}", "children": []}, {"name": "drug_target_list", "kind": 13, "range": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 21}}, "selectionRange": {"start": {"line": 229, "character": 0}, "end": {"line": 229, "character": 16}}, "detail": "drug_target_list = []", "children": []}, {"name": "line", "kind": 13, "range": {"start": {"line": 230, "character": 0}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 230, "character": 4}, "end": {"line": 230, "character": 8}}, "detail": "for line in file_handle: new_line = line.rstrip().split(\"\\t\") drug = new_line[0] target_list=new_line[1].split(',') if drug != \"Drug\": target_list_str = \"\" for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\" drug = drug.strip() drug_target_map[drug] = [] if ',' not in target_list_str: drug_target_map[drug].append(target_list_str.strip()) drug_target_list.append(target_list_str.strip()) else: target_list = target_list_str.split(',') for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "new_line", "kind": 13, "range": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 40}}, "selectionRange": {"start": {"line": 232, "character": 4}, "end": {"line": 232, "character": 12}}, "detail": "new_line = line.rstrip().split(\"\\t\")", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 22}}, "selectionRange": {"start": {"line": 233, "character": 4}, "end": {"line": 233, "character": 8}}, "detail": "drug = new_line[0]", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 38}}, "selectionRange": {"start": {"line": 234, "character": 4}, "end": {"line": 234, "character": 15}}, "detail": "target_list=new_line[1].split(',')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 28}}, "selectionRange": {"start": {"line": 236, "character": 8}, "end": {"line": 236, "character": 23}}, "detail": "target_list_str = \"\"", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 237, "character": 8}, "end": {"line": 242, "character": 0}}, "selectionRange": {"start": {"line": 237, "character": 12}, "end": {"line": 237, "character": 13}}, "detail": "for i in range(0,len(target_list)): if i == len(target_list) - 1: target_list_str += target_list[i].replace('\"','') else: target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 65}}, "selectionRange": {"start": {"line": 239, "character": 16}, "end": {"line": 239, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','')", "children": []}, {"name": "target_list_str", "kind": 13, "range": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 71}}, "selectionRange": {"start": {"line": 241, "character": 16}, "end": {"line": 241, "character": 31}}, "detail": "target_list_str += target_list[i].replace('\"','') + \",\"", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 27}}, "selectionRange": {"start": {"line": 242, "character": 8}, "end": {"line": 242, "character": 12}}, "detail": "drug = drug.strip()", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 52}}, "selectionRange": {"start": {"line": 249, "character": 12}, "end": {"line": 249, "character": 23}}, "detail": "target_list = target_list_str.split(',')", "children": []}, {"name": "target", "kind": 13, "range": {"start": {"line": 250, "character": 12}, "end": {"line": 253, "character": 0}}, "selectionRange": {"start": {"line": 250, "character": 16}, "end": {"line": 250, "character": 22}}, "detail": "for target in target_list: drug_target_map[drug].append(target.strip()) drug_target_list.append(target.strip())", "children": []}, {"name": "drugs_legend", "kind": 13, "range": {"start": {"line": 261, "character": 0}, "end": {"line": 261, "character": 85}}, "selectionRange": {"start": {"line": 261, "character": 0}, "end": {"line": 261, "character": 12}}, "detail": "drugs_legend = pd.read_csv('/data/GDSC/Screened_Compounds.csv', sep=',', index_col=0)", "children": []}, {"name": "drug2id_mapping", "kind": 13, "range": {"start": {"line": 263, "character": 0}, "end": {"line": 263, "character": 20}}, "selectionRange": {"start": {"line": 263, "character": 0}, "end": {"line": 263, "character": 15}}, "detail": "drug2id_mapping = {}", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 265, "character": 0}, "end": {"line": 268, "character": 0}}, "selectionRange": {"start": {"line": 265, "character": 4}, "end": {"line": 265, "character": 9}}, "detail": "for index in list(drugs_legend.index) : drug_name = drugs_legend.loc[index,'Drug Name'] drug2id_mapping[ drug_name ] = index", "children": []}, {"name": "drug_name", "kind": 13, "range": {"start": {"line": 266, "character": 4}, "end": {"line": 266, "character": 51}}, "selectionRange": {"start": {"line": 266, "character": 4}, "end": {"line": 266, "character": 13}}, "detail": "drug_name = drugs_legend.loc[index,'Drug Name']", "children": []}, {"name": "valid_gene_list", "kind": 13, "range": {"start": {"line": 273, "character": 0}, "end": {"line": 273, "character": 92}}, "selectionRange": {"start": {"line": 273, "character": 0}, "end": {"line": 273, "character": 15}}, "detail": "valid_gene_list = list(set(drug_target_list) | set(exp_gene_list) | set(mutation_gene_list))", "children": []}, {"name": "network_list", "kind": 13, "range": {"start": {"line": 279, "character": 0}, "end": {"line": 279, "character": 82}}, "selectionRange": {"start": {"line": 279, "character": 0}, "end": {"line": 279, "character": 12}}, "detail": "network_list = [new_network_file+inbiomap_file, new_network_file+pathwaycomm_file]", "children": []}, {"name": "gene_neighbor_map", "kind": 13, "range": {"start": {"line": 280, "character": 0}, "end": {"line": 280, "character": 64}}, "selectionRange": {"start": {"line": 280, "character": 0}, "end": {"line": 280, "character": 17}}, "detail": "gene_neighbor_map = load_network(network_list, valid_gene_list)", "children": []}, {"name": "gene_name_df", "kind": 13, "range": {"start": {"line": 286, "character": 0}, "end": {"line": 286, "character": 89}}, "selectionRange": {"start": {"line": 286, "character": 0}, "end": {"line": 286, "character": 12}}, "detail": "gene_name_df = pd.read_table('/data/HUGO_protein-coding_gene.tsv',index_col=25, sep='\\t')", "children": []}, {"name": "gene_name_map", "kind": 13, "range": {"start": {"line": 292, "character": 0}, "end": {"line": 292, "character": 18}}, "selectionRange": {"start": {"line": 292, "character": 0}, "end": {"line": 292, "character": 13}}, "detail": "gene_name_map = {}", "children": []}, {"name": "uniprot_gene", "kind": 13, "range": {"start": {"line": 294, "character": 0}, "end": {"line": 303, "character": 0}}, "selectionRange": {"start": {"line": 294, "character": 4}, "end": {"line": 294, "character": 16}}, "detail": "for uniprot_gene in gene_name_df.index: if isinstance(uniprot_gene, type('aaa')) == False: continue if isinstance(gene_name_df.loc[uniprot_gene, 'symbol'], type('aaa')) == False: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol'][0] else: gene_name_map[uniprot_gene] = gene_name_df.loc[uniprot_gene, 'symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 308, "character": 0}, "end": {"line": 308, "character": 76}}, "selectionRange": {"start": {"line": 308, "character": 0}, "end": {"line": 308, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "uniprot_gene_set", "kind": 13, "range": {"start": {"line": 310, "character": 0}, "end": {"line": 310, "character": 24}}, "selectionRange": {"start": {"line": 310, "character": 0}, "end": {"line": 310, "character": 16}}, "detail": "uniprot_gene_set = set()", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 312, "character": 0}, "end": {"line": 321, "character": 0}}, "selectionRange": {"start": {"line": 312, "character": 4}, "end": {"line": 312, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 317, "character": 4}, "end": {"line": 317, "character": 74}}, "selectionRange": {"start": {"line": 317, "character": 4}, "end": {"line": 317, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 319, "character": 4}, "end": {"line": 321, "character": 0}}, "selectionRange": {"start": {"line": 319, "character": 8}, "end": {"line": 319, "character": 12}}, "detail": "for gene in complex_list: uniprot_gene_set.add(gene)", "children": []}, {"name": "query_gene_set", "kind": 13, "range": {"start": {"line": 324, "character": 0}, "end": {"line": 324, "character": 19}}, "selectionRange": {"start": {"line": 324, "character": 0}, "end": {"line": 324, "character": 14}}, "detail": "query_gene_set = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 326, "character": 0}, "end": {"line": 329, "character": 0}}, "selectionRange": {"start": {"line": 326, "character": 4}, "end": {"line": 326, "character": 8}}, "detail": "for gene in uniprot_gene_set: if gene not in gene_name_map: query_gene_set.append(gene)", "children": []}, {"name": "query_gene_list", "kind": 13, "range": {"start": {"line": 332, "character": 0}, "end": {"line": 332, "character": 38}}, "selectionRange": {"start": {"line": 332, "character": 0}, "end": {"line": 332, "character": 15}}, "detail": "query_gene_list = list(query_gene_set)", "children": []}, {"name": "mg", "kind": 13, "range": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 24}}, "selectionRange": {"start": {"line": 334, "character": 0}, "end": {"line": 334, "character": 2}}, "detail": "mg = mygene.MyGeneInfo()", "children": []}, {"name": "out", "kind": 13, "range": {"start": {"line": 335, "character": 0}, "end": {"line": 335, "character": 87}}, "selectionRange": {"start": {"line": 335, "character": 0}, "end": {"line": 335, "character": 3}}, "detail": "out = mg.querymany(query_gene_list, scopes='uniprot', fields='symbol', species='human')", "children": []}, {"name": "not_found_gene_list", "kind": 13, "range": {"start": {"line": 337, "character": 0}, "end": {"line": 337, "character": 24}}, "selectionRange": {"start": {"line": 337, "character": 0}, "end": {"line": 337, "character": 19}}, "detail": "not_found_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 339, "character": 0}, "end": {"line": 344, "character": 0}}, "selectionRange": {"start": {"line": 339, "character": 4}, "end": {"line": 339, "character": 5}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 339, "character": 0}, "end": {"line": 344, "character": 0}}, "selectionRange": {"start": {"line": 339, "character": 7}, "end": {"line": 339, "character": 11}}, "detail": "for i, gene in enumerate(query_gene_list): if 'notfound' in out[i]: not_found_gene_list.append(gene) else: gene_name_map[gene] = out[i]['symbol']", "children": []}, {"name": "corum_df", "kind": 13, "range": {"start": {"line": 351, "character": 0}, "end": {"line": 351, "character": 76}}, "selectionRange": {"start": {"line": 351, "character": 0}, "end": {"line": 351, "character": 8}}, "detail": "corum_df = pd.read_table(new_network_file + 'allComplexes.txt', index_col=0)", "children": []}, {"name": "index", "kind": 13, "range": {"start": {"line": 353, "character": 0}, "end": {"line": 375, "character": 0}}, "selectionRange": {"start": {"line": 353, "character": 4}, "end": {"line": 353, "character": 9}}, "detail": "for index in corum_df.index: if corum_df.loc[index, 'Organism'] != 'Human': continue complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';') complex_symbol_list = [] for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] ) for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "complex_list", "kind": 13, "range": {"start": {"line": 358, "character": 4}, "end": {"line": 358, "character": 74}}, "selectionRange": {"start": {"line": 358, "character": 4}, "end": {"line": 358, "character": 16}}, "detail": "complex_list = corum_df.loc[index, 'subunits(UniProt IDs)'].split(';')", "children": []}, {"name": "complex_symbol_list", "kind": 13, "range": {"start": {"line": 360, "character": 4}, "end": {"line": 360, "character": 28}}, "selectionRange": {"start": {"line": 360, "character": 4}, "end": {"line": 360, "character": 23}}, "detail": "complex_symbol_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 362, "character": 4}, "end": {"line": 365, "character": 0}}, "selectionRange": {"start": {"line": 362, "character": 8}, "end": {"line": 362, "character": 12}}, "detail": "for gene in complex_list: if gene in gene_name_map: complex_symbol_list.append( gene_name_map[gene] )", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 366, "character": 4}, "end": {"line": 375, "character": 0}}, "selectionRange": {"start": {"line": 366, "character": 8}, "end": {"line": 366, "character": 13}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 366, "character": 4}, "end": {"line": 375, "character": 0}}, "selectionRange": {"start": {"line": 366, "character": 15}, "end": {"line": 366, "character": 20}}, "detail": "for gene1, gene2 in itertools.combinations(complex_symbol_list,2): if gene1 not in gene_neighbor_map: gene_neighbor_map[gene1] = set() if gene2 not in gene_neighbor_map: gene_neighbor_map[gene2] = set() gene_neighbor_map[gene1].add(gene2) gene_neighbor_map[gene2].add(gene1)", "children": []}, {"name": "gene_exp_neighbor_map", "kind": 13, "range": {"start": {"line": 380, "character": 0}, "end": {"line": 380, "character": 26}}, "selectionRange": {"start": {"line": 380, "character": 0}, "end": {"line": 380, "character": 21}}, "detail": "gene_exp_neighbor_map = {}", "children": []}, {"name": "exp_matrix", "kind": 13, "range": {"start": {"line": 381, "character": 0}, "end": {"line": 381, "character": 26}}, "selectionRange": {"start": {"line": 381, "character": 0}, "end": {"line": 381, "character": 10}}, "detail": "exp_matrix = exp_df.values", "children": []}, {"name": "P", "kind": 13, "range": {"start": {"line": 383, "character": 0}, "end": {"line": 383, "character": 79}}, "selectionRange": {"start": {"line": 383, "character": 0}, "end": {"line": 383, "character": 1}}, "detail": "P = 1 - cdist(np.transpose(exp_matrix), np.transpose(exp_matrix),'correlation')", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 385, "character": 0}, "end": {"line": 399, "character": 0}}, "selectionRange": {"start": {"line": 385, "character": 4}, "end": {"line": 385, "character": 5}}, "detail": "for i in range(len(exp_gene_list)): gene1 = exp_gene_list[i] gene_exp_neighbor_map[gene1] = set() for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2) if gene1 not in gene_exp_neighbor_map[gene1]: print (gene1, 'not in itself?', P[i,i])", "children": []}, {"name": "gene1", "kind": 13, "range": {"start": {"line": 387, "character": 4}, "end": {"line": 387, "character": 28}}, "selectionRange": {"start": {"line": 387, "character": 4}, "end": {"line": 387, "character": 9}}, "detail": "gene1 = exp_gene_list[i]", "children": []}, {"name": "j", "kind": 13, "range": {"start": {"line": 390, "character": 4}, "end": {"line": 396, "character": 0}}, "selectionRange": {"start": {"line": 390, "character": 8}, "end": {"line": 390, "character": 9}}, "detail": "for j in range(len(exp_gene_list)): gene2 = exp_gene_list[j] if math.fabs(P[i, j]) > 0.4: gene_exp_neighbor_map[gene1].add(gene2)", "children": []}, {"name": "gene2", "kind": 13, "range": {"start": {"line": 392, "character": 8}, "end": {"line": 392, "character": 32}}, "selectionRange": {"start": {"line": 392, "character": 8}, "end": {"line": 392, "character": 13}}, "detail": "gene2 = exp_gene_list[j]", "children": []}, {"name": "drug_feature_list", "kind": 13, "range": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 22}}, "selectionRange": {"start": {"line": 407, "character": 0}, "end": {"line": 407, "character": 17}}, "detail": "drug_feature_list = []", "children": []}, {"name": "drug_neighbor_map", "kind": 13, "range": {"start": {"line": 408, "character": 0}, "end": {"line": 408, "character": 22}}, "selectionRange": {"start": {"line": 408, "character": 0}, "end": {"line": 408, "character": 17}}, "detail": "drug_neighbor_map = {}", "children": []}, {"name": "selected_drug_list", "kind": 13, "range": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 23}}, "selectionRange": {"start": {"line": 409, "character": 0}, "end": {"line": 409, "character": 18}}, "detail": "selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 411, "character": 0}, "end": {"line": 428, "character": 0}}, "selectionRange": {"start": {"line": 411, "character": 4}, "end": {"line": 411, "character": 8}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "target_list", "kind": 13, "range": {"start": {"line": 411, "character": 0}, "end": {"line": 428, "character": 0}}, "selectionRange": {"start": {"line": 411, "character": 10}, "end": {"line": 411, "character": 21}}, "detail": "for drug, target_list in drug_target_map.items(): drug_neighbor_map[drug] = set() for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene] if len(drug_neighbor_map[drug]) != 0: selected_drug_list.append(drug) drug_feature_list.append( len(drug_neighbor_map[drug]) )", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 414, "character": 8}, "end": {"line": 424, "character": 0}}, "selectionRange": {"start": {"line": 414, "character": 12}, "end": {"line": 414, "character": 16}}, "detail": "for gene in target_list: if gene not in gene_exp_neighbor_map and gene not in gene_neighbor_map: continue if gene in gene_exp_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_exp_neighbor_map[gene] if gene in gene_neighbor_map: drug_neighbor_map[drug] = drug_neighbor_map[drug] | gene_neighbor_map[gene]", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 442, "character": 0}, "end": {"line": 442, "character": 52}}, "selectionRange": {"start": {"line": 442, "character": 0}, "end": {"line": 442, "character": 5}}, "detail": "drugs = pd.read_csv(drug_cell_line_file,index_col=2)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 443, "character": 0}, "end": {"line": 443, "character": 93}}, "selectionRange": {"start": {"line": 443, "character": 0}, "end": {"line": 443, "character": 5}}, "detail": "drugs = drugs.drop([\"DATASET_VERSION\",\"IC50_RESULTS_ID\",\"MAX_CONC_MICROMOLAR\",\"RMSE\"],axis=1)", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 444, "character": 0}, "end": {"line": 444, "character": 49}}, "selectionRange": {"start": {"line": 444, "character": 0}, "end": {"line": 444, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 446, "character": 0}, "end": {"line": 446, "character": 28}}, "selectionRange": {"start": {"line": 446, "character": 0}, "end": {"line": 446, "character": 9}}, "detail": "drug_list = drugs[\"DRUG_ID\"]", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 447, "character": 0}, "end": {"line": 447, "character": 16}}, "selectionRange": {"start": {"line": 447, "character": 0}, "end": {"line": 447, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 457, "character": 0}, "end": {"line": 457, "character": 71}}, "selectionRange": {"start": {"line": 457, "character": 0}, "end": {"line": 457, "character": 10}}, "detail": "PDTC_drugs = pd.read_csv(PDTC_drug_cell_line_file,sep='\\t',index_col=0)", "children": []}, {"name": "PDTC_drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 458, "character": 0}, "end": {"line": 458, "character": 59}}, "selectionRange": {"start": {"line": 458, "character": 0}, "end": {"line": 458, "character": 25}}, "detail": "PDTC_drugs_cell_line_list = list(PDTC_drugs.index.unique())", "children": []}, {"name": "drug_list", "kind": 13, "range": {"start": {"line": 460, "character": 0}, "end": {"line": 460, "character": 39}}, "selectionRange": {"start": {"line": 460, "character": 0}, "end": {"line": 460, "character": 9}}, "detail": "drug_list = PDTC_drugs[\"Drug\"].tolist()", "children": []}, {"name": "new_drug_id", "kind": 13, "range": {"start": {"line": 461, "character": 0}, "end": {"line": 461, "character": 16}}, "selectionRange": {"start": {"line": 461, "character": 0}, "end": {"line": 461, "character": 11}}, "detail": "new_drug_id = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 462, "character": 0}, "end": {"line": 467, "character": 0}}, "selectionRange": {"start": {"line": 462, "character": 4}, "end": {"line": 462, "character": 5}}, "detail": "for i in drug_list: if i in drug2id_mapping.keys(): new_drug_id.append(drug2id_mapping[i]) else: new_drug_id.append(0)", "children": []}, {"name": "PDTC_drugs", "kind": 13, "range": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 84}}, "selectionRange": {"start": {"line": 469, "character": 0}, "end": {"line": 469, "character": 10}}, "detail": "PDTC_drugs = PDTC_drugs.drop([\"Drug\",\"iC50\",\"D1_CONC\",\"D5_CONC\",\"perc.iC50\"],axis=1)", "children": []}, {"name": "drugs", "kind": 13, "range": {"start": {"line": 477, "character": 0}, "end": {"line": 477, "character": 37}}, "selectionRange": {"start": {"line": 477, "character": 0}, "end": {"line": 477, "character": 5}}, "detail": "drugs = pd.concat([drugs,PDTC_drugs])", "children": []}, {"name": "drugs_cell_line_list", "kind": 13, "range": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 49}}, "selectionRange": {"start": {"line": 484, "character": 0}, "end": {"line": 484, "character": 20}}, "detail": "drugs_cell_line_list = list(drugs.index.unique())", "children": []}, {"name": "cell_line_list", "kind": 13, "range": {"start": {"line": 490, "character": 0}, "end": {"line": 490, "character": 102}}, "selectionRange": {"start": {"line": 490, "character": 0}, "end": {"line": 490, "character": 14}}, "detail": "cell_line_list = list(set(drugs_cell_line_list)&set(exp_cell_line_list)&set(mutation_cell_line_list) )", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 497, "character": 0}, "end": {"line": 497, "character": 66}}, "selectionRange": {"start": {"line": 497, "character": 0}, "end": {"line": 497, "character": 16}}, "detail": "cell_line_legend = pd.read_csv(cell_line_detail_file, index_col=1)", "children": []}, {"name": "PDTC_cell_line", "kind": 13, "range": {"start": {"line": 498, "character": 0}, "end": {"line": 498, "character": 206}}, "selectionRange": {"start": {"line": 498, "character": 0}, "end": {"line": 498, "character": 14}}, "detail": "PDTC_cell_line = pd.DataFrame({'Line': [\"BRCA\"]*len(PDTC_exp_cell_line_list), 'Site':[\"PDTC\"]*len(PDTC_exp_cell_line_list),\"Histology\":[\"breast\"]*len(PDTC_exp_cell_line_list)},index=PDTC_exp_cell_line_list)", "children": []}, {"name": "cell_line_legend", "kind": 13, "range": {"start": {"line": 499, "character": 0}, "end": {"line": 499, "character": 63}}, "selectionRange": {"start": {"line": 499, "character": 0}, "end": {"line": 499, "character": 16}}, "detail": "cell_line_legend = pd.concat([cell_line_legend,PDTC_cell_line])", "children": []}, {"name": "tissue_map", "kind": 13, "range": {"start": {"line": 502, "character": 0}, "end": {"line": 502, "character": 15}}, "selectionRange": {"start": {"line": 502, "character": 0}, "end": {"line": 502, "character": 10}}, "detail": "tissue_map = {}", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 504, "character": 0}, "end": {"line": 512, "character": 0}}, "selectionRange": {"start": {"line": 504, "character": 4}, "end": {"line": 504, "character": 13}}, "detail": "for cell_line in cell_line_list: tissue = cell_line_legend.loc[cell_line,'Site'] if tissue not in tissue_map: tissue_map[tissue] = [] tissue_map[tissue].append(cell_line)", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 506, "character": 4}, "end": {"line": 506, "character": 51}}, "selectionRange": {"start": {"line": 506, "character": 4}, "end": {"line": 506, "character": 10}}, "detail": "tissue = cell_line_legend.loc[cell_line,'Site']", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 513, "character": 0}, "end": {"line": 513, "character": 23}}, "selectionRange": {"start": {"line": 513, "character": 0}, "end": {"line": 513, "character": 19}}, "detail": "large_tissue_number = 0", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 514, "character": 0}, "end": {"line": 520, "character": 0}}, "selectionRange": {"start": {"line": 514, "character": 4}, "end": {"line": 514, "character": 10}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "cell_line", "kind": 13, "range": {"start": {"line": 514, "character": 0}, "end": {"line": 520, "character": 0}}, "selectionRange": {"start": {"line": 514, "character": 12}, "end": {"line": 514, "character": 21}}, "detail": "for tissue, cell_line in tissue_map.items(): if len(cell_line) >= 15: large_tissue_number += 1 print (tissue, len(cell_line))", "children": []}, {"name": "large_tissue_number", "kind": 13, "range": {"start": {"line": 517, "character": 8}, "end": {"line": 517, "character": 32}}, "selectionRange": {"start": {"line": 517, "character": 8}, "end": {"line": 517, "character": 27}}, "detail": "large_tissue_number += 1", "children": []}, {"name": "new_exp_gene_list", "kind": 13, "range": {"start": {"line": 540, "character": 0}, "end": {"line": 540, "character": 22}}, "selectionRange": {"start": {"line": 540, "character": 0}, "end": {"line": 540, "character": 17}}, "detail": "new_exp_gene_list = []", "children": []}, {"name": "i", "kind": 13, "range": {"start": {"line": 541, "character": 0}, "end": {"line": 544, "character": 0}}, "selectionRange": {"start": {"line": 541, "character": 4}, "end": {"line": 541, "character": 5}}, "detail": "for i in exp_gene_list: if i in valid_gene_list: new_exp_gene_list.append(i)", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 549, "character": 0}, "end": {"line": 549, "character": 41}}, "selectionRange": {"start": {"line": 549, "character": 0}, "end": {"line": 549, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 550, "character": 0}, "end": {"line": 550, "character": 38}}, "selectionRange": {"start": {"line": 550, "character": 0}, "end": {"line": 550, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 551, "character": 0}, "end": {"line": 551, "character": 72}}, "selectionRange": {"start": {"line": 551, "character": 0}, "end": {"line": 551, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 553, "character": 0}, "end": {"line": 553, "character": 43}}, "selectionRange": {"start": {"line": 553, "character": 0}, "end": {"line": 553, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 554, "character": 0}, "end": {"line": 554, "character": 68}}, "selectionRange": {"start": {"line": 554, "character": 0}, "end": {"line": 554, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 561, "character": 0}, "end": {"line": 561, "character": 58}}, "selectionRange": {"start": {"line": 561, "character": 0}, "end": {"line": 561, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 562, "character": 0}, "end": {"line": 562, "character": 68}}, "selectionRange": {"start": {"line": 562, "character": 0}, "end": {"line": 562, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "new_data_file", "kind": 13, "range": {"start": {"line": 571, "character": 0}, "end": {"line": 571, "character": 18}}, "selectionRange": {"start": {"line": 571, "character": 0}, "end": {"line": 571, "character": 13}}, "detail": "new_data_file = ''", "children": []}, {"name": "exp_stdev", "kind": 13, "range": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 41}}, "selectionRange": {"start": {"line": 575, "character": 0}, "end": {"line": 575, "character": 9}}, "detail": "exp_stdev = np.std(exp_df.values, axis=0)", "children": []}, {"name": "exp_perc", "kind": 13, "range": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 38}}, "selectionRange": {"start": {"line": 576, "character": 0}, "end": {"line": 576, "character": 8}}, "detail": "exp_perc = np.percentile(exp_stdev,10)", "children": []}, {"name": "filtered_exp_gene_list", "kind": 13, "range": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 72}}, "selectionRange": {"start": {"line": 577, "character": 0}, "end": {"line": 577, "character": 22}}, "detail": "filtered_exp_gene_list = np.asarray(exp_gene_list)[exp_stdev > exp_perc]", "children": []}, {"name": "mut_sum", "kind": 13, "range": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 43}}, "selectionRange": {"start": {"line": 579, "character": 0}, "end": {"line": 579, "character": 7}}, "detail": "mut_sum = np.sum(mutation_df.values,axis=0)", "children": []}, {"name": "filtered_mut_gene_list", "kind": 13, "range": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 68}}, "selectionRange": {"start": {"line": 580, "character": 0}, "end": {"line": 580, "character": 22}}, "detail": "filtered_mut_gene_list = np.asarray(mutation_gene_list)[mut_sum > 5]", "children": []}, {"name": "new_exp_df", "kind": 13, "range": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 58}}, "selectionRange": {"start": {"line": 587, "character": 0}, "end": {"line": 587, "character": 10}}, "detail": "new_exp_df = exp_df.loc[ :, list(filtered_exp_gene_list) ]", "children": []}, {"name": "new_mutation_df", "kind": 13, "range": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 68}}, "selectionRange": {"start": {"line": 588, "character": 0}, "end": {"line": 588, "character": 15}}, "detail": "new_mutation_df = mutation_df.loc[ :, list(filtered_mut_gene_list) ]", "children": []}, {"name": "rename_selected_drug_list", "kind": 13, "range": {"start": {"line": 592, "character": 0}, "end": {"line": 592, "character": 30}}, "selectionRange": {"start": {"line": 592, "character": 0}, "end": {"line": 592, "character": 25}}, "detail": "rename_selected_drug_list = []", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 594, "character": 0}, "end": {"line": 664, "character": 0}}, "selectionRange": {"start": {"line": 594, "character": 4}, "end": {"line": 594, "character": 8}}, "detail": "for drug in selected_drug_list: print(drug) if drug not in drug2id_mapping: print('drug name wrong', drug) else: cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]] feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) ) feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) ) print(len(feature_exp_gene_list) + len(feature_mut_gene_list)) if len(feature_exp_gene_list) + len(feature_mut_gene_list) == 0: continue feature_description = [] drug_tissue_map = {} drug = drug.replace(' ','_') rename_selected_drug_list.append(drug) if drug == 'Nutlin-3a_(-)': drug = 'Nutlin-3a' drug_folder = '/data/merged/drug_feature/' + drug + '/' if not os.path.exists(drug_folder): os.makedirs(drug_folder) for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description)) file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\") pickle.dump(drug_tissue_map,file_handle) file_handle.close()", "children": []}, {"name": "cell_line_drug_matrix", "kind": 13, "range": {"start": {"line": 602, "character": 8}, "end": {"line": 602, "character": 84}}, "selectionRange": {"start": {"line": 602, "character": 8}, "end": {"line": 602, "character": 29}}, "detail": "cell_line_drug_matrix = drugs.loc[drugs['DRUG_ID'] == drug2id_mapping[drug]]", "children": []}, {"name": "feature_exp_gene_list", "kind": 13, "range": {"start": {"line": 607, "character": 8}, "end": {"line": 607, "character": 98}}, "selectionRange": {"start": {"line": 607, "character": 8}, "end": {"line": 607, "character": 29}}, "detail": "feature_exp_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_exp_gene_list) )", "children": []}, {"name": "feature_mut_gene_list", "kind": 13, "range": {"start": {"line": 608, "character": 8}, "end": {"line": 608, "character": 98}}, "selectionRange": {"start": {"line": 608, "character": 8}, "end": {"line": 608, "character": 29}}, "detail": "feature_mut_gene_list = list( set(drug_neighbor_map[drug]) & set(filtered_mut_gene_list) )", "children": []}, {"name": "feature_description", "kind": 13, "range": {"start": {"line": 612, "character": 8}, "end": {"line": 612, "character": 32}}, "selectionRange": {"start": {"line": 612, "character": 8}, "end": {"line": 612, "character": 27}}, "detail": "feature_description = []", "children": []}, {"name": "drug_tissue_map", "kind": 13, "range": {"start": {"line": 614, "character": 8}, "end": {"line": 614, "character": 28}}, "selectionRange": {"start": {"line": 614, "character": 8}, "end": {"line": 614, "character": 23}}, "detail": "drug_tissue_map = {}", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 616, "character": 8}, "end": {"line": 616, "character": 36}}, "selectionRange": {"start": {"line": 616, "character": 8}, "end": {"line": 616, "character": 12}}, "detail": "drug = drug.replace(' ','_')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 622, "character": 12}, "end": {"line": 622, "character": 30}}, "selectionRange": {"start": {"line": 622, "character": 12}, "end": {"line": 622, "character": 16}}, "detail": "drug = 'Nutlin-3a'", "children": []}, {"name": "drug_folder", "kind": 13, "range": {"start": {"line": 624, "character": 8}, "end": {"line": 624, "character": 63}}, "selectionRange": {"start": {"line": 624, "character": 8}, "end": {"line": 624, "character": 19}}, "detail": "drug_folder = '/data/merged/drug_feature/' + drug + '/'", "children": []}, {"name": "tissue", "kind": 13, "range": {"start": {"line": 630, "character": 8}, "end": {"line": 660, "character": 0}}, "selectionRange": {"start": {"line": 630, "character": 12}, "end": {"line": 630, "character": 18}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "tissue_cell_line_list", "kind": 13, "range": {"start": {"line": 630, "character": 8}, "end": {"line": 660, "character": 0}}, "selectionRange": {"start": {"line": 630, "character": 20}, "end": {"line": 630, "character": 41}}, "detail": "for tissue, tissue_cell_line_list in tissue_map.items(): if tissue==\"PDTC\": print(\"This is PDTC\") drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list ) drug_specific_cell_line = list(drug_specific_cell_line) drug_tissue_map[tissue] = drug_specific_cell_line feature_list = [] if len(feature_exp_gene_list) != 0: feature_list.append( new_exp_df.loc[ drug_specific_cell_line, feature_exp_gene_list ].values ) for gene in feature_exp_gene_list: feature_description.append(gene+'_expression') if len(feature_mut_gene_list) != 0: feature_list.append( mutation_df.loc[ drug_specific_cell_line, feature_mut_gene_list ].values ) for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation') feature = np.concatenate(feature_list, axis=1) label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values np.save(drug_folder + tissue + '_' + drug + '_feature.npy', feature ) np.save(drug_folder + tissue + '_' + drug + '_label.npy', label) np.save(drug_folder + tissue + '_feature_description.npy', np.asarray(feature_description))", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 633, "character": 12}, "end": {"line": 633, "character": 103}}, "selectionRange": {"start": {"line": 633, "character": 12}, "end": {"line": 633, "character": 35}}, "detail": "drug_specific_cell_line = set( cell_line_drug_matrix.index ) & set( tissue_cell_line_list )", "children": []}, {"name": "drug_specific_cell_line", "kind": 13, "range": {"start": {"line": 634, "character": 12}, "end": {"line": 634, "character": 67}}, "selectionRange": {"start": {"line": 634, "character": 12}, "end": {"line": 634, "character": 35}}, "detail": "drug_specific_cell_line = list(drug_specific_cell_line)", "children": []}, {"name": "feature_list", "kind": 13, "range": {"start": {"line": 637, "character": 12}, "end": {"line": 637, "character": 29}}, "selectionRange": {"start": {"line": 637, "character": 12}, "end": {"line": 637, "character": 24}}, "detail": "feature_list = []", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 641, "character": 16}, "end": {"line": 643, "character": 0}}, "selectionRange": {"start": {"line": 641, "character": 20}, "end": {"line": 641, "character": 24}}, "detail": "for gene in feature_exp_gene_list: feature_description.append(gene+'_expression')", "children": []}, {"name": "gene", "kind": 13, "range": {"start": {"line": 646, "character": 16}, "end": {"line": 648, "character": 0}}, "selectionRange": {"start": {"line": 646, "character": 20}, "end": {"line": 646, "character": 24}}, "detail": "for gene in feature_mut_gene_list: feature_description.append(gene+'_mutation')", "children": []}, {"name": "feature", "kind": 13, "range": {"start": {"line": 649, "character": 12}, "end": {"line": 649, "character": 58}}, "selectionRange": {"start": {"line": 649, "character": 12}, "end": {"line": 649, "character": 19}}, "detail": "feature = np.concatenate(feature_list, axis=1)", "children": []}, {"name": "label", "kind": 13, "range": {"start": {"line": 651, "character": 12}, "end": {"line": 651, "character": 88}}, "selectionRange": {"start": {"line": 651, "character": 12}, "end": {"line": 651, "character": 17}}, "detail": "label = cell_line_drug_matrix.loc[ drug_specific_cell_line,'LN_IC50'].values", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 661, "character": 8}, "end": {"line": 661, "character": 84}}, "selectionRange": {"start": {"line": 661, "character": 8}, "end": {"line": 661, "character": 19}}, "detail": "file_handle = open(\"/data/merged/\" + drug+'_tissue_cell_line_list.pkl',\"wb\")", "children": []}, {"name": "file_handle", "kind": 13, "range": {"start": {"line": 665, "character": 0}, "end": {"line": 665, "character": 52}}, "selectionRange": {"start": {"line": 665, "character": 0}, "end": {"line": 665, "character": 11}}, "detail": "file_handle = open('rename_selected_drug_list', 'w')", "children": []}, {"name": "drug", "kind": 13, "range": {"start": {"line": 666, "character": 0}, "end": {"line": 668, "character": 0}}, "selectionRange": {"start": {"line": 666, "character": 4}, "end": {"line": 666, "character": 8}}, "detail": "for drug in rename_selected_drug_list: file_handle.writelines(drug+ '\\n')", "children": []}, {"name": "pickle", "kind": 2, "range": {"start": {"line": 686, "character": 0}, "end": {"line": 686, "character": 13}}, "selectionRange": {"start": {"line": 686, "character": 7}, "end": {"line": 686, "character": 13}}, "detail": "module pickle", "children": []}, {"name": "cell_line_loc", "kind": 13, "range": {"start": {"line": 692, "character": 0}, "end": {"line": 692, "character": 84}}, "selectionRange": {"start": {"line": 692, "character": 0}, "end": {"line": 692, "character": 13}}, "detail": "cell_line_loc = '/cellar/users/samsonfong/Projects/tcrp-v2/from-ma/cell_line_lists/'", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 698, "character": 0}, "end": {"line": 700, "character": 0}}, "selectionRange": {"start": {"line": 698, "character": 53}, "end": {"line": 698, "character": 54}}, "detail": "with open('/data/drug_feature/KU-55933/KU', 'rb') as f: tmap= pickle.load(f)", "children": []}, {"name": "tmap", "kind": 13, "range": {"start": {"line": 699, "character": 4}, "end": {"line": 699, "character": 24}}, "selectionRange": {"start": {"line": 699, "character": 4}, "end": {"line": 699, "character": 8}}, "detail": "tmap= pickle.load(f)", "children": []}, {"name": "f", "kind": 13, "range": {"start": {"line": 717, "character": 0}, "end": {"line": 717, "character": 68}}, "selectionRange": {"start": {"line": 717, "character": 0}, "end": {"line": 717, "character": 1}}, "detail": "f = np.load('/data/drug_feature/KU-55933/lung_KU-55933_feature.npy')", "children": []}]}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 119, "result": {"contents": {"kind": "markdown", "value": "```python\npathwaycomm_file = 'PathwayCommons_Symbol.sif'\n```\n---\n**Full name:** `code.process_merged.pathwaycomm_file`"}, "range": {"start": {"line": 104, "character": 0}, "end": {"line": 104, "character": 16}}}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///root/capsule/code/process_merged.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "method": "textDocument/publishDiagnostics", "params": {"uri": "file:///root/capsule/code/process_merged.py", "diagnostics": []}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 120, "result": {"contents": {"kind": "markdown", "value": "```python\nkeyword =\n```"}, "range": null}}
INFO:pygls.protocol:Sending data: {"jsonrpc": "2.0", "id": 121, "result": {"contents": {"kind": "markdown", "value": "```python\nkeyword =\n```"}, "range": null}}
